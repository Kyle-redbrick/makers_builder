{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MonitorContainer/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport stringify from \"json-stringify-safe\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport { URL, DEFAULT_VIDEO_URL } from \"../../../../Common/Util/Constant\";\nimport { showAlert } from \"../../../../Common/Util/AlertManager\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as webrtcActions from \"../../Store/Reducer/webrtc\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport View from \"./View\";\nimport Stomp from \"stompjs\"; // import { minifyJSON, restoreJSON } from \"../../utils/oobcMinify\";\n\nvar Janus = window.Janus;\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.MEDIA_CAMERA = \"MEDIA_CAMERA\";\n    _this.MEDIA_SCREEN = \"MEDIA_SCREEN\";\n    _this.DATA_TYPE_PROJECT = \"DATA_TYPE_PROJECT\";\n    _this.DATA_TYPE_CANVAS = \"DATA_TYPE_CANVAS\";\n    _this.DATA_TYPE_CANVAS_TOGGLE = \"DATA_TYPE_CANVAS_TOGGLE\";\n    _this.DATA_TYPE_EDITOR_RANGE = \"DATA_TYPE_EDITOR_RANGE\";\n    _this.DATA_TYPE_HIGHLIGHT = \"DATA_TYPE_HIGHLIGHT\";\n    _this.DATA_TYPE_LECTURE_VIDEO = \"DATA_TYPE_LECTURE_VIDEO\";\n    _this.DATA_TYPE_LECTURE_SLIDE = \"DATA_TYPE_LECTURE_SLIDE\";\n\n    _this.setupJanus = function () {\n      if (!Janus.isWebrtcSupported()) {\n        showAlert(\"ID_WEBRTC_UNSUPPORT\");\n        return;\n      }\n\n      _this.janus = new Janus({\n        server: _this.serverUrl,\n        iceTransportPolicy: \"relay\",\n        iceServers: URL.ICE_SERVERS,\n        success: _this.attachJanus,\n        error: function error(_error) {\n          Janus.error(_error);\n        },\n        destroyed: function destroyed() {\n          Janus.log(\"destroyed\");\n        }\n      });\n    };\n\n    _this.attachJanus = function () {\n      _this.janus.attach({\n        plugin: \"janus.plugin.videoroom\",\n        opaqueId: _this.opaqueId,\n        success: function success(pluginHandle) {\n          _this.videocall = pluginHandle;\n          _this.handleId = _this.videocall.getId();\n          Janus.log(\"Plugin attached! (\".concat(_this.videocall.getPlugin(), \", id=\").concat(_this.videocall.getId(), \")\"));\n          Janus.log(\"  -- This is a publisher/manager\");\n\n          _this.checkRoom(); // this.registerUsername();\n\n        },\n        error: function error(_error2) {\n          Janus.error(\"  -- Error attaching plugin...\", _error2);\n        },\n        consentDialog: function consentDialog(on) {\n          Janus.debug(\"Consent dialog should be \".concat(on ? \"on\" : \"off\", \" now\"));\n        },\n        mediaState: function mediaState(medium, on) {\n          Janus.log(\"Janus \".concat(on ? \"started\" : \"stopped\", \" receiving our \").concat(medium));\n        },\n        webrtcState: function webrtcState(on) {\n          Janus.log(\"Janus says our WebRTC PeerConnection is \".concat(on ? \"up\" : \"down\", \" now\"));\n        },\n        onmessage: function onmessage(msg, jsep) {\n          Janus.debug(\" ::: Got a message (publisher) :::\");\n          Janus.debug(msg);\n          var event = msg.videoroom;\n          Janus.debug(\"Event: \" + event);\n\n          if (event) {\n            if (event === \"joined\") {\n              // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n              _this.myid = msg.id;\n              _this.mypvtid = msg.private_id;\n              Janus.log(\"Successfully joined room \".concat(msg.room, \" with ID \").concat(_this.myid)); // Any new feed to attach to?\n\n              if (msg.publishers) {\n                var list = msg.publishers;\n                Janus.debug(\"Got a list of available publishers/feeds:\");\n                Janus.debug(list);\n                list.forEach(function (l) {\n                  var id = l.id;\n                  var display = l.display;\n                  var audio = l.audio_codec;\n                  var video = l.video_codec;\n                  Janus.debug(\"  >> [\".concat(id, \"] \").concat(display, \" audio: \").concat(audio, \", video: \").concat(video, \")\"));\n\n                  if (l.display !== _this.displayId) {\n                    _this.newRemoteFeed(id, display, audio, video);\n                  }\n                });\n              }\n            } else if (event === \"destroyed\") {\n              // The room has been destroyed\n              Janus.warn(\"The room has been destroyed!\");\n            } else if (event === \"event\") {\n              // Any new feed to attach to?\n              if (msg.publishers) {\n                var _list = msg.publishers;\n                Janus.debug(\"Got a list of available publishers/feeds:\");\n                Janus.debug(_list);\n\n                _list.forEach(function (l) {\n                  var id = l.id;\n                  var display = l.display;\n                  var audio = l.audio_codec;\n                  var video = l.video_codec;\n                  Janus.debug(\"  >> [\".concat(id, \"] \").concat(display, \" audio: \").concat(audio, \", video: \").concat(video, \")\"));\n\n                  if (l.display !== _this.displayId) {\n                    _this.newRemoteFeed(id, display, audio, video);\n                  }\n                });\n              } else if (msg.leaving) {\n                // One of the publishers has gone away?\n                var leaving = msg.leaving;\n                Janus.log(\"Publisher left: \" + leaving);\n                _this.remoteFeed = null;\n\n                for (var i = 1; i < 6; i++) {\n                  if (_this.feeds[i] && _this.feeds[i].rfid === leaving) {\n                    _this.remoteFeed = _this.feeds[i];\n                    break;\n                  }\n                }\n\n                if (_this.remoteFeed) {\n                  Janus.debug(\"Feed \".concat(_this.remoteFeed.rfid, \" (\").concat(_this.remoteFeed.rfdisplay, \") has left the room, detaching\"));\n                  _this.feeds[_this.remoteFeed.rfindex] = null;\n\n                  _this.remoteFeed.detach();\n\n                  _this.setState({\n                    startTime: undefined,\n                    log: undefined\n                  });\n                }\n              } else if (msg.unpublished) {\n                // One of the publishers has unpublished?\n                var unpublished = msg[\"unpublished\"];\n                Janus.log(\"Publisher left: \".concat(unpublished));\n\n                if (unpublished === \"ok\") {\n                  // That's us\n                  _this.videocall.hangup();\n\n                  return;\n                }\n\n                _this.remoteFeed = null;\n\n                for (var _i = 1; _i < 6; _i++) {\n                  if (_this.feeds[_i] && _this.feeds[_i].rfid === unpublished) {\n                    _this.remoteFeed = _this.feeds[_i];\n                    break;\n                  }\n                }\n\n                if (_this.remoteFeed) {\n                  Janus.debug(\"Feed \".concat(_this.remoteFeed.rfid, \" (\").concat(_this.remoteFeed.rfdisplay, \") has left the room, detaching\"));\n                  _this.feeds[_this.remoteFeed.rfindex] = null;\n\n                  _this.remoteFeed.detach();\n\n                  _this.setState({\n                    startTime: undefined,\n                    log: undefined\n                  });\n                }\n              } else if (msg.error) {\n                if (msg.error_code === 426) {\n                  // This is a \"no such room\" error: give a more meaningful description\n                  Janus.error(\"No such room\");\n                } else {\n                  Janus.error(msg.error);\n                }\n              }\n            }\n          }\n\n          if (jsep) {\n            Janus.debug(\"Handling SDP as well...\");\n            Janus.debug(jsep);\n\n            _this.videocall.handleRemoteJsep({\n              jsep: jsep\n            });\n          }\n        },\n        onlocalstream: function onlocalstream(stream) {//this is monitor. nothing to do\n        },\n        onremotestream: function onremotestream(stream) {// The publisher stream is sendonly, we don't expect anything here\n        },\n        oncleanup: function oncleanup() {\n          Janus.log(\" ::: Got a cleanup notification :::\");\n\n          _this.setState({\n            startTime: undefined,\n            log: undefined\n          });\n        }\n      });\n    };\n\n    _this.checkRoom = function () {\n      var roomId = _this.state.currentRoom.roomId; // this.videocall.send({\n      //   message: { request: \"destroy\", room: roomId }\n      // });\n      // return;\n\n      Janus.debug(\"is room exist...?\");\n\n      _this.videocall.send({\n        message: {\n          request: \"exists\",\n          room: roomId\n        },\n        success: function success(data) {\n          if (data.exists) {\n            _this.registerUsername();\n          } else {\n            Janus.debug(\"Room is creating...\");\n\n            _this.videocall.send({\n              message: {\n                request: \"create\",\n                // bitrate: 512000,\n                publishers: 30,\n                bitrate_cap: true,\n                room: roomId,\n                is_private: true\n              },\n              success: _this.registerUsername\n            });\n          }\n        }\n      });\n    };\n\n    _this.registerUsername = function () {\n      var roomId = _this.state.currentRoom.roomId;\n      var register = {\n        request: \"join\",\n        room: roomId,\n        ptype: \"publisher\",\n        display: _this.displayId\n      };\n\n      _this.videocall.send({\n        message: register\n      });\n    };\n\n    _this.onReceiveData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var type, drawing, isOn, editorRange, highlightBtnId, lectureVideo, lectureSlide, string, i, combinedState, _state, _lastState, assets, _drawing, _lastSentDrawing, current, diff;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                type = data.type, drawing = data.drawing, isOn = data.isOn, editorRange = data.editorRange, highlightBtnId = data.highlightBtnId, lectureVideo = data.lectureVideo, lectureSlide = data.lectureSlide;\n\n                if (!(type === _this.DATA_TYPE_PROJECT)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                if (!_this.projectData[data.key]) {\n                  _this.projectData[data.key] = {\n                    datas: [],\n                    total: data.total\n                  };\n                }\n\n                _this.projectData[data.key].datas[data.index] = data.data;\n\n                if (!(_this.projectData[data.key].datas.length === data.total)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                string = \"\";\n\n                for (i = 0; i < data.total; ++i) {\n                  string += _this.projectData[data.key].datas[i];\n                }\n\n                delete _this.projectData[data.key]; // const combinedState =\n                //   this.props.editorMode === \"block\"\n                //     ? JSON.parse(restoreJSON(string))\n                //     : JSON.parse(string);\n\n                combinedState = JSON.parse(string);\n\n                if (!_this.lastSentState) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _state = _objectSpread({}, combinedState);\n                _lastState = _objectSpread({}, _this.lastSentState);\n                if (_state.state.scene) _state.state.scene.timeStamp = 0;\n                if (_lastState.state.scene) _lastState.state.scene.timeStamp = 0;\n\n                if (!(stringify(_state) === stringify(_lastState))) {\n                  _context.next = 16;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 16:\n                _context.next = 18;\n                return AssetLibrary.loadAssetsForGame(combinedState.state.scene);\n\n              case 18:\n                assets = _context.sent;\n                AssetLibrary.setAll(assets);\n\n                _this.props.setProject(combinedState, true);\n\n              case 21:\n                _context.next = 49;\n                break;\n\n              case 23:\n                if (!(type === _this.DATA_TYPE_CANVAS)) {\n                  _context.next = 32;\n                  break;\n                }\n\n                if (!_this.lastSentDrawing) {\n                  _context.next = 29;\n                  break;\n                }\n\n                _drawing = _objectSpread({}, drawing);\n                _lastSentDrawing = _objectSpread({}, _this.lastSentDrawing);\n\n                if (!(stringify(_drawing) === stringify(_lastSentDrawing))) {\n                  _context.next = 29;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 29:\n                _this.props.addDrawing(drawing);\n\n                _context.next = 49;\n                break;\n\n              case 32:\n                if (!(type === _this.DATA_TYPE_CANVAS_TOGGLE)) {\n                  _context.next = 36;\n                  break;\n                }\n\n                _this.props.setDrawingBoard(isOn);\n\n                _context.next = 49;\n                break;\n\n              case 36:\n                if (!(type === _this.DATA_TYPE_EDITOR_RANGE)) {\n                  _context.next = 48;\n                  break;\n                }\n\n                current = new Date().getTime();\n                diff = current - _this.lastRangeTime;\n                _this.lastRangeTime = current;\n\n                if (!(diff < 100)) {\n                  _context.next = 45;\n                  break;\n                }\n\n                _this.lastRangeDiffCount++;\n\n                if (!(_this.lastRangeDiffCount > 10)) {\n                  _context.next = 45;\n                  break;\n                }\n\n                _this.lastRangeDiffCount = 0;\n                return _context.abrupt(\"return\");\n\n              case 45:\n                _this.props.setEditorRange(editorRange);\n\n                _context.next = 49;\n                break;\n\n              case 48:\n                if (type === _this.DATA_TYPE_HIGHLIGHT) {\n                  _this.props.setBtnHighlight(highlightBtnId);\n                } else if (type === _this.DATA_TYPE_LECTURE_VIDEO) {\n                  _this.setState({\n                    isLectureVideoOn: lectureVideo.isOn,\n                    selectedLectureVideoURL: lectureVideo.video\n                  });\n                } else if (type === _this.DATA_TYPE_LECTURE_SLIDE) {\n                  _this.setState({\n                    isLectureSlideOn: lectureSlide.isOn,\n                    selectedSlideIndex: lectureSlide.slide\n                  });\n                }\n\n              case 49:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.setTimerRef = function (elem) {\n      if (!elem) return;\n      _this.timerRef = elem;\n      clearInterval(_this.timerInterval);\n      _this.timerInterval = setInterval(function () {\n        if (!_this.timerRef) return;\n        var timeDiff = Math.floor((Date.now() - _this.state.startTime) / 1000);\n        var min = Math.floor(timeDiff / 60);\n        var sec = timeDiff % 60;\n\n        var formNum = function formNum(num) {\n          return num.toString().length === 1 ? \"0\".concat(num) : num;\n        };\n\n        _this.timerRef.innerText = \"\".concat(formNum(min), \":\").concat(formNum(sec));\n      }, 1000);\n    };\n\n    _this.setStudentVideo = function (video) {\n      _this.studentVideo = video;\n    };\n\n    _this.setTutorVideo = function (video) {\n      _this.tutorVideo = video;\n    };\n\n    _this.setup = function (room) {\n      var mqTesterTutor = [\"tutor@wizlive.com\", \"neotutor@wizschool.io\", \"chris@wizschool.io\", \"tutor01@wizlive.com\", \"tutor02@wizlive.com\", \"tutor03@wizlive.com\", \"tutor04@wizlive.com\", \"tutor05@wizlive.com\", \"tutor06@wizlive.com\", \"tutor07@wizlive.com\", \"tutor08@wizlive.com\", \"tutor09@wizlive.com\", \"tutor10@wizlive.com\", \"tutor11@wizlive.com\", \"tutor12@wizlive.com\", \"tutor13@wizlive.com\"];\n      var mqTesterStudent = [\"student@wizlive.com\", \"neo@wizschool.io\", \"chris4@wizschool.io\", \"student01@wizlive.com\", \"student02@wizlive.com\", \"student03@wizlive.com\", \"student04@wizlive.com\", \"student05@wizlive.com\", \"student06@wizlive.com\", \"student07@wizlive.com\", \"student08@wizlive.com\", \"student09@wizlive.com\", \"student10@wizlive.com\", \"student11@wizlive.com\", \"student12@wizlive.com\", \"student13@wizlive.com\"];\n      _this.isUsingMQ = mqTesterTutor.indexOf(room.tutorEmail) !== -1 && mqTesterStudent.indexOf(room.studentEmail) !== -1; //\n\n      _this.isUsingMQ = true;\n\n      if (_this.isUsingMQ) {\n        _this.mqConnect(\"/topic/wizlive\".concat(room.roomId, \"-\").concat(room.tutorEmail), function () {\n          Janus.init({\n            debug: \"all\",\n            callback: _this.setupJanus\n          });\n        }, function (err) {\n          console.error(err);\n        });\n      } else {\n        Janus.init({\n          debug: \"all\",\n          callback: _this.setupJanus\n        });\n      }\n    };\n\n    _this.mqConnect = function (topicName, mqReadyCallback, mqErrorCallback) {\n      _this.mq.client = Stomp.client(URL.MQ);\n      _this.mq.client.debug = null;\n      _this.mq.client.reconnect_delay = 5000;\n      var client = _this.mq.client;\n      var headers = {\n        login: \"wizschool\",\n        passcode: \"Wizschool2018!!\",\n        host: \"/\"\n      };\n      var number = Math.floor(Math.random() * 9000 + 1000);\n\n      if (_this.props.email) {\n        headers[\"client-id\"] = \"monitor\".concat(number, \"-\").concat(_this.props.email);\n      } else {\n        headers[\"client-id\"] = \"monitor\".concat(number);\n      }\n\n      client.connect(headers, function (frame) {\n        _this.setState({\n          isMqConnected: true\n        });\n\n        _this.mq.subscription = client.subscribe(topicName, function (msg) {\n          _this.onReceiveData(JSON.parse(msg.body));\n        });\n        mqReadyCallback();\n      }, function (err) {\n        mqErrorCallback(err);\n      });\n    };\n\n    _this.mqDisconnect = function () {\n      var _this$mq = _this.mq,\n          client = _this$mq.client,\n          subscription = _this$mq.subscription;\n\n      if (client) {\n        if (subscription) {\n          subscription.unsubscribe();\n        }\n\n        client.disconnect(function () {\n          _this.setState({\n            isMqConnected: false\n          });\n        });\n      }\n    };\n\n    _this.handleOnClickRoom = function (room) {\n      _this.setState({\n        currentRoom: _objectSpread({}, room, {\n          roomId: parseInt(room.roomId)\n        }),\n        lectureSlides: JSON.parse(room.myLecture.lecture.slides)\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var isMqConnected, state, project, assets;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                isMqConnected = _this.state.isMqConnected;\n\n                if (isMqConnected) {\n                  _this.mqDisconnect();\n                }\n\n                _this.setup(room);\n\n                _context2.prev = 3;\n                state = JSON.parse(room.myLecture.lecture.state);\n                project = {\n                  state: state,\n                  name: \"\",\n                  basicClass: false,\n                  video: {\n                    videoURL: DEFAULT_VIDEO_URL\n                  }\n                };\n                _context2.next = 8;\n                return AssetLibrary.loadAssetsForGame(state.scene);\n\n              case 8:\n                assets = _context2.sent;\n                AssetLibrary.setAll(assets);\n\n                _this.props.setProject(project, true);\n\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.error(_context2.t0);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 13]]);\n      })));\n    };\n\n    _this.handleOnClickSync =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(room) {\n        var pId;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                pId = room.myLecture.pId;\n\n                if (!pId) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                _context4.next = 4;\n                return request.getDevelopingProject({\n                  pId: pId\n                }).then(function (res) {\n                  return res.json();\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref4 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(json) {\n                    var state, assets;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.prev = 0;\n                            state = JSON.parse(json.state);\n                            _context3.next = 4;\n                            return AssetLibrary.loadAssetsForGame(state.scene);\n\n                          case 4:\n                            assets = _context3.sent;\n                            AssetLibrary.setAll(assets);\n\n                            _this.props.setProject({\n                              state: state,\n                              pId: pId\n                            }, true);\n\n                            _context3.next = 12;\n                            break;\n\n                          case 9:\n                            _context3.prev = 9;\n                            _context3.t0 = _context3[\"catch\"](0);\n                            console.error(_context3.t0);\n\n                          case 12:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3, this, [[0, 9]]);\n                  }));\n\n                  return function (_x3) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                _context4.next = 7;\n                break;\n\n              case 6:\n                alert(\"아직 프로젝트가 생성되지 않았습니다.\");\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.rnd = {\n      onDragStop: function onDragStop(e, d) {\n        _this.setState({\n          x: d.x,\n          y: d.y\n        });\n      },\n      onResize: function onResize(e, direction, ref, delta, position) {\n        _this.setState(_objectSpread({\n          width: Math.max(500, parseInt(ref.style.width)),\n          height: \"auto\"\n        }, position));\n      }\n    };\n    _this.janus = undefined;\n    _this.videocall = undefined;\n    _this.serverUrl = URL.JANUS_SERVER;\n    _this.tutorVideo = undefined;\n    _this.studentVideo = undefined;\n    _this.myid = undefined;\n    _this.mypvtid = undefined; // We use this other ID just to map our subscriptions to us\n\n    _this.opaqueId = \"wizlive-\" + Janus.randomString(12);\n    _this.feeds = [];\n    _this.remoteFeed = undefined;\n    _this.screen = undefined;\n    _this.timerRef = undefined;\n    _this.displayId = \"monitor\";\n    _this.studentBitrateTimer = undefined;\n    _this.tutorBitrateTimer = undefined;\n    _this.projectData = {};\n    _this.state = {\n      rooms: [],\n      currentRoom: undefined,\n      startTime: undefined,\n      // rnd\n      width: 300,\n      height: \"auto\",\n      x: 0,\n      y: 0,\n      isLectureVideoOn: false,\n      isLectureSlideOn: false,\n      // test\n      isMqConnected: false\n    }; // MQ\n\n    _this.mq = {\n      isUsingMQ: false,\n      client: null,\n      subscription: null\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Janus.init({\n      //   debug: \"all\",\n      //   callback: this.setupJanus\n      // });\n      request.getWhiteList({\n        email: this.props.email ? this.props.email : \"none\"\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (!json) window.location.href = \"/\";\n        request.getTodayAvailableRooms({\n          type: \"js\"\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          var tempWOLecture = json.filter(function (item) {\n            if (_this2.props.location.params.type === \"js\") {\n              if (item.myLecture.lectureId !== 107 && item.myLecture.lectureId !== 109) {\n                return item;\n              }\n            } else {\n              if (item.myLecture.lectureId === 107 || item.myLecture.lectureId === 109) {\n                return item;\n              }\n            }\n\n            return false;\n          });\n\n          _this2.setState({\n            rooms: tempWOLecture\n          });\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.videocall) {\n        this.videocall.hangup();\n        this.janus.destroy();\n      }\n\n      if (this.timerInterval) {\n        clearInterval(this.timerInterval);\n        this.timerInterval = undefined;\n      }\n\n      if (this.studentBitrateTimer) {\n        clearInterval(this.studentBitrateTimer);\n        this.studentBitrateTimer = undefined;\n      }\n\n      if (this.tutorBitrateTimer) {\n        clearInterval(this.tutorBitrateTimer);\n        this.tutorBitrateTimer = undefined;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.isUsingMQ) {\n        this.mqDisconnect();\n      }\n    }\n  }, {\n    key: \"newRemoteFeed\",\n    value: function newRemoteFeed(id, display, audio, video) {\n      var _this3 = this;\n\n      var roomId = this.state.currentRoom.roomId; // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n\n      var remoteFeed = null;\n      this.janus.attach({\n        plugin: \"janus.plugin.videoroom\",\n        opaqueId: this.opaqueId,\n        success: function success(pluginHandle) {\n          remoteFeed = pluginHandle;\n          remoteFeed.simulcastStarted = false;\n          Janus.log(\"Plugin attached! (\".concat(remoteFeed.getPlugin(), \", id=\").concat(remoteFeed.getId(), \")\"));\n          Janus.log(\"  -- This is a subscriber\"); // We wait for the plugin to send us an offer\n\n          var subscribe = {\n            request: \"join\",\n            room: roomId,\n            ptype: \"subscriber\",\n            feed: id,\n            private_id: _this3.mypvtid\n          }; // In case you don't want to receive audio, video or data, even if the\n          // publisher is sending them, set the 'offer_audio', 'offer_video' or\n          // 'offer_data' properties to false (they're true by default), e.g.:\n          // \t\tsubscribe[\"offer_video\"] = false;\n          // For example, if the publisher is VP8 and this is Safari, let's avoid video\n\n          if (Janus.webRTCAdapter.browserDetails.browser === \"safari\" && (video === \"vp9\" || video === \"vp8\" && !Janus.safariVp8)) {\n            if (video) video = video.toUpperCase();\n            Janus.error(\"Publisher is using \".concat(video, \", but Safari doesn't support it: disabling video\"));\n            subscribe.offer_video = false;\n          }\n\n          remoteFeed.videoCodec = video;\n          remoteFeed.send({\n            message: subscribe\n          });\n        },\n        error: function error(_error3) {\n          Janus.error(\"  -- Error attaching plugin...\", _error3);\n        },\n        onmessage: function onmessage(msg, jsep) {\n          Janus.debug(\" ::: Got a message (subscriber) :::\");\n          Janus.debug(msg);\n          var event = msg.videoroom;\n          Janus.debug(\"Event: \" + event);\n\n          if (msg.error) {\n            Janus.error(msg.error);\n          } else if (event) {\n            if (event === \"attached\") {\n              // Subscriber created and attached\n              for (var i = 1; i < 6; i++) {\n                if (!_this3.feeds[i]) {\n                  _this3.feeds[i] = remoteFeed;\n                  remoteFeed.rfindex = i;\n                  break;\n                }\n              }\n\n              remoteFeed.rfid = msg.id;\n              remoteFeed.rfdisplay = msg.display;\n              Janus.log(\"Successfully attached to feed \".concat(remoteFeed.rfid, \" (\").concat(remoteFeed.rfdisplay, \") in room \").concat(msg.room));\n\n              _this3.setState({\n                startTime: Date.now()\n              });\n            } else if (event === \"event\") {// Check if we got an event on a simulcast-related event from this publisher\n            } else {// What has just happened?\n              }\n          }\n\n          if (jsep) {\n            var _roomId = _this3.state.currentRoom.roomId;\n            Janus.debug(\"Handling SDP as well...\");\n            Janus.debug(jsep); // Answer and attach\n\n            remoteFeed.createAnswer({\n              jsep: jsep,\n              // Add data:true here if you want to subscribe to datachannels as well\n              // (obviously only works if the publisher offered them in the first place)\n              media: {\n                data: _this3.isUsingMQ ? false : true,\n                audioSend: false,\n                videoSend: false\n              },\n              // We want recvonly audio/video\n              success: function success(jsep) {\n                Janus.debug(\"Got SDP!\");\n                Janus.debug(jsep);\n                var body = {\n                  request: \"start\",\n                  room: _roomId\n                };\n                remoteFeed.send({\n                  message: body,\n                  jsep: jsep\n                });\n              },\n              error: function error(_error4) {\n                Janus.error(\"WebRTC error:\", _error4);\n              }\n            });\n          }\n        },\n        webrtcState: function webrtcState(on) {\n          Janus.log(\"Janus says this WebRTC PeerConnection (feed #\".concat(remoteFeed.rfindex, \") is \").concat(on ? \"up\" : \"down\", \" now\"));\n        },\n        onlocalstream: function onlocalstream(stream) {// The subscriber stream is recvonly, we don't expect anything here\n        },\n        onremotestream: function onremotestream(stream) {\n          if (remoteFeed && remoteFeed.rfindex) {\n            Janus.debug(\"Remote feed #\".concat(remoteFeed.rfindex));\n            var currentRoom = _this3.state.currentRoom;\n\n            if (remoteFeed.rfdisplay === currentRoom.studentEmail) {\n              Janus.attachMediaStream(_this3.studentVideo, stream);\n\n              if (_this3.studentBitrateTimer) {\n                clearInterval(_this3.studentBitrateTimer);\n              }\n\n              _this3.studentBitrateTimer = setInterval(function () {\n                _this3.setState({\n                  studentBitrate: remoteFeed.getBitrate()\n                });\n              }, 1000);\n            } else {\n              Janus.attachMediaStream(_this3.tutorVideo, stream);\n\n              if (_this3.tutorBitrateTimer) {\n                clearInterval(_this3.tutorBitrateTimer);\n              }\n\n              _this3.tutorBitrateTimer = setInterval(function () {\n                _this3.setState({\n                  tutorBitrate: remoteFeed.getBitrate()\n                });\n              }, 1000);\n            }\n          }\n        },\n        ondataopen: function ondataopen(data) {\n          Janus.log(\"The DataChannel is available!\");\n\n          _this3.setState({\n            startTime: Date.now()\n          });\n        },\n        ondata: function ondata(data) {\n          // data = JSON.parse(data.toString());\n          Janus.debug(\"We got data from the DataChannel! \");\n\n          _this3.onReceiveData(JSON.parse(data));\n        },\n        oncleanup: function oncleanup() {\n          Janus.log(\" ::: Got a cleanup notification (remote feed \".concat(id, \") :::\"));\n\n          if (remoteFeed.rfdisplay === _this3.state.studentEmail) {\n            clearInterval(_this3.studentBitrateTimer);\n            _this3.studentBitrateTimer = undefined;\n          } else {\n            clearInterval(_this3.tutorBitrateTimer);\n            _this3.tutorBitrateTimer = undefined;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"randomString\",\n    value: function randomString(len, charSet) {\n      charSet = charSet || \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      var randomString = \"\";\n\n      for (var i = 0; i < len; i++) {\n        var randomPoz = Math.floor(Math.random() * charSet.length);\n        randomString += charSet.substring(randomPoz, randomPoz + 1);\n      }\n\n      return randomString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          log = _this$state.log,\n          startTime = _this$state.startTime,\n          rooms = _this$state.rooms,\n          studentBitrate = _this$state.studentBitrate,\n          tutorBitrate = _this$state.tutorBitrate,\n          currentRoom = _this$state.currentRoom,\n          isLectureVideoOn = _this$state.isLectureVideoOn,\n          selectedLectureVideoURL = _this$state.selectedLectureVideoURL,\n          isLectureSlideOn = _this$state.isLectureSlideOn,\n          selectedSlideIndex = _this$state.selectedSlideIndex,\n          lectureSlides = _this$state.lectureSlides,\n          isMqConnected = _this$state.isMqConnected;\n      var isDrawingBoardOn = this.props.isDrawingBoardOn;\n      var setStudentVideo = this.setStudentVideo,\n          setTutorVideo = this.setTutorVideo,\n          setTimerRef = this.setTimerRef,\n          handleOnClickRoom = this.handleOnClickRoom,\n          handleOnClickSync = this.handleOnClickSync; //for rnd\n\n      var _this$state2 = this.state,\n          width = _this$state2.width,\n          height = _this$state2.height,\n          x = _this$state2.x,\n          y = _this$state2.y;\n      var _this$rnd = this.rnd,\n          onDragStop = _this$rnd.onDragStop,\n          onResize = _this$rnd.onResize;\n      var rnd = {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        onDragStop: onDragStop,\n        onResize: onResize\n      };\n      return React.createElement(View, {\n        rooms: rooms,\n        log: log,\n        isDrawingBoardOn: isDrawingBoardOn,\n        setStudentVideo: setStudentVideo,\n        setTutorVideo: setTutorVideo,\n        rnd: rnd,\n        startTime: startTime,\n        setTimerRef: setTimerRef,\n        handleOnClickRoom: handleOnClickRoom,\n        handleOnClickSync: handleOnClickSync,\n        studentBitrate: studentBitrate,\n        tutorBitrate: tutorBitrate,\n        currentRoom: currentRoom,\n        isLectureVideoOn: isLectureVideoOn,\n        selectedLectureVideoURL: selectedLectureVideoURL,\n        selectedSlideIndex: selectedSlideIndex,\n        isLectureSlideOn: isLectureSlideOn,\n        lectureSlides: lectureSlides,\n        isMqConnected: isMqConnected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    email: state.userinfo.email,\n    project: state.project,\n    webrtcProject: state.webrtc.project,\n    webrtcDrawing: state.webrtc.drawing,\n    isDrawingBoardOn: state.webrtc.isDrawingBoardOn,\n    editorRange: state.webrtc.editorRange,\n    highlightBtnId: state.interaction.highlightBtnId,\n    log: state.webrtc.log,\n    editorMode: state.scene.editorMode\n  };\n}, {\n  setProject: projectActions.setProject,\n  addDrawing: webrtcActions.addDrawing,\n  setDrawingBoard: webrtcActions.setDrawingBoard,\n  setEditorRange: webrtcActions.setEditorRange,\n  setBtnHighlight: interactionActions.setBtnHighlight\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MonitorContainer/Container.js"],"names":["React","Component","connect","stringify","AssetLibrary","URL","DEFAULT_VIDEO_URL","showAlert","request","projectActions","webrtcActions","interactionActions","View","Stomp","Janus","window","Container","props","MEDIA_CAMERA","MEDIA_SCREEN","DATA_TYPE_PROJECT","DATA_TYPE_CANVAS","DATA_TYPE_CANVAS_TOGGLE","DATA_TYPE_EDITOR_RANGE","DATA_TYPE_HIGHLIGHT","DATA_TYPE_LECTURE_VIDEO","DATA_TYPE_LECTURE_SLIDE","setupJanus","isWebrtcSupported","janus","server","serverUrl","iceTransportPolicy","iceServers","ICE_SERVERS","success","attachJanus","error","destroyed","log","attach","plugin","opaqueId","pluginHandle","videocall","handleId","getId","getPlugin","checkRoom","consentDialog","on","debug","mediaState","medium","webrtcState","onmessage","msg","jsep","event","videoroom","myid","id","mypvtid","private_id","room","publishers","list","forEach","l","display","audio","audio_codec","video","video_codec","displayId","newRemoteFeed","warn","leaving","remoteFeed","i","feeds","rfid","rfdisplay","rfindex","detach","setState","startTime","undefined","unpublished","hangup","error_code","handleRemoteJsep","onlocalstream","stream","onremotestream","oncleanup","roomId","state","currentRoom","send","message","data","exists","registerUsername","bitrate_cap","is_private","register","ptype","onReceiveData","type","drawing","isOn","editorRange","highlightBtnId","lectureVideo","lectureSlide","projectData","key","datas","total","index","length","string","combinedState","JSON","parse","lastSentState","_state","_lastState","scene","timeStamp","loadAssetsForGame","assets","setAll","setProject","lastSentDrawing","_drawing","_lastSentDrawing","addDrawing","setDrawingBoard","current","Date","getTime","diff","lastRangeTime","lastRangeDiffCount","setEditorRange","setBtnHighlight","isLectureVideoOn","selectedLectureVideoURL","isLectureSlideOn","selectedSlideIndex","slide","setTimerRef","elem","timerRef","clearInterval","timerInterval","setInterval","timeDiff","Math","floor","now","min","sec","formNum","num","toString","innerText","setStudentVideo","studentVideo","setTutorVideo","tutorVideo","setup","mqTesterTutor","mqTesterStudent","isUsingMQ","indexOf","tutorEmail","studentEmail","mqConnect","init","callback","err","console","topicName","mqReadyCallback","mqErrorCallback","mq","client","MQ","reconnect_delay","headers","login","passcode","host","number","random","email","frame","isMqConnected","subscription","subscribe","body","mqDisconnect","unsubscribe","disconnect","handleOnClickRoom","parseInt","lectureSlides","myLecture","lecture","slides","project","name","basicClass","videoURL","handleOnClickSync","pId","getDevelopingProject","then","res","json","alert","rnd","onDragStop","e","d","x","y","onResize","direction","ref","delta","position","width","max","style","height","JANUS_SERVER","randomString","screen","studentBitrateTimer","tutorBitrateTimer","rooms","getWhiteList","location","href","getTodayAvailableRooms","tempWOLecture","filter","item","params","lectureId","catch","destroy","simulcastStarted","feed","webRTCAdapter","browserDetails","browser","safariVp8","toUpperCase","offer_video","videoCodec","createAnswer","media","audioSend","videoSend","attachMediaStream","studentBitrate","getBitrate","tutorBitrate","ondataopen","ondata","len","charSet","randomPoz","substring","isDrawingBoardOn","userinfo","webrtcProject","webrtc","webrtcDrawing","interaction","editorMode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport stringify from \"json-stringify-safe\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport { URL, DEFAULT_VIDEO_URL } from \"../../../../Common/Util/Constant\";\nimport { showAlert } from \"../../../../Common/Util/AlertManager\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as webrtcActions from \"../../Store/Reducer/webrtc\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport View from \"./View\";\nimport Stomp from \"stompjs\";\n// import { minifyJSON, restoreJSON } from \"../../utils/oobcMinify\";\nconst Janus = window.Janus;\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.janus = undefined;\n    this.videocall = undefined;\n    this.serverUrl = URL.JANUS_SERVER;\n    this.tutorVideo = undefined;\n    this.studentVideo = undefined;\n    this.myid = undefined;\n    this.mypvtid = undefined; // We use this other ID just to map our subscriptions to us\n    this.opaqueId = \"wizlive-\" + Janus.randomString(12);\n    this.feeds = [];\n    this.remoteFeed = undefined;\n    this.screen = undefined;\n    this.timerRef = undefined;\n    this.displayId = \"monitor\";\n    this.studentBitrateTimer = undefined;\n    this.tutorBitrateTimer = undefined;\n\n    this.projectData = {};\n\n    this.state = {\n      rooms: [],\n\n      currentRoom: undefined,\n      startTime: undefined,\n      // rnd\n      width: 300,\n      height: \"auto\",\n      x: 0,\n      y: 0,\n      isLectureVideoOn: false,\n      isLectureSlideOn: false,\n\n      // test\n      isMqConnected: false\n    };\n\n    // MQ\n    this.mq = {\n      isUsingMQ: false,\n      client: null,\n      subscription: null\n    };\n  }\n\n  MEDIA_CAMERA = \"MEDIA_CAMERA\";\n  MEDIA_SCREEN = \"MEDIA_SCREEN\";\n  DATA_TYPE_PROJECT = \"DATA_TYPE_PROJECT\";\n  DATA_TYPE_CANVAS = \"DATA_TYPE_CANVAS\";\n  DATA_TYPE_CANVAS_TOGGLE = \"DATA_TYPE_CANVAS_TOGGLE\";\n  DATA_TYPE_EDITOR_RANGE = \"DATA_TYPE_EDITOR_RANGE\";\n  DATA_TYPE_HIGHLIGHT = \"DATA_TYPE_HIGHLIGHT\";\n  DATA_TYPE_LECTURE_VIDEO = \"DATA_TYPE_LECTURE_VIDEO\";\n  DATA_TYPE_LECTURE_SLIDE = \"DATA_TYPE_LECTURE_SLIDE\";\n\n  componentDidMount() {\n    // Janus.init({\n    //   debug: \"all\",\n    //   callback: this.setupJanus\n    // });\n    request\n      .getWhiteList({ email: this.props.email ? this.props.email : \"none\" })\n      .then(res => res.json())\n      .then(json => {\n        if (!json) window.location.href = \"/\";\n\n        request\n          .getTodayAvailableRooms({ type: \"js\" })\n          .then(res => res.json())\n          .then(json => {\n            let tempWOLecture = json.filter(item => {\n              if (this.props.location.params.type === \"js\") {\n                if (\n                  item.myLecture.lectureId !== 107 &&\n                  item.myLecture.lectureId !== 109\n                ) {\n                  return item;\n                }\n              } else {\n                if (\n                  item.myLecture.lectureId === 107 ||\n                  item.myLecture.lectureId === 109\n                ) {\n                  return item;\n                }\n              }\n              return false;\n            });\n\n            this.setState({ rooms: tempWOLecture });\n          })\n          .catch(e => console.error(e));\n      });\n  }\n\n  componentWillMount() {\n    if (this.videocall) {\n      this.videocall.hangup();\n      this.janus.destroy();\n    }\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = undefined;\n    }\n    if (this.studentBitrateTimer) {\n      clearInterval(this.studentBitrateTimer);\n      this.studentBitrateTimer = undefined;\n    }\n    if (this.tutorBitrateTimer) {\n      clearInterval(this.tutorBitrateTimer);\n      this.tutorBitrateTimer = undefined;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.isUsingMQ) {\n      this.mqDisconnect();\n    }\n  }\n\n  setupJanus = () => {\n    if (!Janus.isWebrtcSupported()) {\n      showAlert(\"ID_WEBRTC_UNSUPPORT\");\n      return;\n    }\n    this.janus = new Janus({\n      server: this.serverUrl,\n      iceTransportPolicy: \"relay\",\n      iceServers: URL.ICE_SERVERS,\n      success: this.attachJanus,\n      error: error => {\n        Janus.error(error);\n      },\n      destroyed: () => {\n        Janus.log(\"destroyed\");\n      }\n    });\n  };\n\n  attachJanus = () => {\n    this.janus.attach({\n      plugin: \"janus.plugin.videoroom\",\n      opaqueId: this.opaqueId,\n      success: pluginHandle => {\n        this.videocall = pluginHandle;\n        this.handleId = this.videocall.getId();\n        Janus.log(\n          `Plugin attached! (${this.videocall.getPlugin()}, id=${this.videocall.getId()})`\n        );\n        Janus.log(\"  -- This is a publisher/manager\");\n        this.checkRoom();\n        // this.registerUsername();\n      },\n      error: error => {\n        Janus.error(\"  -- Error attaching plugin...\", error);\n      },\n      consentDialog: on => {\n        Janus.debug(`Consent dialog should be ${on ? \"on\" : \"off\"} now`);\n      },\n      mediaState: (medium, on) => {\n        Janus.log(\n          `Janus ${on ? \"started\" : \"stopped\"} receiving our ${medium}`\n        );\n      },\n      webrtcState: on => {\n        Janus.log(\n          `Janus says our WebRTC PeerConnection is ${on ? \"up\" : \"down\"} now`\n        );\n      },\n      onmessage: (msg, jsep) => {\n        Janus.debug(\" ::: Got a message (publisher) :::\");\n        Janus.debug(msg);\n        const event = msg.videoroom;\n        Janus.debug(\"Event: \" + event);\n\n        if (event) {\n          if (event === \"joined\") {\n            // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n            this.myid = msg.id;\n            this.mypvtid = msg.private_id;\n            Janus.log(\n              `Successfully joined room ${msg.room} with ID ${this.myid}`\n            );\n\n            // Any new feed to attach to?\n            if (msg.publishers) {\n              const list = msg.publishers;\n              Janus.debug(\"Got a list of available publishers/feeds:\");\n              Janus.debug(list);\n              list.forEach(l => {\n                const id = l.id;\n                const display = l.display;\n                const audio = l.audio_codec;\n                const video = l.video_codec;\n                Janus.debug(\n                  `  >> [${id}] ${display} audio: ${audio}, video: ${video})`\n                );\n                if (l.display !== this.displayId) {\n                  this.newRemoteFeed(id, display, audio, video);\n                }\n              });\n            }\n          } else if (event === \"destroyed\") {\n            // The room has been destroyed\n            Janus.warn(\"The room has been destroyed!\");\n          } else if (event === \"event\") {\n            // Any new feed to attach to?\n            if (msg.publishers) {\n              const list = msg.publishers;\n              Janus.debug(\"Got a list of available publishers/feeds:\");\n              Janus.debug(list);\n              list.forEach(l => {\n                const id = l.id;\n                const display = l.display;\n                const audio = l.audio_codec;\n                const video = l.video_codec;\n                Janus.debug(\n                  `  >> [${id}] ${display} audio: ${audio}, video: ${video})`\n                );\n                if (l.display !== this.displayId) {\n                  this.newRemoteFeed(id, display, audio, video);\n                }\n              });\n            } else if (msg.leaving) {\n              // One of the publishers has gone away?\n              const leaving = msg.leaving;\n              Janus.log(\"Publisher left: \" + leaving);\n              this.remoteFeed = null;\n\n              for (let i = 1; i < 6; i++) {\n                if (this.feeds[i] && this.feeds[i].rfid === leaving) {\n                  this.remoteFeed = this.feeds[i];\n                  break;\n                }\n              }\n              if (this.remoteFeed) {\n                Janus.debug(\n                  `Feed ${this.remoteFeed.rfid} (${this.remoteFeed.rfdisplay}) has left the room, detaching`\n                );\n                this.feeds[this.remoteFeed.rfindex] = null;\n                this.remoteFeed.detach();\n                this.setState({\n                  startTime: undefined,\n                  log: undefined\n                });\n              }\n            } else if (msg.unpublished) {\n              // One of the publishers has unpublished?\n              const unpublished = msg[\"unpublished\"];\n              Janus.log(`Publisher left: ${unpublished}`);\n              if (unpublished === \"ok\") {\n                // That's us\n                this.videocall.hangup();\n                return;\n              }\n              this.remoteFeed = null;\n              for (let i = 1; i < 6; i++) {\n                if (this.feeds[i] && this.feeds[i].rfid === unpublished) {\n                  this.remoteFeed = this.feeds[i];\n                  break;\n                }\n              }\n              if (this.remoteFeed) {\n                Janus.debug(\n                  `Feed ${this.remoteFeed.rfid} (${this.remoteFeed.rfdisplay}) has left the room, detaching`\n                );\n                this.feeds[this.remoteFeed.rfindex] = null;\n                this.remoteFeed.detach();\n                this.setState({\n                  startTime: undefined,\n                  log: undefined\n                });\n              }\n            } else if (msg.error) {\n              if (msg.error_code === 426) {\n                // This is a \"no such room\" error: give a more meaningful description\n                Janus.error(\"No such room\");\n              } else {\n                Janus.error(msg.error);\n              }\n            }\n          }\n        }\n\n        if (jsep) {\n          Janus.debug(\"Handling SDP as well...\");\n          Janus.debug(jsep);\n          this.videocall.handleRemoteJsep({ jsep: jsep });\n        }\n      },\n      onlocalstream: stream => {\n        //this is monitor. nothing to do\n      },\n      onremotestream: stream => {\n        // The publisher stream is sendonly, we don't expect anything here\n      },\n      oncleanup: () => {\n        Janus.log(\" ::: Got a cleanup notification :::\");\n        this.setState({\n          startTime: undefined,\n          log: undefined\n        });\n      }\n    });\n  };\n\n  checkRoom = () => {\n    const { roomId } = this.state.currentRoom;\n    // this.videocall.send({\n    //   message: { request: \"destroy\", room: roomId }\n    // });\n    // return;\n    Janus.debug(\"is room exist...?\");\n    this.videocall.send({\n      message: { request: \"exists\", room: roomId },\n      success: data => {\n        if (data.exists) {\n          this.registerUsername();\n        } else {\n          Janus.debug(\"Room is creating...\");\n          this.videocall.send({\n            message: {\n              request: \"create\",\n              // bitrate: 512000,\n              publishers: 30,\n              bitrate_cap: true,\n              room: roomId,\n              is_private: true\n            },\n            success: this.registerUsername\n          });\n        }\n      }\n    });\n  };\n\n  registerUsername = () => {\n    const { roomId } = this.state.currentRoom;\n    const register = {\n      request: \"join\",\n      room: roomId,\n      ptype: \"publisher\",\n      display: this.displayId\n    };\n    this.videocall.send({ message: register });\n  };\n\n  newRemoteFeed(id, display, audio, video) {\n    const { roomId } = this.state.currentRoom;\n    // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n    let remoteFeed = null;\n    this.janus.attach({\n      plugin: \"janus.plugin.videoroom\",\n      opaqueId: this.opaqueId,\n      success: pluginHandle => {\n        remoteFeed = pluginHandle;\n        remoteFeed.simulcastStarted = false;\n        Janus.log(\n          `Plugin attached! (${remoteFeed.getPlugin()}, id=${remoteFeed.getId()})`\n        );\n        Janus.log(\"  -- This is a subscriber\");\n        // We wait for the plugin to send us an offer\n        const subscribe = {\n          request: \"join\",\n          room: roomId,\n          ptype: \"subscriber\",\n          feed: id,\n          private_id: this.mypvtid\n        };\n        // In case you don't want to receive audio, video or data, even if the\n        // publisher is sending them, set the 'offer_audio', 'offer_video' or\n        // 'offer_data' properties to false (they're true by default), e.g.:\n        // \t\tsubscribe[\"offer_video\"] = false;\n        // For example, if the publisher is VP8 and this is Safari, let's avoid video\n        if (\n          Janus.webRTCAdapter.browserDetails.browser === \"safari\" &&\n          (video === \"vp9\" || (video === \"vp8\" && !Janus.safariVp8))\n        ) {\n          if (video) video = video.toUpperCase();\n\n          Janus.error(\n            `Publisher is using ${video}, but Safari doesn't support it: disabling video`\n          );\n          subscribe.offer_video = false;\n        }\n        remoteFeed.videoCodec = video;\n        remoteFeed.send({ message: subscribe });\n      },\n      error: error => {\n        Janus.error(\"  -- Error attaching plugin...\", error);\n      },\n      onmessage: (msg, jsep) => {\n        Janus.debug(\" ::: Got a message (subscriber) :::\");\n        Janus.debug(msg);\n        const event = msg.videoroom;\n        Janus.debug(\"Event: \" + event);\n        if (msg.error) {\n          Janus.error(msg.error);\n        } else if (event) {\n          if (event === \"attached\") {\n            // Subscriber created and attached\n            for (let i = 1; i < 6; i++) {\n              if (!this.feeds[i]) {\n                this.feeds[i] = remoteFeed;\n                remoteFeed.rfindex = i;\n                break;\n              }\n            }\n            remoteFeed.rfid = msg.id;\n            remoteFeed.rfdisplay = msg.display;\n            Janus.log(\n              `Successfully attached to feed ${remoteFeed.rfid} (${remoteFeed.rfdisplay}) in room ${msg.room}`\n            );\n            this.setState({ startTime: Date.now() });\n          } else if (event === \"event\") {\n            // Check if we got an event on a simulcast-related event from this publisher\n          } else {\n            // What has just happened?\n          }\n        }\n\n        if (jsep) {\n          const { roomId } = this.state.currentRoom;\n          Janus.debug(\"Handling SDP as well...\");\n          Janus.debug(jsep);\n          // Answer and attach\n          remoteFeed.createAnswer({\n            jsep: jsep,\n            // Add data:true here if you want to subscribe to datachannels as well\n            // (obviously only works if the publisher offered them in the first place)\n            media: {\n              data: this.isUsingMQ ? false : true,\n              audioSend: false,\n              videoSend: false\n            }, // We want recvonly audio/video\n            success: jsep => {\n              Janus.debug(\"Got SDP!\");\n              Janus.debug(jsep);\n              const body = { request: \"start\", room: roomId };\n              remoteFeed.send({ message: body, jsep: jsep });\n            },\n            error: error => {\n              Janus.error(\"WebRTC error:\", error);\n            }\n          });\n        }\n      },\n      webrtcState: on => {\n        Janus.log(\n          `Janus says this WebRTC PeerConnection (feed #${\n            remoteFeed.rfindex\n          }) is ${on ? \"up\" : \"down\"} now`\n        );\n      },\n      onlocalstream: stream => {\n        // The subscriber stream is recvonly, we don't expect anything here\n      },\n      onremotestream: stream => {\n        if (remoteFeed && remoteFeed.rfindex) {\n          Janus.debug(`Remote feed #${remoteFeed.rfindex}`);\n          const { currentRoom } = this.state;\n          if (remoteFeed.rfdisplay === currentRoom.studentEmail) {\n            Janus.attachMediaStream(this.studentVideo, stream);\n\n            if (this.studentBitrateTimer) {\n              clearInterval(this.studentBitrateTimer);\n            }\n            this.studentBitrateTimer = setInterval(() => {\n              this.setState({\n                studentBitrate: remoteFeed.getBitrate()\n              });\n            }, 1000);\n          } else {\n            Janus.attachMediaStream(this.tutorVideo, stream);\n\n            if (this.tutorBitrateTimer) {\n              clearInterval(this.tutorBitrateTimer);\n            }\n            this.tutorBitrateTimer = setInterval(() => {\n              this.setState({\n                tutorBitrate: remoteFeed.getBitrate()\n              });\n            }, 1000);\n          }\n        }\n      },\n      ondataopen: data => {\n        Janus.log(\"The DataChannel is available!\");\n        this.setState({ startTime: Date.now() });\n      },\n      ondata: data => {\n        // data = JSON.parse(data.toString());\n        Janus.debug(\"We got data from the DataChannel! \");\n        this.onReceiveData(JSON.parse(data));\n      },\n      oncleanup: () => {\n        Janus.log(` ::: Got a cleanup notification (remote feed ${id}) :::`);\n        if (remoteFeed.rfdisplay === this.state.studentEmail) {\n          clearInterval(this.studentBitrateTimer);\n          this.studentBitrateTimer = undefined;\n        } else {\n          clearInterval(this.tutorBitrateTimer);\n          this.tutorBitrateTimer = undefined;\n        }\n      }\n    });\n  }\n\n  onReceiveData = async data => {\n    const {\n      type,\n      drawing,\n      isOn,\n      editorRange,\n      highlightBtnId,\n      lectureVideo,\n      lectureSlide\n    } = data;\n    if (type === this.DATA_TYPE_PROJECT) {\n      if (!this.projectData[data.key]) {\n        this.projectData[data.key] = { datas: [], total: data.total };\n      }\n\n      this.projectData[data.key].datas[data.index] = data.data;\n      if (this.projectData[data.key].datas.length === data.total) {\n        let string = \"\";\n        for (let i = 0; i < data.total; ++i) {\n          string += this.projectData[data.key].datas[i];\n        }\n        delete this.projectData[data.key];\n\n        // const combinedState =\n        //   this.props.editorMode === \"block\"\n        //     ? JSON.parse(restoreJSON(string))\n        //     : JSON.parse(string);\n\n        const combinedState = JSON.parse(string);\n\n        if (this.lastSentState) {\n          const _state = { ...combinedState };\n          const _lastState = { ...this.lastSentState };\n          if (_state.state.scene) _state.state.scene.timeStamp = 0;\n          if (_lastState.state.scene) _lastState.state.scene.timeStamp = 0;\n          if (stringify(_state) === stringify(_lastState)) return;\n        }\n        const assets = await AssetLibrary.loadAssetsForGame(\n          combinedState.state.scene\n        );\n        AssetLibrary.setAll(assets);\n        this.props.setProject(combinedState, true);\n      }\n    } else if (type === this.DATA_TYPE_CANVAS) {\n      if (this.lastSentDrawing) {\n        const _drawing = { ...drawing };\n        const _lastSentDrawing = { ...this.lastSentDrawing };\n        if (stringify(_drawing) === stringify(_lastSentDrawing)) return;\n      }\n\n      this.props.addDrawing(drawing);\n    } else if (type === this.DATA_TYPE_CANVAS_TOGGLE) {\n      this.props.setDrawingBoard(isOn);\n    } else if (type === this.DATA_TYPE_EDITOR_RANGE) {\n      const current = new Date().getTime();\n      const diff = current - this.lastRangeTime;\n      this.lastRangeTime = current;\n      if (diff < 100) {\n        this.lastRangeDiffCount++;\n        if (this.lastRangeDiffCount > 10) {\n          this.lastRangeDiffCount = 0;\n          return;\n        }\n      }\n      this.props.setEditorRange(editorRange);\n    } else if (type === this.DATA_TYPE_HIGHLIGHT) {\n      this.props.setBtnHighlight(highlightBtnId);\n    } else if (type === this.DATA_TYPE_LECTURE_VIDEO) {\n      this.setState({\n        isLectureVideoOn: lectureVideo.isOn,\n        selectedLectureVideoURL: lectureVideo.video\n      });\n    } else if (type === this.DATA_TYPE_LECTURE_SLIDE) {\n      this.setState({\n        isLectureSlideOn: lectureSlide.isOn,\n        selectedSlideIndex: lectureSlide.slide\n      });\n    }\n  };\n\n  setTimerRef = elem => {\n    if (!elem) return;\n    this.timerRef = elem;\n    clearInterval(this.timerInterval);\n    this.timerInterval = setInterval(() => {\n      if (!this.timerRef) return;\n      const timeDiff = Math.floor((Date.now() - this.state.startTime) / 1000);\n      let min = Math.floor(timeDiff / 60);\n      let sec = timeDiff % 60;\n      const formNum = num => (num.toString().length === 1 ? `0${num}` : num);\n      this.timerRef.innerText = `${formNum(min)}:${formNum(sec)}`;\n    }, 1000);\n  };\n\n  randomString(len, charSet) {\n    charSet =\n      charSet ||\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let randomString = \"\";\n    for (let i = 0; i < len; i++) {\n      const randomPoz = Math.floor(Math.random() * charSet.length);\n      randomString += charSet.substring(randomPoz, randomPoz + 1);\n    }\n    return randomString;\n  }\n\n  setStudentVideo = video => {\n    this.studentVideo = video;\n  };\n\n  setTutorVideo = video => {\n    this.tutorVideo = video;\n  };\n\n  setup = room => {\n    const mqTesterTutor = [\n      \"tutor@wizlive.com\",\n      \"neotutor@wizschool.io\",\n      \"chris@wizschool.io\",\n\n      \"tutor01@wizlive.com\",\n      \"tutor02@wizlive.com\",\n      \"tutor03@wizlive.com\",\n      \"tutor04@wizlive.com\",\n      \"tutor05@wizlive.com\",\n      \"tutor06@wizlive.com\",\n      \"tutor07@wizlive.com\",\n      \"tutor08@wizlive.com\",\n      \"tutor09@wizlive.com\",\n      \"tutor10@wizlive.com\",\n      \"tutor11@wizlive.com\",\n      \"tutor12@wizlive.com\",\n      \"tutor13@wizlive.com\"\n    ];\n    const mqTesterStudent = [\n      \"student@wizlive.com\",\n      \"neo@wizschool.io\",\n      \"chris4@wizschool.io\",\n\n      \"student01@wizlive.com\",\n      \"student02@wizlive.com\",\n      \"student03@wizlive.com\",\n      \"student04@wizlive.com\",\n      \"student05@wizlive.com\",\n      \"student06@wizlive.com\",\n      \"student07@wizlive.com\",\n      \"student08@wizlive.com\",\n      \"student09@wizlive.com\",\n      \"student10@wizlive.com\",\n      \"student11@wizlive.com\",\n      \"student12@wizlive.com\",\n      \"student13@wizlive.com\"\n    ];\n\n    this.isUsingMQ =\n      mqTesterTutor.indexOf(room.tutorEmail) !== -1 &&\n      mqTesterStudent.indexOf(room.studentEmail) !== -1;\n\n    //\n    this.isUsingMQ = true;\n\n    if (this.isUsingMQ) {\n      this.mqConnect(\n        `/topic/wizlive${room.roomId}-${room.tutorEmail}`,\n        () => {\n          Janus.init({\n            debug: \"all\",\n            callback: this.setupJanus\n          });\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    } else {\n      Janus.init({\n        debug: \"all\",\n        callback: this.setupJanus\n      });\n    }\n  };\n\n  mqConnect = (topicName, mqReadyCallback, mqErrorCallback) => {\n    this.mq.client = Stomp.client(URL.MQ);\n    this.mq.client.debug = null;\n    this.mq.client.reconnect_delay = 5000;\n\n    const { client } = this.mq;\n    const headers = {\n      login: \"wizschool\",\n      passcode: \"Wizschool2018!!\",\n      host: \"/\"\n    };\n    const number = Math.floor(Math.random() * 9000 + 1000);\n    if (this.props.email) {\n      headers[\"client-id\"] = `monitor${number}-${this.props.email}`;\n    } else {\n      headers[\"client-id\"] = `monitor${number}`;\n    }\n\n    client.connect(\n      headers,\n      frame => {\n        this.setState({ isMqConnected: true });\n        this.mq.subscription = client.subscribe(topicName, msg => {\n          this.onReceiveData(JSON.parse(msg.body));\n        });\n\n        mqReadyCallback();\n      },\n      err => {\n        mqErrorCallback(err);\n      }\n    );\n  };\n\n  mqDisconnect = () => {\n    const { client, subscription } = this.mq;\n    if (client) {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      client.disconnect(() => {\n        this.setState({ isMqConnected: false });\n      });\n    }\n  };\n\n  handleOnClickRoom = room => {\n    this.setState(\n      {\n        currentRoom: { ...room, roomId: parseInt(room.roomId) },\n        lectureSlides: JSON.parse(room.myLecture.lecture.slides)\n      },\n      async () => {\n        const { isMqConnected } = this.state;\n        if (isMqConnected) {\n          this.mqDisconnect();\n        }\n        this.setup(room);\n\n        try {\n          const state = JSON.parse(room.myLecture.lecture.state);\n          const project = {\n            state,\n            name: \"\",\n            basicClass: false,\n            video: { videoURL: DEFAULT_VIDEO_URL }\n          };\n          const assets = await AssetLibrary.loadAssetsForGame(state.scene);\n          AssetLibrary.setAll(assets);\n          this.props.setProject(project, true);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    );\n  };\n\n  handleOnClickSync = async room => {\n    const pId = room.myLecture.pId;\n    if (pId) {\n      await request\n        .getDevelopingProject({ pId })\n        .then(res => res.json())\n        .then(async json => {\n          try {\n            const state = JSON.parse(json.state);\n            const assets = await AssetLibrary.loadAssetsForGame(state.scene);\n            AssetLibrary.setAll(assets);\n            this.props.setProject({ state, pId }, true);\n          } catch (e) {\n            console.error(e);\n          }\n        });\n    } else {\n      alert(\"아직 프로젝트가 생성되지 않았습니다.\");\n    }\n  };\n\n  //for rnd\n  rnd = {\n    onDragStop: (e, d) => {\n      this.setState({ x: d.x, y: d.y });\n    },\n    onResize: (e, direction, ref, delta, position) => {\n      this.setState({\n        width: Math.max(500, parseInt(ref.style.width)),\n        height: \"auto\",\n        ...position\n      });\n    }\n  };\n\n  render() {\n    const {\n      log,\n      startTime,\n      rooms,\n      studentBitrate,\n      tutorBitrate,\n      currentRoom,\n      isLectureVideoOn,\n      selectedLectureVideoURL,\n      isLectureSlideOn,\n      selectedSlideIndex,\n      lectureSlides,\n      isMqConnected\n    } = this.state;\n    const { isDrawingBoardOn } = this.props;\n    const {\n      setStudentVideo,\n      setTutorVideo,\n      setTimerRef,\n      handleOnClickRoom,\n      handleOnClickSync\n    } = this;\n\n    //for rnd\n    const { width, height, x, y } = this.state;\n    const { onDragStop, onResize } = this.rnd;\n    const rnd = { width, height, x, y, onDragStop, onResize };\n\n    return (\n      <View\n        rooms={rooms}\n        log={log}\n        isDrawingBoardOn={isDrawingBoardOn}\n        setStudentVideo={setStudentVideo}\n        setTutorVideo={setTutorVideo}\n        rnd={rnd}\n        startTime={startTime}\n        setTimerRef={setTimerRef}\n        handleOnClickRoom={handleOnClickRoom}\n        handleOnClickSync={handleOnClickSync}\n        studentBitrate={studentBitrate}\n        tutorBitrate={tutorBitrate}\n        currentRoom={currentRoom}\n        isLectureVideoOn={isLectureVideoOn}\n        selectedLectureVideoURL={selectedLectureVideoURL}\n        selectedSlideIndex={selectedSlideIndex}\n        isLectureSlideOn={isLectureSlideOn}\n        lectureSlides={lectureSlides}\n        isMqConnected={isMqConnected}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    email: state.userinfo.email,\n    project: state.project,\n    webrtcProject: state.webrtc.project,\n    webrtcDrawing: state.webrtc.drawing,\n    isDrawingBoardOn: state.webrtc.isDrawingBoardOn,\n    editorRange: state.webrtc.editorRange,\n    highlightBtnId: state.interaction.highlightBtnId,\n    log: state.webrtc.log,\n    editorMode: state.scene.editorMode\n  }),\n  {\n    setProject: projectActions.setProject,\n    addDrawing: webrtcActions.addDrawing,\n    setDrawingBoard: webrtcActions.setDrawingBoard,\n    setEditorRange: webrtcActions.setEditorRange,\n    setBtnHighlight: interactionActions.setBtnHighlight\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}