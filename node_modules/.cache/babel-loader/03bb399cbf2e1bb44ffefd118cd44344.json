{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { URL, EDITORMODE, WizSpritePrefix } from \"../../../../Common/Util/Constant\";\nimport OOBC from \"../../../../Common/Component/OOBCEditor/OOBC\";\nimport AssetLibrary from \"../assetLibrary\";\nimport Parser from \"../parser\";\nimport obfuscate from \"./obfuscate\";\nimport isDev from \"./isDev\";\n/**\n * @param {Object} state - 프로젝트 스테이트\n * @param {Object} gameMeta - 게임 페이지 메타 데이터, { pId, gameTitle, liveTest = false, isFromWizlab = false, systemVolume }\n * @param {function} parserErrorHandler - 게임 코드 파싱 중 에러 발생 시 호출할 콜백\n */\n\nexport default function (_x, _x2, _x3) {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(state, gameMeta, parserErrorHandler) {\n    var pId, gameTitle, _gameMeta$liveTest, liveTest, _gameMeta$isFromWizla, isFromWizlab, systemVolume, editorMode, screenMode, isHorizontalMode, baseURL, stateObj, assets, userDefinedFunction, scriptSrc, gameScript, loadingScreenStyle, loadingScreenElement, loadingScreenScript, htmlDoc;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // parse gameData into pId, gameName, state, screenMode\n            pId = gameMeta.pId, gameTitle = gameMeta.gameTitle, _gameMeta$liveTest = gameMeta.liveTest, liveTest = _gameMeta$liveTest === void 0 ? false : _gameMeta$liveTest, _gameMeta$isFromWizla = gameMeta.isFromWizlab, isFromWizlab = _gameMeta$isFromWizla === void 0 ? false : _gameMeta$isFromWizla;\n            systemVolume = isNaN(gameMeta.systemVolume) ? 100 : gameMeta.systemVolume;\n            editorMode = state.editorMode;\n            screenMode = state.preview.screenMode;\n            isHorizontalMode = screenMode === \"HORIZONTAL\"; // set game state related data\n\n            baseURL = isFromWizlab ? \"/\" : URL.GAME_SRC;\n            stateObj = state;\n            _context.next = 9;\n            return AssetLibrary.loadAssetsForGame(state.scene);\n\n          case 9:\n            assets = _context.sent;\n            // User's code is going to be parsed by the Parser\n            userDefinedFunction = \"var userDefinedFunction = {};\";\n            stateObj.scene.sceneIds.forEach(function (sceneId) {\n              userDefinedFunction += \"userDefinedFunction[\\\"\".concat(sceneId, \"\\\"] = {};\");\n              stateObj.scene.scenes[sceneId].spriteIds.forEach(function (spriteId) {\n                try {\n                  var code = stateObj.scene.scenes[sceneId].sprites[spriteId].code;\n                  var parsedCode;\n\n                  switch (editorMode) {\n                    case EDITORMODE.PYTHON:\n                      parsedCode = Parser.parsePython(code);\n                      break;\n\n                    case EDITORMODE.BLOCK:\n                      var contextJSON;\n\n                      try {\n                        contextJSON = JSON.parse(code);\n                        var context = OOBC.Context.fromJSON(contextJSON);\n                        code = context.toJavascript();\n                      } catch (err) {\n                        // TODO: specifically handle oobc context parse error\n                        return;\n                      }\n\n                      parsedCode = Parser.parse(code);\n                      break;\n\n                    case EDITORMODE.JAVASCRIPT:\n                    default:\n                      parsedCode = Parser.parse(code);\n                      break;\n                  }\n\n                  userDefinedFunction += \"\\n          userDefinedFunction[\\\"\".concat(sceneId, \"\\\"][\\\"\").concat(spriteId, \"\\\"] =\\n            async function(\").concat(WizSpritePrefix, \") {\\n              try {\\n                \").concat(parsedCode, \"\\n              } catch(error) {\\n                postErrorToParent(error, {\\n                  sceneId: \\\"\").concat(sceneId, \"\\\",\\n                  spriteId: \\\"\").concat(spriteId, \"\\\"\\n                })\\n              }\\n            };\\n          \");\n                } catch (error) {\n                  console.error(error);\n\n                  if (parserErrorHandler) {\n                    var payload = {\n                      sceneId: sceneId,\n                      spriteId: spriteId\n                    };\n                    parserErrorHandler(error, payload);\n                  }\n                }\n              });\n            });\n            scriptSrc = \"\";\n\n            if (isDev()) {\n              scriptSrc = \"<script src=\\\"\".concat(baseURL, \"game/constant.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"game/game.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"game/gameScene.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"game/keyboard.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"game/wizSprite.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"game/socket.io.js\\\"></script>\\n    \");\n            } else {\n              scriptSrc = \"<script src=\\\"\".concat(baseURL, \"game/socket.io.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"game/wiz_lib.js?ver=67\\\"></script>\");\n            }\n\n            gameScript = \"function onclickInputShow(title,inputCallback){\\n    var inputTitle =  document.getElementsByClassName(\\\"InputBox--title\\\")[0];\\n    inputTitle.innerHTML =title ;\\n    var inputBox =  document.getElementsByClassName(\\\"InputBoxContainer\\\")[0];\\n    inputBox.style.display ='block';\\n    var InputBoxInput =  document.getElementsByClassName(\\\"InputBox--input\\\")[0];\\n    InputBoxInput.focus();\\n    InputBoxInput.select();\\n    this.inputCallback = inputCallback;\\n    isInputVisible = true;\\n  }\\n  function onInputKeyDown() {\\n    if(event.keyCode === 13) {\\n      event.stopPropagation();\\n      onclickInputConfirm();\\n    }\\n  }\\n  function onclickInputCancel() {\\n    var inputBox = document.getElementsByClassName(\\\"InputBoxContainer\\\")[0];\\n    inputBox.style.display = \\\"none\\\";\\n    this.inputCallback(\\\"\\\");\\n    isInputVisible = false;\\n  }\\n  function onclickInputConfirm() {\\n    var inputValue = document.getElementsByClassName(\\\"InputBox--input\\\")[0].value;\\n    this.inputCallback(inputValue);\\n    var inputBox = document.getElementsByClassName(\\\"InputBoxContainer\\\")[0];\\n    inputBox.style.display = \\\"none\\\";\\n    document.getElementsByClassName(\\\"InputBox--input\\\")[0].value = \\\"\\\";\\n    isInputVisible = false;\\n  }\\n\\n    \".concat(userDefinedFunction, \"\\n    var state = \").concat(JSON.stringify(state), \";\\n    var assets = \").concat(JSON.stringify(assets), \";\\n    var errorPosted = false\\n    var isInputVisible = false\\n\\n\\n    window.onkeydown = function(e) {\\n      if(!isInputVisible){\\n        e.preventDefault();\\n      }\\n\\n    }\\n\\n    window.onkeypress = function(e) {\\n      if(!isInputVisible){\\n        e.preventDefault();\\n      }\\n    }\\n\\n    window.addEventListener(\\\"unhandledrejection\\\", function(message) {\\n      if(message.promise){\\n        postErrorToParent(message.reason)\\n      }\\n    });\\n\\n    postErrorToParent = function(error, payload) {\\n      if(errorPosted) {\\n        return\\n      }\\n      errorPosted = true\\n      parent.postMessage({ \\n        source: \\\"wizlab\\\",\\n        type: \\\"error\\\",\\n        error: error,\\n        payload: payload\\n      });\\n    }\\n\\n    gameErrorHandler = function(type, payload) {\\n      postErrorToParent(type, payload)\\n    };\\n\\n    gamePreloadHandler = function() {\\n      var pId = \\\"\").concat(pId, \"\\\";\\n      var gameTitle = \\\"\").concat(gameTitle, \"\\\";\\n      var screenMode = \\\"\").concat(screenMode, \"\\\";\\n      var liveTest = \").concat(liveTest ? \"true\" : \"false\", \"\\n      // console.log(\\\"preloadHandler called for\\\", gameTitle)\\n      if (window.app) {\\n        // console.log(\\\"gamePreloadHandler + android\\\")\\n        window.app.onInformation(pId, gameTitle, screenMode, liveTest);\\n      }\\n      if (window.webkit) {\\n        // console.log(\\\"gamePreloadHandler + ios\\\")\\n        try {\\n          window.webkit.messageHandlers.onInformation.postMessage({\\n            pId,\\n            name: gameTitle,\\n            screenMode,\\n            liveTest\\n          });\\n        } catch (err) {}\\n      }\\n    }\\n    \\n    parent.postMessage({ type: \\\"screenMode\\\", payload: { pId: \\\"\").concat(pId, \"\\\", screenMode: \\\"\").concat(screenMode, \"\\\" } }, \\\"*\\\");\\n\\n    parent.postMessage({ type: \\\"screenMode\\\", payload: { pId: \\\"\").concat(pId, \"\\\", screenMode: \\\"\").concat(screenMode, \"\\\" } }, \\\"*\\\");\\n\\n    var scenes = state.scene.scenes;\\n    var sceneIds = state.scene.sceneIds;\\n    var screenMode = state.preview.screenMode;\\n    var soundIds = state.scene.soundIds;\\n\\n    var wrapperId = \\\"gameWrapper\\\";\\n    var screenWidth;\\n    var screenHeight;\\n    var wideScreen = getUrlParameter(\\\"wide\\\");\\n    if(getUrlParameter(\\\"w\\\") && wideScreen){\\n      var paramWidth = getUrlParameter(\\\"w\\\");\\n      var paramHeight = getUrlParameter(\\\"h\\\");\\n      var max = Math.max(paramWidth, paramHeight);\\n      var min = Math.min(paramWidth, paramHeight);\\n      var ratio = max / min;\\n      ratio = ratio > 19/9 ? 19/9 : ratio;\\n      ratio = ratio < 16/9 ? 16/9 : ratio;\\n      if(wideScreen){\\n          if(screenMode === \\\"HORIZONTAL\\\") {\\n            screenHeight = 720;\\n            screenWidth = 720 * max / min;\\n          } else {\\n            screenWidth = 720;\\n            screenHeight = 720 * max / min;\\n          }\\n      }\\n    } else {\\n      screenWidth = screenMode === \\\"HORIZONTAL\\\" ? 1280 : 720;\\n      screenHeight = screenMode === \\\"HORIZONTAL\\\" ? 720 : 1280;\\n    }\\n\\n    \").concat(isFromWizlab ? \"screenWidth = window.innerWidth; screenHeight = window.innerHeight\" : \"\", \"\\n    this.game = new Game({\\n      pId: '\").concat(pId, \"',\\n      screenWidth: screenWidth,\\n      screenHeight: screenHeight,\\n      wideScreen: wideScreen,\\n      screenMode: screenMode,\\n      wrapperId: wrapperId,\\n      scenes: scenes,\\n      sceneIds: sceneIds,\\n      soundIds: soundIds,\\n      errorHandler: gameErrorHandler,\\n      assets: assets,\\n      preloadHandler: gamePreloadHandler,\\n      systemVolume: \").concat(systemVolume, \",\\n      isFromWizlab: \").concat(isFromWizlab, \"\\n    });\\n\\n    function getUrlParameter(name) {\\n      var url_string = window.location.href;\\n      var url = new URL(url_string);\\n      var value = url.searchParams.get(name);\\n      return value;\\n    };\\n\\n    function changeGyro(x,y) {\\n      this.game.onGyroChanged(x,y);\\n    }\\n\\n    function onListeningResult(msg) {\\n      this.game.onListeningResult(msg);\\n    }\\n\\n    function onShaked() {\\n      this.game.onShaked();\\n    }\\n\\n    function onFaceDetect(face) {\\n      this.game.onFaceDetect(face);\\n    }\\n\\n    function onSaveGameData() {\\n      this.game.onSaveGameData();\\n    }\\n\\n    function onResetGameData() {\\n      this.game.onResetGameData();\\n    }\\n\\n    function onLoadGameData(data) {\\n      this.game.onLoadGameData(data);\\n    }\\n\\n    function onUpdateSystemVolume(volume) {\\n      this.game.onUpdateSystemVolume(volume);\\n    }\\n\\n    function onReceiveTFSignal(signal) {\\n      this.game.onReceiveTFSignal(signal);\\n    }\\n\\n    function gameEventHandler(event) {\\n      if (event.data.source) {\\n        if (event.data.source === \\\"wizlab\\\") {\\n          if (event.data.type === \\\"gameData\\\") {\\n            const { type, data } = JSON.parse(event.data.message);\\n            switch (type) {\\n              case \\\"onSaveGameData\\\":\\n                this.onSaveGameData();\\n                break;\\n              case \\\"onResetGameData\\\":\\n                this.onResetGameData();\\n                break;\\n              case \\\"onLoadGameData\\\":\\n                this.onLoadGameData(data);\\n                break;\\n              default:\\n            }\\n          } else if(event.data.type === \\\"onUpdateSystemVolume\\\") {\\n            this.onUpdateSystemVolume(event.data.data);\\n          }\\n        } else if (event.data.source === \\\"wizlive\\\") {\\n          if(event.data.type === \\\"tensorflowDemo\\\") {\\n            onReceiveTFSignal(event.data.signal);\\n          }\\n        }\\n      }\\n    }\\n    window.addEventListener(\\\"message\\\", this.gameEventHandler, false);\");\n\n            if (!isFromWizlab) {\n              gameScript = obfuscate(gameScript);\n            }\n\n            loadingScreenStyle = \"\\n    #loadingScreen {\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      display: none;\\n      color: #fff;\\n      background-color: #141821;\\n    }\\n    #loadingScreen_container {\\n      position: absolute;\\n      display: flex;\\n      flex-direction: column;\\n      top: 50%;\\n      left: 50%;\\n      width: 489px;\\n      transform-origin: center;\\n      transform: translate(-50%, -50%) scale(0.66) ;\\n    }\\n    @media screen and (max-width: 1024px) {\\n      #loadingScreen_container {\\n        transform: translate(-50%, -50%) scale(\".concat(isHorizontalMode ? 0.48 : 0.78, \");\\n      }\\n    }\\n    @media screen and (max-width: 736px) {\\n      #loadingScreen_container {\\n        transform: translate(-50%, -50%) scale(\").concat(isHorizontalMode ? 0.36 : 0.66, \");\\n      }\\n    }\\n    @media screen and (max-width: 480px) {\\n      #loadingScreen_container {\\n        transform: translate(-50%, -50%) scale(\").concat(isHorizontalMode ? 0.24 : 0.42, \");\\n      }\\n    }\\n    @media screen and (max-width: 240px) {\\n      #loadingScreen_container {\\n        transform: translate(-50%, -50%) scale(\").concat(isHorizontalMode ? 0.24 : 0.24, \");\\n      }\\n    }\\n    #loadingScreen_title {\\n      position: relative;\\n      margin: 0 auto;\\n      width: 36%;\\n    }\\n    #loadingScreen_title_text {\\n      display: block;\\n      width: 100%;\\n    }\\n    #loadingScreen_title_dots {\\n      position: absolute;\\n      display: flex;\\n      bottom: 0;\\n      left: 100%;\\n      margin-left: 3px;\\n    }\\n    .loadingScreen_title_dot {\\n      margin-left: 1px;\\n      width: 9px;\\n      height: 9px;\\n      opacity: 0;\\n      animation: dotBlink 0.99s infinite;\\n    }\\n    .loadingScreen_title_dot:nth-of-type(1) {\\n      animation-delay: 0s;\\n    }\\n    .loadingScreen_title_dot:nth-of-type(2) {\\n      animation-delay: 0.33s;\\n    }\\n    .loadingScreen_title_dot:nth-of-type(3) {\\n      animation-delay: 0.66s;\\n    }\\n    @keyframes dotBlink {\\n      0%, 66%, 100% { opacity: 0; }\\n      33% { opacity: 1; }\\n    }\\n    #loadingScreen_progress {\\n      display: block;\\n      margin-top: 24px;\\n    }\\n    #loadingScreen_progress_bar {\\n      transition: 0.2s width;\\n    }\\n    #loadingScreen_progress_reflect {\\n      transition: 0.2s width;\\n    }\\n  \");\n            loadingScreenElement = \"\\n    <div id=\\\"loadingScreen\\\">\\n      <div id=\\\"loadingScreen_container\\\">\\n        <div id=\\\"loadingScreen_title\\\">\\n          <img id=\\\"loadingScreen_title_text\\\" src=\\\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText.png\\\" alt=\\\"gamePreloadingText\\\" />\\n          <div id=\\\"loadingScreen_title_dots\\\">\\n            <img class=\\\"loadingScreen_title_dot\\\" src=\\\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText_dot.png\\\" alt=\\\"gamePreloadingText_dot1\\\" />\\n            <img class=\\\"loadingScreen_title_dot\\\" src=\\\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText_dot.png\\\" alt=\\\"gamePreloadingText_dot2\\\" />\\n            <img class=\\\"loadingScreen_title_dot\\\" src=\\\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText_dot.png\\\" alt=\\\"gamePreloadingText_dot3\\\" />\\n          </div>\\n        </div>\\n        <svg id=\\\"loadingScreen_progress\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"489\\\" height=\\\"45\\\" viewBox=\\\"0 0 489 45\\\">\\n          <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n            <g>\\n              <g transform=\\\"translate(-378 -350) translate(378 350)\\\">\\n                <rect width=\\\"489\\\" height=\\\"45\\\" fill=\\\"#000\\\" rx=\\\"22.5\\\"/>\\n                <g>\\n                    <rect id=\\\"loadingScreen_progress_bar\\\" width=\\\"48\\\" height=\\\"45\\\" fill=\\\"#06CC9F\\\" rx=\\\"22.5\\\"/>\\n                    <rect id=\\\"loadingScreen_progress_reflect\\\" width=\\\"24\\\" height=\\\"21\\\" x=\\\"11\\\" y=\\\"4\\\" fill=\\\"#FFF\\\" fill-opacity=\\\".5\\\" rx=\\\"10.5\\\"/>\\n                    <ellipse cx=\\\"13.888\\\" cy=\\\"10.23\\\" fill=\\\"#FFF\\\" rx=\\\"3.5\\\" ry=\\\"5.5\\\" transform=\\\"rotate(40 13.888 10.23)\\\"/>\\n                </g>\\n              </g>\\n            </g>\\n          </g>\\n        </svg>\\n      </div>\\n    </div>\\n  \";\n            loadingScreenScript = \"\\n    function hideGameAndShowLoading() {\\n      const loadingScreen = document.getElementById(\\\"loadingScreen\\\");\\n      loadingScreen.style.display = \\\"flex\\\";\\n    }\\n    function hideLoadingAndShowGame() {\\n      const loadingScreen = document.getElementById(\\\"loadingScreen\\\");\\n      loadingScreen.remove();\\n    }\\n    function updateLoadingProgress(progress) {\\n      const maxProgressWidth = 489;\\n      const bar = document.getElementById(\\\"loadingScreen_progress_bar\\\");\\n      const reflect = document.getElementById(\\\"loadingScreen_progress_reflect\\\");\\n      if(progress >= 100) {\\n        bar.style.width = maxProgressWidth + \\\"px\\\";\\n        reflect.style.width = (maxProgressWidth - 24) + \\\"px\\\";\\n      } else {\\n        let progressWidth = maxProgressWidth * progress / 100;\\n        if (progressWidth < 48) {\\n          progressWidth = 48;\\n        }\\n        bar.style.width = progressWidth + \\\"px\\\";\\n        reflect.style.width = (progressWidth - 24) + \\\"px\\\";\\n      }\\n    }\\n  \";\n            htmlDoc = \"\\n    <!DOCTYPE html>\\n    <head>\\n    <title>player</title>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=0\\\"/>\\n    <script src=\\\"https://cdn.jsdelivr.net/npm/webfontloader@1.6.28/webfontloader.min.js\\\"></script>\\n    <!-- <script src=\\\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find,Array.prototype.findIndex\\\"></script> -->\\n    <script src=\\\"\".concat(baseURL, \"phaser2.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"phaser2-joystick.js\\\"></script>\\n\\n    \").concat(scriptSrc, \"\\n    <style>\\n    body{padding:0;margin:0;\").concat(isFromWizlab ? \"background-color:transparent;width:100%;height:100vh;position:relative;\" : \"background-color:#000000;width:100%;height:100vh;position:relative;\", \"}\\n    \").concat(screenMode === \"HORIZONTAL\" ? \"#container{height:100%;text-align: center;} #gameWrapper{height:100%;display: inline-block;}\" : \"#container{width:100%;height:auto;margin:0;position:absolute;top:50%;left:0;transform:translateY(-50%);}\", \"\\n\\n    .InputBoxContainer{\\n      position: absolute;\\n      top:0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      background-color: rgba(0, 0, 0, 0.5);\\n      display: none;\\n    }\\n    .InputBoxInner--HORIZONTAL{\\n      position: relative;\\n      background-color: #393e4f;\\n      width: 48%;\\n      height: 35%;\\n      border-radius: 18px;\\n      text-align: center;\\n      margin: 0 auto;\\n      margin-top:10%;\\n      padding:4% 4% 4% 4%;\\n    }\\n    .InputBoxInner--VERTICAL{\\n      position: relative;\\n      background-color: #393e4f;\\n      width: 70%;\\n      height: 20%;\\n      border-radius: 18px;\\n      text-align: center;\\n      margin: 0 auto;\\n      margin-top:60%;\\n      padding:4% 4% 4% 4%;\\n    }\\n\\n    .InputBox--title{\\n      color: #ffffff;\\n      width: 100%;\\n      text-align: center;\\n      font-weight: bold;\\n      margin-top:0;\\n      margin-bottom: 5%;\\n      font-family:\\\"Source Sans Pro\\\", sans-serif;\\n      font-size: 20px;\\n    }\\n    .InputBox--input{\\n      box-sizing: border-box;\\n      width: 100%;\\n      line-height: 3;\\n      padding-left: 3%;\\n      font-size: 14px;\\n      border-radius: 6px;\\n      border: solid 1px #2f3443;\\n      background-color: #272b37;\\n      color: #fff;\\n    }\\n    .InputBox--input::placeholder{\\n      color: #afafaf;\\n    }\\n    .InputBox--input:focus, .InputBoxBtn:focus{\\n      outline: none;\\n    }\\n    .InputBoxbtn--HORIZONTAL.InputBoxBtn{\\n      width:40%;\\n      height: 23%;\\n      border-radius: 25px;\\n      margin-right:1.5%;\\n      margin-left:1.5%;\\n      cursor: pointer;\\n      margin-top:7%;\\n      font-size:13px;\\n    }\\n    .InputBoxbtn--VERTICAL.InputBoxBtn{\\n      width:40%;\\n      height: 25%;\\n      border-radius: 25px;\\n      margin-right:1.5%;\\n      margin-left:1.5%;\\n      cursor: pointer;\\n      margin-top:10%;\\n      font-size:18px;\\n\\n    }\\n    .InputBoxBtn--cancel{\\n      border-radius: 20px;\\n      border: solid 1px #1db6ff;\\n      background: transparent;\\n      color: #1db6ff;\\n    }\\n    .InputBoxBtn--confirm{\\n      background-color: #2c9ee0;\\n      color:#ffffff;\\n      border: none;\\n    }\\n\\n  @media screen and (max-width: 768px) {\\n    .InputBoxInner--HORIZONTAL{\\n      width: 70%;\\n      height: 60%;\\n      margin-top:5%;\\n    }\\n    .InputBoxbtn--HORIZONTAL.InputBoxBtn{\\n      height: 25%;\\n      margin-top:7%;\\n    }\\n    .InputBox--input{\\n      line-height: 1.7;\\n      font-size: 16px;\\n      line-height: 1.5;\\n      width:90%;\\n    }\\n  }\\n  \").concat(loadingScreenStyle, \"\\n  </style>\\n  <link\\n  href=\\\"https://fonts.googleapis.com/css?family=Black+And+White+Picture|Black+Han+Sans|Cute+Font|Do+Hyeon|Dokdo|East+Sea+Dokdo|Gaegu|Gamja+Flower|Gothic+A1|Gugi|Hi+Melody|Jua|Kirang+Haerang|Nanum+Brush+Script|Nanum+Gothic|Nanum+Myeongjo|Nanum+Pen+Script|Noto+Sans+KR|Noto+Serif+KR|Poor+Story|Song+Myung|Stylish|Sunflower:300|Yeon+Sung&amp;subset=korean\\\"\\n    rel=\\\"stylesheet\\\"\\n  ></link>\\n    </head>\\n    <body>\\n    <div id=\\\"container\\\"><div id=\\\"gameWrapper\\\"></div></div>\\n\\n    <div class=\\\"InputBoxContainer\\\">\\n      <div class=\\\"InputBoxInner--\").concat(screenMode, \"\\\">\\n          <p class=\\\"InputBox--title\\\">\\uD0C0\\uC774\\uD2C0</p>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"InputBox--input\\\"\\n            name=\\\"InputBox--input\\\"\\n            placeholder=\\\"\\uC785\\uB825\\uD558\\uC138\\uC694\\\"\\n            onkeydown=\\\"onInputKeyDown();\\\"\\n          />\\n          <button class=\\\"InputBoxBtn InputBoxbtn--\").concat(screenMode, \" InputBoxBtn--cancel\\\" onclick=\\\"onclickInputCancel();\\\" >\\uCDE8\\uC18C</button>\\n          <button class=\\\"InputBoxBtn InputBoxbtn--\").concat(screenMode, \" InputBoxBtn--confirm\\\" onclick=\\\"onclickInputConfirm();\\\">\\uD655\\uC778</button>\\n        </div>\\n    </div>\\n    \").concat(loadingScreenElement, \"\\n    <script>\\n    \").concat(loadingScreenScript, \"\\n    \").concat(gameScript, \"\\n    </script></body></html>\");\n            return _context.abrupt(\"return\", htmlDoc);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _ref.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/utils/gamePageGenerator/generatePhaserPage.js"],"names":["URL","EDITORMODE","WizSpritePrefix","OOBC","AssetLibrary","Parser","obfuscate","isDev","state","gameMeta","parserErrorHandler","pId","gameTitle","liveTest","isFromWizlab","systemVolume","isNaN","editorMode","screenMode","preview","isHorizontalMode","baseURL","GAME_SRC","stateObj","loadAssetsForGame","scene","assets","userDefinedFunction","sceneIds","forEach","sceneId","scenes","spriteIds","spriteId","code","sprites","parsedCode","PYTHON","parsePython","BLOCK","contextJSON","JSON","parse","context","Context","fromJSON","toJavascript","err","JAVASCRIPT","error","console","payload","scriptSrc","gameScript","stringify","loadingScreenStyle","loadingScreenElement","loadingScreenScript","htmlDoc"],"mappings":"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","sourcesContent":["import {\n  URL,\n  EDITORMODE,\n  WizSpritePrefix\n} from \"../../../../Common/Util/Constant\";\nimport OOBC from \"../../../../Common/Component/OOBCEditor/OOBC\";\nimport AssetLibrary from \"../assetLibrary\";\nimport Parser from \"../parser\";\nimport obfuscate from \"./obfuscate\";\nimport isDev from \"./isDev\";\n\n/**\n * @param {Object} state - 프로젝트 스테이트\n * @param {Object} gameMeta - 게임 페이지 메타 데이터, { pId, gameTitle, liveTest = false, isFromWizlab = false, systemVolume }\n * @param {function} parserErrorHandler - 게임 코드 파싱 중 에러 발생 시 호출할 콜백\n */\nexport default async function(state, gameMeta, parserErrorHandler) {\n  // parse gameData into pId, gameName, state, screenMode\n  const { pId, gameTitle, liveTest = false, isFromWizlab = false } = gameMeta;\n  const systemVolume = isNaN(gameMeta.systemVolume)\n    ? 100\n    : gameMeta.systemVolume;\n  const editorMode = state.editorMode;\n  const screenMode = state.preview.screenMode;\n  const isHorizontalMode = screenMode === \"HORIZONTAL\";\n\n  // set game state related data\n  const baseURL = isFromWizlab ? \"/\" : URL.GAME_SRC;\n  const stateObj = state;\n  const assets = await AssetLibrary.loadAssetsForGame(state.scene);\n\n  // User's code is going to be parsed by the Parser\n  let userDefinedFunction = \"var userDefinedFunction = {};\";\n  stateObj.scene.sceneIds.forEach(sceneId => {\n    userDefinedFunction += `userDefinedFunction[\"${sceneId}\"] = {};`;\n    stateObj.scene.scenes[sceneId].spriteIds.forEach(spriteId => {\n      try {\n        let code = stateObj.scene.scenes[sceneId].sprites[spriteId].code;\n        let parsedCode;\n\n        switch (editorMode) {\n          case EDITORMODE.PYTHON:\n            parsedCode = Parser.parsePython(code);\n            break;\n          case EDITORMODE.BLOCK:\n            let contextJSON;\n            try {\n              contextJSON = JSON.parse(code);\n              const context = OOBC.Context.fromJSON(contextJSON);\n              code = context.toJavascript();\n            } catch (err) {\n              // TODO: specifically handle oobc context parse error\n              return;\n            }\n            parsedCode = Parser.parse(code);\n            break;\n          case EDITORMODE.JAVASCRIPT:\n          default:\n            parsedCode = Parser.parse(code);\n            break;\n        }\n\n        userDefinedFunction += `\n          userDefinedFunction[\"${sceneId}\"][\"${spriteId}\"] =\n            async function(${WizSpritePrefix}) {\n              try {\n                ${parsedCode}\n              } catch(error) {\n                postErrorToParent(error, {\n                  sceneId: \"${sceneId}\",\n                  spriteId: \"${spriteId}\"\n                })\n              }\n            };\n          `;\n      } catch (error) {\n        console.error(error);\n        if (parserErrorHandler) {\n          const payload = { sceneId, spriteId };\n          parserErrorHandler(error, payload);\n        }\n      }\n    });\n  });\n  let scriptSrc = \"\";\n  if (isDev()) {\n    scriptSrc = `<script src=\"${baseURL}game/constant.js\"></script>\n    <script src=\"${baseURL}game/game.js\"></script>\n    <script src=\"${baseURL}game/gameScene.js\"></script>\n    <script src=\"${baseURL}game/keyboard.js\"></script>\n    <script src=\"${baseURL}game/wizSprite.js\"></script>\n    <script src=\"${baseURL}game/socket.io.js\"></script>\n    `;\n  } else {\n    scriptSrc = `<script src=\"${baseURL}game/socket.io.js\"></script>\n    <script src=\"${baseURL}game/wiz_lib.js?ver=67\"></script>`;\n  }\n\n  let gameScript = `function onclickInputShow(title,inputCallback){\n    var inputTitle =  document.getElementsByClassName(\"InputBox--title\")[0];\n    inputTitle.innerHTML =title ;\n    var inputBox =  document.getElementsByClassName(\"InputBoxContainer\")[0];\n    inputBox.style.display ='block';\n    var InputBoxInput =  document.getElementsByClassName(\"InputBox--input\")[0];\n    InputBoxInput.focus();\n    InputBoxInput.select();\n    this.inputCallback = inputCallback;\n    isInputVisible = true;\n  }\n  function onInputKeyDown() {\n    if(event.keyCode === 13) {\n      event.stopPropagation();\n      onclickInputConfirm();\n    }\n  }\n  function onclickInputCancel() {\n    var inputBox = document.getElementsByClassName(\"InputBoxContainer\")[0];\n    inputBox.style.display = \"none\";\n    this.inputCallback(\"\");\n    isInputVisible = false;\n  }\n  function onclickInputConfirm() {\n    var inputValue = document.getElementsByClassName(\"InputBox--input\")[0].value;\n    this.inputCallback(inputValue);\n    var inputBox = document.getElementsByClassName(\"InputBoxContainer\")[0];\n    inputBox.style.display = \"none\";\n    document.getElementsByClassName(\"InputBox--input\")[0].value = \"\";\n    isInputVisible = false;\n  }\n\n    ${userDefinedFunction}\n    var state = ${JSON.stringify(state)};\n    var assets = ${JSON.stringify(assets)};\n    var errorPosted = false\n    var isInputVisible = false\n\n\n    window.onkeydown = function(e) {\n      if(!isInputVisible){\n        e.preventDefault();\n      }\n\n    }\n\n    window.onkeypress = function(e) {\n      if(!isInputVisible){\n        e.preventDefault();\n      }\n    }\n\n    window.addEventListener(\"unhandledrejection\", function(message) {\n      if(message.promise){\n        postErrorToParent(message.reason)\n      }\n    });\n\n    postErrorToParent = function(error, payload) {\n      if(errorPosted) {\n        return\n      }\n      errorPosted = true\n      parent.postMessage({ \n        source: \"wizlab\",\n        type: \"error\",\n        error: error,\n        payload: payload\n      });\n    }\n\n    gameErrorHandler = function(type, payload) {\n      postErrorToParent(type, payload)\n    };\n\n    gamePreloadHandler = function() {\n      var pId = \"${pId}\";\n      var gameTitle = \"${gameTitle}\";\n      var screenMode = \"${screenMode}\";\n      var liveTest = ${liveTest ? \"true\" : \"false\"}\n      // console.log(\"preloadHandler called for\", gameTitle)\n      if (window.app) {\n        // console.log(\"gamePreloadHandler + android\")\n        window.app.onInformation(pId, gameTitle, screenMode, liveTest);\n      }\n      if (window.webkit) {\n        // console.log(\"gamePreloadHandler + ios\")\n        try {\n          window.webkit.messageHandlers.onInformation.postMessage({\n            pId,\n            name: gameTitle,\n            screenMode,\n            liveTest\n          });\n        } catch (err) {}\n      }\n    }\n    \n    parent.postMessage({ type: \"screenMode\", payload: { pId: \"${pId}\", screenMode: \"${screenMode}\" } }, \"*\");\n\n    parent.postMessage({ type: \"screenMode\", payload: { pId: \"${pId}\", screenMode: \"${screenMode}\" } }, \"*\");\n\n    var scenes = state.scene.scenes;\n    var sceneIds = state.scene.sceneIds;\n    var screenMode = state.preview.screenMode;\n    var soundIds = state.scene.soundIds;\n\n    var wrapperId = \"gameWrapper\";\n    var screenWidth;\n    var screenHeight;\n    var wideScreen = getUrlParameter(\"wide\");\n    if(getUrlParameter(\"w\") && wideScreen){\n      var paramWidth = getUrlParameter(\"w\");\n      var paramHeight = getUrlParameter(\"h\");\n      var max = Math.max(paramWidth, paramHeight);\n      var min = Math.min(paramWidth, paramHeight);\n      var ratio = max / min;\n      ratio = ratio > 19/9 ? 19/9 : ratio;\n      ratio = ratio < 16/9 ? 16/9 : ratio;\n      if(wideScreen){\n          if(screenMode === \"HORIZONTAL\") {\n            screenHeight = 720;\n            screenWidth = 720 * max / min;\n          } else {\n            screenWidth = 720;\n            screenHeight = 720 * max / min;\n          }\n      }\n    } else {\n      screenWidth = screenMode === \"HORIZONTAL\" ? 1280 : 720;\n      screenHeight = screenMode === \"HORIZONTAL\" ? 720 : 1280;\n    }\n\n    ${\n      isFromWizlab\n        ? `screenWidth = window.innerWidth; screenHeight = window.innerHeight`\n        : \"\"\n    }\n    this.game = new Game({\n      pId: '${pId}',\n      screenWidth: screenWidth,\n      screenHeight: screenHeight,\n      wideScreen: wideScreen,\n      screenMode: screenMode,\n      wrapperId: wrapperId,\n      scenes: scenes,\n      sceneIds: sceneIds,\n      soundIds: soundIds,\n      errorHandler: gameErrorHandler,\n      assets: assets,\n      preloadHandler: gamePreloadHandler,\n      systemVolume: ${systemVolume},\n      isFromWizlab: ${isFromWizlab}\n    });\n\n    function getUrlParameter(name) {\n      var url_string = window.location.href;\n      var url = new URL(url_string);\n      var value = url.searchParams.get(name);\n      return value;\n    };\n\n    function changeGyro(x,y) {\n      this.game.onGyroChanged(x,y);\n    }\n\n    function onListeningResult(msg) {\n      this.game.onListeningResult(msg);\n    }\n\n    function onShaked() {\n      this.game.onShaked();\n    }\n\n    function onFaceDetect(face) {\n      this.game.onFaceDetect(face);\n    }\n\n    function onSaveGameData() {\n      this.game.onSaveGameData();\n    }\n\n    function onResetGameData() {\n      this.game.onResetGameData();\n    }\n\n    function onLoadGameData(data) {\n      this.game.onLoadGameData(data);\n    }\n\n    function onUpdateSystemVolume(volume) {\n      this.game.onUpdateSystemVolume(volume);\n    }\n\n    function onReceiveTFSignal(signal) {\n      this.game.onReceiveTFSignal(signal);\n    }\n\n    function gameEventHandler(event) {\n      if (event.data.source) {\n        if (event.data.source === \"wizlab\") {\n          if (event.data.type === \"gameData\") {\n            const { type, data } = JSON.parse(event.data.message);\n            switch (type) {\n              case \"onSaveGameData\":\n                this.onSaveGameData();\n                break;\n              case \"onResetGameData\":\n                this.onResetGameData();\n                break;\n              case \"onLoadGameData\":\n                this.onLoadGameData(data);\n                break;\n              default:\n            }\n          } else if(event.data.type === \"onUpdateSystemVolume\") {\n            this.onUpdateSystemVolume(event.data.data);\n          }\n        } else if (event.data.source === \"wizlive\") {\n          if(event.data.type === \"tensorflowDemo\") {\n            onReceiveTFSignal(event.data.signal);\n          }\n        }\n      }\n    }\n    window.addEventListener(\"message\", this.gameEventHandler, false);`;\n\n  if (!isFromWizlab) {\n    gameScript = obfuscate(gameScript);\n  }\n\n  const loadingScreenStyle = `\n    #loadingScreen {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: none;\n      color: #fff;\n      background-color: #141821;\n    }\n    #loadingScreen_container {\n      position: absolute;\n      display: flex;\n      flex-direction: column;\n      top: 50%;\n      left: 50%;\n      width: 489px;\n      transform-origin: center;\n      transform: translate(-50%, -50%) scale(0.66) ;\n    }\n    @media screen and (max-width: 1024px) {\n      #loadingScreen_container {\n        transform: translate(-50%, -50%) scale(${\n          isHorizontalMode ? 0.48 : 0.78\n        });\n      }\n    }\n    @media screen and (max-width: 736px) {\n      #loadingScreen_container {\n        transform: translate(-50%, -50%) scale(${\n          isHorizontalMode ? 0.36 : 0.66\n        });\n      }\n    }\n    @media screen and (max-width: 480px) {\n      #loadingScreen_container {\n        transform: translate(-50%, -50%) scale(${\n          isHorizontalMode ? 0.24 : 0.42\n        });\n      }\n    }\n    @media screen and (max-width: 240px) {\n      #loadingScreen_container {\n        transform: translate(-50%, -50%) scale(${\n          isHorizontalMode ? 0.24 : 0.24\n        });\n      }\n    }\n    #loadingScreen_title {\n      position: relative;\n      margin: 0 auto;\n      width: 36%;\n    }\n    #loadingScreen_title_text {\n      display: block;\n      width: 100%;\n    }\n    #loadingScreen_title_dots {\n      position: absolute;\n      display: flex;\n      bottom: 0;\n      left: 100%;\n      margin-left: 3px;\n    }\n    .loadingScreen_title_dot {\n      margin-left: 1px;\n      width: 9px;\n      height: 9px;\n      opacity: 0;\n      animation: dotBlink 0.99s infinite;\n    }\n    .loadingScreen_title_dot:nth-of-type(1) {\n      animation-delay: 0s;\n    }\n    .loadingScreen_title_dot:nth-of-type(2) {\n      animation-delay: 0.33s;\n    }\n    .loadingScreen_title_dot:nth-of-type(3) {\n      animation-delay: 0.66s;\n    }\n    @keyframes dotBlink {\n      0%, 66%, 100% { opacity: 0; }\n      33% { opacity: 1; }\n    }\n    #loadingScreen_progress {\n      display: block;\n      margin-top: 24px;\n    }\n    #loadingScreen_progress_bar {\n      transition: 0.2s width;\n    }\n    #loadingScreen_progress_reflect {\n      transition: 0.2s width;\n    }\n  `;\n  const loadingScreenElement = `\n    <div id=\"loadingScreen\">\n      <div id=\"loadingScreen_container\">\n        <div id=\"loadingScreen_title\">\n          <img id=\"loadingScreen_title_text\" src=\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText.png\" alt=\"gamePreloadingText\" />\n          <div id=\"loadingScreen_title_dots\">\n            <img class=\"loadingScreen_title_dot\" src=\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText_dot.png\" alt=\"gamePreloadingText_dot1\" />\n            <img class=\"loadingScreen_title_dot\" src=\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText_dot.png\" alt=\"gamePreloadingText_dot2\" />\n            <img class=\"loadingScreen_title_dot\" src=\"https://d1tz4sj00zmgsb.cloudfront.net/gamePreloadingText_dot.png\" alt=\"gamePreloadingText_dot3\" />\n          </div>\n        </div>\n        <svg id=\"loadingScreen_progress\" xmlns=\"http://www.w3.org/2000/svg\" width=\"489\" height=\"45\" viewBox=\"0 0 489 45\">\n          <g fill=\"none\" fill-rule=\"evenodd\">\n            <g>\n              <g transform=\"translate(-378 -350) translate(378 350)\">\n                <rect width=\"489\" height=\"45\" fill=\"#000\" rx=\"22.5\"/>\n                <g>\n                    <rect id=\"loadingScreen_progress_bar\" width=\"48\" height=\"45\" fill=\"#06CC9F\" rx=\"22.5\"/>\n                    <rect id=\"loadingScreen_progress_reflect\" width=\"24\" height=\"21\" x=\"11\" y=\"4\" fill=\"#FFF\" fill-opacity=\".5\" rx=\"10.5\"/>\n                    <ellipse cx=\"13.888\" cy=\"10.23\" fill=\"#FFF\" rx=\"3.5\" ry=\"5.5\" transform=\"rotate(40 13.888 10.23)\"/>\n                </g>\n              </g>\n            </g>\n          </g>\n        </svg>\n      </div>\n    </div>\n  `;\n  const loadingScreenScript = `\n    function hideGameAndShowLoading() {\n      const loadingScreen = document.getElementById(\"loadingScreen\");\n      loadingScreen.style.display = \"flex\";\n    }\n    function hideLoadingAndShowGame() {\n      const loadingScreen = document.getElementById(\"loadingScreen\");\n      loadingScreen.remove();\n    }\n    function updateLoadingProgress(progress) {\n      const maxProgressWidth = 489;\n      const bar = document.getElementById(\"loadingScreen_progress_bar\");\n      const reflect = document.getElementById(\"loadingScreen_progress_reflect\");\n      if(progress >= 100) {\n        bar.style.width = maxProgressWidth + \"px\";\n        reflect.style.width = (maxProgressWidth - 24) + \"px\";\n      } else {\n        let progressWidth = maxProgressWidth * progress / 100;\n        if (progressWidth < 48) {\n          progressWidth = 48;\n        }\n        bar.style.width = progressWidth + \"px\";\n        reflect.style.width = (progressWidth - 24) + \"px\";\n      }\n    }\n  `;\n\n  const htmlDoc = `\n    <!DOCTYPE html>\n    <head>\n    <title>player</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=0\"/>\n    <script src=\"https://cdn.jsdelivr.net/npm/webfontloader@1.6.28/webfontloader.min.js\"></script>\n    <!-- <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find,Array.prototype.findIndex\"></script> -->\n    <script src=\"${baseURL}phaser2.js\"></script>\n    <script src=\"${baseURL}phaser2-joystick.js\"></script>\n\n    ${scriptSrc}\n    <style>\n    body{padding:0;margin:0;${\n      isFromWizlab\n        ? \"background-color:transparent;width:100%;height:100vh;position:relative;\"\n        : \"background-color:#000000;width:100%;height:100vh;position:relative;\"\n    }}\n    ${\n      screenMode === \"HORIZONTAL\"\n        ? \"#container{height:100%;text-align: center;} #gameWrapper{height:100%;display: inline-block;}\"\n        : \"#container{width:100%;height:auto;margin:0;position:absolute;top:50%;left:0;transform:translateY(-50%);}\"\n    }\n\n    .InputBoxContainer{\n      position: absolute;\n      top:0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: none;\n    }\n    .InputBoxInner--HORIZONTAL{\n      position: relative;\n      background-color: #393e4f;\n      width: 48%;\n      height: 35%;\n      border-radius: 18px;\n      text-align: center;\n      margin: 0 auto;\n      margin-top:10%;\n      padding:4% 4% 4% 4%;\n    }\n    .InputBoxInner--VERTICAL{\n      position: relative;\n      background-color: #393e4f;\n      width: 70%;\n      height: 20%;\n      border-radius: 18px;\n      text-align: center;\n      margin: 0 auto;\n      margin-top:60%;\n      padding:4% 4% 4% 4%;\n    }\n\n    .InputBox--title{\n      color: #ffffff;\n      width: 100%;\n      text-align: center;\n      font-weight: bold;\n      margin-top:0;\n      margin-bottom: 5%;\n      font-family:\"Source Sans Pro\", sans-serif;\n      font-size: 20px;\n    }\n    .InputBox--input{\n      box-sizing: border-box;\n      width: 100%;\n      line-height: 3;\n      padding-left: 3%;\n      font-size: 14px;\n      border-radius: 6px;\n      border: solid 1px #2f3443;\n      background-color: #272b37;\n      color: #fff;\n    }\n    .InputBox--input::placeholder{\n      color: #afafaf;\n    }\n    .InputBox--input:focus, .InputBoxBtn:focus{\n      outline: none;\n    }\n    .InputBoxbtn--HORIZONTAL.InputBoxBtn{\n      width:40%;\n      height: 23%;\n      border-radius: 25px;\n      margin-right:1.5%;\n      margin-left:1.5%;\n      cursor: pointer;\n      margin-top:7%;\n      font-size:13px;\n    }\n    .InputBoxbtn--VERTICAL.InputBoxBtn{\n      width:40%;\n      height: 25%;\n      border-radius: 25px;\n      margin-right:1.5%;\n      margin-left:1.5%;\n      cursor: pointer;\n      margin-top:10%;\n      font-size:18px;\n\n    }\n    .InputBoxBtn--cancel{\n      border-radius: 20px;\n      border: solid 1px #1db6ff;\n      background: transparent;\n      color: #1db6ff;\n    }\n    .InputBoxBtn--confirm{\n      background-color: #2c9ee0;\n      color:#ffffff;\n      border: none;\n    }\n\n  @media screen and (max-width: 768px) {\n    .InputBoxInner--HORIZONTAL{\n      width: 70%;\n      height: 60%;\n      margin-top:5%;\n    }\n    .InputBoxbtn--HORIZONTAL.InputBoxBtn{\n      height: 25%;\n      margin-top:7%;\n    }\n    .InputBox--input{\n      line-height: 1.7;\n      font-size: 16px;\n      line-height: 1.5;\n      width:90%;\n    }\n  }\n  ${loadingScreenStyle}\n  </style>\n  <link\n  href=\"https://fonts.googleapis.com/css?family=Black+And+White+Picture|Black+Han+Sans|Cute+Font|Do+Hyeon|Dokdo|East+Sea+Dokdo|Gaegu|Gamja+Flower|Gothic+A1|Gugi|Hi+Melody|Jua|Kirang+Haerang|Nanum+Brush+Script|Nanum+Gothic|Nanum+Myeongjo|Nanum+Pen+Script|Noto+Sans+KR|Noto+Serif+KR|Poor+Story|Song+Myung|Stylish|Sunflower:300|Yeon+Sung&amp;subset=korean\"\n    rel=\"stylesheet\"\n  ></link>\n    </head>\n    <body>\n    <div id=\"container\"><div id=\"gameWrapper\"></div></div>\n\n    <div class=\"InputBoxContainer\">\n      <div class=\"InputBoxInner--${screenMode}\">\n          <p class=\"InputBox--title\">타이틀</p>\n          <input\n            type=\"text\"\n            class=\"InputBox--input\"\n            name=\"InputBox--input\"\n            placeholder=\"입력하세요\"\n            onkeydown=\"onInputKeyDown();\"\n          />\n          <button class=\"InputBoxBtn InputBoxbtn--${screenMode} InputBoxBtn--cancel\" onclick=\"onclickInputCancel();\" >취소</button>\n          <button class=\"InputBoxBtn InputBoxbtn--${screenMode} InputBoxBtn--confirm\" onclick=\"onclickInputConfirm();\">확인</button>\n        </div>\n    </div>\n    ${loadingScreenElement}\n    <script>\n    ${loadingScreenScript}\n    ${gameScript}\n    </script></body></html>`;\n\n  return htmlDoc;\n}\n"]},"metadata":{},"sourceType":"module"}