{"ast":null,"code":"var $ = require('../internals/export');\n\nvar global = require('../internals/global');\n\nvar apply = require('../internals/function-apply');\n\nvar isCallable = require('../internals/is-callable');\n\nvar userAgent = require('../internals/engine-user-agent');\n\nvar arraySlice = require('../internals/array-slice');\n\nvar MSIE = /MSIE .\\./.test(userAgent); // <- dirty ie9- check\n\nvar Function = global.Function;\n\nvar wrap = function wrap(scheduler) {\n  return function (handler, timeout\n  /* , ...arguments */\n  ) {\n    var boundArgs = arguments.length > 2;\n    var args = boundArgs ? arraySlice(arguments, 2) : undefined;\n    return scheduler(boundArgs ? function () {\n      apply(isCallable(handler) ? handler : Function(handler), this, args);\n    } : handler, timeout);\n  };\n}; // ie9- setTimeout & setInterval additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\n\n\n$({\n  global: true,\n  bind: true,\n  forced: MSIE\n}, {\n  // `setTimeout` method\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout\n  setTimeout: wrap(global.setTimeout),\n  // `setInterval` method\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\n  setInterval: wrap(global.setInterval)\n});","map":null,"metadata":{},"sourceType":"script"}