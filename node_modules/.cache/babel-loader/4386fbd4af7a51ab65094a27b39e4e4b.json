{"ast":null,"code":"import _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/DreamEditor/Editor/TemplateEditor/ConditionsField/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport { TYPE, getSamplePayloadOf } from \"../../../../Builder/Component/DreamBuilder/ConditionChecker/condition\";\nimport Field from \"../../Field\";\nimport \"./index.scss\";\n\nvar ConditionsField = /*#__PURE__*/function (_Component) {\n  _inherits(ConditionsField, _Component);\n\n  var _super = _createSuper(ConditionsField);\n\n  function ConditionsField() {\n    var _this;\n\n    _classCallCheck(this, ConditionsField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onClickAdd = function (index) {\n      var conditions = _toConsumableArray(_this.conditions);\n\n      conditions.push(_this.defaultCondition);\n\n      _this.onChangeConditions(conditions);\n    };\n\n    _this.onClickDelete = function (index) {\n      var conditions = _toConsumableArray(_this.conditions);\n\n      conditions.splice(index, 1);\n\n      _this.onChangeConditions(conditions);\n    };\n\n    _this.onChangeCondition = function (index, key, value) {\n      var conditions = _toConsumableArray(_this.conditions);\n\n      conditions[index][key] = value;\n\n      if (key === \"type\") {\n        conditions[index].payload = getSamplePayloadOf(conditions[index].type);\n      }\n\n      _this.onChangeConditions(conditions);\n    };\n\n    _this.onChangeConditions = function (conditions) {\n      if (_this.props.onChange) {\n        _this.props.onChange(conditions);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ConditionsField, [{\n    key: \"conditions\",\n    get: function get() {\n      return this.props.value || [];\n    }\n  }, {\n    key: \"defaultCondition\",\n    get: function get() {\n      return {\n        type: TYPE.IS_PLAYING\n      };\n    }\n  }, {\n    key: \"isPayloadNecessaryFor\",\n    value: function isPayloadNecessaryFor(conditionType) {\n      return !!getSamplePayloadOf(conditionType);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Field.Base, Object.assign({}, this.props, {\n        type: \"conditions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"conditions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.conditions.map(function (condition, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"condition\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"condition_field condition_field-type\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          value: condition.type,\n          onChange: function onChange(e) {\n            _this2.onChangeCondition(index, \"type\", e.currentTarget.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, Object.keys(TYPE).map(function (key) {\n          return React.createElement(\"option\", {\n            key: key,\n            value: TYPE[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, _this2.props.intl.formatMessage({\n            id: \"CONDITION_\" + key\n          }));\n        }))), _this2.isPayloadNecessaryFor(condition.type) && React.createElement(\"div\", {\n          className: \"condition_field condition_field-payload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(JSONField, {\n          value: condition.payload,\n          onBlur: function onBlur(json) {\n            _this2.onChangeCondition(index, \"payload\", json);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"condition_delete\",\n          onClick: function onClick() {\n            _this2.onClickDelete(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"\\uC0AD\\uC81C\"));\n      }), React.createElement(\"div\", {\n        className: \"condition condition-add\",\n        onClick: this.onClickAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"+\")));\n    }\n  }]);\n\n  return ConditionsField;\n}(Component);\n\nfunction JSONField(props) {\n  return React.createElement(JSONInput, {\n    width: \"100%\",\n    height: \"100%\",\n    locale: locale,\n    placeholder: props.value,\n    theme: \"light_mitsuketa_tribute\",\n    confirmGood: false,\n    onBlur: function onBlur(e) {\n      var json = e.jsObject;\n\n      if (props.onBlur) {\n        props.onBlur(json);\n      }\n    },\n    style: {\n      body: {\n        fontSize: \"14px\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  });\n}\n\nexport default injectIntl(ConditionsField);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/DreamEditor/Editor/TemplateEditor/ConditionsField/index.js"],"names":["React","Component","injectIntl","JSONInput","locale","TYPE","getSamplePayloadOf","Field","ConditionsField","onClickAdd","index","conditions","push","defaultCondition","onChangeConditions","onClickDelete","splice","onChangeCondition","key","value","payload","type","props","onChange","IS_PLAYING","conditionType","map","condition","e","currentTarget","Object","keys","intl","formatMessage","id","isPayloadNecessaryFor","json","JSONField","jsObject","onBlur","body","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\"\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\nimport { TYPE, getSamplePayloadOf } from \"../../../../Builder/Component/DreamBuilder/ConditionChecker/condition\";\nimport Field from \"../../Field\";\nimport \"./index.scss\";\n\nclass ConditionsField extends Component {\n  \n  get conditions() {\n    return this.props.value || [];\n  }\n  get defaultCondition() {\n    return { type: TYPE.IS_PLAYING };\n  }\n  isPayloadNecessaryFor(conditionType) {\n    return !!getSamplePayloadOf(conditionType);\n  }\n\n  onClickAdd = index => {\n    const conditions = [...this.conditions];\n    conditions.push(this.defaultCondition);\n    this.onChangeConditions(conditions);\n  }\n  onClickDelete = index => {\n    const conditions = [...this.conditions];\n    conditions.splice(index, 1);\n    this.onChangeConditions(conditions);\n  }\n  onChangeCondition = (index, key, value) => {\n    const conditions = [...this.conditions];\n    conditions[index][key] = value;\n    if(key === \"type\") {\n      conditions[index].payload = getSamplePayloadOf(conditions[index].type);\n    }\n    this.onChangeConditions(conditions);\n  }\n  onChangeConditions = conditions => {\n    if(this.props.onChange) {\n      this.props.onChange(conditions);\n    }\n  }\n\n  render() {\n    return (\n      <Field.Base {...this.props} type=\"conditions\">\n        <div className=\"conditions\">\n          {this.conditions.map((condition, index) => \n            <div key={index} className=\"condition\">\n              <div className=\"condition_field condition_field-type\">\n                <select\n                  value={condition.type} \n                  onChange={e => {\n                    this.onChangeCondition(index, \"type\", e.currentTarget.value);\n                  }}\n                >\n                  {Object.keys(TYPE).map(key => \n                    <option key={key} value={TYPE[key]}>\n                      {this.props.intl.formatMessage({ id: \"CONDITION_\" + key })}\n                    </option>\n                  )}\n                </select>\n              </div>\n              {this.isPayloadNecessaryFor(condition.type) && (\n                <div className=\"condition_field condition_field-payload\">\n                  <JSONField \n                    value={condition.payload}\n                    onBlur={json => {\n                      this.onChangeCondition(index, \"payload\", json);\n                    }}\n                  />\n                </div>\n              )}\n              <div\n                className=\"condition_delete\"\n                onClick={() => {\n                  this.onClickDelete(index)\n                }}\n              >\n                삭제\n              </div>\n            </div>\n          )}\n          <div className=\"condition condition-add\" onClick={this.onClickAdd}>+</div>\n        </div>\n      </Field.Base>\n    );\n  }\n}\n\nfunction JSONField(props) {\n  return (\n    <JSONInput\n      width=\"100%\"\n      height=\"100%\"\n      locale={locale}\n      placeholder={props.value}\n      theme=\"light_mitsuketa_tribute\"\n      confirmGood={false}\n      onBlur={e => {\n        const json = e.jsObject;\n        if(props.onBlur) {\n          props.onBlur(json);\n        }\n      }}\n      style={{\n        body: {\n          fontSize: \"14px\"\n        }\n      }}\n    />\n  );\n}\n\nexport default injectIntl(ConditionsField);\n"]},"metadata":{},"sourceType":"module"}