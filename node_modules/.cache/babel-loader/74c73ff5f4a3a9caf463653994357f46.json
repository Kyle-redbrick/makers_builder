{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ACTION } from \"../../Util/Constant\";\nexport var selectScene = function selectScene(sceneId) {\n  return {\n    type: ACTION.SCENE_SELECT,\n    payload: {\n      sceneId: sceneId\n    }\n  };\n};\nexport var selectGameObject = function selectGameObject(sceneId, gameObjectId) {\n  return {\n    type: ACTION.GAMEOBJECT_SELECT,\n    payload: {\n      sceneId: sceneId,\n      gameObjectId: gameObjectId\n    }\n  };\n};\nexport var selectGizmoType = function selectGizmoType(gizmoType) {\n  return {\n    type: ACTION.SELECT_GIZMOTYPE,\n    payload: {\n      gizmoType: gizmoType\n    }\n  };\n};\nexport var playSound = function playSound(id, path, time) {\n  return {\n    type: ACTION.SOUND_PLAY,\n    payload: {\n      id: id,\n      path: path,\n      time: time,\n      isPlaying: true\n    }\n  };\n};\nexport var pauseSound = function pauseSound() {\n  return {\n    type: ACTION.SOUND_PAUSE,\n    payload: {\n      isPlaying: false\n    }\n  };\n};\nexport var stopSound = function stopSound() {\n  return {\n    type: ACTION.SOUND_STOP\n  };\n};\nvar initialState = {\n  currentSceneId: null,\n  currentGameObjectIds: {},\n  currentGizmoType: window.BabylonConstant ? window.BabylonConstant.GIZMO.POSITION : \"position\",\n  jukebox: {\n    isPlaying: false\n  }\n};\nvar defaultJukebox = {\n  isPlaying: false,\n  path: null,\n  type: null,\n  id: null,\n  listName: null\n};\n\nvar interaction = function interaction() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case ACTION.PROJECT_SET:\n    case ACTION.PROJECT_SET_TEMPLATE:\n      return projectSet(state, payload);\n\n    case ACTION.SCENE_SELECT:\n      return _objectSpread({}, state, {\n        currentSceneId: payload.sceneId\n      });\n\n    case ACTION.GAMEOBJECT_SELECT:\n      return gameObjectSelected(state, payload);\n\n    case ACTION.SELECT_GIZMOTYPE:\n      return _objectSpread({}, state, {\n        currentGizmoType: payload.gizmoType\n      });\n\n    case ACTION.SOUND_PLAY:\n    case ACTION.SOUND_PAUSE:\n      return jukeboxUpdated(state, payload);\n\n    case ACTION.SOUND_STOP:\n      return _objectSpread({}, state, {\n        jukebox: _objectSpread({}, defaultJukebox)\n      });\n\n    default:\n      return state;\n  }\n};\n\nfunction projectSet(prevState, payload) {\n  var project = payload.project;\n\n  if (!project.state || !project.state.interaction) {\n    return prevState;\n  }\n\n  var nextState = _objectSpread({}, prevState, project.state.interaction);\n\n  return nextState;\n}\n\nfunction gameObjectSelected(prevState, payload) {\n  var sceneId = payload.sceneId,\n      gameObjectId = payload.gameObjectId;\n\n  var newState = _objectSpread({}, prevState);\n\n  var currentGameObjectIds = _objectSpread({}, newState.currentGameObjectIds);\n\n  newState.currentGameObjectIds = currentGameObjectIds;\n  currentGameObjectIds[sceneId] = gameObjectId;\n  return newState;\n}\n\nfunction jukeboxUpdated(prevState, payload) {\n  var newState = _objectSpread({}, prevState);\n\n  var newJukebox = _objectSpread({}, prevState.jukebox, payload);\n\n  newState.jukebox = newJukebox;\n  return newState;\n}\n\nexport default interaction;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Store/Reducer/interaction.js"],"names":["ACTION","selectScene","sceneId","type","SCENE_SELECT","payload","selectGameObject","gameObjectId","GAMEOBJECT_SELECT","selectGizmoType","gizmoType","SELECT_GIZMOTYPE","playSound","id","path","time","SOUND_PLAY","isPlaying","pauseSound","SOUND_PAUSE","stopSound","SOUND_STOP","initialState","currentSceneId","currentGameObjectIds","currentGizmoType","window","BabylonConstant","GIZMO","POSITION","jukebox","defaultJukebox","listName","interaction","state","action","PROJECT_SET","PROJECT_SET_TEMPLATE","projectSet","gameObjectSelected","jukeboxUpdated","prevState","project","nextState","newState","newJukebox"],"mappings":"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","sourcesContent":["import { ACTION } from \"../../Util/Constant\";\n\nexport const selectScene = sceneId => ({\n  type: ACTION.SCENE_SELECT,\n  payload: { sceneId }\n});\n\nexport const selectGameObject = (sceneId, gameObjectId) => ({\n  type: ACTION.GAMEOBJECT_SELECT,\n  payload: { sceneId, gameObjectId }\n});\n\nexport const selectGizmoType = gizmoType => ({\n  type: ACTION.SELECT_GIZMOTYPE,\n  payload: { gizmoType }\n});\n\nexport const playSound = (id, path, time) => ({\n  type: ACTION.SOUND_PLAY,\n  payload: { id, path, time, isPlaying: true }\n});\n\nexport const pauseSound = () => ({\n  type: ACTION.SOUND_PAUSE,\n  payload: { isPlaying: false }\n});\n\nexport const stopSound = () => ({\n  type: ACTION.SOUND_STOP\n});\n\nconst initialState = {\n  currentSceneId: null,\n  currentGameObjectIds: {},\n  currentGizmoType: window.BabylonConstant\n    ? window.BabylonConstant.GIZMO.POSITION\n    : \"position\",\n  jukebox: { isPlaying: false }\n};\n\nconst defaultJukebox = {\n  isPlaying: false,\n  path: null,\n  type: null,\n  id: null,\n  listName: null\n};\n\nconst interaction = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ACTION.PROJECT_SET:\n    case ACTION.PROJECT_SET_TEMPLATE:\n      return projectSet(state, payload);\n    case ACTION.SCENE_SELECT:\n      return { ...state, currentSceneId: payload.sceneId };\n    case ACTION.GAMEOBJECT_SELECT:\n      return gameObjectSelected(state, payload);\n    case ACTION.SELECT_GIZMOTYPE:\n      return { ...state, currentGizmoType: payload.gizmoType };\n    case ACTION.SOUND_PLAY:\n    case ACTION.SOUND_PAUSE:\n      return jukeboxUpdated(state, payload);\n    case ACTION.SOUND_STOP:\n      return { ...state, jukebox: { ...defaultJukebox } };\n    default:\n      return state;\n  }\n};\n\nfunction projectSet(prevState, payload) {\n  const { project } = payload;\n  if (!project.state || !project.state.interaction) {\n    return prevState;\n  }\n  const nextState = { ...prevState, ...project.state.interaction };\n  return nextState;\n}\n\nfunction gameObjectSelected(prevState, payload) {\n  const { sceneId, gameObjectId } = payload;\n  const newState = { ...prevState };\n  const currentGameObjectIds = { ...newState.currentGameObjectIds };\n  newState.currentGameObjectIds = currentGameObjectIds;\n  currentGameObjectIds[sceneId] = gameObjectId;\n  return newState;\n}\n\nfunction jukeboxUpdated(prevState, payload) {\n  const newState = { ...prevState };\n  const newJukebox = { ...prevState.jukebox, ...payload };\n  newState.jukebox = newJukebox;\n  return newState;\n}\n\nexport default interaction;\n"]},"metadata":{},"sourceType":"module"}