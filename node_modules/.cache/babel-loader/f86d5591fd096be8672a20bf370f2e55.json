{"ast":null,"code":"import _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiLive/Container.js\";\nimport React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { RtcTokenBuilder, RtcRole } from \"agora-access-token\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport { URL } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport RndWrapper from \"../../utils/RndWrapper\";\nimport FreeTrialSurveyPopup from \"../Live/Component/FreeTrialSurveyPopup\";\nimport { socketUtil } from \"../Socket/Container\";\nimport View from \"./View\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onExitLecture = function () {\n      socketUtil.socket.on(\"lectureExit\", function (data) {\n        if (!_this.props.isTutor) {\n          _this.unpublish();\n\n          _this.setState({\n            isEnd: true\n          });\n\n          _this.showFeedbackAlert();\n        }\n      });\n    };\n\n    _this.onChangeAudio = function () {\n      socketUtil.socket.on(\"audioChanged\", function (data) {\n        if (!_this.localTracks.audioTrack) return;\n        var email = data.email,\n            audioEnabled = data.audioEnabled;\n\n        if (email === _this.props.email) {\n          _this.localTracks.audioTrack.setEnabled(audioEnabled);\n        }\n\n        _this.setState({\n          attendees: _this.state.attendees.map(function (attendee) {\n            if (attendee.email === email) {\n              return _objectSpread({}, attendee, {\n                audioEnabled: audioEnabled\n              });\n            } else {\n              return attendee;\n            }\n          })\n        });\n      });\n    };\n\n    _this.agoraSetup = function () {\n      _this.agoraClient = AgoraRTC.createClient({\n        mode: \"rtc\",\n        codec: \"vp8\"\n      });\n      _this.localTracks = {\n        videoTrack: null,\n        audioTrack: null\n      };\n      _this.agoraOptions = {\n        appid: \"60dcb9c3c74b44b6b0b85aad121d4b3b\",\n        appCertificate: \"fa4e9a552b6c47e3a434f136539cd7d4\",\n        channel: _this.myroom,\n        uid: _this.props.email + \":\" + _this.props.pId,\n        token: \"\"\n      };\n      _this.agoraOptions.token = RtcTokenBuilder.buildTokenWithUid(_this.agoraOptions.appid, _this.agoraOptions.appCertificate, _this.agoraOptions.channel, _this.agoraOptions.uid, RtcRole.PUBLISHER, 0);\n\n      _this.agoraJoin();\n    };\n\n    _this.agoraJoin =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.agoraClient.on(\"connection-state-change\", _this.handleUserState);\n\n              _this.agoraClient.on(\"user-joined\", function (user) {\n                return _this.addConnectedUser(_this.splitUid(user));\n              });\n\n              _this.agoraClient.on(\"user-published\", _this.handleUserPublished);\n\n              _this.agoraClient.on(\"user-unpublished\", _this.handleUserUnpublished);\n\n              _context.next = 6;\n              return _this.agoraClient.join(_this.agoraOptions.appid, _this.agoraOptions.channel, _this.agoraOptions.token, _this.agoraOptions.uid);\n\n            case 6:\n              _context.next = 8;\n              return AgoraRTC.createMicrophoneAudioTrack();\n\n            case 8:\n              _this.localTracks.audioTrack = _context.sent;\n              _context.next = 11;\n              return AgoraRTC.createCameraVideoTrack();\n\n            case 11:\n              _this.localTracks.videoTrack = _context.sent;\n\n              _this.playLocalVideo();\n\n              _context.next = 15;\n              return _this.agoraClient.publish(Object.values(_this.localTracks));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleUserState = function (currentState, revState, reason) {\n      if (currentState === 'CONNECTED') {\n        _this.setState({\n          roomStatus: \"ready\"\n        });\n      }\n    };\n\n    _this.handleUserPublished =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(user, mediaType) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.agoraClient.subscribe(user, mediaType);\n\n              case 2:\n                if (mediaType === 'video') {\n                  _this.playRemoteVideo(user);\n                } else {\n                  user.audioTrack.play();\n                }\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleUserUnpublished = function (user) {\n      console.log('unpublish', user); // this.localTracks.videoTrack.close();\n    };\n\n    _this.addConnectedUser = function (_ref3) {\n      var email = _ref3.email,\n          pId = _ref3.pId,\n          _ref3$name = _ref3.name,\n          name = _ref3$name === void 0 ? _this.findUsername(email) : _ref3$name;\n\n      if (_this.isMonitor(email)) {\n        return;\n      }\n\n      if (_this.isAlreadyConnected(email)) {\n        return;\n      }\n\n      if (email === _this.props.tutorEmail) {\n        _this.props.setTutor({\n          email: email,\n          pId: pId,\n          name: name\n        });\n      } else {\n        _this.props.setStudents({\n          email: email,\n          pId: pId,\n          name: name\n        });\n      }\n    };\n\n    _this.isMonitor = function (email) {\n      return _this.state.attendees.findIndex(function (user) {\n        return user.email === email;\n      }) < 0 ? true : false;\n    };\n\n    _this.isAlreadyConnected = function (email) {\n      return _this.props.connectedUsers.some(function (user) {\n        return user.email === email;\n      }) ? true : false;\n    };\n\n    _this.splitUid = function (user) {\n      var _user$uid$split = user.uid.split(\":\"),\n          _user$uid$split2 = _slicedToArray(_user$uid$split, 2),\n          email = _user$uid$split2[0],\n          pId = _user$uid$split2[1];\n\n      return {\n        email: email,\n        pId: pId\n      };\n    };\n\n    _this.findUsername = function (email) {\n      // fix code break that happens when a monitor user enters\n      if (_this.state.attendees.find(function (user) {\n        return user.email === email;\n      }) == undefined) {\n        return \"\";\n      } //\n      else {\n          var _this$state$attendees = _this.state.attendees.find(function (user) {\n            return user.email === email;\n          }),\n              name = _this$state$attendees.name;\n\n          return name;\n        }\n    };\n\n    _this.unpublish = function () {\n      _this.agoraClient.unpublish();\n\n      _this.agoraClient.remoteUsers.forEach(function (user) {\n        return _this.agoraClient.unsubscribe(user);\n      });\n    };\n\n    _this.refreshVideos = function () {\n      _this.setState({\n        roomStatus: \"connected\"\n      });\n    };\n\n    _this.handleVoiceToggleButton = function (email, audioEnabled) {\n      if (!_this.props.isTutor) return;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.state.attendees[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var user = _step.value;\n\n          if (user.email === email) {\n            _this.setState(function (prev) {\n              return {\n                attendees: prev.attendees.map(function (attendee) {\n                  if (attendee.email === email) {\n                    return _objectSpread({}, attendee, {\n                      audioEnabled: audioEnabled\n                    });\n                  } else {\n                    return attendee;\n                  }\n                })\n              };\n            }, function () {\n              socketUtil.sendSocketEvent(\"audioChanged\", {\n                roomId: _this.props.roomId,\n                email: email,\n                audioEnabled: !audioEnabled\n              });\n            });\n\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n\n    _this.handleExitBtn = function () {\n      _this.showExitConfirmAlert();\n    };\n\n    _this.showExitConfirmAlert = function () {\n      var callback = function callback() {\n        request.setComplete1v4Reservation(); // this.sendData(this.DATA_TYPE_EXIT, null);\n\n        socketUtil.sendSocketEvent(\"lectureExit\", {\n          roomId: _this.props.roomId\n        });\n\n        _this.unpublish();\n\n        _this.setState({\n          isEnd: true\n        });\n\n        _this.showExitAlert();\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_CONFIRM\",\n        confirmButtonNameId: \"ID_WIZLIVE_EXIT\",\n        cancelButtonNameId: \"ID_WIZLIVE_CANCEL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }));\n    };\n\n    _this.showExitAlert = function () {\n      var callback = function callback() {\n        var lectureGroupId = _this.state.attendees[0].lectureGroupId;\n        var url = \"\".concat(URL.WIZLIVE, \"/tutor/myGroupFeedback/\").concat(lectureGroupId, \"/\").concat(_this.props.reservationId);\n        window.open(url, \"_blank\");\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_COMPLETE\",\n        subtitleId: \"ID_WIZLIVE_FEEDBACK_REQUEST\",\n        confirmButtonNameId: \"ID_WIZLIVE_FEEDBACK_GO\",\n        cancelButtonNameId: \"ID_WIZLIVE_FEEDBACK_NEXTTIME\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleFreeTrialSurvey = function (isOn) {\n      _this.setState({\n        isShowSurveyPopup: isOn\n      });\n    };\n\n    _this.showFeedbackAlert = function () {\n      _this.handleFreeTrialSurvey(true);\n    };\n\n    _this.showFeedbackResultAlert = function (success) {\n      var title = success ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\" : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n      var subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n      showPopUp(React.createElement(Popup.OneButton, {\n        intl: _this.props.intl,\n        titleId: title,\n        subtitleId: subtitle,\n        buttonNameId: \"ID_WIZLIVE_COMFIRM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }));\n    };\n\n    _this.myroom = _this.props.roomId.toString();\n    _this.tutorVideoRef = createRef();\n    _this.student1VideoRef = createRef();\n    _this.student2VideoRef = createRef();\n    _this.student3VideoRef = createRef();\n    _this.student4VideoRef = createRef();\n    _this.state = {\n      attendees: [],\n      isShowSurveyPopup: false,\n      isEnd: false,\n      roomStatus: \"connecting\"\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // 수업 명단\n      this.getReservationStudents();\n      this.addConnectedUser({\n        email: this.props.email,\n        pId: this.props.pId,\n        name: this.props.name\n      }); // this.setup();\n\n      this.agoraSetup(); // 입장 시간 및 pId 업데이트\n\n      this.updateWizLiveEntrance(); // 수업 퇴장\n\n      this.onExitLecture(); // 오디오 on/off\n\n      this.onChangeAudio();\n    }\n  }, {\n    key: \"getReservationStudents\",\n    value: function () {\n      var _getReservationStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var attendees, tutor;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return request.getReservationStudents(this.props.roomId).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                attendees = _context3.sent;\n\n                if (attendees.length) {\n                  this.setState({\n                    attendees: attendees.map(function (attendee) {\n                      return _objectSpread({}, attendee, {\n                        audioEnabled: true\n                      });\n                    })\n                  });\n                  tutor = attendees[attendees.length - 1];\n                  this.tutorName = tutor.name;\n                }\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function getReservationStudents() {\n        return _getReservationStudents.apply(this, arguments);\n      }\n\n      return getReservationStudents;\n    }()\n  }, {\n    key: \"updateWizLiveEntrance\",\n    value: function () {\n      var _updateWizLiveEntrance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _this$props, tutorEmail, email, reservationId, pId, roomId, json;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this$props = this.props, tutorEmail = _this$props.tutorEmail, email = _this$props.email, reservationId = _this$props.reservationId, pId = _this$props.pId, roomId = _this$props.roomId;\n                _context4.prev = 1;\n                _context4.next = 4;\n                return request.postWizLive1v4Entrance({\n                  id: reservationId,\n                  isTutor: email === tutorEmail,\n                  pId: pId,\n                  roomId: roomId\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 4:\n                json = _context4.sent;\n                if (!json.success) console.error(json.reason);\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.error(_context4.t0);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 8]]);\n      }));\n\n      function updateWizLiveEntrance() {\n        return _updateWizLiveEntrance.apply(this, arguments);\n      }\n\n      return updateWizLiveEntrance;\n    }()\n  }, {\n    key: \"playLocalVideo\",\n    value: function playLocalVideo() {\n      if (this.props.isTutor) {\n        this.localTracks.videoTrack.play(this.videoRefs[this.videoRefs.length - 1].current);\n      } else {\n        this.localTracks.videoTrack.play(this.videoRefs[this.findIndex(this.props.email)].current);\n      }\n    }\n  }, {\n    key: \"playRemoteVideo\",\n    value: function playRemoteVideo(user) {\n      var _this$splitUid = this.splitUid(user),\n          email = _this$splitUid.email;\n\n      if (email === this.props.tutorEmail) {\n        user.videoTrack.play(this.videoRefs[this.videoRefs.length - 1].current);\n      } else {\n        user.videoTrack.play(this.videoRefs[this.findIndex(email)].current);\n      }\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(email) {\n      return this.state.attendees.findIndex(function (user) {\n        return user.email === email;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isTutor = _this$props2.isTutor,\n          handleChangeZIndex = _this$props2.handleChangeZIndex,\n          zIndex = _this$props2.zIndex,\n          email = _this$props2.email,\n          tutorEmail = _this$props2.tutorEmail,\n          reservationId = _this$props2.reservationId,\n          isFreeTrial = _this$props2.isFreeTrial;\n      var _this$state = this.state,\n          students = _this$state.students,\n          audioEnabled = _this$state.audioEnabled,\n          isShowSurveyPopup = _this$state.isShowSurveyPopup,\n          attendees = _this$state.attendees,\n          roomStatus = _this$state.roomStatus;\n      var tutorName = this.tutorName,\n          handleVoiceToggleButton = this.handleVoiceToggleButton,\n          handleExitBtn = this.handleExitBtn,\n          handleFreeTrialSurvey = this.handleFreeTrialSurvey,\n          refreshVideos = this.refreshVideos;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(RndWrapper, {\n        id: \"live\",\n        style: {\n          zIndex: zIndex\n        },\n        defaultWidth: 300,\n        defaultHeight: 300 * 9 / 16 * 2 + 35,\n        defaultX: document.body.clientWidth - 365,\n        defaultY: 0,\n        minWidth: 300,\n        minHeight: 300 * 9 / 16 * 2 + 35,\n        lockAspectRatio: 16 / 9 / 2,\n        lockAspectRatioExtraHeight: 35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(View, {\n        tutorName: tutorName,\n        students: students,\n        isTutor: isTutor,\n        handleChangeZIndex: handleChangeZIndex,\n        attendees: attendees,\n        email: email,\n        handleVoiceToggleButton: handleVoiceToggleButton,\n        audioEnabled: audioEnabled,\n        tutorEmail: tutorEmail,\n        handleExitBtn: handleExitBtn,\n        refreshVideos: refreshVideos,\n        videoRefs: this.videoRefs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      })), isShowSurveyPopup && React.createElement(FreeTrialSurveyPopup, {\n        reservationId: reservationId,\n        tutorEmail: tutorEmail,\n        handleFreeTrialSurvey: handleFreeTrialSurvey,\n        isFreeTrial: isFreeTrial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), isShowSurveyPopup && React.createElement(FreeTrialSurveyPopup, {\n        reservationId: reservationId,\n        tutorEmail: tutorEmail,\n        handleFreeTrialSurvey: handleFreeTrialSurvey,\n        isFreeTrial: isFreeTrial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), roomStatus !== \"connected\" && React.createElement(\"div\", {\n        className: \"roomStatusPopup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, roomStatus === \"connecting\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"\\uC811\\uC18D \\uC911\\uC785\\uB2C8\\uB2E4..\"), React.createElement(\"div\", {\n        className: \"roomStatusPopupProgress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      })), roomStatus === \"ready\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"\\uC811\\uC18D \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"), React.createElement(\"div\", {\n        className: \"roomStatusPopupBtn\",\n        onClick: refreshVideos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791\\uD558\\uAE30\")))));\n    }\n  }, {\n    key: \"videoRefs\",\n    get: function get() {\n      return [this.student1VideoRef, this.student2VideoRef, this.student3VideoRef, this.student4VideoRef, this.tutorVideoRef];\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    connectedUsers: [].concat(_toConsumableArray(state.tabs.students), _toConsumableArray(state.tabs.tutor))\n  };\n}, {\n  setStudents: tabActions.setStudents,\n  setTutor: tabActions.setTutor\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiLive/Container.js"],"names":["React","Component","createRef","connect","AgoraRTC","RtcTokenBuilder","RtcRole","Popup","showPopUp","URL","request","tabActions","RndWrapper","FreeTrialSurveyPopup","socketUtil","View","Container","props","onExitLecture","socket","on","data","isTutor","unpublish","setState","isEnd","showFeedbackAlert","onChangeAudio","localTracks","audioTrack","email","audioEnabled","setEnabled","attendees","state","map","attendee","agoraSetup","agoraClient","createClient","mode","codec","videoTrack","agoraOptions","appid","appCertificate","channel","myroom","uid","pId","token","buildTokenWithUid","PUBLISHER","agoraJoin","handleUserState","user","addConnectedUser","splitUid","handleUserPublished","handleUserUnpublished","join","createMicrophoneAudioTrack","createCameraVideoTrack","playLocalVideo","publish","Object","values","currentState","revState","reason","roomStatus","mediaType","subscribe","playRemoteVideo","play","console","log","name","findUsername","isMonitor","isAlreadyConnected","tutorEmail","setTutor","setStudents","findIndex","connectedUsers","some","split","find","undefined","remoteUsers","forEach","unsubscribe","refreshVideos","handleVoiceToggleButton","prev","sendSocketEvent","roomId","handleExitBtn","showExitConfirmAlert","callback","setComplete1v4Reservation","showExitAlert","intl","lectureGroupId","url","WIZLIVE","reservationId","window","open","handleFreeTrialSurvey","isOn","isShowSurveyPopup","showFeedbackResultAlert","success","title","subtitle","toString","tutorVideoRef","student1VideoRef","student2VideoRef","student3VideoRef","student4VideoRef","getReservationStudents","updateWizLiveEntrance","then","res","json","length","tutor","tutorName","error","postWizLive1v4Entrance","id","videoRefs","current","handleChangeZIndex","zIndex","isFreeTrial","students","document","body","clientWidth","tabs"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { RtcTokenBuilder, RtcRole } from \"agora-access-token\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport { URL } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport RndWrapper from \"../../utils/RndWrapper\";\nimport FreeTrialSurveyPopup from \"../Live/Component/FreeTrialSurveyPopup\";\nimport { socketUtil } from \"../Socket/Container\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.myroom = this.props.roomId.toString();\n    this.tutorVideoRef = createRef();\n    this.student1VideoRef = createRef();\n    this.student2VideoRef = createRef();\n    this.student3VideoRef = createRef();\n    this.student4VideoRef = createRef();\n    this.state = {\n      attendees: [],\n      isShowSurveyPopup: false,\n      isEnd: false,\n      roomStatus: \"connecting\"\n    };\n  }\n\n  get videoRefs() {\n    return [this.student1VideoRef, this.student2VideoRef, this.student3VideoRef, this.student4VideoRef, this.tutorVideoRef];\n  }\n\n  componentDidMount() {\n    // 수업 명단\n    this.getReservationStudents();\n\n    this.addConnectedUser({ email: this.props.email, pId: this.props.pId, name: this.props.name });\n\n    // this.setup();\n    this.agoraSetup();\n\n    // 입장 시간 및 pId 업데이트\n    this.updateWizLiveEntrance();\n\n    // 수업 퇴장\n    this.onExitLecture();\n    // 오디오 on/off\n    this.onChangeAudio();\n  }\n\n  onExitLecture = () => {\n    socketUtil.socket.on(\"lectureExit\", data => {\n      if (!this.props.isTutor) {\n        this.unpublish();\n        this.setState({ isEnd: true });\n        this.showFeedbackAlert();\n      }\n    });\n  }\n\n  onChangeAudio = () => {\n    socketUtil.socket.on(\"audioChanged\", data => {\n      if (!this.localTracks.audioTrack) return;\n\n      const { email, audioEnabled } = data;\n      if (email === this.props.email) {\n        this.localTracks.audioTrack.setEnabled(audioEnabled);\n      }\n\n      this.setState({\n        attendees: this.state.attendees.map(attendee => {\n          if (attendee.email === email) {\n            return { ...attendee, audioEnabled };\n          } else {\n            return attendee;\n          }\n        })\n      });\n    });\n  }\n\n  async getReservationStudents() {\n    try {\n      const attendees = await request\n        .getReservationStudents(this.props.roomId)\n        .then(res => res.json());\n\n      if (attendees.length) {\n        this.setState({\n          attendees: attendees.map(attendee => ({\n            ...attendee,\n            audioEnabled: true\n          }))\n        });\n\n        const tutor = attendees[attendees.length - 1];\n        this.tutorName = tutor.name;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async updateWizLiveEntrance() {\n    const { tutorEmail, email, reservationId, pId, roomId } = this.props;\n\n    try {\n      const json = await request\n        .postWizLive1v4Entrance({\n          id: reservationId,\n          isTutor: email === tutorEmail,\n          pId,\n          roomId\n        })\n        .then(res => res.json());\n\n      if (!json.success) console.error(json.reason);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  agoraSetup = () => {\n    this.agoraClient = AgoraRTC.createClient({ mode: \"rtc\", codec: \"vp8\" });\n    this.localTracks = {\n      videoTrack: null,\n      audioTrack: null\n    };\n\n    this.agoraOptions = {\n      appid: \"60dcb9c3c74b44b6b0b85aad121d4b3b\",\n      appCertificate: \"fa4e9a552b6c47e3a434f136539cd7d4\",\n      channel: this.myroom,\n      uid: this.props.email + \":\" + this.props.pId,\n      token: \"\"\n    };\n\n    this.agoraOptions.token = RtcTokenBuilder.buildTokenWithUid(\n      this.agoraOptions.appid,\n      this.agoraOptions.appCertificate,\n      this.agoraOptions.channel, \n      this.agoraOptions.uid,\n      RtcRole.PUBLISHER,\n      0\n    );\n\n    this.agoraJoin();\n  }\n\n  agoraJoin = async () => {\n    this.agoraClient.on(\"connection-state-change\", this.handleUserState);\n    this.agoraClient.on(\"user-joined\", user => this.addConnectedUser(this.splitUid(user)));\n    this.agoraClient.on(\"user-published\", this.handleUserPublished);\n    this.agoraClient.on(\"user-unpublished\", this.handleUserUnpublished);\n\n    await this.agoraClient.join(\n      this.agoraOptions.appid, \n      this.agoraOptions.channel,\n      this.agoraOptions.token, \n      this.agoraOptions.uid\n    );\n    this.localTracks.audioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n    this.localTracks.videoTrack = await AgoraRTC.createCameraVideoTrack();\n\n    this.playLocalVideo();\n\n    await this.agoraClient.publish(Object.values(this.localTracks));\n  }\n\n  handleUserState = (currentState, revState, reason) => {\n    if (currentState === 'CONNECTED') {\n      this.setState({ roomStatus: \"ready\" });\n    }\n  }\n\n  handleUserPublished = async (user, mediaType) => {\n    await this.agoraClient.subscribe(user, mediaType);\n    if (mediaType === 'video') {\n      this.playRemoteVideo(user);\n    } else {\n      user.audioTrack.play();\n    }\n  }\n\n  handleUserUnpublished = user => {\n    console.log('unpublish', user);\n    // this.localTracks.videoTrack.close();\n  }\n\n  playLocalVideo() {\n    if (this.props.isTutor) {\n      this.localTracks.videoTrack.play(this.videoRefs[this.videoRefs.length -1].current);\n    } else {\n      this.localTracks.videoTrack.play(this.videoRefs[this.findIndex(this.props.email)].current);\n    }\n  }\n\n  playRemoteVideo(user) {\n    const { email } = this.splitUid(user);\n    if (email === this.props.tutorEmail) {\n      user.videoTrack.play(this.videoRefs[this.videoRefs.length -1].current);\n    } else {\n      user.videoTrack.play(this.videoRefs[this.findIndex(email)].current);\n    }\n  }\n\n  findIndex(email) {\n    return this.state.attendees.findIndex(user => user.email === email);\n  }\n\n  addConnectedUser = ({ email, pId, name = this.findUsername(email) }) => {\n    if (this.isMonitor(email)) {\n      return;\n    }\n\n    if (this.isAlreadyConnected(email)) {\n      return;\n    }\n\n    if (email === this.props.tutorEmail) {\n      this.props.setTutor({ email, pId, name });\n    } else {\n      this.props.setStudents({ email, pId, name });\n    }\n  }\n\n  isMonitor = email => {\n    return this.state.attendees.findIndex(user => user.email === email) < 0 ? true : false;\n  }\n\n  isAlreadyConnected = email => {\n    return this.props.connectedUsers.some(user => user.email === email) ? true : false;\n  }\n\n  splitUid = user => {\n    const [email, pId] = user.uid.split(\":\");\n    return { email, pId };\n  }\n\n  findUsername = email => {\n    // fix code break that happens when a monitor user enters\n    if(this.state.attendees.find(user => user.email === email) == undefined) {\n      return \"\";\n    }\n    //\n    else {\n      const { name } = this.state.attendees.find(user => user.email === email);\n      return name;\n    }\n  }\n\n  unpublish = () => {\n    this.agoraClient.unpublish();\n    this.agoraClient.remoteUsers.forEach(user => this.agoraClient.unsubscribe(user));\n  };\n\n  refreshVideos = () => {\n    this.setState({ roomStatus: \"connected\" });\n  };\n\n  // 튜터만 마이크 제어\n  handleVoiceToggleButton = (email, audioEnabled) => {\n    if (!this.props.isTutor) return;\n\n    for (let user of this.state.attendees) {\n      if (user.email === email) {\n        this.setState(prev => ({\n          attendees: prev.attendees.map(attendee => {\n            if (attendee.email === email) {\n              return {...attendee, audioEnabled};\n            } else {\n              return attendee;\n            }\n          })\n        }), () => {\n          socketUtil.sendSocketEvent(\"audioChanged\", {\n            roomId: this.props.roomId,\n            email,\n            audioEnabled: !audioEnabled\n          })\n        })\n        break;\n      }\n    }\n  };\n\n  handleExitBtn = () => {\n    this.showExitConfirmAlert();\n  };\n\n  showExitConfirmAlert = () => {\n    const callback = () => {\n      request.setComplete1v4Reservation();\n      // this.sendData(this.DATA_TYPE_EXIT, null);\n      socketUtil.sendSocketEvent(\"lectureExit\", {\n        roomId: this.props.roomId\n      });\n\n      this.unpublish();\n      this.setState({ isEnd: true });\n      this.showExitAlert();\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_CONFIRM\"\n        confirmButtonNameId=\"ID_WIZLIVE_EXIT\"\n        cancelButtonNameId=\"ID_WIZLIVE_CANCEL\"\n      />\n    );\n  };\n\n  showExitAlert = () => {\n    const callback = () => {\n      const lectureGroupId = this.state.attendees[0].lectureGroupId\n      const url = `${URL.WIZLIVE}/tutor/myGroupFeedback/${lectureGroupId}/${this.props.reservationId}`;\n      window.open(url, \"_blank\");\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_COMPLETE\"\n        subtitleId=\"ID_WIZLIVE_FEEDBACK_REQUEST\"\n        confirmButtonNameId=\"ID_WIZLIVE_FEEDBACK_GO\"\n        cancelButtonNameId=\"ID_WIZLIVE_FEEDBACK_NEXTTIME\"\n      />\n    );\n  };\n\n  handleFreeTrialSurvey = isOn => {\n    this.setState({ isShowSurveyPopup: isOn });\n  };\n\n  showFeedbackAlert = () => {\n    this.handleFreeTrialSurvey(true);\n  };\n\n  showFeedbackResultAlert = success => {\n    let title = success\n      ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\"\n      : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n    let subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n    showPopUp(\n      <Popup.OneButton\n        intl={this.props.intl}\n        titleId={title}\n        subtitleId={subtitle}\n        buttonNameId=\"ID_WIZLIVE_COMFIRM\"\n      />\n    );\n  };\n\n  render() {\n    const {\n      isTutor,\n      handleChangeZIndex,\n      zIndex,\n      email,\n      tutorEmail,\n      reservationId,\n      isFreeTrial\n    } = this.props;\n    const {\n      students,\n      audioEnabled,\n      isShowSurveyPopup,\n      attendees,\n      roomStatus\n    } = this.state;\n    const {\n      tutorName,\n      handleVoiceToggleButton,\n      handleExitBtn,\n      handleFreeTrialSurvey,\n      refreshVideos\n    } = this;\n\n    return (\n      <React.Fragment>\n        <RndWrapper\n          id=\"live\"\n          style={{ zIndex }}\n          defaultWidth={300}\n          defaultHeight={((300 * 9) / 16) * 2 + 35}\n          defaultX={document.body.clientWidth - 365}\n          defaultY={0}\n          minWidth={300}\n          minHeight={((300 * 9) / 16) * 2 + 35}\n          lockAspectRatio={16 / 9 / 2}\n          lockAspectRatioExtraHeight={35}\n        >\n          <View\n            tutorName={tutorName}\n            students={students}\n            isTutor={isTutor}\n            handleChangeZIndex={handleChangeZIndex}\n            attendees={attendees}\n            email={email}\n            handleVoiceToggleButton={handleVoiceToggleButton}\n            audioEnabled={audioEnabled}\n            tutorEmail={tutorEmail}\n            handleExitBtn={handleExitBtn}\n            refreshVideos={refreshVideos}\n            videoRefs={this.videoRefs}\n          />\n        </RndWrapper>\n        {isShowSurveyPopup && (\n          <FreeTrialSurveyPopup\n            reservationId={reservationId}\n            tutorEmail={tutorEmail}\n            handleFreeTrialSurvey={handleFreeTrialSurvey}\n            isFreeTrial={isFreeTrial}\n          />\n        )}\n        {isShowSurveyPopup && (\n          <FreeTrialSurveyPopup\n            reservationId={reservationId}\n            tutorEmail={tutorEmail}\n            handleFreeTrialSurvey={handleFreeTrialSurvey}\n            isFreeTrial={isFreeTrial}\n          />\n        )}\n        {roomStatus !== \"connected\" && (\n          <div className=\"roomStatusPopup\">\n            <div className=\"roomStatusPopupContent\">\n              {roomStatus === \"connecting\" && (\n                <React.Fragment>\n                  <div className=\"roomStatusPopupMessage\">접속 중입니다..</div>\n                  <div className=\"roomStatusPopupProgress\" />\n                </React.Fragment>\n              )}\n              {roomStatus === \"ready\" && (\n                <React.Fragment>\n                  <div className=\"roomStatusPopupMessage\">접속 되었습니다.</div>\n                  <div className=\"roomStatusPopupBtn\" onClick={refreshVideos}>\n                    시작하기\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    connectedUsers: [...state.tabs.students, ...state.tabs.tutor]\n  }),\n  {\n    setStudents: tabActions.setStudents,\n    setTutor: tabActions.setTutor\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}