{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Python/Components/SceneComponents/MessageComponents/Narration/index.js\";\nimport React from \"react\";\nimport PopUp, { showPopUp } from \"../../../../../../Common/Component/PopUp\";\nimport \"./index.scss\";\nimport arrowImage from \"../../../../../../Image/newPython/btn-script-arrow@2x.png\";\n\nvar onClickNextArea = function onClickNextArea(targetNoti, handleNextScript, handleClueBtn) {\n  if (targetNoti === \"editor\" || targetNoti === \"dogam\") return;\n  if (targetNoti === \"clue\") return showPopUp(React.createElement(PopUp.PythonClue, {\n    onClickFunction: handleNextScript,\n    handleClueBtn: handleClueBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), {\n    defaultPadding: false,\n    pythonPopup: true\n  });\n  handleNextScript();\n};\n\nvar Narration = function Narration(props) {\n  var isDisplayOn = props.isDisplayOn,\n      handleNextScript = props.handleNextScript,\n      currentScriptData = props.currentScriptData,\n      contentBoxFontSize = props.contentBoxFontSize,\n      handleClueBtn = props.handleClueBtn,\n      conditionCheck = props.conditionCheck;\n  var targetNoti = conditionCheck;\n  return React.createElement(\"div\", {\n    className: \"pythonNarration \".concat(isDisplayOn ? \"show\" : \"\", \" \").concat(targetNoti && targetNoti !== \"clue\" ? \"cursorDefault\" : \"\"),\n    onClick: function onClick() {\n      return onClickNextArea(targetNoti, handleNextScript, handleClueBtn);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"textArea\",\n    onClick: function onClick() {},\n    style: {\n      fontSize: contentBoxFontSize + \"px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, currentScriptData.text), React.createElement(\"img\", {\n    className: \"arrowImage\",\n    src: arrowImage,\n    alt: \"\",\n    style: {\n      width: \"\".concat(contentBoxFontSize + 8, \"px\"),\n      height: \"\".concat(contentBoxFontSize + 8, \"px\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n};\n\nexport default Narration;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Python/Components/SceneComponents/MessageComponents/Narration/index.js"],"names":["React","PopUp","showPopUp","arrowImage","onClickNextArea","targetNoti","handleNextScript","handleClueBtn","defaultPadding","pythonPopup","Narration","props","isDisplayOn","currentScriptData","contentBoxFontSize","conditionCheck","fontSize","text","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,0CAAjC;AACA,OAAO,cAAP;AAEA,OAAOC,UAAP,MAAuB,2DAAvB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,UAAD,EAAaC,gBAAb,EAA+BC,aAA/B,EAAiD;AACvE,MAAIF,UAAU,KAAK,QAAf,IAA2BA,UAAU,KAAK,OAA9C,EAAuD;AACvD,MAAIA,UAAU,KAAK,MAAnB,EACE,OAAOH,SAAS,CACd,oBAAC,KAAD,CAAO,UAAP;AACE,IAAA,eAAe,EAAEI,gBADnB;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,EAKd;AACEC,IAAAA,cAAc,EAAE,KADlB;AAEEC,IAAAA,WAAW,EAAE;AAFf,GALc,CAAhB;AAUFH,EAAAA,gBAAgB;AACjB,CAdD;;AAgBA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MAEvBC,WAFuB,GAQrBD,KARqB,CAEvBC,WAFuB;AAAA,MAGvBN,gBAHuB,GAQrBK,KARqB,CAGvBL,gBAHuB;AAAA,MAIvBO,iBAJuB,GAQrBF,KARqB,CAIvBE,iBAJuB;AAAA,MAKvBC,kBALuB,GAQrBH,KARqB,CAKvBG,kBALuB;AAAA,MAMvBP,aANuB,GAQrBI,KARqB,CAMvBJ,aANuB;AAAA,MAOvBQ,cAPuB,GAQrBJ,KARqB,CAOvBI,cAPuB;AAUzB,MAAMV,UAAU,GAAGU,cAAnB;AAEA,SACE;AACE,IAAA,SAAS,4BAAqBH,WAAW,GAAG,MAAH,GAAY,EAA5C,cACPP,UAAU,IAAIA,UAAU,KAAK,MAA7B,GAAsC,eAAtC,GAAwD,EADjD,CADX;AAIE,IAAA,OAAO,EAAE;AAAA,aACPD,eAAe,CAACC,UAAD,EAAaC,gBAAb,EAA+BC,aAA/B,CADR;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,OAAO,EAAE,mBAAM,CAAE,CAFnB;AAGE,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAQ,EAAEF,kBAAkB,GAAG;AAAjC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,iBAAiB,CAACI,IAAtB,CALF,EAME;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,GAAG,EAAEd,UAFP;AAGE,IAAA,GAAG,EAAC,EAHN;AAIE,IAAA,KAAK,EAAE;AACLe,MAAAA,KAAK,YAAKJ,kBAAkB,GAAG,CAA1B,OADA;AAELK,MAAAA,MAAM,YAAKL,kBAAkB,GAAG,CAA1B;AAFD,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CARF,CADF;AA2BD,CAvCD;;AAyCA,eAAeJ,SAAf","sourcesContent":["import React from \"react\";\nimport PopUp, { showPopUp } from \"../../../../../../Common/Component/PopUp\";\nimport \"./index.scss\";\n\nimport arrowImage from \"../../../../../../Image/newPython/btn-script-arrow@2x.png\";\n\nconst onClickNextArea = (targetNoti, handleNextScript, handleClueBtn) => {\n  if (targetNoti === \"editor\" || targetNoti === \"dogam\") return;\n  if (targetNoti === \"clue\")\n    return showPopUp(\n      <PopUp.PythonClue\n        onClickFunction={handleNextScript}\n        handleClueBtn={handleClueBtn}\n      />,\n      {\n        defaultPadding: false,\n        pythonPopup: true\n      }\n    );\n  handleNextScript();\n};\n\nconst Narration = props => {\n  const {\n    isDisplayOn,\n    handleNextScript,\n    currentScriptData,\n    contentBoxFontSize,\n    handleClueBtn,\n    conditionCheck\n  } = props;\n\n  const targetNoti = conditionCheck;\n\n  return (\n    <div\n      className={`pythonNarration ${isDisplayOn ? \"show\" : \"\"} ${\n        targetNoti && targetNoti !== \"clue\" ? \"cursorDefault\" : \"\"\n      }`}\n      onClick={() =>\n        onClickNextArea(targetNoti, handleNextScript, handleClueBtn)\n      }\n    >\n      <div\n        className=\"textArea\"\n        onClick={() => {}}\n        style={{ fontSize: contentBoxFontSize + \"px\" }}\n      >\n        <p>{currentScriptData.text}</p>\n        <img\n          className=\"arrowImage\"\n          src={arrowImage}\n          alt=\"\"\n          style={{\n            width: `${contentBoxFontSize + 8}px`,\n            height: `${contentBoxFontSize + 8}px`\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Narration;\n"]},"metadata":{},"sourceType":"module"}