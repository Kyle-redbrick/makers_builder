{"ast":null,"code":"import _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Python/Container.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { SCENE_MODE } from \"./Util/Constant\";\nimport pyodideloader from \"./pyodide\";\nimport View from \"./View\";\nimport { playScriptEffect, playClearEffect, playFailEffect, playSuccessEffect, playBgm, stopBgm } from \"./Util/PlaySound\"; // import SampleJson from \"./sample.json\";\n\nexport default function Container(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lectureScript = _useState2[0],\n      setLectureScript = _useState2[1];\n\n  var _useState3 = useState(SCENE_MODE.MEDIA),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sceneMode = _useState4[0],\n      setSceneMode = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isCodeEditorOpen = _useState6[0],\n      setIsCodeEditorOpen = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isExecWindowOpen = _useState8[0],\n      setIsExecWindowOpen = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isInfoPopupOpen = _useState10[0],\n      setIsInfoPopupOpen = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isShowClueBtn = _useState12[0],\n      setIsShowClueBtn = _useState12[1];\n\n  var _useState13 = useState(undefined),\n      _useState14 = _slicedToArray(_useState13, 2),\n      clueMedia = _useState14[0],\n      setClueMedia = _useState14[1]; // codeEditor\n\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isReadOnly = _useState16[0],\n      setIsReadOnly = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      templateCode = _useState18[0],\n      setTemplateCode = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      sampleData = _useState20[0],\n      setSampleData = _useState20[1];\n\n  var codeEditor = useRef(null); // scene move\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      projectId = _useState22[0],\n      setProjectId = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      projectTitle = _useState24[0],\n      setProjectTitle = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      goal = _useState26[0],\n      setLevelName = _useState26[1];\n\n  var _useState27 = useState(undefined),\n      _useState28 = _slicedToArray(_useState27, 2),\n      outroMedia = _useState28[0],\n      setOutroMedia = _useState28[1];\n\n  var _useState29 = useState(0),\n      _useState30 = _slicedToArray(_useState29, 2),\n      currentSceneIdx = _useState30[0],\n      setCurrentScene = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      sceneMaxLength = _useState32[0],\n      setSceneMaxLength = _useState32[1];\n\n  var _useState33 = useState(0),\n      _useState34 = _slicedToArray(_useState33, 2),\n      currentScriptIdx = _useState34[0],\n      setCurrentScript = _useState34[1];\n\n  var _useState35 = useState(0),\n      _useState36 = _slicedToArray(_useState35, 2),\n      scriptMaxLength = _useState36[0],\n      setScriptMaxLength = _useState36[1];\n\n  var _useState37 = useState(\"\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      currentScriptData = _useState38[0],\n      setCurrentScriptData = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      chatHistory = _useState40[0],\n      setChatHistory = _useState40[1];\n\n  var _useState41 = useState(\"\"),\n      _useState42 = _slicedToArray(_useState41, 2),\n      conditionCheck = _useState42[0],\n      setConditionCheck = _useState42[1];\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      isShowFailScript = _useState44[0],\n      setShowFailScript = _useState44[1];\n\n  var _useState45 = useState({}),\n      _useState46 = _slicedToArray(_useState45, 2),\n      answerFailScript = _useState46[0],\n      setAnswerFailScript = _useState46[1]; // size options\n\n\n  var _useState47 = useState(0),\n      _useState48 = _slicedToArray(_useState47, 2),\n      contentBoxWidth = _useState48[0],\n      setContentBoxWidth = _useState48[1];\n\n  var _useState49 = useState(0),\n      _useState50 = _slicedToArray(_useState49, 2),\n      contentBoxHeight = _useState50[0],\n      setContentBoxHeight = _useState50[1];\n\n  var _useState51 = useState(16),\n      _useState52 = _slicedToArray(_useState51, 2),\n      contentBoxFontSize = _useState52[0],\n      setContentBoxFontSize = _useState52[1]; // infoPopUpdata\n\n\n  var _useState53 = useState({}),\n      _useState54 = _slicedToArray(_useState53, 2),\n      infoPopupData = _useState54[0],\n      setInfoPopupData = _useState54[1];\n\n  var _useState55 = useState(false),\n      _useState56 = _slicedToArray(_useState55, 2),\n      isShowAnswerCode = _useState56[0],\n      setIsShowAnswerCode = _useState56[1]; // show clear\n\n\n  var _useState57 = useState(false),\n      _useState58 = _slicedToArray(_useState57, 2),\n      isShowClear = _useState58[0],\n      setIsShowClear = _useState58[1]; // project ItemList\n\n\n  var _useState59 = useState(false),\n      _useState60 = _slicedToArray(_useState59, 2),\n      isShowProjectItems = _useState60[0],\n      setIsShowProjectItems = _useState60[1]; // play Music\n\n\n  var _useState61 = useState(true),\n      _useState62 = _slicedToArray(_useState61, 2),\n      isPlayBGM = _useState62[0],\n      setIsPlayBGM = _useState62[1];\n\n  var _useState63 = useState(\"\"),\n      _useState64 = _slicedToArray(_useState63, 2),\n      BgmSrc = _useState64[0],\n      setBgmSrc = _useState64[1];\n\n  var _useState65 = useState(true),\n      _useState66 = _slicedToArray(_useState65, 2),\n      isPlayEffect = _useState66[0],\n      setIsPlayEffect = _useState66[1];\n\n  var _useState67 = useState(0),\n      _useState68 = _slicedToArray(_useState67, 2),\n      studiedMinutes = _useState68[0],\n      setStudiedMinutes = _useState68[1];\n\n  var _useState69 = useState(false),\n      _useState70 = _slicedToArray(_useState69, 2),\n      clearedProject = _useState70[0],\n      setClearedProject = _useState70[1];\n\n  useEffect(function () {\n    pyodideloader();\n    getDefaultContentBoxOffset();\n    setIsCodeEditorOpen(false);\n    getData(props.match.params.myDreamProjectId);\n    checkBeforeSoundSetting();\n    window.addEventListener(\"resize\", getDefaultContentBoxOffset);\n    return function () {\n      window.removeEventListener(\"resize\", getDefaultContentBoxOffset);\n    };\n  }, []);\n  useEffect(function () {\n    handleSceneData();\n  }, [lectureScript, currentSceneIdx, currentScriptIdx, isShowClear, isPlayBGM, isPlayEffect]);\n\n  var getData = function getData(_myDreamProjectId) {\n    request.getMyDreamProject(_myDreamProjectId).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      var project = json.project,\n          studiedMinutes = json.studiedMinutes,\n          completedMissionNum = json.completedMissionNum,\n          completedAt = json.completedAt;\n      var id = project.id,\n          title = project.title;\n\n      var _JSON$parse = JSON.parse(project.localized[0].template),\n          goal = _JSON$parse.goal,\n          outro = _JSON$parse.outro,\n          scenes = _JSON$parse.scenes;\n\n      if (completedAt) {\n        setClearedProject(true);\n        setIsShowProjectItems(true);\n      }\n\n      if (scenes.length > completedMissionNum) setCurrentScene(completedMissionNum);\n      setStudiedMinutes(studiedMinutes);\n      setProjectId(id);\n      setProjectTitle(title);\n      setLectureScript({\n        goal: goal,\n        outro: outro,\n        scenes: scenes\n      });\n    }).catch(function (e) {\n      console.error(e);\n    });\n  };\n\n  var handleSceneMode = function handleSceneMode(mode) {\n    setSceneMode(mode);\n  };\n\n  var handleCodeEditor = function handleCodeEditor() {\n    setIsCodeEditorOpen(!isCodeEditorOpen);\n  };\n\n  var handleExecWindow = function handleExecWindow(mode) {\n    if (!isShowAnswerCode) setIsShowAnswerCode(true);\n    setIsExecWindowOpen(mode ? mode : !isExecWindowOpen);\n  };\n\n  var handleInfoPopup = function handleInfoPopup() {\n    setIsInfoPopupOpen(!isInfoPopupOpen);\n  };\n\n  var handleClueBtn = function handleClueBtn(mode) {\n    setIsShowClueBtn(mode ? mode : !isShowClueBtn);\n  };\n\n  var handleCloseAllWindows = function handleCloseAllWindows() {\n    isCodeEditorOpen && handleCodeEditor(); // 코드창 닫기\n\n    isInfoPopupOpen && handleInfoPopup(); // 정보창 닫기\n\n    isShowClueBtn && handleClueBtn(); // 단서창 닫기\n  };\n\n  var handleSceneData = function handleSceneData() {\n    if (!lectureScript) return null;\n    var goal = lectureScript.goal,\n        outro = lectureScript.outro,\n        scenes = lectureScript.scenes;\n    if (isShowFailScript) setShowFailScript(false);\n    var currentSceneMode = scenes[currentSceneIdx].scripts[currentScriptIdx].type;\n    var currentScriptData = scenes[currentSceneIdx].scripts[currentScriptIdx];\n    if (currentSceneMode === \"result\") playSuccessEffect();\n\n    if (isPlayBGM) {\n      if (currentScriptData.media) {\n        if (currentScriptData.media.backgroundMusic) {\n          if (BgmSrc !== currentScriptData.media.backgroundMusic) {\n            setBgmSrc(currentScriptData.media.backgroundMusic);\n            playBgm(currentScriptData.media.backgroundMusic);\n          }\n        }\n      }\n    } else {\n      stopBgm();\n    }\n\n    setAnswerFailScript(scenes[currentSceneIdx].answerFail[0]);\n    setSampleData(scenes[currentSceneIdx].data);\n\n    if (sceneMaxLength - 1 === currentSceneIdx && scriptMaxLength - 1 === currentScriptIdx) {\n      // 마지막 대사일떄\n      if (outroMedia) {\n        // 아웃트로 종료\n        setOutroMedia(undefined);\n        setSceneMode(currentSceneMode);\n        setCurrentScriptData(currentScriptData);\n      } else {\n        // 아웃트로 플레이\n        setSceneMode(\"outro\");\n        setOutroMedia(outro);\n      }\n    } else {\n      // 일반대사\n      if (currentScriptData.type === \"success\") {\n        if (outroMedia) {\n          // 아웃트로 종료\n          var resultData = scenes[currentSceneIdx].scripts[currentScriptIdx + 1];\n\n          if (resultData) {\n            setOutroMedia(undefined);\n            setSceneMode(\"result\");\n            setCurrentScriptData(resultData);\n          }\n        } else {\n          // 아웃트로 플레이\n          setSceneMode(\"outro\");\n          setOutroMedia(outro);\n        }\n      } else {\n        setOutroMedia(undefined);\n        setLevelName(goal);\n        setSceneMode(currentSceneMode);\n        setCurrentScriptData(currentScriptData);\n        setSceneMaxLength(scenes.length);\n        setScriptMaxLength(scenes[currentSceneIdx].scripts.length);\n      }\n    }\n\n    if (currentScriptData.type === \"announce\" || currentScriptData.type === \"chat\") {\n      // 대화기록으로 이동할 경우이 이미 존재하는 history는 중복해서 넣을 필요 없음\n      var isExist = chatHistory.find(function (item) {\n        return item.id === currentScriptData.id;\n      });\n      if (!isExist) setChatHistory([].concat(_toConsumableArray(chatHistory), [currentScriptData]));\n    }\n\n    if (currentScriptData.timeOut) {\n      setTimeout(function () {\n        handleNextScript();\n      }, Number(currentScriptData.timeOut));\n    }\n\n    if (currentSceneMode === SCENE_MODE.GIFT) {// TODO : 도감 창에 해당 gift 넣기\n    }\n\n    if (!isShowClear && currentScriptData.targetNoti) {\n      if ([\"playBtn\", \"submitBtn\", \"resetBtn\"].includes(currentScriptData.targetNoti)) setIsCodeEditorOpen(true);\n      setConditionCheck(currentScriptData.targetNoti);\n    }\n\n    if (currentScriptData.type === \"mediaSlide\") {\n      setClueMedia(currentScriptData.media.src);\n    } // infoPopup 에서 사용될 data binding\n\n\n    var _scenes$currentSceneI = scenes[currentSceneIdx],\n        missionGoal = _scenes$currentSceneI.missionGoal,\n        hint = _scenes$currentSceneI.hint,\n        templateCode = _scenes$currentSceneI.templateCode,\n        hintCode = _scenes$currentSceneI.hintCode;\n    setInfoPopupData({\n      missionGoal: missionGoal,\n      hint: hint,\n      templateCode: templateCode,\n      hintCode: hintCode\n    });\n    setTemplateCode(templateCode);\n  };\n\n  var requestFullscreen = function requestFullscreen() {\n    if (navigator.userAgent.match(/Android/i)) {\n      setIsReadOnly(true);\n      var docelem = document.documentElement;\n\n      if (docelem.requestFullscreen) {\n        docelem.requestFullscreen();\n      } else if (docelem.mozRequestFullScreen) {\n        docelem.mozRequestFullScreen();\n      } else if (docelem.webkitRequestFullScreen) {\n        docelem.webkitRequestFullScreen();\n      } else if (docelem.msRequestFullscreen) {\n        docelem.msRequestFullscreen();\n      }\n    }\n  };\n\n  var handleNextDestination = function handleNextDestination(destination) {\n    // const _sampleJson = SampleJson;\n    var _sampleJson = lectureScript;\n\n    var _index = _sampleJson.scenes[currentSceneIdx].scripts.findIndex(function (_scripts, i) {\n      return _scripts.id === destination;\n    });\n\n    if (_sampleJson.scenes[currentSceneIdx].scripts[_index].type !== \"success\") {\n      setCurrentScript(_index);\n    } else {\n      isShowClear && setCurrentScript(currentScriptIdx + 1);\n    }\n  };\n\n  var handleNextScript = function handleNextScript(num) {\n    var scenes = lectureScript.scenes;\n    if (conditionCheck !== \"\") return;\n\n    if (isShowClear) {\n      // 정답을 맞추고 clear이미지를 클릭헀을때\n      if (scenes.length === currentSceneIdx + 1) {\n        // 마지막 미션의 정답을 맞췄다면\n        setIsShowClear(false);\n\n        var _index = scenes[currentSceneIdx].scripts.findIndex(function (_scripts, i) {\n          return _scripts.type === \"success\";\n        });\n\n        if (_index === -1) {\n          var isNoExistSuccess = scenes[currentSceneIdx].scripts.findIndex(function (_scripts, i) {\n            return _scripts.type === \"result\";\n          });\n          setShowFailScript(false);\n          setCurrentScript(isNoExistSuccess); // 다음 스크립트\n        } else {\n          setCurrentScript(_index);\n        }\n      } else {\n        handleNextScene();\n        setIsShowAnswerCode(false);\n      }\n    } else if (outroMedia) {\n      // outro영상을 다 봤을때\n      handleSceneData();\n    } else if (currentScriptIdx + 1 < scriptMaxLength) {\n      // 다음 스크립트가 있는지 확인\n      var _currentScript = scenes[currentSceneIdx].scripts[currentScriptIdx];\n      var _nextScript = scenes[currentSceneIdx].scripts[currentScriptIdx + 1];\n\n      if ([\"success\", \"result\"].includes(_nextScript.type)) {\n        // 다음 스크립트가 성공이미지가 아닐때\n        setShowFailScript(false);\n        isShowClear && setCurrentScript(num ? num : currentScriptIdx + 1); // 다음 스크립트\n      } else {\n        // 성공 이미지 혹은 아이템 결과 창일때\n        playScriptEffect();\n\n        if (_currentScript.destination) {\n          handleNextDestination(_currentScript.destination);\n        } else {\n          setCurrentScript(num ? num : currentScriptIdx + 1); // 다음 스크립트로 넘기기\n        }\n      }\n    }\n  };\n\n  var handleNextScene = function handleNextScene(num) {\n    if (currentSceneIdx < sceneMaxLength - 1) {\n      setCurrentScene(num !== undefined ? num : currentSceneIdx + 1);\n      setCurrentScript(0);\n      setChatHistory([]);\n      setIsShowClear(false);\n      setShowFailScript(false);\n      setClueMedia(undefined);\n    }\n  };\n\n  var onClickRestartBtn = function onClickRestartBtn() {\n    setCurrentScene(0);\n    setCurrentScript(0);\n    setChatHistory([]);\n    setIsShowClear(false);\n    setShowFailScript(false);\n    setClueMedia(undefined);\n    setIsCodeEditorOpen(false);\n    setIsExecWindowOpen(false);\n    setIsInfoPopupOpen(false);\n  };\n\n  var changeContentFontSize = function changeContentFontSize(width) {\n    var changeFontSize = 10 + (width - 424) / 112 * 2;\n    if (changeFontSize < 10) changeFontSize = 10;\n    if (changeFontSize > 22) changeFontSize = 22;\n    setContentBoxFontSize(Math.floor(changeFontSize));\n  };\n\n  var getDefaultContentBoxOffset = function getDefaultContentBoxOffset() {\n    var windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    var windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    var headerHeight = windowWidth > 1024 ? 75 : 55;\n    var footerHeight = 47;\n    var maxWidth = windowWidth * 0.640625;\n    var maxHeight = (windowHeight - headerHeight - footerHeight) * 0.9282;\n    var width = maxWidth;\n    var height = width / 3 * 2;\n\n    if (height > maxHeight) {\n      height = maxHeight;\n      width = maxHeight / 2 * 3;\n    }\n\n    changeContentFontSize(width);\n    setContentBoxWidth(width);\n    setContentBoxHeight(height);\n  };\n\n  var checkAnswer = function checkAnswer(_codeResult) {\n    var scenes = lectureScript.scenes;\n    var _scriptAnswer = scenes[currentSceneIdx].answer;\n\n    var _sortedCodeResult = _codeResult.split(\"\\n\").filter(function (Element) {\n      return Element !== \"\";\n    }).sort().join();\n\n    if (_sortedCodeResult === _scriptAnswer.sort().join()) {\n      playClearEffect();\n      setIsShowClear(true);\n      setShowFailScript(false);\n      handleCloseAllWindows();\n      if (scenes.length === currentSceneIdx + 1) setIsShowProjectItems(true);\n      if (!clearedProject) saveCompletedMission();\n    } else {\n      playFailEffect();\n      setSceneMode(\"chat\");\n      setShowFailScript(true);\n      if (answerFailScript.targetNoti) setConditionCheck(answerFailScript.targetNoti);\n    }\n  };\n\n  var onClickProjectReplay = function onClickProjectReplay() {\n    setCurrentScene(0);\n    setCurrentScript(0);\n  };\n\n  var onClickNextProjectPlay = function onClickNextProjectPlay() {\n    request.getNextMyDreamProject(projectId).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      if (!json) {\n        // 등록된 다음 Lecture(project)가 없을때.\n        alert(\"다음수업이 없습니다.\");\n      } else {\n        window.location.replace(\"/pythonPage/\".concat(json.id));\n      }\n    }).catch(function (e) {\n      console.error(e);\n    });\n  };\n\n  var onSaveSettings = function onSaveSettings(_ref) {\n    var playBGM = _ref.playBGM,\n        playEffect = _ref.playEffect;\n    setIsPlayBGM(playBGM);\n    setIsPlayEffect(playEffect);\n    localStorage.setItem(\"pythonBuilderSound\", JSON.stringify({\n      playBGM: playBGM,\n      playEffect: playEffect\n    }));\n    var currentScriptData = lectureScript.scenes[currentSceneIdx].scripts[currentScriptIdx];\n\n    if (isPlayBGM !== playBGM) {\n      if (!playBGM) return;\n\n      try {\n        if (currentScriptData.media.backgroundMusic) {\n          setBgmSrc(currentScriptData.media.backgroundMusic);\n          playBgm(currentScriptData.media.backgroundMusic);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  var checkBeforeSoundSetting = function checkBeforeSoundSetting() {\n    var builderSound = localStorage.getItem(\"pythonBuilderSound\");\n\n    if (builderSound) {\n      try {\n        var _JSON$parse2 = JSON.parse(builderSound),\n            playBGM = _JSON$parse2.playBGM,\n            playEffect = _JSON$parse2.playEffect;\n\n        setIsPlayBGM(playBGM);\n        setIsPlayEffect(playEffect);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  var saveCompletedMission = function saveCompletedMission() {\n    var scenes = lectureScript.scenes;\n    var values = {\n      completedMissionNum: currentSceneIdx + 1\n    };\n\n    if (scenes.length === currentSceneIdx + 1) {\n      values.completed = true;\n      setClearedProject(true);\n    }\n\n    request.saveMyDreamProject(props.match.params.myDreamProjectId, values);\n  };\n\n  return React.createElement(View, {\n    sceneMode: sceneMode,\n    isCodeEditorOpen: isCodeEditorOpen,\n    isExecWindowOpen: isExecWindowOpen,\n    isInfoPopupOpen: isInfoPopupOpen,\n    isShowClueBtn: isShowClueBtn,\n    handleSceneMode: handleSceneMode,\n    handleCodeEditor: handleCodeEditor,\n    handleExecWindow: handleExecWindow,\n    handleInfoPopup: handleInfoPopup,\n    handleClueBtn: handleClueBtn,\n    requestFullscreen: requestFullscreen // size options\n    ,\n    contentBoxWidth: contentBoxWidth,\n    contentBoxHeight: contentBoxHeight,\n    contentBoxFontSize: contentBoxFontSize,\n    changeContentFontSize: changeContentFontSize //sceneData\n    ,\n    projectTitle: projectTitle,\n    currentScriptData: currentScriptData,\n    handleNextScript: handleNextScript,\n    handleNextDestination: handleNextDestination,\n    handleNextScene: handleNextScene,\n    onClickRestartBtn: onClickRestartBtn,\n    goal: goal,\n    outro: outroMedia,\n    chatHistory: chatHistory,\n    conditionCheck: conditionCheck,\n    setConditionCheck: setConditionCheck // codeEditor\n    ,\n    codeEditor: codeEditor,\n    isReadOnly: isReadOnly,\n    setIsReadOnly: setIsReadOnly,\n    templateCode: templateCode,\n    sampleData: sampleData // infoPopup data\n    ,\n    infoPopupData: infoPopupData,\n    isShowAnswerCode: isShowAnswerCode // show clear iamge\n    ,\n    setIsShowClear: setIsShowClear // check Answer\n    ,\n    isShowClear: isShowClear,\n    checkAnswer: checkAnswer // fail script\n    ,\n    isShowFailScript: isShowFailScript,\n    answerFailScript: answerFailScript // finished project\n    ,\n    onClickProjectReplay: onClickProjectReplay,\n    onClickNextProjectPlay: onClickNextProjectPlay // project Items\n    ,\n    isShowProjectItems: isShowProjectItems // play sound\n    ,\n    isPlayBGM: isPlayBGM,\n    isPlayEffect: isPlayEffect,\n    onSaveSettings: onSaveSettings //clue media\n    ,\n    clueMedia: clueMedia,\n    myProjectId: props.match.params.myDreamProjectId,\n    studiedMinutes: studiedMinutes,\n    projectId: projectId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Python/Container.js"],"names":["React","useState","useEffect","useRef","request","SCENE_MODE","pyodideloader","View","playScriptEffect","playClearEffect","playFailEffect","playSuccessEffect","playBgm","stopBgm","Container","props","lectureScript","setLectureScript","MEDIA","sceneMode","setSceneMode","isCodeEditorOpen","setIsCodeEditorOpen","isExecWindowOpen","setIsExecWindowOpen","isInfoPopupOpen","setIsInfoPopupOpen","isShowClueBtn","setIsShowClueBtn","undefined","clueMedia","setClueMedia","isReadOnly","setIsReadOnly","templateCode","setTemplateCode","sampleData","setSampleData","codeEditor","projectId","setProjectId","projectTitle","setProjectTitle","goal","setLevelName","outroMedia","setOutroMedia","currentSceneIdx","setCurrentScene","sceneMaxLength","setSceneMaxLength","currentScriptIdx","setCurrentScript","scriptMaxLength","setScriptMaxLength","currentScriptData","setCurrentScriptData","chatHistory","setChatHistory","conditionCheck","setConditionCheck","isShowFailScript","setShowFailScript","answerFailScript","setAnswerFailScript","contentBoxWidth","setContentBoxWidth","contentBoxHeight","setContentBoxHeight","contentBoxFontSize","setContentBoxFontSize","infoPopupData","setInfoPopupData","isShowAnswerCode","setIsShowAnswerCode","isShowClear","setIsShowClear","isShowProjectItems","setIsShowProjectItems","isPlayBGM","setIsPlayBGM","BgmSrc","setBgmSrc","isPlayEffect","setIsPlayEffect","studiedMinutes","setStudiedMinutes","clearedProject","setClearedProject","getDefaultContentBoxOffset","getData","match","params","myDreamProjectId","checkBeforeSoundSetting","window","addEventListener","removeEventListener","handleSceneData","_myDreamProjectId","getMyDreamProject","then","res","json","project","completedMissionNum","completedAt","id","title","JSON","parse","localized","template","outro","scenes","length","catch","e","console","error","handleSceneMode","mode","handleCodeEditor","handleExecWindow","handleInfoPopup","handleClueBtn","handleCloseAllWindows","currentSceneMode","scripts","type","media","backgroundMusic","answerFail","data","resultData","isExist","find","item","timeOut","setTimeout","handleNextScript","Number","GIFT","targetNoti","includes","src","missionGoal","hint","hintCode","requestFullscreen","navigator","userAgent","docelem","document","documentElement","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","handleNextDestination","destination","_sampleJson","_index","findIndex","_scripts","i","num","isNoExistSuccess","handleNextScene","_currentScript","_nextScript","onClickRestartBtn","changeContentFontSize","width","changeFontSize","Math","floor","windowWidth","innerWidth","clientWidth","body","windowHeight","innerHeight","clientHeight","headerHeight","footerHeight","maxWidth","maxHeight","height","checkAnswer","_codeResult","_scriptAnswer","answer","_sortedCodeResult","split","filter","Element","sort","join","saveCompletedMission","onClickProjectReplay","onClickNextProjectPlay","getNextMyDreamProject","alert","location","replace","onSaveSettings","playBGM","playEffect","localStorage","setItem","stringify","builderSound","getItem","values","completed","saveMyDreamProject"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { SCENE_MODE } from \"./Util/Constant\";\nimport pyodideloader from \"./pyodide\";\nimport View from \"./View\";\nimport { playScriptEffect, playClearEffect, playFailEffect, playSuccessEffect, playBgm, stopBgm } from \"./Util/PlaySound\";\n// import SampleJson from \"./sample.json\";\n\nexport default function Container(props) {\n  const [lectureScript, setLectureScript] = useState(null);\n\n  const [sceneMode, setSceneMode] = useState(SCENE_MODE.MEDIA);\n\n  const [isCodeEditorOpen, setIsCodeEditorOpen] = useState(true);\n  const [isExecWindowOpen, setIsExecWindowOpen] = useState(false);\n  const [isInfoPopupOpen, setIsInfoPopupOpen] = useState(false);\n  const [isShowClueBtn, setIsShowClueBtn] = useState(false);\n  const [clueMedia, setClueMedia] = useState(undefined);\n\n  // codeEditor\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [templateCode, setTemplateCode] = useState(\"\");\n  const [sampleData, setSampleData] = useState(\"\");\n  const codeEditor = useRef(null);\n\n  // scene move\n  const [projectId, setProjectId] = useState(0);\n  const [projectTitle, setProjectTitle] = useState(\"\");\n  const [goal, setLevelName] = useState(\"\");\n  const [outroMedia, setOutroMedia] = useState(undefined);\n  const [currentSceneIdx, setCurrentScene] = useState(0);\n  const [sceneMaxLength, setSceneMaxLength] = useState(0);\n  const [currentScriptIdx, setCurrentScript] = useState(0);\n  const [scriptMaxLength, setScriptMaxLength] = useState(0);\n  const [currentScriptData, setCurrentScriptData] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [conditionCheck, setConditionCheck] = useState(\"\");\n  const [isShowFailScript, setShowFailScript] = useState(false);\n  const [answerFailScript, setAnswerFailScript] = useState({});\n\n  // size options\n  const [contentBoxWidth, setContentBoxWidth] = useState(0);\n  const [contentBoxHeight, setContentBoxHeight] = useState(0);\n  const [contentBoxFontSize, setContentBoxFontSize] = useState(16);\n\n  // infoPopUpdata\n  const [infoPopupData, setInfoPopupData] = useState({});\n  const [isShowAnswerCode, setIsShowAnswerCode] = useState(false); \n\n  // show clear\n  const [isShowClear, setIsShowClear] = useState(false); \n\n\n  // project ItemList\n  const [isShowProjectItems, setIsShowProjectItems] = useState(false); \n\n\n  // play Music\n  const [isPlayBGM, setIsPlayBGM] = useState(true); \n  const [BgmSrc, setBgmSrc] = useState(\"\"); \n  const [isPlayEffect, setIsPlayEffect] = useState(true); \n\n  const [studiedMinutes, setStudiedMinutes] = useState(0)\n  const [clearedProject, setClearedProject] = useState(false);\n\n  useEffect(() => {\n    pyodideloader()\n    getDefaultContentBoxOffset();\n    setIsCodeEditorOpen(false);\n    getData(props.match.params.myDreamProjectId);\n    checkBeforeSoundSetting();\n    window.addEventListener(\"resize\", getDefaultContentBoxOffset);\n    return () => {\n      window.removeEventListener(\"resize\", getDefaultContentBoxOffset);\n    };\n  }, []);\n\n  useEffect(() => {\n    handleSceneData();\n  }, [lectureScript, currentSceneIdx, currentScriptIdx, isShowClear, isPlayBGM, isPlayEffect]);\n\n  const getData = (_myDreamProjectId) => {\n    request\n      .getMyDreamProject(_myDreamProjectId)\n      .then(res => res.json())\n      .then(json => {\n        const { project, studiedMinutes, completedMissionNum, completedAt } = json;\n        const { id, title } = project;\n        const { goal, outro, scenes } = JSON.parse(project.localized[0].template);\n\n        if(completedAt) {\n          setClearedProject(true);\n          setIsShowProjectItems(true);\n        }\n        if(scenes.length > completedMissionNum) setCurrentScene(completedMissionNum)\n        setStudiedMinutes(studiedMinutes)\n        setProjectId(id)\n        setProjectTitle(title)\n        setLectureScript({\n          goal : goal, \n          outro : outro, \n          scenes : scenes\n        })\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  const handleSceneMode = mode => {\n    setSceneMode(mode);\n  };\n\n  const handleCodeEditor = () => {\n    setIsCodeEditorOpen(!isCodeEditorOpen);\n  };\n\n  const handleExecWindow = mode => {\n    if(!isShowAnswerCode) setIsShowAnswerCode(true)\n    setIsExecWindowOpen(mode ? mode : !isExecWindowOpen);\n  };\n\n  const handleInfoPopup = () => {\n    setIsInfoPopupOpen(!isInfoPopupOpen);\n  };\n\n  const handleClueBtn = mode => {\n    setIsShowClueBtn(mode ? mode : !isShowClueBtn);\n  };\n\n  const handleCloseAllWindows = () => {\n    isCodeEditorOpen && handleCodeEditor() // 코드창 닫기\n    isInfoPopupOpen && handleInfoPopup() // 정보창 닫기\n    isShowClueBtn && handleClueBtn() // 단서창 닫기\n  }\n\n  const handleSceneData = () => {\n    if(!lectureScript) return null\n    const {goal, outro, scenes} = lectureScript\n\n    if(isShowFailScript) setShowFailScript(false)\n    const currentSceneMode = scenes[currentSceneIdx].scripts[currentScriptIdx].type;\n    const currentScriptData = scenes[currentSceneIdx].scripts[currentScriptIdx];\n\n    if(currentSceneMode === \"result\") playSuccessEffect();\n    \n    if(isPlayBGM) {\n      if(currentScriptData.media){\n        if(currentScriptData.media.backgroundMusic) {\n          if(BgmSrc !== currentScriptData.media.backgroundMusic) {\n            setBgmSrc(currentScriptData.media.backgroundMusic);\n            playBgm(currentScriptData.media.backgroundMusic);\n          }\n        }\n      }\n    } else {\n      stopBgm();\n    }\n\n    setAnswerFailScript(scenes[currentSceneIdx].answerFail[0])\n    setSampleData(scenes[currentSceneIdx].data)\n    \n    if(sceneMaxLength-1 === currentSceneIdx && scriptMaxLength-1 === currentScriptIdx) { // 마지막 대사일떄\n      if(outroMedia) { // 아웃트로 종료\n        setOutroMedia(undefined)\n        setSceneMode(currentSceneMode);\n        setCurrentScriptData(currentScriptData);\n      } else { // 아웃트로 플레이\n        setSceneMode(\"outro\");\n        setOutroMedia(outro)\n      }\n    } else { // 일반대사\n      if(currentScriptData.type === \"success\") {\n        if(outroMedia) { // 아웃트로 종료\n          let resultData = scenes[currentSceneIdx].scripts[currentScriptIdx+1];\n          if(resultData) {\n            setOutroMedia(undefined)\n            setSceneMode(\"result\");\n            setCurrentScriptData(resultData);\n          }\n        } else { // 아웃트로 플레이\n          setSceneMode(\"outro\");\n          setOutroMedia(outro)\n        }\n      } else {\n        setOutroMedia(undefined)\n        setLevelName(goal);\n        setSceneMode(currentSceneMode);\n        setCurrentScriptData(currentScriptData);\n        setSceneMaxLength(scenes.length);\n        setScriptMaxLength(scenes[currentSceneIdx].scripts.length);\n      }\n    }\n\n    if (\n      currentScriptData.type === \"announce\" ||\n      currentScriptData.type === \"chat\"\n    ) {\n       // 대화기록으로 이동할 경우이 이미 존재하는 history는 중복해서 넣을 필요 없음\n      const isExist = chatHistory.find(item => item.id === currentScriptData.id)\n      if(!isExist) setChatHistory([...chatHistory, currentScriptData]);\n    }\n\n    if (currentScriptData.timeOut) {\n      setTimeout(() => {\n        handleNextScript();\n      }, Number(currentScriptData.timeOut));\n    }\n\n    if (currentSceneMode === SCENE_MODE.GIFT) {\n      // TODO : 도감 창에 해당 gift 넣기\n    }\n\n    if (!isShowClear && currentScriptData.targetNoti) {\n      if([\"playBtn\",\"submitBtn\",\"resetBtn\"].includes(currentScriptData.targetNoti)) setIsCodeEditorOpen(true)\n      setConditionCheck(currentScriptData.targetNoti);\n    }\n\n    if(currentScriptData.type === \"mediaSlide\") {\n      setClueMedia(currentScriptData.media.src)\n    }\n\n    // infoPopup 에서 사용될 data binding\n    const {missionGoal , hint, templateCode, hintCode} = scenes[currentSceneIdx]\n    setInfoPopupData({missionGoal:missionGoal, hint:hint, templateCode:templateCode, hintCode:hintCode})\n    setTemplateCode(templateCode)\n  };\n\n  const requestFullscreen = () => {\n    if (navigator.userAgent.match(/Android/i)) {\n      setIsReadOnly(true);\n      var docelem = document.documentElement;\n\n      if (docelem.requestFullscreen) {\n        docelem.requestFullscreen();\n      } else if (docelem.mozRequestFullScreen) {\n        docelem.mozRequestFullScreen();\n      } else if (docelem.webkitRequestFullScreen) {\n        docelem.webkitRequestFullScreen();\n      } else if (docelem.msRequestFullscreen) {\n        docelem.msRequestFullscreen();\n      }\n    }\n  };\n\n  const handleNextDestination = destination => {\n    // const _sampleJson = SampleJson;\n    const _sampleJson = lectureScript;\n    const _index = _sampleJson.scenes[currentSceneIdx].scripts.findIndex(function(_scripts, i){\n      return _scripts.id === destination\n    });\n\n    if(_sampleJson.scenes[currentSceneIdx].scripts[_index].type !== \"success\") {\n      setCurrentScript(_index)\n    } else {\n      isShowClear && setCurrentScript(currentScriptIdx + 1)\n    }\n  };\n\n  const handleNextScript = num => {\n    const {/*goal, outro, */scenes} = lectureScript\n    if(conditionCheck !== \"\") return;\n    \n    if(isShowClear) { // 정답을 맞추고 clear이미지를 클릭헀을때\n      if(scenes.length === currentSceneIdx+1) { // 마지막 미션의 정답을 맞췄다면\n        setIsShowClear(false);\n        const _index = scenes[currentSceneIdx].scripts.findIndex(function(_scripts, i){\n          return _scripts.type === \"success\"\n        });\n\n        if(_index === -1) {\n          const isNoExistSuccess = scenes[currentSceneIdx].scripts.findIndex(function(_scripts, i){\n            return _scripts.type === \"result\"\n          });\n\n          setShowFailScript(false)\n          setCurrentScript(isNoExistSuccess) // 다음 스크립트\n        } else {\n          setCurrentScript(_index);\n        }\n      } else {\n        handleNextScene();\n        setIsShowAnswerCode(false);\n      }\n    } else if(outroMedia) { // outro영상을 다 봤을때\n      handleSceneData()\n    } else if (currentScriptIdx + 1 < scriptMaxLength) { // 다음 스크립트가 있는지 확인\n      let _currentScript = scenes[currentSceneIdx].scripts[currentScriptIdx]\n      let _nextScript = scenes[currentSceneIdx].scripts[currentScriptIdx + 1]\n      if([\"success\", \"result\"].includes(_nextScript.type)) { // 다음 스크립트가 성공이미지가 아닐때\n        setShowFailScript(false)\n        isShowClear && setCurrentScript(num ? num : currentScriptIdx + 1) // 다음 스크립트\n      } else { // 성공 이미지 혹은 아이템 결과 창일때\n        playScriptEffect();\n        \n        if(_currentScript.destination) {\n          handleNextDestination(_currentScript.destination)\n        } else {\n          setCurrentScript(num ? num : currentScriptIdx + 1);  // 다음 스크립트로 넘기기\n        }\n      }\n    }\n  };\n\n  const handleNextScene = num => {\n    if (currentSceneIdx < sceneMaxLength - 1) {\n      setCurrentScene(num !== undefined ? num : currentSceneIdx + 1);\n      setCurrentScript(0);\n      setChatHistory([]);\n      setIsShowClear(false)\n      setShowFailScript(false)\n      setClueMedia(undefined)\n    }\n  };\n\n  const onClickRestartBtn = () => {\n    setCurrentScene(0);\n    setCurrentScript(0);\n    setChatHistory([]);\n    setIsShowClear(false);\n    setShowFailScript(false);\n    setClueMedia(undefined);\n    setIsCodeEditorOpen(false);\n    setIsExecWindowOpen(false);\n    setIsInfoPopupOpen(false)\n  };\n\n  const changeContentFontSize = width => {\n    let changeFontSize = 10 + ((width - 424) / 112) * 2;\n    if (changeFontSize < 10) changeFontSize = 10;\n    if (changeFontSize > 22) changeFontSize = 22;\n    setContentBoxFontSize(Math.floor(changeFontSize));\n  };\n\n  const getDefaultContentBoxOffset = () => {\n    const windowWidth =\n      window.innerWidth ||\n      document.documentElement.clientWidth ||\n      document.body.clientWidth;\n    const windowHeight =\n      window.innerHeight ||\n      document.documentElement.clientHeight ||\n      document.body.clientHeight;\n    const headerHeight = windowWidth > 1024 ? 75 : 55;\n    const footerHeight = 47;\n    const maxWidth = windowWidth * 0.640625;\n    const maxHeight = (windowHeight - headerHeight - footerHeight) * 0.9282;\n\n    let width = maxWidth;\n    let height = (width / 3) * 2;\n\n    if (height > maxHeight) {\n      height = maxHeight;\n      width = (maxHeight / 2) * 3;\n    }\n\n    changeContentFontSize(width);\n    setContentBoxWidth(width);\n    setContentBoxHeight(height);\n  };\n\n  const checkAnswer = (_codeResult) => {\n    const {scenes} = lectureScript\n    const _scriptAnswer = scenes[currentSceneIdx].answer;\n\n    let _sortedCodeResult = _codeResult.split(\"\\n\").filter((Element)=> Element !== \"\").sort().join();\n\n    if(_sortedCodeResult === _scriptAnswer.sort().join()) {\n      playClearEffect();\n      setIsShowClear(true)\n      setShowFailScript(false)\n      handleCloseAllWindows()\n\n      if(scenes.length === currentSceneIdx+1) setIsShowProjectItems(true);\n\n      if(!clearedProject) saveCompletedMission();\n    } else {\n      playFailEffect();\n      setSceneMode(\"chat\");\n      setShowFailScript(true)\n      if(answerFailScript.targetNoti) setConditionCheck(answerFailScript.targetNoti);\n    }\n  }\n\n  const onClickProjectReplay = () => {\n    setCurrentScene(0);\n    setCurrentScript(0);\n  }\n\n  const onClickNextProjectPlay = () => {\n    request\n      .getNextMyDreamProject(projectId)\n      .then(res => res.json())\n      .then(json => { \n        if(!json) {\n          // 등록된 다음 Lecture(project)가 없을때.\n          alert(\"다음수업이 없습니다.\")\n        } else {\n          window.location.replace(`/pythonPage/${json.id}`); \n        }\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  }\n\n  const onSaveSettings = ({playBGM, playEffect}) => {\n    setIsPlayBGM(playBGM);\n    setIsPlayEffect(playEffect);\n    localStorage.setItem(\"pythonBuilderSound\", JSON.stringify({playBGM:playBGM ,playEffect:playEffect }));\n    const currentScriptData = lectureScript.scenes[currentSceneIdx].scripts[currentScriptIdx];\n    \n    if(isPlayBGM !== playBGM) {\n      if(!playBGM) return;\n      try {\n        if(currentScriptData.media.backgroundMusic) {\n          setBgmSrc(currentScriptData.media.backgroundMusic);\n          playBgm(currentScriptData.media.backgroundMusic);\n        } \n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }\n\n  const checkBeforeSoundSetting = () => {\n    let builderSound = localStorage.getItem(\"pythonBuilderSound\");\n    if(builderSound) {\n      try {\n        const { playBGM, playEffect } = JSON.parse(builderSound) \n        setIsPlayBGM(playBGM)\n        setIsPlayEffect(playEffect)\n      } catch (error) {\n        console.error(error)\n      }\n    } \n  }\n  \n  const saveCompletedMission = () => {\n    const {scenes} = lectureScript\n    const values = { completedMissionNum : currentSceneIdx + 1 }\n    if (scenes.length === currentSceneIdx+1) {\n      values.completed = true;\n      setClearedProject(true);\n    }\n\n    request.saveMyDreamProject(props.match.params.myDreamProjectId, values);\n  }\n\n  return (\n    <View\n      sceneMode={sceneMode}\n      isCodeEditorOpen={isCodeEditorOpen}\n      isExecWindowOpen={isExecWindowOpen}\n      isInfoPopupOpen={isInfoPopupOpen}\n      isShowClueBtn={isShowClueBtn}\n      handleSceneMode={handleSceneMode}\n      handleCodeEditor={handleCodeEditor}\n      handleExecWindow={handleExecWindow}\n      handleInfoPopup={handleInfoPopup}\n      handleClueBtn={handleClueBtn}\n      requestFullscreen={requestFullscreen}\n      // size options\n      contentBoxWidth={contentBoxWidth}\n      contentBoxHeight={contentBoxHeight}\n      contentBoxFontSize={contentBoxFontSize}\n      changeContentFontSize={changeContentFontSize}\n      //sceneData\n      projectTitle={projectTitle}\n      currentScriptData={currentScriptData}\n      handleNextScript={handleNextScript}\n      handleNextDestination={handleNextDestination}\n      handleNextScene={handleNextScene}\n      onClickRestartBtn={onClickRestartBtn}\n      goal={goal}\n      outro={outroMedia}\n      chatHistory={chatHistory}\n      conditionCheck={conditionCheck}\n      setConditionCheck={setConditionCheck}\n      // codeEditor\n      codeEditor={codeEditor}\n      isReadOnly={isReadOnly}\n      setIsReadOnly={setIsReadOnly}\n      templateCode={templateCode}\n      sampleData={sampleData}\n      // infoPopup data\n      infoPopupData={infoPopupData}\n      isShowAnswerCode={isShowAnswerCode}\n      // show clear iamge\n      setIsShowClear={setIsShowClear}\n      // check Answer\n      isShowClear={isShowClear}\n      checkAnswer={checkAnswer}\n      // fail script\n      isShowFailScript={isShowFailScript}\n      answerFailScript={answerFailScript}\n      // finished project\n      onClickProjectReplay = { onClickProjectReplay }\n      onClickNextProjectPlay={ onClickNextProjectPlay }\n      // project Items\n      isShowProjectItems={isShowProjectItems}\n      // play sound\n      isPlayBGM={isPlayBGM}\n      isPlayEffect={isPlayEffect}\n      onSaveSettings={onSaveSettings}\n      //clue media\n      clueMedia={clueMedia}\n      myProjectId={props.match.params.myDreamProjectId}\n      studiedMinutes={studiedMinutes}\n      projectId={projectId}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}