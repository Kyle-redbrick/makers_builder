{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/SignIn/View.js\";\nimport React from 'react';\nimport \"./index.scss\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport Field from \"../Field\";\nimport { FIELD_TYPE } from \"../../Util/Constant\";\n\nfunction View(props) {\n  var intl = props.intl,\n      loginId = props.loginId,\n      password = props.password,\n      warning = props.warning,\n      passwordInputRef = props.passwordInputRef,\n      onChangeField = props.onChangeField,\n      onEnterLoginId = props.onEnterLoginId,\n      onClickLogin = props.onClickLogin,\n      onClickSignUp = props.onClickSignUp,\n      onClickFindLoginId = props.onClickFindLoginId,\n      onClickFindPassword = props.onClickFindPassword,\n      allFilled = props.allFilled;\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sign-in__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_SIGNIN_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sign-in__fields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Field.Text, {\n    id: FIELD_TYPE.LOGIN_ID,\n    title: intl.formatMessage({\n      id: \"ID_SIGNIN_ID\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"ID_SIGNIN_EMAIL_ID_PLACEHOLDER\"\n    }),\n    value: loginId,\n    onChange: onChangeField,\n    onKeyUp: function onKeyUp(e) {\n      if (e.keyCode === 13) onEnterLoginId();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Field.SecureText, {\n    id: FIELD_TYPE.PASSWORD,\n    title: intl.formatMessage({\n      id: \"ID_SIGNIN_PW\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"ID_SIGNIN_PW_PLACEHOLDER\"\n    }),\n    value: password,\n    onChange: onChangeField,\n    warning: warning,\n    onKeyUp: function onKeyUp(e) {\n      if (e.keyCode === 13) onClickLogin();\n    },\n    ref: passwordInputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sign-in__fields__finds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sign-in__fields__find\",\n    onClick: onClickFindLoginId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_SIGNIN_FORGOT_ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"|\"), React.createElement(\"span\", {\n    className: \"sign-in__fields__find\",\n    onClick: onClickFindPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_SIGNIN_FORGOTPW\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"sign-in__buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"sign-in__buttons__login valid--\".concat(allFilled),\n    onClick: onClickLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_SIGNIN_CONFIRM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"sign-in__buttons__desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_SIGNIN_SIGNUP_DESC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    className: \"sign-in__buttons__desc__signup\",\n    onClick: onClickSignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_SIGNUP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))));\n}\n\nexport default injectIntl(View);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/SignIn/View.js"],"names":["React","injectIntl","FormattedMessage","Field","FIELD_TYPE","View","props","intl","loginId","password","warning","passwordInputRef","onChangeField","onEnterLoginId","onClickLogin","onClickSignUp","onClickFindLoginId","onClickFindPassword","allFilled","LOGIN_ID","formatMessage","id","e","keyCode","PASSWORD"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./index.scss\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport Field from \"../Field\";\nimport { FIELD_TYPE } from \"../../Util/Constant\";\n\nfunction View(props) {\n  const {\n    intl,\n    loginId,\n    password,\n    warning,\n    passwordInputRef,\n    onChangeField,\n    onEnterLoginId,\n    onClickLogin,\n    onClickSignUp,\n    onClickFindLoginId,\n    onClickFindPassword,\n    allFilled\n  } = props;\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__title\">\n        <FormattedMessage id=\"ID_SIGNIN_TITLE\" />\n      </div>\n      <div className=\"sign-in__fields\">\n        <Field.Text\n          id={FIELD_TYPE.LOGIN_ID}\n          title={intl.formatMessage({id:\"ID_SIGNIN_ID\"})}\n          placeholder={intl.formatMessage({ id: `ID_SIGNIN_EMAIL_ID_PLACEHOLDER` })}\n          value={loginId}\n          onChange={onChangeField}\n          onKeyUp={e => { if (e.keyCode === 13) onEnterLoginId() }}\n        />\n        <Field.SecureText\n          id={FIELD_TYPE.PASSWORD}\n          title={intl.formatMessage({id:\"ID_SIGNIN_PW\"})}\n          placeholder={intl.formatMessage({ id: `ID_SIGNIN_PW_PLACEHOLDER` })}\n          value={password}\n          onChange={onChangeField}\n          warning={warning}\n          onKeyUp={e => { if (e.keyCode === 13) onClickLogin() }}\n          ref={passwordInputRef}\n        />\n        <div className=\"sign-in__fields__finds\">\n          <span className=\"sign-in__fields__find\" onClick={onClickFindLoginId}>\n            <FormattedMessage id=\"ID_SIGNIN_FORGOT_ID\" />\n          </span>\n          <span>|</span>\n          <span className=\"sign-in__fields__find\" onClick={onClickFindPassword}>\n            <FormattedMessage id=\"ID_SIGNIN_FORGOTPW\" />\n          </span>\n        </div>\n      </div>\n      <div className=\"sign-in__buttons\">\n        <button className={`sign-in__buttons__login valid--${allFilled}`} onClick={onClickLogin}>\n          <FormattedMessage id=\"ID_SIGNIN_CONFIRM\"/>\n        </button>\n        <p className=\"sign-in__buttons__desc\">\n          <FormattedMessage id=\"ID_SIGNIN_SIGNUP_DESC\"/>{\" \"}\n          <span className=\"sign-in__buttons__desc__signup\" onClick={onClickSignUp}>\n            <FormattedMessage id=\"ID_SIGNUP\"/>\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default injectIntl(View);\n"]},"metadata":{},"sourceType":"module"}