{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePreview } from './usePreview';\nimport { Context } from './Context';\n\nvar Preview = function Preview(props) {\n  var _usePreview = usePreview(),\n      display = _usePreview.display,\n      data = _objectWithoutProperties(_usePreview, [\"display\"]);\n\n  if (!display) {\n    return null;\n  }\n\n  var child;\n\n  if (props.children && typeof props.children === 'function') {\n    child = props.children(data);\n  } else if (props.children) {\n    child = props.children;\n  } else {\n    child = props.generator(data);\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Context.Provider, {\n      value: data\n    }, child)\n  );\n};\n\nPreview.propTypes = {\n  generator: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nexport { Preview };","map":null,"metadata":{},"sourceType":"module"}