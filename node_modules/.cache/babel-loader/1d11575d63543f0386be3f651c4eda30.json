{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Social/Comment/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport DraftEditor from \"../../../Common/Component/DraftEditor\";\nimport DreamReport from \"../../../Common/Component/DreamReport\";\nimport SignIn from \"../../../Common/Component/SignIn\";\nimport Menus from \"../Util/Menus\";\nimport { dateFormatter } from \"../Util/DateFormatter\";\nimport \"./index.scss\";\nimport { spamType } from \"../../../Common/Util/Constant\";\nimport checkBlockedUser from \"../../../Common/Util/CheckBlockedUser\";\nimport moreImg from \"../../../Image/social_more.svg\";\nimport likeImg from \"../../../Image/social_like.svg\";\nimport likeActiveImg from \"../../../Image/social_like-active.svg\";\nimport mediaImageImg from \"../../../Image/social_media_image.svg\";\nimport arrowDownImg from \"../../../Image/social_arrow-down.svg\";\nimport officialIcon from \"../../../Image/certification-mark.svg\";\n\nvar Comment = /*#__PURE__*/function (_Component) {\n  _inherits(Comment, _Component);\n\n  var _super = _createSuper(Comment);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _super.call(this, props);\n\n    _this.addComment = function () {\n      var formatMessage = _this.props.intl.formatMessage;\n      var isBlocked = checkBlockedUser(_this.props.user);\n\n      if (isBlocked) {\n        return;\n      }\n\n      var contents = _this.draftEditor.getContents();\n\n      if (_this.draftEditor.getText().length > 1000) {\n        showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n          title: formatMessage({\n            id: \"ID_SOCIAL_WARNNING\"\n          }),\n          buttonName: formatMessage({\n            id: \"ID_BUILDER_ALERT_CONFIRMBTN\"\n          }),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        }), {\n          darkmode: true,\n          dismissButton: false\n        });\n        return;\n      }\n\n      if (contents) {\n        var _this$props = _this.props,\n            user = _this$props.user,\n            article = _this$props.article,\n            parentCommentId = _this$props.parentCommentId;\n        request.addSocialComment({\n          email: user.email,\n          articleId: article.id,\n          parentCommentId: parentCommentId,\n          text: _this.draftEditor.getText(),\n          contents: JSON.stringify(contents)\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            if (parentCommentId) {\n              _this.props.onAddNewReply(json.comment);\n            } else {\n              _this.props.onAddNewComment(json.comment);\n            }\n\n            _this.draftEditor.emptyContents();\n          } else {\n            if (json.spam) {\n              var title;\n\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: title\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_SPAM_POPUP_CONFIRM\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 17\n                }\n              }), {\n                darkmode: true,\n                dismissButton: false,\n                dismissOverlay: true\n              });\n            }\n          }\n        });\n      } else {\n        showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n          title: formatMessage({\n            id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\"\n          }),\n          buttonName: formatMessage({\n            id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n          }),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }\n        }), {\n          dismissOverlay: true,\n          dismissButton: false,\n          darkmode: true\n        });\n      }\n    };\n\n    _this.updateComment = function () {\n      var formatMessage = _this.props.intl.formatMessage;\n\n      var contents = _this.draftEditor.getContents();\n\n      if (contents) {\n        request.updateSocialComment({\n          id: _this.props.comment.id,\n          text: _this.draftEditor.getText(),\n          contents: JSON.stringify(contents)\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            _this.setState({\n              readonly: true\n            }, function () {\n              _this.draftEditor.setContents(contents);\n            });\n          }\n        });\n      } else {\n        showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n          title: formatMessage({\n            id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\"\n          }),\n          buttonName: formatMessage({\n            id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n          }),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }\n        }), {\n          dismissOverlay: true,\n          dismissButton: false,\n          darkmode: true\n        });\n      }\n    };\n\n    _this.setFolding = function () {\n      if (_this.state.readonly) {\n        var id = _this.props.comment.id;\n        var draftEditor = document.getElementById(\"comment_contents-\".concat(id));\n\n        if (draftEditor) {\n          var height = draftEditor.offsetHeight;\n\n          if (height < 180) {\n            _this.setState({\n              fold: false\n            });\n          }\n        }\n      }\n    };\n\n    _this.setDraftEditorRef = function (draftEditor) {\n      if (draftEditor) _this.draftEditor = draftEditor;\n    };\n\n    _this.onChangeContents = function (contents) {\n      _this.contents = contents;\n    };\n\n    _this.onClickUser = function () {\n      if (_this.state.readonly) {\n        var user = _this.props.comment.user;\n        window.scrollTo(0, 0);\n\n        _this.props.history.push(\"/userpage/\".concat(user.id));\n      }\n    };\n\n    _this.onClickContentsMore = function () {\n      _this.setState({\n        fold: false\n      });\n    };\n\n    _this.onClickLike = function () {\n      if (_this.lastLikeTime) {\n        if (new Date().getTime() - _this.lastLikeTime < 1200) {\n          _this.lastLikeTime = new Date().getTime();\n          showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n            title: _this.props.intl.formatMessage({\n              id: \"ID_POPUP_WARNING_REPEAT_CLICK_TITLE\"\n            }),\n            buttonName: _this.props.intl.formatMessage({\n              id: \"ID_POPUP_WARNING_REPEAT_CLICK_BTN\"\n            }),\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 11\n            }\n          }), {\n            darkmode: true\n          });\n          return;\n        }\n      }\n\n      _this.lastLikeTime = new Date().getTime();\n      var _this$props2 = _this.props,\n          user = _this$props2.user,\n          comment = _this$props2.comment;\n      var email = user.email;\n\n      if (email) {\n        request.likeSocialComment({\n          email: email,\n          commentId: comment.id\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          var isLiked = json.isLiked;\n\n          _this.setState(function (prevState) {\n            return {\n              isLiked: isLiked,\n              likeCount: prevState.likeCount + (isLiked ? 1 : -1)\n            };\n          });\n        });\n      } else {\n        showPopUp( /*#__PURE__*/React.createElement(SignIn, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }\n        }), {\n          darkmode: true,\n          mobileFullscreen: true\n        });\n      }\n    };\n\n    _this.onClickNewReply = function () {\n      var email = _this.props.user.email;\n\n      if (email) {\n        _this.props.onClickNewReply();\n      } else {\n        showPopUp( /*#__PURE__*/React.createElement(SignIn, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }\n        }), {\n          darkmode: true,\n          mobileFullscreen: true\n        });\n      }\n    };\n\n    _this.onClickSelectQuest = function () {\n      var formatMessage = _this.props.intl.formatMessage;\n      showPopUp( /*#__PURE__*/React.createElement(PopUp.TwoButton, {\n        title: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_QUESTSELECT_TITLE\"\n        }),\n        cancelButtonName: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_QUESTSELECT_CANCEL\"\n        }),\n        confirmButtonName: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_QUESTSELECT_CONFIRM\"\n        }),\n        confirmAction: function confirmAction() {\n          _this.setState({\n            questSelected: true\n          });\n\n          _this.props.onClickSelectQuest(_this.props.comment.id);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 7\n        }\n      }), {\n        dismissButton: false,\n        darkmode: true\n      });\n    };\n\n    _this.onClickCommentsMore = function () {\n      var childComments = _this.state.childComments;\n      var childCommentsMax = _this.state.childCommentsMax + 2;\n      if (childCommentsMax > childComments.length) childCommentsMax = childComments.length;\n\n      _this.setState({\n        childCommentsMax: childCommentsMax\n      });\n    };\n\n    _this.onClickSubmit = function () {\n      if (_this.props.comment) {\n        _this.updateComment();\n      } else {\n        _this.addComment();\n      }\n    };\n\n    _this.onClickMore = function () {\n      if (!_this.state.readonly) return;\n      var menus = [];\n      var _this$props3 = _this.props,\n          user = _this$props3.user,\n          comment = _this$props3.comment,\n          intl = _this$props3.intl;\n      var deleted = comment.deleted;\n      var formatMessage = intl.formatMessage; // const shareMenu = {\n      //   name: \"공유하기\",\n      //   onClick: this.onClickShare\n      // };\n      // menus.push(shareMenu);\n\n      if (!deleted && user.email === comment.user.email) {\n        var editMenu = {\n          name: formatMessage({\n            id: \"ID_SOCIAL_MORE_UPDATE\"\n          }),\n          onClick: _this.onClickUpdate\n        };\n        menus.push(editMenu);\n        var deleteMenu = {\n          name: formatMessage({\n            id: \"ID_SOCIAL_MORE_DELTE\"\n          }),\n          onClick: _this.onClickDelete\n        };\n        menus.push(deleteMenu);\n      }\n\n      var reportMenu = {\n        name: formatMessage({\n          id: \"ID_SOCIAL_MORE_REPORT\"\n        }),\n        onClick: _this.onClickReport\n      };\n      menus.push(reportMenu);\n      showPopUp( /*#__PURE__*/React.createElement(Menus, {\n        menus: menus,\n        cancelButtonName: formatMessage({\n          id: \"ID_SOCIAL_MORE_CANCEL\"\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 7\n        }\n      }), {\n        dismissOverlay: true,\n        dismissButton: false,\n        defaultPadding: false,\n        darkmode: true\n      });\n    };\n\n    _this.onClickUpdate = function () {\n      _this.setState({\n        readonly: false\n      }, function () {\n        _this.draftEditor.setContents(_this.props.comment.contents);\n      });\n    };\n\n    _this.onClickDelete = function () {\n      var formatMessage = _this.props.intl.formatMessage;\n      showPopUp( /*#__PURE__*/React.createElement(PopUp.TwoButton, {\n        title: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_TITLE\"\n        }),\n        cancelButtonName: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CANCEL\"\n        }),\n        confirmButtonName: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CONFIRM\"\n        }),\n        confirmAction: function confirmAction() {\n          request.deleteSocialComment(_this.props.comment.id).then(function (res) {\n            return res.json();\n          }).then(function (json) {\n            if (json.success) {\n              _this.setState({\n                fold: false,\n                deleted: true\n              }, function () {\n                showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                  title: formatMessage({\n                    id: \"ID_SOCIAL_COMMENT_DELETED_TITLE\"\n                  }),\n                  buttonName: formatMessage({\n                    id: \"ID_SOCIAL_COMMENT_DELETED_CONFIRM\"\n                  }),\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 21\n                  }\n                }), {\n                  dismissOverlay: true,\n                  dismissButton: false,\n                  darkmode: true\n                });\n              });\n            }\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 7\n        }\n      }), {\n        dismissOverlay: true,\n        dismissButton: false,\n        darkmode: true\n      });\n    };\n\n    _this.onClickReport = function () {\n      if (_this.props.user.id) {\n        showPopUp( /*#__PURE__*/React.createElement(DreamReport, {\n          targetType: \"socialComment\",\n          targetContentId: _this.props.comment.id,\n          targetUserId: _this.props.comment.user.id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 9\n          }\n        }), {\n          darkmode: true,\n          mobileFullscreen: false,\n          dismissButton: false\n        });\n      } else {\n        showPopUp( /*#__PURE__*/React.createElement(SignIn, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }\n        }), {\n          darkmode: true,\n          mobileFullscreen: true\n        });\n      }\n    };\n\n    _this.onAddNewReply = function (comment) {\n      _this.props.onClickNewReply();\n\n      _this.setState(function (prevState) {\n        return {\n          childComments: [].concat(prevState.childComments, _objectSpread({}, comment, {\n            contents: JSON.parse(comment.contents),\n            createdAt: dateFormatter(comment.createdAt)\n          })),\n          childCommentsMax: prevState.childCommentsMax + 1\n        };\n      });\n    };\n\n    var _comment = props.comment;\n\n    if (_comment) {\n      _this.contents = _comment.contents;\n      var childComments = _comment.childComments ? _comment.childComments.map(function (childComment) {\n        return _objectSpread({}, childComment, {\n          contents: JSON.parse(childComment.contents),\n          createdAt: dateFormatter(childComment.createdAt)\n        });\n      }) : [];\n      _this.state = {\n        readonly: true,\n        fold: true && !_comment.deleted,\n        deleted: _comment.deleted,\n        isLiked: _comment.isLiked,\n        likeCount: _comment.likeCount,\n        questSelected: _comment.questSelected,\n        childComments: childComments,\n        childCommentsMax: 2\n      };\n    } else {\n      _this.state = {\n        readonly: false,\n        fold: true\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          readonly = _this$state.readonly,\n          deleted = _this$state.deleted;\n\n      if (readonly && !deleted) {\n        this.draftEditor.setContents(this.props.comment.contents);\n        setTimeout(function () {\n          _this2.setFolding();\n        }, 100);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          readonly = _this$state2.readonly,\n          fold = _this$state2.fold,\n          deleted = _this$state2.deleted,\n          isLiked = _this$state2.isLiked,\n          likeCount = _this$state2.likeCount,\n          questSelected = _this$state2.questSelected,\n          childComments = _this$state2.childComments,\n          childCommentsMax = _this$state2.childCommentsMax;\n      var formatMessage = this.props.intl.formatMessage;\n\n      var _ref = readonly ? this.props.comment : {},\n          id = _ref.id,\n          createdAt = _ref.createdAt,\n          showNewReply = _ref.showNewReply;\n\n      var user = readonly ? this.props.comment.user : this.props.user;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment_user_img\",\n        src: user.icon,\n        alt: user.name,\n        onClick: this.onClickUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 9\n        }\n      }, readonly ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_user_name\",\n        onClick: this.onClickUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 17\n        }\n      }, user.name), user.isOfficial && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_user_official\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment_user_official_img\",\n        src: officialIcon,\n        alt: user.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }\n      })), readonly && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment_more\",\n        src: moreImg,\n        alt: \"more\",\n        onClick: this.onClickMore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"comment_contents-\".concat(id),\n        className: \"comment_contents comment_contents-readonly \".concat(fold ? \"comment_contents-fold\" : \"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }\n      }, deleted ? formatMessage({\n        id: \"ID_SOCIAL_COMMENT_DELETED\"\n      }) : /*#__PURE__*/React.createElement(DraftEditor, {\n        ref: this.setDraftEditorRef,\n        readonly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 19\n        }\n      })), fold && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_contents_more\",\n        onClick: this.onClickContentsMore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_contents_more_text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 19\n        }\n      }, formatMessage({\n        id: \"ID_SOCIAL_COMMENT_CONTENTS_MORE\"\n      })), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment_contents_more_img\",\n        src: arrowDownImg,\n        alt: \"arrowDown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"comment_action comment_action-disabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 17\n        }\n      }, createdAt), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment_action_img\",\n        src: isLiked ? likeActiveImg : likeImg,\n        alt: \"like\",\n        onClick: this.onClickLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"comment_action\",\n        onClick: this.onClickLike,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 17\n        }\n      }, likeCount), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"comment_action\",\n        onClick: this.onClickNewReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 17\n        }\n      }, formatMessage({\n        id: \"ID_SOCIAL_COMMENT_ACTIONS_REPLY\"\n      })), this.props.article.questPoint > 0 && this.props.user.email === this.props.article.user.email && this.props.user.email !== this.props.comment.user.email && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"comment_action \".concat(questSelected ? \"comment_action-active comment_action-disabled\" : \"\"),\n        onClick: function onClick() {\n          if (questSelected) return;\n\n          _this3.onClickSelectQuest();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 23\n        }\n      }, questSelected ? formatMessage({\n        id: \"ID_SOCIAL_COMMENT_ACTIONS_QUEST_SELECTED\"\n      }) : formatMessage({\n        id: \"ID_SOCIAL_COMMENT_ACTIONS_QUEST_SELECT\"\n      }))), childComments.length > childCommentsMax && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"comment_action\",\n        onClick: this.onClickCommentsMore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 19\n        }\n      }, formatMessage({\n        id: \"ID_SOCIAL_COMMENT_COMMENTS_MORE\"\n      }))), showNewReply && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_newcomment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        intl: this.props.intl,\n        user: this.props.user,\n        article: this.props.article,\n        parentCommentId: id,\n        onAddNewReply: this.onAddNewReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 19\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_edtior\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(DraftEditor, {\n        ref: this.setDraftEditorRef,\n        readonly: false,\n        onChangeContents: this.onChangeContents,\n        placeholder: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_PLACEHOLDER\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment_edtior_media\",\n        src: mediaImageImg,\n        alt: \"mediaImage\",\n        onClick: function onClick() {\n          _this3.draftEditor.onClickFile();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_edtior_submit\",\n        onClick: this.onClickSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 17\n        }\n      }, formatMessage({\n        id: \"ID_SOCIAL_COMMENT_SUBMIT\"\n      })))), childComments && childComments.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment_childcomments\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }\n      }, childComments.slice(childComments.length - childCommentsMax, childComments.length).map(function (childComment, index) {\n        return /*#__PURE__*/React.createElement(Comment, {\n          key: childComment.id,\n          intl: _this3.props.intl,\n          user: _this3.props.user,\n          article: _this3.props.article,\n          comment: childComment,\n          onClickNewReply: _this3.onClickNewReply,\n          onClickSelectQuest: _this3.props.onClickSelectQuest,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 19\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    user: state.userinfo\n  };\n})(withRouter(injectIntl(Comment)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Social/Comment/index.js"],"names":["React","Component","connect","injectIntl","withRouter","request","PopUp","showPopUp","DraftEditor","DreamReport","SignIn","Menus","dateFormatter","spamType","checkBlockedUser","Comment","props","addComment","formatMessage","intl","isBlocked","user","contents","draftEditor","getContents","getText","length","id","darkmode","dismissButton","article","parentCommentId","addSocialComment","email","articleId","text","JSON","stringify","then","res","json","success","onAddNewReply","comment","onAddNewComment","emptyContents","spam","title","SPAM_BAD_WORD","SPAM_DUPLICATION","SPAM_TIME","dismissOverlay","updateComment","updateSocialComment","setState","readonly","setContents","setFolding","state","document","getElementById","height","offsetHeight","fold","setDraftEditorRef","onChangeContents","onClickUser","window","scrollTo","history","push","onClickContentsMore","onClickLike","lastLikeTime","Date","getTime","likeSocialComment","commentId","isLiked","prevState","likeCount","mobileFullscreen","onClickNewReply","onClickSelectQuest","questSelected","onClickCommentsMore","childComments","childCommentsMax","onClickSubmit","onClickMore","menus","deleted","editMenu","name","onClick","onClickUpdate","deleteMenu","onClickDelete","reportMenu","onClickReport","defaultPadding","deleteSocialComment","concat","parse","createdAt","map","childComment","setTimeout","showNewReply","icon","isOfficial","officialIcon","moreImg","arrowDownImg","likeActiveImg","likeImg","questPoint","mediaImageImg","onClickFile","slice","index","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport DraftEditor from \"../../../Common/Component/DraftEditor\";\nimport DreamReport from \"../../../Common/Component/DreamReport\";\nimport SignIn from \"../../../Common/Component/SignIn\";\nimport Menus from \"../Util/Menus\";\nimport { dateFormatter } from \"../Util/DateFormatter\";\nimport \"./index.scss\";\nimport { spamType } from \"../../../Common/Util/Constant\";\nimport checkBlockedUser from \"../../../Common/Util/CheckBlockedUser\";\nimport moreImg from \"../../../Image/social_more.svg\";\nimport likeImg from \"../../../Image/social_like.svg\";\nimport likeActiveImg from \"../../../Image/social_like-active.svg\";\nimport mediaImageImg from \"../../../Image/social_media_image.svg\";\nimport arrowDownImg from \"../../../Image/social_arrow-down.svg\";\nimport officialIcon from \"../../../Image/certification-mark.svg\";\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    const { comment } = props;\n    if (comment) {\n      this.contents = comment.contents;\n      const childComments = comment.childComments\n        ? comment.childComments.map(childComment => ({\n            ...childComment,\n            contents: JSON.parse(childComment.contents),\n            createdAt: dateFormatter(childComment.createdAt)\n          }))\n        : [];\n      this.state = {\n        readonly: true,\n        fold: true && !comment.deleted,\n        deleted: comment.deleted,\n        isLiked: comment.isLiked,\n        likeCount: comment.likeCount,\n        questSelected: comment.questSelected,\n        childComments,\n        childCommentsMax: 2\n      };\n    } else {\n      this.state = { readonly: false, fold: true };\n    }\n  }\n  componentDidMount() {\n    const { readonly, deleted } = this.state;\n    if (readonly && !deleted) {\n      this.draftEditor.setContents(this.props.comment.contents);\n      setTimeout(() => {\n        this.setFolding();\n      }, 100);\n    }\n  }\n  addComment = () => {\n    const { formatMessage } = this.props.intl;\n    const isBlocked = checkBlockedUser(this.props.user);\n    if (isBlocked) {\n      return;\n    }\n\n    const contents = this.draftEditor.getContents();\n\n    if (this.draftEditor.getText().length > 1000) {\n      showPopUp(\n        <PopUp.OneButton\n          title={formatMessage({ id: \"ID_SOCIAL_WARNNING\" })}\n          buttonName={formatMessage({\n            id: \"ID_BUILDER_ALERT_CONFIRMBTN\"\n          })}\n        />,\n        { darkmode: true, dismissButton: false }\n      );\n\n      return;\n    }\n\n    if (contents) {\n      const { user, article, parentCommentId } = this.props;\n      request\n        .addSocialComment({\n          email: user.email,\n          articleId: article.id,\n          parentCommentId,\n          text: this.draftEditor.getText(),\n          contents: JSON.stringify(contents)\n        })\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            if (parentCommentId) {\n              this.props.onAddNewReply(json.comment);\n            } else {\n              this.props.onAddNewComment(json.comment);\n            }\n            this.draftEditor.emptyContents();\n          } else {\n            if (json.spam) {\n              let title;\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n                default:\n                  break;\n              }\n\n              showPopUp(\n                <PopUp.OneButton\n                  title={formatMessage({ id: title })}\n                  buttonName={formatMessage({\n                    id: \"ID_SPAM_POPUP_CONFIRM\"\n                  })}\n                />,\n                {\n                  darkmode: true,\n                  dismissButton: false,\n                  dismissOverlay: true\n                }\n              );\n            }\n          }\n        });\n    } else {\n      showPopUp(\n        <PopUp.OneButton\n          title={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\" })}\n          buttonName={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\" })}\n        />,\n        {\n          dismissOverlay: true,\n          dismissButton: false,\n          darkmode: true\n        }\n      );\n    }\n  };\n  updateComment = () => {\n    const { formatMessage } = this.props.intl;\n    const contents = this.draftEditor.getContents();\n    if (contents) {\n      request\n        .updateSocialComment({\n          id: this.props.comment.id,\n          text: this.draftEditor.getText(),\n          contents: JSON.stringify(contents)\n        })\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            this.setState({ readonly: true }, () => {\n              this.draftEditor.setContents(contents);\n            });\n          }\n        });\n    } else {\n      showPopUp(\n        <PopUp.OneButton\n          title={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\" })}\n          buttonName={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\" })}\n        />,\n        {\n          dismissOverlay: true,\n          dismissButton: false,\n          darkmode: true\n        }\n      );\n    }\n  };\n\n  // util\n  setFolding = () => {\n    if (this.state.readonly) {\n      const { id } = this.props.comment;\n      const draftEditor = document.getElementById(`comment_contents-${id}`);\n      if (draftEditor) {\n        const height = draftEditor.offsetHeight;\n        if (height < 180) {\n          this.setState({ fold: false });\n        }\n      }\n    }\n  };\n\n  // draft\n  setDraftEditorRef = draftEditor => {\n    if (draftEditor) this.draftEditor = draftEditor;\n  };\n  onChangeContents = contents => {\n    this.contents = contents;\n  };\n\n  // actions\n  onClickUser = () => {\n    if (this.state.readonly) {\n      const { user } = this.props.comment;\n      window.scrollTo(0, 0);\n      this.props.history.push(`/userpage/${user.id}`);\n    }\n  };\n  onClickContentsMore = () => {\n    this.setState({ fold: false });\n  };\n  onClickLike = () => {\n    if (this.lastLikeTime) {\n      if (new Date().getTime() - this.lastLikeTime < 1200) {\n        this.lastLikeTime = new Date().getTime();\n        showPopUp(\n          <PopUp.OneButton\n            title={this.props.intl.formatMessage({\n              id: \"ID_POPUP_WARNING_REPEAT_CLICK_TITLE\"\n            })}\n            buttonName={this.props.intl.formatMessage({\n              id: \"ID_POPUP_WARNING_REPEAT_CLICK_BTN\"\n            })}\n          />,\n          { darkmode: true }\n        );\n        return;\n      }\n    }\n    this.lastLikeTime = new Date().getTime();\n\n    const { user, comment } = this.props;\n    const { email } = user;\n    if (email) {\n      request\n        .likeSocialComment({ email, commentId: comment.id })\n        .then(res => res.json())\n        .then(json => {\n          const { isLiked } = json;\n          this.setState(prevState => ({\n            isLiked,\n            likeCount: prevState.likeCount + (isLiked ? 1 : -1)\n          }));\n        });\n    } else {\n      showPopUp(<SignIn />, { darkmode: true, mobileFullscreen: true });\n    }\n  };\n  onClickNewReply = () => {\n    const { email } = this.props.user;\n    if (email) {\n      this.props.onClickNewReply();\n    } else {\n      showPopUp(<SignIn />, { darkmode: true, mobileFullscreen: true });\n    }\n  };\n  onClickSelectQuest = () => {\n    const { formatMessage } = this.props.intl;\n    showPopUp(\n      <PopUp.TwoButton\n        title={formatMessage({ id: \"ID_SOCIAL_COMMENT_QUESTSELECT_TITLE\" })}\n        cancelButtonName={formatMessage({\n          id: \"ID_SOCIAL_COMMENT_QUESTSELECT_CANCEL\"\n        })}\n        confirmButtonName={formatMessage({\n          id: \"ID_SOCIAL_COMMENT_QUESTSELECT_CONFIRM\"\n        })}\n        confirmAction={() => {\n          this.setState({ questSelected: true });\n          this.props.onClickSelectQuest(this.props.comment.id);\n        }}\n      />,\n      { dismissButton: false, darkmode: true }\n    );\n  };\n  onClickCommentsMore = () => {\n    const { childComments } = this.state;\n    let childCommentsMax = this.state.childCommentsMax + 2;\n    if (childCommentsMax > childComments.length)\n      childCommentsMax = childComments.length;\n    this.setState({ childCommentsMax });\n  };\n  onClickSubmit = () => {\n    if (this.props.comment) {\n      this.updateComment();\n    } else {\n      this.addComment();\n    }\n  };\n\n  // more\n  onClickMore = () => {\n    if (!this.state.readonly) return;\n\n    const menus = [];\n    const { user, comment, intl } = this.props;\n    const { deleted } = comment;\n    const { formatMessage } = intl;\n    // const shareMenu = {\n    //   name: \"공유하기\",\n    //   onClick: this.onClickShare\n    // };\n    // menus.push(shareMenu);\n    if (!deleted && user.email === comment.user.email) {\n      const editMenu = {\n        name: formatMessage({ id: \"ID_SOCIAL_MORE_UPDATE\" }),\n        onClick: this.onClickUpdate\n      };\n      menus.push(editMenu);\n      const deleteMenu = {\n        name: formatMessage({ id: \"ID_SOCIAL_MORE_DELTE\" }),\n        onClick: this.onClickDelete\n      };\n      menus.push(deleteMenu);\n    }\n    const reportMenu = {\n      name: formatMessage({ id: \"ID_SOCIAL_MORE_REPORT\" }),\n      onClick: this.onClickReport\n    };\n    menus.push(reportMenu);\n    showPopUp(\n      <Menus\n        menus={menus}\n        cancelButtonName={formatMessage({ id: \"ID_SOCIAL_MORE_CANCEL\" })}\n      />,\n      {\n        dismissOverlay: true,\n        dismissButton: false,\n        defaultPadding: false,\n        darkmode: true\n      }\n    );\n  };\n  onClickUpdate = () => {\n    this.setState({ readonly: false }, () => {\n      this.draftEditor.setContents(this.props.comment.contents);\n    });\n  };\n  onClickDelete = () => {\n    const { formatMessage } = this.props.intl;\n    showPopUp(\n      <PopUp.TwoButton\n        title={formatMessage({ id: \"ID_SOCIAL_COMMENT_DELETE_TITLE\" })}\n        cancelButtonName={formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CANCEL\"\n        })}\n        confirmButtonName={formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CONFIRM\"\n        })}\n        confirmAction={() => {\n          request\n            .deleteSocialComment(this.props.comment.id)\n            .then(res => res.json())\n            .then(json => {\n              if (json.success) {\n                this.setState({ fold: false, deleted: true }, () => {\n                  showPopUp(\n                    <PopUp.OneButton\n                      title={formatMessage({\n                        id: \"ID_SOCIAL_COMMENT_DELETED_TITLE\"\n                      })}\n                      buttonName={formatMessage({\n                        id: \"ID_SOCIAL_COMMENT_DELETED_CONFIRM\"\n                      })}\n                    />,\n                    {\n                      dismissOverlay: true,\n                      dismissButton: false,\n                      darkmode: true\n                    }\n                  );\n                });\n              }\n            });\n        }}\n      />,\n      {\n        dismissOverlay: true,\n        dismissButton: false,\n        darkmode: true\n      }\n    );\n  };\n  onClickReport = () => {\n    if (this.props.user.id) {\n      showPopUp(\n        <DreamReport\n          targetType=\"socialComment\"\n          targetContentId={this.props.comment.id}\n          targetUserId={this.props.comment.user.id}\n        />,\n        {\n          darkmode: true,\n          mobileFullscreen: false,\n          dismissButton: false\n        }\n      );\n    } else {\n      showPopUp(<SignIn />, {\n        darkmode: true,\n        mobileFullscreen: true\n      });\n    }\n  };\n\n  // events\n  onAddNewReply = comment => {\n    this.props.onClickNewReply();\n    this.setState(prevState => ({\n      childComments: [].concat(prevState.childComments, {\n        ...comment,\n        contents: JSON.parse(comment.contents),\n        createdAt: dateFormatter(comment.createdAt)\n      }),\n      childCommentsMax: prevState.childCommentsMax + 1\n    }));\n  };\n\n  render() {\n    const {\n      readonly,\n      fold,\n      deleted,\n      isLiked,\n      likeCount,\n      questSelected,\n      childComments,\n      childCommentsMax\n    } = this.state;\n    const { formatMessage } = this.props.intl;\n    const { id, createdAt, showNewReply } = readonly ? this.props.comment : {};\n    const user = readonly ? this.props.comment.user : this.props.user;\n\n    return (\n      <div className=\"comment\">\n        <img\n          className=\"comment_user_img\"\n          src={user.icon}\n          alt={user.name}\n          onClick={this.onClickUser}\n        />\n        <div className=\"comment_section\">\n          {readonly ? (\n            <>\n              {/* ===== 헤더 ============================== */}\n              <div className=\"comment_header\">\n                <div className=\"comment_user_name\" onClick={this.onClickUser}>\n                  {user.name}\n                </div>\n                {user.isOfficial && (\n                  <div className=\"comment_user_official\">\n                    <img\n                      className=\"comment_user_official_img\"\n                      src={officialIcon}\n                      alt={user.name}\n                    />\n                  </div>\n                )}\n                {/* <div className=\"comment_user_level\">GOLD</div> */}\n                {readonly && (\n                  <img\n                    className=\"comment_more\"\n                    src={moreImg}\n                    alt=\"more\"\n                    onClick={this.onClickMore}\n                  />\n                )}\n              </div>\n              {/* ===== 콘텐츠 ============================== */}\n              <div\n                id={`comment_contents-${id}`}\n                className={`comment_contents comment_contents-readonly ${\n                  fold ? \"comment_contents-fold\" : \"\"\n                }`}\n              >\n                {deleted ? (\n                  formatMessage({ id: \"ID_SOCIAL_COMMENT_DELETED\" })\n                ) : (\n                  <DraftEditor ref={this.setDraftEditorRef} readonly={true} />\n                )}\n              </div>\n              {fold && (\n                <div\n                  className=\"comment_contents_more\"\n                  onClick={this.onClickContentsMore}\n                >\n                  <div className=\"comment_contents_more_text\">\n                    {formatMessage({ id: \"ID_SOCIAL_COMMENT_CONTENTS_MORE\" })}\n                  </div>\n                  <img\n                    className=\"comment_contents_more_img\"\n                    src={arrowDownImg}\n                    alt=\"arrowDown\"\n                  />\n                </div>\n              )}\n              {/* ===== 액션 ============================== */}\n              <div className=\"comment_actions\">\n                <button className=\"comment_action comment_action-disabled\">\n                  {createdAt}\n                </button>\n                <img\n                  className=\"comment_action_img\"\n                  src={isLiked ? likeActiveImg : likeImg}\n                  alt=\"like\"\n                  onClick={this.onClickLike}\n                />\n                <button className=\"comment_action\" onClick={this.onClickLike}>\n                  {likeCount}\n                </button>\n                <button\n                  className=\"comment_action\"\n                  onClick={this.onClickNewReply}\n                >\n                  {formatMessage({ id: \"ID_SOCIAL_COMMENT_ACTIONS_REPLY\" })}\n                </button>\n                {this.props.article.questPoint > 0 &&\n                  this.props.user.email === this.props.article.user.email &&\n                  this.props.user.email !== this.props.comment.user.email && (\n                    <>\n                      <button\n                        className={`comment_action ${\n                          questSelected\n                            ? \"comment_action-active comment_action-disabled\"\n                            : \"\"\n                        }`}\n                        onClick={() => {\n                          if (questSelected) return;\n                          this.onClickSelectQuest();\n                        }}\n                      >\n                        {questSelected\n                          ? formatMessage({\n                              id: \"ID_SOCIAL_COMMENT_ACTIONS_QUEST_SELECTED\"\n                            })\n                          : formatMessage({\n                              id: \"ID_SOCIAL_COMMENT_ACTIONS_QUEST_SELECT\"\n                            })}\n                      </button>\n                    </>\n                  )}\n                {childComments.length > childCommentsMax && (\n                  <button\n                    className=\"comment_action\"\n                    onClick={this.onClickCommentsMore}\n                  >\n                    {formatMessage({ id: \"ID_SOCIAL_COMMENT_COMMENTS_MORE\" })}\n                  </button>\n                )}\n              </div>\n              {/* ===== 답글쓰기 ============================== */}\n              {showNewReply && (\n                <div className=\"comment_newcomment\">\n                  <Comment\n                    intl={this.props.intl}\n                    user={this.props.user}\n                    article={this.props.article}\n                    parentCommentId={id}\n                    onAddNewReply={this.onAddNewReply}\n                  />\n                </div>\n              )}\n            </>\n          ) : (\n            <>\n              {/* ===== 수정 ============================== */}\n              <div className=\"comment_edtior\">\n                <DraftEditor\n                  ref={this.setDraftEditorRef}\n                  readonly={false}\n                  onChangeContents={this.onChangeContents}\n                  placeholder={formatMessage({\n                    id: \"ID_SOCIAL_COMMENT_PLACEHOLDER\"\n                  })}\n                />\n                <img\n                  className=\"comment_edtior_media\"\n                  src={mediaImageImg}\n                  alt=\"mediaImage\"\n                  onClick={() => {\n                    this.draftEditor.onClickFile();\n                  }}\n                />\n                <div\n                  className=\"comment_edtior_submit\"\n                  onClick={this.onClickSubmit}\n                >\n                  {formatMessage({ id: \"ID_SOCIAL_COMMENT_SUBMIT\" })}\n                </div>\n              </div>\n            </>\n          )}\n          {/* ===== 답글목록 ============================== */}\n          {childComments && childComments.length > 0 && (\n            <div className=\"comment_childcomments\">\n              {childComments\n                .slice(\n                  childComments.length - childCommentsMax,\n                  childComments.length\n                )\n                .map((childComment, index) => (\n                  <Comment\n                    key={childComment.id}\n                    intl={this.props.intl}\n                    user={this.props.user}\n                    article={this.props.article}\n                    comment={childComment}\n                    onClickNewReply={this.onClickNewReply}\n                    onClickSelectQuest={this.props.onClickSelectQuest}\n                  />\n                ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({ user: state.userinfo }))(\n  withRouter(injectIntl(Comment))\n);\n"]},"metadata":{},"sourceType":"module"}