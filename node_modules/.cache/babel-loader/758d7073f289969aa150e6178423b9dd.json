{"ast":null,"code":"import { WizSpritePrefix as PREFIX, EDITORMODE } from \"../../../../Common/Util/Constant\";\nimport OOBC from \"../../../../Common/Component/OOBCEditor/OOBC\";\nimport Parser from \"../parser\";\nexport default function createUserScript(gameData, options) {\n  var _ref = gameData || {},\n      sceneIds = _ref.sceneIds,\n      scenes = _ref.scenes;\n\n  var _ref2 = options || {},\n      onParseError = _ref2.onParseError;\n\n  var userScript = \"\\n    var userScripts = {};\\n  \";\n  sceneIds.forEach(function (sceneId) {\n    userScript += \"\\n      userScripts[\\\"\".concat(sceneId, \"\\\"] = {};\\n    \");\n    var scene = scenes[sceneId];\n    var gameObjectIds = scene.gameObjectIds;\n    var gameObjects = scene.gameObjects;\n    gameObjectIds.forEach(function (gameObjId) {\n      var gameObject = gameObjects[gameObjId];\n      var parsedCode;\n\n      try {\n        parsedCode = parseCodeWithMode(gameObject.code, EDITORMODE.JAVASCRIPT_3D);\n      } catch (error) {\n        console.error(error);\n\n        if (onParseError) {\n          onParseError(error, {\n            sceneId: sceneId,\n            spriteId: gameObjId\n          });\n        }\n      }\n\n      userScript += \"\\n        userScripts[\\\"\".concat(sceneId, \"\\\"][\\\"\").concat(gameObjId, \"\\\"] = async function(\").concat(PREFIX, \") {\\n          try {\\n            \").concat(parsedCode, \"\\n          } catch(error) {\\n            console.error(error);\\n            parent.postMessage({ \\n              source: \\\"wizlab\\\",\\n              type: \\\"error\\\",\\n              error: error,\\n              payload: { sceneId: \\\"\").concat(sceneId, \"\\\", spriteId: \\\"\").concat(gameObjId, \"\\\" }\\n            });\\n          }\\n        };\\n      \");\n    });\n  });\n  return userScript;\n}\n\nfunction parseCodeWithMode(code, mode) {\n  switch (mode) {\n    case EDITORMODE.PYTHON:\n      return parsePythonCode(code);\n\n    case EDITORMODE.BLOCK:\n      return parseOOBCCode(code);\n\n    case EDITORMODE.JAVASCRIPT:\n    case EDITORMODE.JAVASCRIPT_3D:\n    default:\n      return parseJSCode(code, mode);\n  }\n}\n\nfunction parsePythonCode(code) {\n  Parser.parsePython(code);\n}\n\nfunction parseOOBCCode(code) {\n  var contextJSON;\n\n  try {\n    contextJSON = JSON.parse(code);\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n\n  var context = OOBC.Context.fromJSON(contextJSON);\n  code = context.toJavascript();\n  return parseJSCode(code);\n}\n\nfunction parseJSCode(code, editorMode) {\n  return Parser.parse(code, editorMode);\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/utils/gamePageGenerator/userScript.js"],"names":["WizSpritePrefix","PREFIX","EDITORMODE","OOBC","Parser","createUserScript","gameData","options","sceneIds","scenes","onParseError","userScript","forEach","sceneId","scene","gameObjectIds","gameObjects","gameObjId","gameObject","parsedCode","parseCodeWithMode","code","JAVASCRIPT_3D","error","console","spriteId","mode","PYTHON","parsePythonCode","BLOCK","parseOOBCCode","JAVASCRIPT","parseJSCode","parsePython","contextJSON","JSON","parse","err","context","Context","fromJSON","toJavascript","editorMode"],"mappings":"AAAA,SACEA,eAAe,IAAIC,MADrB,EAEEC,UAFF,QAGO,kCAHP;AAIA,OAAOC,IAAP,MAAiB,8CAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,OAApC,EAA6C;AAAA,aAC7BD,QAAQ,IAAI,EADiB;AAAA,MAClDE,QADkD,QAClDA,QADkD;AAAA,MACxCC,MADwC,QACxCA,MADwC;;AAAA,cAEjCF,OAAO,IAAI,EAFsB;AAAA,MAElDG,YAFkD,SAElDA,YAFkD;;AAG1D,MAAIC,UAAU,oCAAd;AAGAH,EAAAA,QAAQ,CAACI,OAAT,CAAiB,UAAAC,OAAO,EAAI;AAC1BF,IAAAA,UAAU,oCACOE,OADP,oBAAV;AAGA,QAAMC,KAAK,GAAGL,MAAM,CAACI,OAAD,CAApB;AACA,QAAME,aAAa,GAAGD,KAAK,CAACC,aAA5B;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;AACAD,IAAAA,aAAa,CAACH,OAAd,CAAsB,UAAAK,SAAS,EAAI;AACjC,UAAMC,UAAU,GAAGF,WAAW,CAACC,SAAD,CAA9B;AACA,UAAIE,UAAJ;;AACA,UAAI;AACFA,QAAAA,UAAU,GAAGC,iBAAiB,CAC5BF,UAAU,CAACG,IADiB,EAE5BnB,UAAU,CAACoB,aAFiB,CAA9B;AAID,OALD,CAKE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;;AACA,YAAIb,YAAJ,EAAkB;AAChBA,UAAAA,YAAY,CAACa,KAAD,EAAQ;AAAEV,YAAAA,OAAO,EAAPA,OAAF;AAAWY,YAAAA,QAAQ,EAAER;AAArB,WAAR,CAAZ;AACD;AACF;;AACDN,MAAAA,UAAU,sCACOE,OADP,mBACqBI,SADrB,kCACqDhB,MADrD,+CAGFkB,UAHE,qPAUqBN,OAVrB,6BAU6CI,SAV7C,2DAAV;AAeD,KA7BD;AA8BD,GArCD;AAuCA,SAAON,UAAP;AACD;;AAED,SAASS,iBAAT,CAA2BC,IAA3B,EAAiCK,IAAjC,EAAuC;AACrC,UAAQA,IAAR;AACE,SAAKxB,UAAU,CAACyB,MAAhB;AACE,aAAOC,eAAe,CAACP,IAAD,CAAtB;;AACF,SAAKnB,UAAU,CAAC2B,KAAhB;AACE,aAAOC,aAAa,CAACT,IAAD,CAApB;;AACF,SAAKnB,UAAU,CAAC6B,UAAhB;AACA,SAAK7B,UAAU,CAACoB,aAAhB;AACA;AACE,aAAOU,WAAW,CAACX,IAAD,EAAOK,IAAP,CAAlB;AARJ;AAUD;;AACD,SAASE,eAAT,CAAyBP,IAAzB,EAA+B;AAC7BjB,EAAAA,MAAM,CAAC6B,WAAP,CAAmBZ,IAAnB;AACD;;AACD,SAASS,aAAT,CAAuBT,IAAvB,EAA6B;AAC3B,MAAIa,WAAJ;;AACA,MAAI;AACFA,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWf,IAAX,CAAd;AACD,GAFD,CAEE,OAAOgB,GAAP,EAAY;AACZb,IAAAA,OAAO,CAACD,KAAR,CAAcc,GAAd;AACA;AACD;;AACD,MAAMC,OAAO,GAAGnC,IAAI,CAACoC,OAAL,CAAaC,QAAb,CAAsBN,WAAtB,CAAhB;AACAb,EAAAA,IAAI,GAAGiB,OAAO,CAACG,YAAR,EAAP;AACA,SAAOT,WAAW,CAACX,IAAD,CAAlB;AACD;;AACD,SAASW,WAAT,CAAqBX,IAArB,EAA2BqB,UAA3B,EAAuC;AACrC,SAAOtC,MAAM,CAACgC,KAAP,CAAaf,IAAb,EAAmBqB,UAAnB,CAAP;AACD","sourcesContent":["import {\n  WizSpritePrefix as PREFIX,\n  EDITORMODE\n} from \"../../../../Common/Util/Constant\";\nimport OOBC from \"../../../../Common/Component/OOBCEditor/OOBC\";\nimport Parser from \"../parser\";\n\nexport default function createUserScript(gameData, options) {\n  const { sceneIds, scenes } = gameData || {};\n  const { onParseError } = options || {};\n  let userScript = `\n    var userScripts = {};\n  `;\n  sceneIds.forEach(sceneId => {\n    userScript += `\n      userScripts[\"${sceneId}\"] = {};\n    `;\n    const scene = scenes[sceneId];\n    const gameObjectIds = scene.gameObjectIds;\n    const gameObjects = scene.gameObjects;\n    gameObjectIds.forEach(gameObjId => {\n      const gameObject = gameObjects[gameObjId];\n      let parsedCode;\n      try {\n        parsedCode = parseCodeWithMode(\n          gameObject.code,\n          EDITORMODE.JAVASCRIPT_3D\n        );\n      } catch (error) {\n        console.error(error);\n        if (onParseError) {\n          onParseError(error, { sceneId, spriteId: gameObjId });\n        }\n      }\n      userScript += `\n        userScripts[\"${sceneId}\"][\"${gameObjId}\"] = async function(${PREFIX}) {\n          try {\n            ${parsedCode}\n          } catch(error) {\n            console.error(error);\n            parent.postMessage({ \n              source: \"wizlab\",\n              type: \"error\",\n              error: error,\n              payload: { sceneId: \"${sceneId}\", spriteId: \"${gameObjId}\" }\n            });\n          }\n        };\n      `;\n    });\n  });\n\n  return userScript;\n}\n\nfunction parseCodeWithMode(code, mode) {\n  switch (mode) {\n    case EDITORMODE.PYTHON:\n      return parsePythonCode(code);\n    case EDITORMODE.BLOCK:\n      return parseOOBCCode(code);\n    case EDITORMODE.JAVASCRIPT:\n    case EDITORMODE.JAVASCRIPT_3D:\n    default:\n      return parseJSCode(code, mode);\n  }\n}\nfunction parsePythonCode(code) {\n  Parser.parsePython(code);\n}\nfunction parseOOBCCode(code) {\n  let contextJSON;\n  try {\n    contextJSON = JSON.parse(code);\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n  const context = OOBC.Context.fromJSON(contextJSON);\n  code = context.toJavascript();\n  return parseJSCode(code);\n}\nfunction parseJSCode(code, editorMode) {\n  return Parser.parse(code, editorMode);\n}\n"]},"metadata":{},"sourceType":"module"}