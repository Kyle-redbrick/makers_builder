{"ast":null,"code":"var _classCallCheck = require(\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar AccessToken = require('../src/AccessToken').AccessToken;\n\nvar Priviledges = require('../src/AccessToken').priviledges;\n\nvar Role = {\n  // DEPRECATED. Role::ATTENDEE has the same privileges as Role.PUBLISHER.\n  ATTENDEE: 0,\n  // RECOMMENDED. Use this role for a voice/video call or a live broadcast, if your scenario does not require authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in).\n  PUBLISHER: 1,\n\n  /* Only use this role if your scenario require authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in).\n   * @note In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role.SUBSCRIBER still has the same privileges as Role.PUBLISHER.\n   */\n  SUBSCRIBER: 2,\n  // DEPRECATED. Role.ADMIN has the same privileges as Role.PUBLISHER.\n  ADMIN: 101\n};\n\nvar RtcTokenBuilder =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function RtcTokenBuilder() {\n    _classCallCheck(this, RtcTokenBuilder);\n  }\n\n  _createClass(RtcTokenBuilder, null, [{\n    key: \"buildTokenWithUid\",\n\n    /**\n     * Builds an RTC token using an Integer uid.\n     * @param {*} appID  The App ID issued to you by Agora.\n     * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.\n     * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:\n     * - The 26 lowercase English letters: a to z.\n     * - The 26 uppercase English letters: A to Z.\n     * - The 10 digits: 0 to 9.\n     * - The space.\n     * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n     * @param {*} uid User ID. A 32-bit unsigned integer with a value ranging from 1 to (2^32-1).\n     * @param {*} role See #userRole.\n     * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.\n     * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.\n     * @param {*} privilegeExpiredTs  represented by the number of seconds elapsed since 1/1/1970. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set expireTimestamp as the current timestamp + 600 (seconds).\n     * @return The new Token.\n     */\n    value: function buildTokenWithUid(appID, appCertificate, channelName, uid, role, privilegeExpiredTs) {\n      return this.buildTokenWithAccount(appID, appCertificate, channelName, uid, role, privilegeExpiredTs);\n    }\n    /**\n     * Builds an RTC token using an Integer uid.\n     * @param {*} appID  The App ID issued to you by Agora.\n     * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.\n     * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:\n     * - The 26 lowercase English letters: a to z.\n     * - The 26 uppercase English letters: A to Z.\n     * - The 10 digits: 0 to 9.\n     * - The space.\n     * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n     * @param {*} account The user account.\n     * @param {*} role See #userRole.\n     * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.\n     * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.\n     * @param {*} privilegeExpiredTs  represented by the number of seconds elapsed since 1/1/1970. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set expireTimestamp as the current timestamp + 600 (seconds).\n     * @return The new Token.\n     */\n\n  }, {\n    key: \"buildTokenWithAccount\",\n    value: function buildTokenWithAccount(appID, appCertificate, channelName, account, role, privilegeExpiredTs) {\n      this.key = new AccessToken(appID, appCertificate, channelName, account);\n      this.key.addPriviledge(Priviledges.kJoinChannel, privilegeExpiredTs);\n\n      if (role == Role.ATTENDEE || role == Role.PUBLISHER || role == Role.ADMIN) {\n        this.key.addPriviledge(Priviledges.kPublishAudioStream, privilegeExpiredTs);\n        this.key.addPriviledge(Priviledges.kPublishVideoStream, privilegeExpiredTs);\n        this.key.addPriviledge(Priviledges.kPublishDataStream, privilegeExpiredTs);\n      }\n\n      return this.key.build();\n    }\n  }]);\n\n  return RtcTokenBuilder;\n}();\n\nmodule.exports.RtcTokenBuilder = RtcTokenBuilder;\nmodule.exports.Role = Role;","map":null,"metadata":{},"sourceType":"script"}