{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar ApiLibrary3d = /*#__PURE__*/function () {\n  function ApiLibrary3d() {\n    _classCallCheck(this, ApiLibrary3d);\n\n    this.apiList = [{\n      name: \"ID_3D\",\n      api: [{\n        name: \"setTarget(name)\",\n        snippet: \"setTarget(\\\"name\\\")\",\n        selection: \"name\",\n        tip: {\n          description: {\n            ko: \"카메라의 타겟을 설정하기\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"카메라 타겟이 될 오브젝트의 이름\"\n            }\n          }],\n          description2: {\n            ko: \"카메라가 따라다니며 촬영할 오브젝트를 설정한다.\"\n          }\n        }\n      }, {\n        name: \"setBillboard(enable, axis)\",\n        snippet: \"setBillboard(true)\",\n        selection: \"true\",\n        tip: {\n          description: {\n            ko: \"빌보드 모드 설정\"\n          },\n          params: [{\n            name: \"enable\",\n            description: {\n              ko: \"빌보드 모드 설정 여부\"\n            }\n          }, {\n            name: \"axis\",\n            description: {\n              ko: '모드를 적용하려는 특정 축 이름 (\"x\"/\"y\"/\"z\")'\n            }\n          }],\n          description2: {\n            ko: \"Mesh나 텍스쳐GUI의 빌보드 모드를 설정한다.\\n해당 축에 대해 어느 방향에서 봐도 정면으로 보이도록 한다.\\n축 이름을 입력하지 않으면 모든 축에 적용된다.\"\n          }\n        }\n      }]\n    }, {\n      name: \"ID_MOTION\",\n      api: [{\n        name: \"enableDefaultControl(rotationSpeed, maxJump)\",\n        snippet: \"enableDefaultControl(1, 1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"기본 움직임 컨트롤 활성화하기\"\n          },\n          params: [{\n            name: \"rotationSpeed\",\n            description: {\n              ko: \"회전 속도\"\n            }\n          }, {\n            name: \"maxJump\",\n            description: {\n              ko: \"최대 점프 정도\"\n            }\n          }],\n          description2: {\n            ko: \"방향키와 스페이스바를 사용한 Mesh 컨트롤을 활성화한다.\\nenablePhysics()를 하지 않았어도 물리적 움직임을 위해 물리 영향을 받도록 설정된다.\"\n          }\n        }\n      }, {\n        name: \"disableDefaultControl()\",\n        snippet: \"disableDefaultControl()\",\n        tip: {\n          description: {\n            ko: \"기본 움직임 컨트롤 비활성화하기\"\n          },\n          description2: {\n            ko: \"방향키와 스페이스바를 사용한 Mesh 컨트롤을 비활성화한다.\"\n          }\n        }\n      }, {\n        name: \"getVirtualJoystick(isLeft)\",\n        snippet: \"getVirtualJoystick(true)\",\n        tip: {\n          description: {\n            ko: \"왼쪽 또는 오른쪽 가상 조이스틱 가져오기\"\n          },\n          params: [{\n            name: \"isLeft\",\n            description: {\n              ko: \"true 또는 false\"\n            }\n          }],\n          description2: {\n            ko: \"화면 왼쪽 또는 오른쪽을 컨트롤로 사용하는 가상 조이스틱을 가져온다.\\n플레이 시 확인할 수 있다.\"\n          }\n        }\n      }, {\n        name: \"setSpeedX(value)\",\n        snippet: \"setSpeedX(100)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"x축 속력 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속력값)\"\n            }\n          }],\n          description2: {\n            ko: \"x축에 대한 속력을 설정한다.\"\n          }\n        }\n      }, {\n        name: \"setSpeedY(value)\",\n        snippet: \"setSpeedY(100)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"y축 속력 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속력값)\"\n            }\n          }],\n          description2: {\n            ko: \"y축에 대한 속력을 설정한다.\"\n          }\n        }\n      }, {\n        name: \"setSpeedZ(value)\",\n        snippet: \"setSpeedZ(100)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"z축 속력 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속력값)\"\n            }\n          }],\n          description2: {\n            ko: \"z축에 대한 속력을 설정한다.\"\n          }\n        }\n      }, {\n        name: \"getSpeedX()\",\n        snippet: \"getSpeedX()\",\n        tip: {\n          description: {\n            ko: \"x축 속력 가져오기\"\n          }\n        }\n      }, {\n        name: \"getSpeedY()\",\n        snippet: \"getSpeedY()\",\n        tip: {\n          description: {\n            ko: \"y축 속력 가져오기\"\n          }\n        }\n      }, {\n        name: \"getSpeedZ()\",\n        snippet: \"getSpeedZ()\",\n        tip: {\n          description: {\n            ko: \"z축 속력 가져오기\"\n          }\n        }\n      }, {\n        name: \"rotateX(amount)\",\n        snippet: \"rotateX(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"오브젝트를 X축을 기준으로 회전시키기\"\n          },\n          params: [{\n            name: \"amount\",\n            description: {\n              ko: \"회전할 정도의 radian 값\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트를 X축을 기준으로 특정 radian 값 만큼 회전시킨다.\"\n          }\n        }\n      }, {\n        name: \"rotateY(amount)\",\n        snippet: \"rotateY(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"오브젝트를 Y축을 기준으로 회전시키기\"\n          },\n          params: [{\n            name: \"amount\",\n            description: {\n              ko: \"회전할 정도의 radian 값\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트를 Y축을 기준으로 특정 radian 값 만큼 회전시킨다.\"\n          }\n        }\n      }, {\n        name: \"rotateZ(amount)\",\n        snippet: \"rotateZ(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"오브젝트를 Z축을 기준으로 회전시키기\"\n          },\n          params: [{\n            name: \"amount\",\n            description: {\n              ko: \"회전할 정도의 radian 값\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트를 Z축을 기준으로 특정 radian 값 만큼 회전시킨다.\"\n          }\n        }\n      }, {\n        name: \"goX(amount)\",\n        snippet: \"goX(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"X좌표를 amount만큼 변경하기\"\n          },\n          params: [{\n            name: \"amount\",\n            description: {\n              ko: \"숫자\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트의 X좌표를 amount만큼 변경한다.\"\n          }\n        }\n      }, {\n        name: \"goY(amount)\",\n        snippet: \"goY(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"y좌표를 amount만큼 변경하기\"\n          },\n          params: [{\n            name: \"amount\",\n            description: {\n              ko: \"숫자\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트의 y좌표를 amount만큼 변경한다.\"\n          }\n        }\n      }, {\n        name: \"goZ(amount)\",\n        snippet: \"goZ(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"z좌표를 amount만큼 변경하기\"\n          },\n          params: [{\n            name: \"amount\",\n            description: {\n              ko: \"숫자\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트의 z좌표를 amount만큼 변경한다.\"\n          }\n        }\n      }]\n    }, {\n      name: \"ID_EVENT\",\n      api: [{\n        name: \"onFrame(function())\",\n        snippet: \"onFrame(function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uB9E4 \\uD504\\uB808\\uC784\\uB9C8\\uB2E4 \\uC785\\uB825\\uB41C \\uD568\\uC218\\uB97C \\uBC18\\uBCF5\\uD558\\uC5EC \\uD638\\uCD9C\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }],\n          description2: {\n            ko: \"\\uBCF4\\uD1B5 1\\uCD08\\uC5D0 60\\uBC88 \\uD638\\uCD9C\\uB41C\\uB2E4.\"\n          }\n        },\n        newLine: \"onFrame(function(){\"\n      }, {\n        name: \"onSignal(name,function())\",\n        snippet: \"onSignal(\\\"name\\\",function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uD2B9\\uC815\\uD55C \\uC2E0\\uD638\\uB97C \\uBC1B\\uC558\\uC744 \\uB54C \\uC785\\uB825\\uB41C \\uD568\\uC218 \\uD638\\uCD9C\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"신호의 이름\"\n            }\n          }, {\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }]\n        },\n        newLine: \"onSignal(\\\"name\\\",function(){\",\n        selection: \"name\",\n        selectionType: \"signal\"\n      }, {\n        name: \"sendSignal(name)\",\n        snippet: \"sendSignal(\\\"name\\\")\",\n        tip: {\n          description: {\n            ko: \"\\uC785\\uB825\\uB41C \\uC774\\uB984\\uC758 \\uC2E0\\uD638 \\uBCF4\\uB0B4\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"신호의 이름\"\n            }\n          }]\n        },\n        selection: \"name\",\n        selectionType: \"signal\"\n      }, {\n        name: \"onKey(key,function())\",\n        snippet: \"onKey(\\\"key\\\",function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uD2B9\\uC815 \\uD0A4\\uB97C \\uB20C\\uB800\\uC744 \\uB54C \\uD638\\uCD9C\\uB418\\uB294 \\uD568\\uC218\"\n          },\n          params: [{\n            name: \"key\",\n            description: {\n              ko: \"키보드의 값\"\n            }\n          }, {\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }]\n        },\n        newLine: \"onKey(\\\"key\\\",function(){\",\n        selection: \"key\",\n        selectionType: \"key\"\n      }, {\n        name: \"onKeyUp(key,function())\",\n        snippet: \"onKeyUp(\\\"key\\\",function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uD2B9\\uC815 \\uD0A4\\uB97C \\uB20C\\uB800\\uB2E4\\uAC00 \\uB5D0\\uC744 \\uB54C \\uD638\\uCD9C\\uB418\\uB294 \\uD568\\uC218\"\n          },\n          params: [{\n            name: \"key\",\n            description: {\n              ko: \"키보드의 값\"\n            }\n          }, {\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }]\n        },\n        newLine: \"onKeyUp(\\\"key\\\",function(){\",\n        selection: \"key\",\n        selectionType: \"key\"\n      }, {\n        name: \"onCollide(name,function())\",\n        snippet: \"onCollide(\\\"name\\\",function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uD2B9\\uC815 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC640 \\uBB3C\\uB9AC\\uC801\\uC73C\\uB85C \\uCDA9\\uB3CC\\uD588\\uC744 \\uB54C \\uC785\\uB825\\uB41C \\uD568\\uC218 \\uD638\\uCD9C\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"상대 오브젝트의 이름\"\n            }\n          }, {\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }],\n          description2: {\n            ko: \"\\uC624\\uBE0C\\uC81D\\uD2B8\\uB098 \\uC0C1\\uB300 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC758 \\uBB3C\\uB9AC \\uC124\\uC815\\uC774 \\uC548 \\uB418\\uC5B4 \\uC788\\uC73C\\uBA74 false\\uB97C \\uBC18\\uD658\\uD55C\\uB2E4.\"\n          }\n        },\n        newLine: \"onCollide(\\\"name\\\",function(){\",\n        selection: \"name\",\n        selectionType: \"object\"\n      }, {\n        name: \"onCollideOnce(name,function())\",\n        snippet: \"onCollideOnce(\\\"name\\\",function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uD2B9\\uC815 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC640 \\uBB3C\\uB9AC\\uC801\\uC73C\\uB85C \\uCDA9\\uB3CC\\uD588\\uC744 \\uB54C \\uC785\\uB825\\uB41C \\uD568\\uC218 \\uD55C \\uBC88\\uB9CC \\uD638\\uCD9C\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"상대 오브젝트의 이름\"\n            }\n          }, {\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }],\n          description2: {\n            ko: \"\\uC624\\uBE0C\\uC81D\\uD2B8\\uB098 \\uC0C1\\uB300 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC758 \\uBB3C\\uB9AC \\uC124\\uC815\\uC774 \\uC548 \\uB418\\uC5B4 \\uC788\\uC73C\\uBA74 false\\uB97C \\uBC18\\uD658\\uD55C\\uB2E4.\"\n          }\n        },\n        newLine: \"onCollideOnce(\\\"name\\\",function(){\",\n        selection: \"name\",\n        selectionType: \"object\"\n      }, {\n        name: \"onOverlap(name,function())\",\n        snippet: \"onOverlap(\\\"name\\\",function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uD2B9\\uC815 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC640 \\uB9CC\\uB0AC\\uC744 \\uB54C \\uC785\\uB825\\uB41C \\uD568\\uC218 \\uD638\\uCD9C\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"오브젝트의 이름\"\n            }\n          }, {\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }]\n        },\n        newLine: \"onOverlap(\\\"name\\\",function(){\",\n        selection: \"name\",\n        selectionType: \"object\"\n      }, {\n        name: \"onOverlapOnce(name,function())\",\n        snippet: \"onOverlapOnce(\\\"name\\\",function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uD2B9\\uC815 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC640 \\uB9CC\\uB0AC\\uC744 \\uB54C \\uC785\\uB825\\uB41C \\uD568\\uC218\\uB97C \\uD55C \\uBC88\\uB9CC \\uD638\\uCD9C\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"오브젝트의 이름\"\n            }\n          }, {\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }]\n        },\n        newLine: \"onOverlapOnce(\\\"name\\\",function(){\",\n        selection: \"name\",\n        selectionType: \"object\"\n      }, {\n        name: \"changeScene(name)\",\n        snippet: \"changeScene(\\\"name\\\")\",\n        tip: {\n          description: {\n            ko: \"\\uC785\\uB825\\uB41C \\uC774\\uB984\\uC758 scene\\uC73C\\uB85C \\uBCC0\\uACBD\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"scene의 이름\"\n            }\n          }]\n        },\n        selection: \"name\",\n        selectionType: \"scene\"\n      }, {\n        name: \"onClick(function())\",\n        snippet: \"onClick(function(){})\",\n        tip: {\n          description: {\n            ko: \"\\uC624\\uBE0C\\uC81D\\uD2B8\\uB97C \\uD074\\uB9AD\\uD588\\uC744 \\uB54C \\uC785\\uB825\\uB41C \\uD568\\uC218 \\uD638\\uCD9C\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"function\",\n            description: {\n              ko: \"호출되는 함수\"\n            }\n          }],\n          description2: {\n            ko: \"GUI 또는 Mesh 오브젝트를 클릭했을 때 입력된 함수를 호출한다\"\n          }\n        },\n        newLine: \"onClick(function(){\"\n      }]\n    }, {\n      name: \"ID_CONTROL\",\n      api: [{\n        name: \"if / else / else if\",\n        snippet: \"if(true){}\"\n      }, {\n        name: \"switch~case\",\n        snippet: \"switch(value){case \\\"\\\" :break;default :break;}\",\n        newLine: \"switch(value){\",\n        selection: \"value\"\n      }, {\n        name: \"while()\",\n        snippet: \"while(true){}\",\n        newLine: \"while(true){\",\n        selection: \"true\"\n      }, {\n        name: \"for()\",\n        snippet: \"for(var i=0;i<10;i++){}\",\n        newLine: \"for(var i=0;i<10;i++){\",\n        selection: \"10\"\n      }, {\n        name: \"wait(secs)\",\n        snippet: \"wait(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"특정 시간 기다리기\"\n          },\n          params: [{\n            name: \"secs\",\n            description: {\n              ko: \"숫자, 기다릴 초\"\n            }\n          }],\n          description2: {\n            ko: \"secs초만큼 다음코드를 실행하지 않고 기다린다\"\n          }\n        }\n      }, {\n        name: \"kill()\",\n        snippet: \"kill()\",\n        tip: {\n          description: {\n            ko: \"없애기\"\n          },\n          description2: {\n            ko: \"scene에서 오브젝트가 제거된다\"\n          }\n        }\n      }, {\n        name: \"revive()\",\n        snippet: \"revive()\",\n        tip: {\n          description: {\n            ko: \"되살리기\"\n          },\n          description2: {\n            ko: \"secen에서 제거된(kill) 오브젝트를 되살린다\"\n          }\n        }\n      }, {\n        name: \"clone()\",\n        snippet: \"clone()\",\n        tip: {\n          description: {\n            ko: \"복제하기\"\n          },\n          description2: {\n            ko: \"해당 오브젝트가 복제되고 복제된 오브젝트를 반환한다\"\n          }\n        }\n      }, // {\n      //   name: \"print(message)\",\n      //   snippet: `print(\"message\")`,\n      //   selection: \"message\",\n      //   tip: {\n      //     description: { ko: \"디버그 메시지 출력\" },\n      //     params: [{ name: \"message\", description: { ko: \"출력할 문자열\" } }],\n      //     description2: { ko: \"chatbot의 대화창에 message를 출력할 수 있다\" }\n      //   }\n      // },\n      {\n        name: \"input(message)\",\n        snippet: \"input(\\\"message\\\")\",\n        selection: \"message\",\n        tip: {\n          description: {\n            ko: \"텍스트 입력받기\"\n          },\n          params: [{\n            name: \"message\",\n            description: {\n              ko: \"입력받을 때 힌트\"\n            }\n          }],\n          description2: {\n            ko: \"입력박스가 나타나고 문자열 또는 숫자를 입력할 수 있다.\\n[확인]을 누르면 입력된 값을 반환한다\"\n          }\n        }\n      }]\n    }, {\n      name: \"ID_LOOKS\",\n      api: [{\n        name: \"setScale(x, y, z)\",\n        snippet: \"setScale(1, 1, 1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"크기 값 설정하기\"\n          },\n          params: [{\n            name: \"x\",\n            description: {\n              ko: \"x축 크기 값 (숫자)\"\n            }\n          }, {\n            name: \"y\",\n            description: {\n              ko: \"y축 크기 값 (숫자)\"\n            }\n          }, {\n            name: \"z\",\n            description: {\n              ko: \"z축 크기 값 (숫자)\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트의 x,y,z축 크기 값을 설정한다.\"\n          }\n        }\n      }, {\n        name: \"getScale()\",\n        snippet: \"getScale()\",\n        tip: {\n          description: {\n            ko: \"x,y,z축 크기 값 가져오기\"\n          },\n          description2: {\n            ko: \"getScale().x 와 같이 각 축의 크기 값을 확인할 수 있다.\"\n          }\n        }\n      }, {\n        name: \"setUiText(text)\",\n        snippet: \"setUiText(\\\"text\\\")\",\n        selection: \"text\",\n        tip: {\n          description: {\n            ko: \"문구 설정하기\"\n          },\n          params: [{\n            name: \"text\",\n            description: {\n              ko: \"문자열\"\n            }\n          }],\n          description2: {\n            ko: \"텍스트 오브젝트의 문구를 수정한다\"\n          }\n        }\n      }, {\n        name: \"setTextColor(color)\",\n        snippet: \"setTextColor(\\\"black\\\")\",\n        selection: \"black\",\n        selectionType: \"color\",\n        tip: {\n          description: {\n            ko: \"문구 색상 설정하기\"\n          },\n          params: [{\n            name: \"color\",\n            description: {\n              ko: \"문자열\"\n            }\n          }],\n          description2: {\n            ko: \"텍스트 오브젝트의 문구 색상을 변경한다\"\n          }\n        }\n      }, {\n        name: \"getTextColor()\",\n        snippet: \"getTextColor()\",\n        tip: {\n          description: {\n            ko: \"문구 색상 가져오기\"\n          },\n          description2: {\n            ko: \"텍스트 오브젝트의 문구 색상값을 반환하다\"\n          }\n        }\n      }, {\n        name: \"setVisibility(visibility)\",\n        snippet: \"setVisibility(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"보이는 정도 설정하기\"\n          },\n          params: [{\n            name: \"visibility\",\n            description: {\n              ko: \"숫자(0~1), 보이는 정도의 비율\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트가 보이는 정도를 설정한다.\\n0이면 안 보이고, 완전히 보이는 1이 기본 값이다.\"\n          }\n        }\n      }, {\n        name: \"show()\",\n        snippet: \"show()\",\n        tip: {\n          description: {\n            ko: \"GUI 보이기\"\n          },\n          description2: {\n            ko: \"scene에 GUI가 보이며, 초기값이 show이기\\n때문에 hide()와 함께 사용해야 동작을 확인할 수 있다\"\n          }\n        }\n      }, {\n        name: \"hide()\",\n        snippet: \"hide()\",\n        tip: {\n          description: {\n            ko: \"GUI 숨기기\"\n          },\n          description2: {\n            ko: \"scene에서 GUI가 사라지며, show()와 함께 사용한다\"\n          }\n        }\n      }, {\n        name: \"playAnimation(name, isLoop)\",\n        snippet: \"playAnimation(\\\"name\\\", true)\",\n        selection: \"name\",\n        selectionType: \"animation\",\n        tip: {\n          description: {\n            ko: \"애니메이션 실행하기\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"문자열\"\n            }\n          }, {\n            name: \"isLoop\",\n            description: {\n              ko: \"true 또는 false\"\n            }\n          }],\n          description2: {\n            ko: \"name 애니메이션을 isLoop에 따라 무한 혹은 1회 동작한다\"\n          }\n        }\n      }, {\n        name: \"stopAnimation()\",\n        snippet: \"stopAnimation()\",\n        tip: {\n          description: {\n            ko: \"애니메이션 멈추기\"\n          },\n          description2: {\n            ko: \"동작중인 애니메이션을 멈춘다\"\n          }\n        }\n      }]\n    }, {\n      name: \"ID_PHYSICS\",\n      api: [{\n        name: \"enablePhysics(mass, bounce, friction)\",\n        snippet: \"enablePhysics(1, 0, 0)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"물리 법칙 영향을 받도록 설정하기\"\n          },\n          params: [{\n            name: \"mass\",\n            description: {\n              ko: \"숫자(설정할 질량값)\"\n            }\n          }, {\n            name: \"bounce\",\n            description: {\n              ko: \"숫자(설정할 튕기는 정도의 값)\"\n            }\n          }, {\n            name: \"friction\",\n            description: {\n              ko: \"숫자(설정할 마찰값)\"\n            }\n          }],\n          description2: {\n            ko: \"물리 법칙 영향을 받는 오브젝트로 설정한다. 옵션을 설정하지 않으면 질량은 1로 설정된다.\"\n          }\n        }\n      }, {\n        name: \"enablePhysicsParams(enabled)\",\n        snippet: \"enablePhysicsParams(true)\",\n        selection: \"true\",\n        tip: {\n          description: {\n            ko: \"물리 값 설정을 활성화하거나 비활성화하기\"\n          },\n          params: [{\n            name: \"enabled\",\n            description: {\n              ko: \"true 또는 false\"\n            }\n          }],\n          description2: {\n            ko: \"오브젝트의 질량, 튕기는 정도, 마찰 설정을 활성화하거나 비활성화한다\"\n          }\n        }\n      }, {\n        name: \"setMass(value)\",\n        snippet: \"setMass(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"질량 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 질량값)\"\n            }\n          }],\n          description2: {\n            ko: \"질량을 설정한다.\\n다른 물리효과와 상호작용한다\"\n          }\n        }\n      }, {\n        name: \"setBounce(value)\",\n        snippet: \"setBounce(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"튕기는 정도 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 튕기는 정도의 값)\"\n            }\n          }],\n          description2: {\n            ko: \"다른 스프라이트와 충돌했을 때, 설정한 값만큼 반작용이 일어난다.\\n값이 1일 경우 작용하는 힘을 그대로 전달받게 된다\"\n          }\n        }\n      }, {\n        name: \"setFriction(value)\",\n        snippet: \"setFriction(1)\",\n        selection: \"1\",\n        tip: {\n          description: {\n            ko: \"마찰 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 마찰값)\"\n            }\n          }],\n          description2: {\n            ko: \"마찰을 설정한다.\\n다른 물리효과와 상호작용한다\"\n          }\n        }\n      }, {\n        name: \"getMass()\",\n        snippet: \"getMass()\",\n        tip: {\n          description: {\n            ko: \"질량 가져오기\"\n          }\n        }\n      }, {\n        name: \"getBounce()\",\n        snippet: \"getBounce()\",\n        tip: {\n          description: {\n            ko: \"튕기는 정도 가져오기\"\n          }\n        }\n      }, {\n        name: \"getFriction()\",\n        snippet: \"getFriction()\",\n        tip: {\n          description: {\n            ko: \"마찰 가져오기\"\n          }\n        }\n      }, {\n        name: \"setVelocityX(value)\",\n        snippet: \"setVelocityX(100)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"x축 속도 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속도값)\"\n            }\n          }],\n          description2: {\n            ko: \"x축에 대한 속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n          }\n        }\n      }, {\n        name: \"setVelocityY(value)\",\n        snippet: \"setVelocityY(100)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"y축 속도 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속도값)\"\n            }\n          }],\n          description2: {\n            ko: \"y축에 대한 속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n          }\n        }\n      }, {\n        name: \"setVelocityZ(value)\",\n        snippet: \"setVelocityZ(100)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"z축 속도 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속도값)\"\n            }\n          }],\n          description2: {\n            ko: \"z축에 대한 속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n          }\n        }\n      }, {\n        name: \"getVelocityX()\",\n        snippet: \"getVelocityX()\",\n        tip: {\n          description: {\n            ko: \"x축 속도 가져오기\"\n          }\n        }\n      }, {\n        name: \"getVelocityY()\",\n        snippet: \"getVelocityY()\",\n        tip: {\n          description: {\n            ko: \"y축 속도 가져오기\"\n          }\n        }\n      }, {\n        name: \"getVelocityZ()\",\n        snippet: \"getVelocityZ()\",\n        tip: {\n          description: {\n            ko: \"z축 속도 가져오기\"\n          }\n        }\n      }, {\n        name: \"setAngularVelocityX(value)\",\n        snippet: \"setAngularVelocityX(5)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"x축 각속도 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속도값)\"\n            }\n          }],\n          description2: {\n            ko: \"x축에 대한 각속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n          }\n        }\n      }, {\n        name: \"setAngularVelocityY(value)\",\n        snippet: \"setAngularVelocityY(5)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"y축 각속도 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속도값)\"\n            }\n          }],\n          description2: {\n            ko: \"y축에 대한 각속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n          }\n        }\n      }, {\n        name: \"setAngularVelocityZ(value)\",\n        snippet: \"setAngularVelocityZ(5)\",\n        selection: \"100\",\n        tip: {\n          description: {\n            ko: \"z축 각속도 설정하기\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"숫자(설정할 속도값)\"\n            }\n          }],\n          description2: {\n            ko: \"z축에 대한 각속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n          }\n        }\n      }, {\n        name: \"getAngularVelocityX()\",\n        snippet: \"getVelocityX()\",\n        tip: {\n          description: {\n            ko: \"x축 각속도 가져오기\"\n          }\n        }\n      }, {\n        name: \"getAngularVelocityY()\",\n        snippet: \"getVelocityY()\",\n        tip: {\n          description: {\n            ko: \"y축 각속도 가져오기\"\n          }\n        }\n      }, {\n        name: \"getAngularVelocityZ()\",\n        snippet: \"getVelocityZ()\",\n        tip: {\n          description: {\n            ko: \"z축 각속도 가져오기\"\n          }\n        }\n      }]\n    }, {\n      name: \"ID_SOUND\",\n      api: [{\n        name: \"playSound(name, isLoop)\",\n        snippet: \"playSound(\\\"name\\\", false)\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC \\uC7AC\\uC0DD\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"사운드 이름\"\n            }\n          }, {\n            name: \"isLoop\",\n            description: {\n              ko: \"반복 재생 여부\"\n            }\n          }],\n          description2: {\n            ko: \"\\uC785\\uB825\\uB41C \\uC0AC\\uC6B4\\uB4DC\\uB97C\\n1\\uD68C \\uD639\\uC740 \\uBC18\\uBCF5\\uD558\\uC5EC \\uC7AC\\uC0DD\\uD55C\\uB2E4.\"\n          }\n        },\n        selection: \"name\",\n        selectionType: \"sound\"\n      }, {\n        name: \"restartSound(name)\",\n        snippet: \"restartSound(\\\"name\\\")\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC \\uCC98\\uC74C\\uBD80\\uD130 \\uB2E4\\uC2DC \\uC7AC\\uC0DD\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"사운드 이름\"\n            }\n          }],\n          description2: {\n            ko: \"입력된 사운드를 처음부터 다시 재생한다.\\n(반복 여부는 playSound 함수에서 설정된 값을 따른다.)\"\n          }\n        },\n        selection: \"name\",\n        selectionType: \"sound\"\n      }, {\n        name: \"resumeSound(name)\",\n        snippet: \"resumeSound(\\\"name\\\")\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC \\uC774\\uC5B4\\uC11C \\uC7AC\\uC0DD\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"사운드 이름\"\n            }\n          }],\n          description2: {\n            ko: \"입력된 사운드를 일시정지된 위치부터 다시 재생한다.\\n(반복 여부는 playSound 함수에서 설정된 값을 따른다.)\"\n          }\n        },\n        selection: \"name\",\n        selectionType: \"sound\"\n      }, {\n        name: \"stopAllSounds()\",\n        snippet: \"stopAllSounds()\",\n        tip: {\n          description: {\n            ko: \"\\uC7AC\\uC0DD\\uC911\\uC778 \\uBAA8\\uB4E0 \\uC0AC\\uC6B4\\uB4DC \\uC815\\uC9C0\\uD558\\uAE30\"\n          }\n        }\n      }, {\n        name: \"stopSound(name)\",\n        snippet: \"stopSound(\\\"name\\\")\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC \\uC815\\uC9C0\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"사운드 이름\"\n            }\n          }]\n        },\n        selection: \"name\",\n        selectionType: \"sound\"\n      }, {\n        name: \"pauseSound(name)\",\n        snippet: \"pauseSound(\\\"name\\\")\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC \\uC77C\\uC2DC\\uC815\\uC9C0\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"사운드 이름\"\n            }\n          }]\n        },\n        selection: \"name\",\n        selectionType: \"sound\"\n      }, {\n        name: \"setGlobalSoundVolume(value)\",\n        snippet: \"setGlobalSoundVolume(1)\",\n        tip: {\n          description: {\n            ko: \"\\uC571\\uC758 \\uC74C\\uB7C9 \\uC124\\uC815\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"음량(0~1 사이의 값)\"\n            }\n          }]\n        },\n        selection: \"1\"\n      }, {\n        name: \"addGlobalSoundVolume(value)\",\n        snippet: \"addGlobalSoundVolume(0.1)\",\n        tip: {\n          description: {\n            ko: \"\\uC571\\uC758 \\uC74C\\uB7C9\\uC744 value\\uB9CC\\uD07C \\uD0A4\\uC6B0\\uAE30\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"음량의 변화 크기(0~1 사이의 값)\"\n            }\n          }]\n        },\n        selection: \"0.1\"\n      }, {\n        name: \"getGlobalSoundVolume()\",\n        snippet: \"getGlobalSoundVolume()\",\n        tip: {\n          description: {\n            ko: \"\\uD604\\uC7AC \\uC571\\uC758 \\uC74C\\uB7C9 \\uAC00\\uC838\\uC624\\uAE30\"\n          }\n        }\n      }, {\n        name: \"setSoundVolume(name, value)\",\n        snippet: \"setSoundVolume(\\\"name\\\", 1)\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC \\uC74C\\uB7C9 \\uC124\\uC815\\uD558\\uAE30\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"사운드 이름\"\n            }\n          }, {\n            name: \"value\",\n            description: {\n              ko: \"음량(0~1 사이의 값)\"\n            }\n          }]\n        },\n        selection: \"name\"\n      }, {\n        name: \"addSoundVolume(name, value)\",\n        snippet: \"addSoundVolume(\\\"name\\\", 0.1)\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC\\uC758 \\uC74C\\uB7C9\\uC744 value\\uB9CC\\uD07C \\uD0A4\\uC6B0\\uAE30\"\n          },\n          params: [{\n            name: \"value\",\n            description: {\n              ko: \"음량의 변화 크기(0~1 사이의 값)\"\n            }\n          }]\n        },\n        selection: \"name\"\n      }, {\n        name: \"getSoundVolume(name)\",\n        snippet: \"getSoundVolume(\\\"name\\\")\",\n        tip: {\n          description: {\n            ko: \"\\uC0AC\\uC6B4\\uB4DC\\uC758 \\uC74C\\uB7C9 \\uAC00\\uC838\\uC624\\uAE30\"\n          }\n        },\n        selection: \"name\"\n      }]\n    }, {\n      name: \"ID_TIME\",\n      api: [{\n        name: \"getDeltaTime()\",\n        snippet: \"getDeltaTime()\",\n        tip: {\n          description: {\n            ko: \"바로 전 프레임을 완료하는 데 걸린 시간(초 단위) 가져오기\"\n          }\n        }\n      }, {\n        name: \"startTimer()\",\n        snippet: \"startTimer()\",\n        tip: {\n          description: {\n            ko: \"타이머 시작하기\"\n          }\n        }\n      }, {\n        name: \"pauseTimer()\",\n        snippet: \"pauseTimer()\",\n        tip: {\n          description: {\n            ko: \"타이머 멈추기\"\n          }\n        }\n      }, {\n        name: \"resumeTimer()\",\n        snippet: \"resumeTimer()\",\n        tip: {\n          description: {\n            ko: \"타이머 이어서 시작하기\"\n          }\n        }\n      }, {\n        name: \"resetTimer()\",\n        snippet: \"resetTimer()\",\n        tip: {\n          description: {\n            ko: \"타이머 0초로 되돌리기\"\n          }\n        }\n      }, {\n        name: \"getTimer()\",\n        snippet: \"getTimer()\",\n        tip: {\n          description: {\n            ko: \"현재 타이머의 값 가져오기\"\n          }\n        }\n      }]\n    }, {\n      name: \"ID_PARAMETER\",\n      api: [{\n        name: \"function\",\n        snippet: \"function name(){}\",\n        newLine: \"{\",\n        selection: \"name\",\n        tip: {\n          description: {\n            ko: \"함수를 선언한다.\"\n          },\n          description2: {\n            ko: \"name이라는 이름의 함수를 선언한다.\\n\"\n          }\n        }\n      }, {\n        name: \"let\",\n        snippet: \"let name\",\n        selection: \"name\",\n        tip: {\n          description: {\n            ko: \"변수를 선언한다.\"\n          },\n          description2: {\n            ko: \"name이라는 이름의 변수를 선언한다.\\n\"\n          }\n        }\n      }, {\n        name: \"const\",\n        snippet: \"const name\",\n        selection: \"name\",\n        tip: {\n          description: {\n            ko: \"상수를 선언한다.\"\n          },\n          description2: {\n            ko: \"name이라는 이름의 상수를 선언한다.\\n\"\n          }\n        }\n      }, {\n        name: \"global\",\n        snippet: \"global.name\",\n        selection: \"name\",\n        selectionType: \"global\",\n        tip: {\n          description: {\n            ko: \"전역 변수\"\n          },\n          description2: {\n            ko: \"앱 전체에서 사용 가능한 전역 변수이다.\\nscene이 달라도 같이 사용된다\"\n          }\n        }\n      }, {\n        name: \"getObject(name)\",\n        snippet: \"getObject(\\\"name\\\")\",\n        selection: \"name\",\n        selectionType: \"object\",\n        tip: {\n          description: {\n            ko: \"지정한 이름을 가진 첫번째 오브젝트 가져오기\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"가져올 오브젝트의 이름 문자열\"\n            }\n          }],\n          description2: {\n            ko: \"name이 이름인 첫번째 오브젝트를 반환한다\"\n          }\n        }\n      }, {\n        name: \"getObjects(name)\",\n        snippet: \"getObjects(\\\"name\\\")\",\n        selection: \"name\",\n        selectionType: \"object\",\n        tip: {\n          description: {\n            ko: \"지정한 이름을 가진 모든 오브젝트 가져오기\"\n          },\n          params: [{\n            name: \"name\",\n            description: {\n              ko: \"가져올 오브젝트들의 이름 문자열\"\n            }\n          }],\n          description2: {\n            ko: \"name이 이름인 모든 오브젝트를 반환한다\"\n          }\n        }\n      }, {\n        name: \"socket.connect(function())\",\n        snippet: \"socket.connect(function(){})\",\n        newLine: \"socket.connect(function(){\",\n        tip: {\n          description: {\n            ko: \"소켓 서버에 접속한다.\"\n          }\n        }\n      }, {\n        name: \"socket.disconnect()\",\n        snippet: \"socket.disconnect()\",\n        tip: {\n          description: {\n            ko: \"소켓 서버 연결을 해제한다.\"\n          }\n        }\n      }, {\n        name: \"socket.isConnected()\",\n        snippet: \"socket.isConnected()\",\n        tip: {\n          description: {\n            ko: \"소켓 서버와 연결 상태를 확인한다.\"\n          }\n        }\n      }, {\n        name: \"socket.emit(data)\",\n        snippet: \"socket.emit(data)\",\n        tip: {\n          description: {\n            ko: \"소켓서버에 데이터를 전송한다.\"\n          }\n        }\n      }, {\n        name: \"socket.onReceive(function())\",\n        snippet: \"socket.onReceive(function(data){})\",\n        newLine: \"socket.onReceive(function(data){\",\n        tip: {\n          description: {\n            ko: \"소켓 서버로부터 메세지를 받는다.\"\n          }\n        }\n      }, {\n        name: \"socket.joinRoom(roomId)\",\n        snippet: \"socket.joinRoom(roomId)\",\n        tip: {\n          description: {\n            ko: \"소켓 서버의 특정한 룸에 입장한다.\"\n          }\n        }\n      }, {\n        name: \"socket.leaveRoom(roomId)\",\n        snippet: \"socket.leaveRoom(roomId)\",\n        tip: {\n          description: {\n            ko: \"소켓 서버의 룸에서 퇴장한다.\"\n          }\n        }\n      }, {\n        name: \"socket.emitRoom(roomId,data)\",\n        snippet: \"socket.emitRoom(roomId,data)\",\n        tip: {\n          description: {\n            ko: \"소켓 서버의 룸에 메세지를 전송한다.\"\n          }\n        }\n      }]\n    }];\n  }\n\n  _createClass(ApiLibrary3d, [{\n    key: \"getAllFunctions\",\n    value: function getAllFunctions() {\n      var functions = [];\n      this.apiList.forEach(function (category) {\n        var categoryName = category.name;\n        category.api.forEach(function (api) {\n          if (api.snippet) {\n            if (api.name === \"if / else / else if\") {\n              return;\n            }\n\n            var meta = categoryName;\n            var caption = api.name;\n            var value = api.snippet;\n            var newLine = api.newLine;\n            var selection = api.selection;\n            var selectionType = api.selectionType;\n            var requiredParamCount = api.requiredParamCount;\n            var tip = api.tip;\n            var funcRegex = /([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/gim;\n            var funcMatch = funcRegex.exec(api.name);\n            var name;\n            if (funcMatch) name = funcMatch[0];\n            functions.push({\n              name: name,\n              tip: tip,\n              caption: caption,\n              value: value,\n              meta: meta,\n              newLine: newLine,\n              selection: selection,\n              selectionType: selectionType,\n              requiredParamCount: requiredParamCount\n            });\n          }\n        });\n      });\n      functions.push({\n        caption: \"if\",\n        value: \"if(true){}\",\n        meta: \"meta\",\n        newLine: \"if(true){\",\n        selection: \"true\"\n      });\n      functions.push({\n        caption: \"else if\",\n        value: \"else if(true){}\",\n        meta: \"meta\",\n        newLine: \"else if(true){\",\n        selection: \"true\"\n      });\n      functions.push({\n        caption: \"else\",\n        value: \"else{}\",\n        meta: \"meta\",\n        newLine: \"else{\"\n      });\n      functions.push({\n        caption: \"true\",\n        value: \"true\",\n        meta: \"boolean\"\n      });\n      functions.push({\n        caption: \"false\",\n        value: \"false\",\n        meta: \"boolean\"\n      });\n      return functions;\n    }\n  }, {\n    key: \"getAPI\",\n    value: function getAPI(name) {\n      for (var i in this.apiList) {\n        for (var j in this.apiList[i].api) {\n          if (this.apiList[i].api[j].name === name) {\n            return this.apiList[i].api[j];\n          }\n        }\n      }\n    }\n  }]);\n\n  return ApiLibrary3d;\n}();\n\nexport default new ApiLibrary3d();","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Util/ApiLibrary3d.js"],"names":["ApiLibrary3d","apiList","name","api","snippet","selection","tip","description","ko","params","description2","newLine","selectionType","functions","forEach","category","categoryName","meta","caption","value","requiredParamCount","funcRegex","funcMatch","exec","push","i","j"],"mappings":"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","sourcesContent":["class ApiLibrary3d {\n  apiList = [\n    {\n      name: \"ID_3D\",\n      api: [\n        {\n          name: \"setTarget(name)\",\n          snippet: `setTarget(\"name\")`,\n          selection: \"name\",\n          tip: {\n            description: { ko: \"카메라의 타겟을 설정하기\" },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"카메라 타겟이 될 오브젝트의 이름\" }\n              }\n            ],\n            description2: {\n              ko: \"카메라가 따라다니며 촬영할 오브젝트를 설정한다.\"\n            }\n          }\n        },\n        {\n          name: \"setBillboard(enable, axis)\",\n          snippet: `setBillboard(true)`,\n          selection: \"true\",\n          tip: {\n            description: { ko: \"빌보드 모드 설정\" },\n            params: [\n              { name: \"enable\", description: { ko: \"빌보드 모드 설정 여부\" } },\n              {\n                name: \"axis\",\n                description: {\n                  ko: '모드를 적용하려는 특정 축 이름 (\"x\"/\"y\"/\"z\")'\n                }\n              }\n            ],\n            description2: {\n              ko:\n                \"Mesh나 텍스쳐GUI의 빌보드 모드를 설정한다.\\n해당 축에 대해 어느 방향에서 봐도 정면으로 보이도록 한다.\\n축 이름을 입력하지 않으면 모든 축에 적용된다.\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      name: \"ID_MOTION\",\n      api: [\n        {\n          name: \"enableDefaultControl(rotationSpeed, maxJump)\",\n          snippet: `enableDefaultControl(1, 1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"기본 움직임 컨트롤 활성화하기\" },\n            params: [\n              { name: \"rotationSpeed\", description: { ko: \"회전 속도\" } },\n              { name: \"maxJump\", description: { ko: \"최대 점프 정도\" } }\n            ],\n            description2: {\n              ko:\n                \"방향키와 스페이스바를 사용한 Mesh 컨트롤을 활성화한다.\\nenablePhysics()를 하지 않았어도 물리적 움직임을 위해 물리 영향을 받도록 설정된다.\"\n            }\n          }\n        },\n        {\n          name: \"disableDefaultControl()\",\n          snippet: `disableDefaultControl()`,\n          tip: {\n            description: { ko: \"기본 움직임 컨트롤 비활성화하기\" },\n            description2: {\n              ko: \"방향키와 스페이스바를 사용한 Mesh 컨트롤을 비활성화한다.\"\n            }\n          }\n        },\n        {\n          name: \"getVirtualJoystick(isLeft)\",\n          snippet: `getVirtualJoystick(true)`,\n          tip: {\n            description: { ko: \"왼쪽 또는 오른쪽 가상 조이스틱 가져오기\" },\n            params: [\n              {\n                name: \"isLeft\",\n                description: { ko: \"true 또는 false\" }\n              }\n            ],\n            description2: {\n              ko:\n                \"화면 왼쪽 또는 오른쪽을 컨트롤로 사용하는 가상 조이스틱을 가져온다.\\n플레이 시 확인할 수 있다.\"\n            }\n          }\n        },\n        {\n          name: \"setSpeedX(value)\",\n          snippet: `setSpeedX(100)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"x축 속력 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속력값)\" }\n              }\n            ],\n            description2: {\n              ko: \"x축에 대한 속력을 설정한다.\"\n            }\n          }\n        },\n        {\n          name: \"setSpeedY(value)\",\n          snippet: `setSpeedY(100)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"y축 속력 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속력값)\" }\n              }\n            ],\n            description2: {\n              ko: \"y축에 대한 속력을 설정한다.\"\n            }\n          }\n        },\n        {\n          name: \"setSpeedZ(value)\",\n          snippet: `setSpeedZ(100)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"z축 속력 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속력값)\" }\n              }\n            ],\n            description2: {\n              ko: \"z축에 대한 속력을 설정한다.\"\n            }\n          }\n        },\n        {\n          name: \"getSpeedX()\",\n          snippet: `getSpeedX()`,\n          tip: {\n            description: { ko: \"x축 속력 가져오기\" }\n          }\n        },\n        {\n          name: \"getSpeedY()\",\n          snippet: `getSpeedY()`,\n          tip: {\n            description: { ko: \"y축 속력 가져오기\" }\n          }\n        },\n        {\n          name: \"getSpeedZ()\",\n          snippet: `getSpeedZ()`,\n          tip: {\n            description: { ko: \"z축 속력 가져오기\" }\n          }\n        },\n        {\n          name: \"rotateX(amount)\",\n          snippet: `rotateX(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"오브젝트를 X축을 기준으로 회전시키기\" },\n            params: [\n              { name: \"amount\", description: { ko: \"회전할 정도의 radian 값\" } }\n            ],\n            description2: {\n              ko: \"오브젝트를 X축을 기준으로 특정 radian 값 만큼 회전시킨다.\"\n            }\n          }\n        },\n        {\n          name: \"rotateY(amount)\",\n          snippet: `rotateY(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"오브젝트를 Y축을 기준으로 회전시키기\" },\n            params: [\n              { name: \"amount\", description: { ko: \"회전할 정도의 radian 값\" } }\n            ],\n            description2: {\n              ko: \"오브젝트를 Y축을 기준으로 특정 radian 값 만큼 회전시킨다.\"\n            }\n          }\n        },\n        {\n          name: \"rotateZ(amount)\",\n          snippet: `rotateZ(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"오브젝트를 Z축을 기준으로 회전시키기\" },\n            params: [\n              { name: \"amount\", description: { ko: \"회전할 정도의 radian 값\" } }\n            ],\n            description2: {\n              ko: \"오브젝트를 Z축을 기준으로 특정 radian 값 만큼 회전시킨다.\"\n            }\n          }\n        },\n        {\n          name: \"goX(amount)\",\n          snippet: `goX(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"X좌표를 amount만큼 변경하기\" },\n            params: [{ name: \"amount\", description: { ko: \"숫자\" } }],\n            description2: {\n              ko: \"오브젝트의 X좌표를 amount만큼 변경한다.\"\n            }\n          }\n        },\n        {\n          name: \"goY(amount)\",\n          snippet: `goY(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"y좌표를 amount만큼 변경하기\" },\n            params: [{ name: \"amount\", description: { ko: \"숫자\" } }],\n            description2: {\n              ko: \"오브젝트의 y좌표를 amount만큼 변경한다.\"\n            }\n          }\n        },\n        {\n          name: \"goZ(amount)\",\n          snippet: `goZ(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"z좌표를 amount만큼 변경하기\" },\n            params: [{ name: \"amount\", description: { ko: \"숫자\" } }],\n            description2: {\n              ko: \"오브젝트의 z좌표를 amount만큼 변경한다.\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      name: \"ID_EVENT\",\n      api: [\n        {\n          name: \"onFrame(function())\",\n          snippet: `onFrame(function(){})`,\n          tip: {\n            description: {\n              ko: `매 프레임마다 입력된 함수를 반복하여 호출하기`\n            },\n            params: [\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ],\n            description2: { ko: `보통 1초에 60번 호출된다.` }\n          },\n          newLine: `onFrame(function(){`\n        },\n        {\n          name: \"onSignal(name,function())\",\n          snippet: `onSignal(\"name\",function(){})`,\n          tip: {\n            description: { ko: `특정한 신호를 받았을 때 입력된 함수 호출하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"신호의 이름\" }\n              },\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ]\n          },\n          newLine: `onSignal(\"name\",function(){`,\n          selection: \"name\",\n          selectionType: \"signal\"\n        },\n        {\n          name: \"sendSignal(name)\",\n          snippet: `sendSignal(\"name\")`,\n          tip: {\n            description: { ko: `입력된 이름의 신호 보내기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"신호의 이름\" }\n              }\n            ]\n          },\n          selection: \"name\",\n          selectionType: \"signal\"\n        },\n        {\n          name: \"onKey(key,function())\",\n          snippet: `onKey(\"key\",function(){})`,\n          tip: {\n            description: { ko: `특정 키를 눌렀을 때 호출되는 함수` },\n            params: [\n              {\n                name: \"key\",\n                description: { ko: \"키보드의 값\" }\n              },\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ]\n          },\n          newLine: `onKey(\"key\",function(){`,\n          selection: \"key\",\n          selectionType: \"key\"\n        },\n        {\n          name: \"onKeyUp(key,function())\",\n          snippet: `onKeyUp(\"key\",function(){})`,\n          tip: {\n            description: { ko: `특정 키를 눌렀다가 뗐을 때 호출되는 함수` },\n            params: [\n              {\n                name: \"key\",\n                description: { ko: \"키보드의 값\" }\n              },\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ]\n          },\n          newLine: `onKeyUp(\"key\",function(){`,\n          selection: \"key\",\n          selectionType: \"key\"\n        },\n        {\n          name: \"onCollide(name,function())\",\n          snippet: `onCollide(\"name\",function(){})`,\n          tip: {\n            description: {\n              ko: `특정 오브젝트와 물리적으로 충돌했을 때 입력된 함수 호출하기`\n            },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"상대 오브젝트의 이름\" }\n              },\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ],\n            description2: {\n              ko: `오브젝트나 상대 오브젝트의 물리 설정이 안 되어 있으면 false를 반환한다.`\n            }\n          },\n          newLine: `onCollide(\"name\",function(){`,\n          selection: \"name\",\n          selectionType: \"object\"\n        },\n        {\n          name: \"onCollideOnce(name,function())\",\n          snippet: `onCollideOnce(\"name\",function(){})`,\n          tip: {\n            description: {\n              ko: `특정 오브젝트와 물리적으로 충돌했을 때 입력된 함수 한 번만 호출하기`\n            },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"상대 오브젝트의 이름\" }\n              },\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ],\n            description2: {\n              ko: `오브젝트나 상대 오브젝트의 물리 설정이 안 되어 있으면 false를 반환한다.`\n            }\n          },\n          newLine: `onCollideOnce(\"name\",function(){`,\n          selection: \"name\",\n          selectionType: \"object\"\n        },\n        {\n          name: \"onOverlap(name,function())\",\n          snippet: `onOverlap(\"name\",function(){})`,\n          tip: {\n            description: {\n              ko: `특정 오브젝트와 만났을 때 입력된 함수 호출하기`\n            },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"오브젝트의 이름\" }\n              },\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ]\n          },\n          newLine: `onOverlap(\"name\",function(){`,\n          selection: \"name\",\n          selectionType: \"object\"\n        },\n        {\n          name: \"onOverlapOnce(name,function())\",\n          snippet: `onOverlapOnce(\"name\",function(){})`,\n          tip: {\n            description: {\n              ko: `특정 오브젝트와 만났을 때 입력된 함수를 한 번만 호출하기`\n            },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"오브젝트의 이름\" }\n              },\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ]\n          },\n          newLine: `onOverlapOnce(\"name\",function(){`,\n          selection: \"name\",\n          selectionType: \"object\"\n        },\n        {\n          name: \"changeScene(name)\",\n          snippet: `changeScene(\"name\")`,\n          tip: {\n            description: { ko: `입력된 이름의 scene으로 변경하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"scene의 이름\" }\n              }\n            ]\n          },\n          selection: \"name\",\n          selectionType: \"scene\"\n        },\n        {\n          name: \"onClick(function())\",\n          snippet: `onClick(function(){})`,\n          tip: {\n            description: {\n              ko: `오브젝트를 클릭했을 때 입력된 함수 호출하기`\n            },\n            params: [\n              {\n                name: \"function\",\n                description: { ko: \"호출되는 함수\" }\n              }\n            ],\n            description2: {\n              ko: \"GUI 또는 Mesh 오브젝트를 클릭했을 때 입력된 함수를 호출한다\"\n            }\n          },\n          newLine: `onClick(function(){`\n        }\n      ]\n    },\n    {\n      name: \"ID_CONTROL\",\n      api: [\n        {\n          name: \"if / else / else if\",\n          snippet: `if(true){}`\n        },\n        {\n          name: \"switch~case\",\n          snippet: `switch(value){case \"\" :break;default :break;}`,\n          newLine: `switch(value){`,\n          selection: \"value\"\n        },\n        {\n          name: \"while()\",\n          snippet: `while(true){}`,\n          newLine: `while(true){`,\n          selection: \"true\"\n        },\n        {\n          name: \"for()\",\n          snippet: `for(var i=0;i<10;i++){}`,\n          newLine: `for(var i=0;i<10;i++){`,\n          selection: \"10\"\n        },\n        {\n          name: \"wait(secs)\",\n          snippet: `wait(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"특정 시간 기다리기\" },\n            params: [{ name: \"secs\", description: { ko: \"숫자, 기다릴 초\" } }],\n            description2: { ko: \"secs초만큼 다음코드를 실행하지 않고 기다린다\" }\n          }\n        },\n        {\n          name: \"kill()\",\n          snippet: `kill()`,\n          tip: {\n            description: { ko: \"없애기\" },\n            description2: { ko: \"scene에서 오브젝트가 제거된다\" }\n          }\n        },\n        {\n          name: \"revive()\",\n          snippet: `revive()`,\n          tip: {\n            description: { ko: \"되살리기\" },\n            description2: { ko: \"secen에서 제거된(kill) 오브젝트를 되살린다\" }\n          }\n        },\n        {\n          name: \"clone()\",\n          snippet: `clone()`,\n          tip: {\n            description: { ko: \"복제하기\" },\n            description2: {\n              ko: \"해당 오브젝트가 복제되고 복제된 오브젝트를 반환한다\"\n            }\n          }\n        },\n        // {\n        //   name: \"print(message)\",\n        //   snippet: `print(\"message\")`,\n        //   selection: \"message\",\n        //   tip: {\n        //     description: { ko: \"디버그 메시지 출력\" },\n        //     params: [{ name: \"message\", description: { ko: \"출력할 문자열\" } }],\n        //     description2: { ko: \"chatbot의 대화창에 message를 출력할 수 있다\" }\n        //   }\n        // },\n        {\n          name: \"input(message)\",\n          snippet: `input(\"message\")`,\n          selection: \"message\",\n          tip: {\n            description: { ko: \"텍스트 입력받기\" },\n            params: [\n              { name: \"message\", description: { ko: \"입력받을 때 힌트\" } }\n            ],\n            description2: {\n              ko:\n                \"입력박스가 나타나고 문자열 또는 숫자를 입력할 수 있다.\\n[확인]을 누르면 입력된 값을 반환한다\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      name: \"ID_LOOKS\",\n      api: [\n        {\n          name: \"setScale(x, y, z)\",\n          snippet: `setScale(1, 1, 1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"크기 값 설정하기\" },\n            params: [\n              {\n                name: \"x\",\n                description: { ko: \"x축 크기 값 (숫자)\" }\n              },\n              {\n                name: \"y\",\n                description: { ko: \"y축 크기 값 (숫자)\" }\n              },\n              {\n                name: \"z\",\n                description: { ko: \"z축 크기 값 (숫자)\" }\n              }\n            ],\n            description2: { ko: \"오브젝트의 x,y,z축 크기 값을 설정한다.\" }\n          }\n        },\n        {\n          name: \"getScale()\",\n          snippet: \"getScale()\",\n          tip: {\n            description: { ko: \"x,y,z축 크기 값 가져오기\" },\n            description2: {\n              ko: \"getScale().x 와 같이 각 축의 크기 값을 확인할 수 있다.\"\n            }\n          }\n        },\n        {\n          name: \"setUiText(text)\",\n          snippet: `setUiText(\"text\")`,\n          selection: \"text\",\n          tip: {\n            description: { ko: \"문구 설정하기\" },\n            params: [\n              {\n                name: \"text\",\n                description: { ko: \"문자열\" }\n              }\n            ],\n            description2: { ko: \"텍스트 오브젝트의 문구를 수정한다\" }\n          }\n        },\n        {\n          name: \"setTextColor(color)\",\n          snippet: `setTextColor(\"black\")`,\n          selection: \"black\",\n          selectionType: \"color\",\n          tip: {\n            description: { ko: \"문구 색상 설정하기\" },\n            params: [\n              {\n                name: \"color\",\n                description: { ko: \"문자열\" }\n              }\n            ],\n            description2: { ko: \"텍스트 오브젝트의 문구 색상을 변경한다\" }\n          }\n        },\n        {\n          name: \"getTextColor()\",\n          snippet: `getTextColor()`,\n          tip: {\n            description: { ko: \"문구 색상 가져오기\" },\n\n            description2: {\n              ko: \"텍스트 오브젝트의 문구 색상값을 반환하다\"\n            }\n          }\n        },\n        {\n          name: \"setVisibility(visibility)\",\n          snippet: `setVisibility(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"보이는 정도 설정하기\" },\n            params: [\n              {\n                name: \"visibility\",\n                description: { ko: \"숫자(0~1), 보이는 정도의 비율\" }\n              }\n            ],\n            description2: {\n              ko:\n                \"오브젝트가 보이는 정도를 설정한다.\\n0이면 안 보이고, 완전히 보이는 1이 기본 값이다.\"\n            }\n          }\n        },\n        {\n          name: \"show()\",\n          snippet: `show()`,\n          tip: {\n            description: { ko: \"GUI 보이기\" },\n\n            description2: {\n              ko:\n                \"scene에 GUI가 보이며, 초기값이 show이기\\n때문에 hide()와 함께 사용해야 동작을 확인할 수 있다\"\n            }\n          }\n        },\n        {\n          name: \"hide()\",\n          snippet: `hide()`,\n          tip: {\n            description: { ko: \"GUI 숨기기\" },\n\n            description2: {\n              ko: \"scene에서 GUI가 사라지며, show()와 함께 사용한다\"\n            }\n          }\n        },\n        {\n          name: \"playAnimation(name, isLoop)\",\n          snippet: `playAnimation(\"name\", true)`,\n          selection: \"name\",\n          selectionType: \"animation\",\n          tip: {\n            description: { ko: \"애니메이션 실행하기\" },\n            params: [\n              { name: \"name\", description: { ko: \"문자열\" } },\n              { name: \"isLoop\", description: { ko: \"true 또는 false\" } }\n            ],\n            description2: {\n              ko: \"name 애니메이션을 isLoop에 따라 무한 혹은 1회 동작한다\"\n            }\n          }\n        },\n        {\n          name: \"stopAnimation()\",\n          snippet: `stopAnimation()`,\n          tip: {\n            description: { ko: \"애니메이션 멈추기\" },\n            description2: { ko: \"동작중인 애니메이션을 멈춘다\" }\n          }\n        }\n      ]\n    },\n    {\n      name: \"ID_PHYSICS\",\n      api: [\n        {\n          name: \"enablePhysics(mass, bounce, friction)\",\n          snippet: `enablePhysics(1, 0, 0)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"물리 법칙 영향을 받도록 설정하기\" },\n            params: [\n              {\n                name: \"mass\",\n                description: { ko: \"숫자(설정할 질량값)\" }\n              },\n              {\n                name: \"bounce\",\n                description: { ko: \"숫자(설정할 튕기는 정도의 값)\" }\n              },\n              {\n                name: \"friction\",\n                description: { ko: \"숫자(설정할 마찰값)\" }\n              }\n            ],\n            description2: {\n              ko:\n                \"물리 법칙 영향을 받는 오브젝트로 설정한다. 옵션을 설정하지 않으면 질량은 1로 설정된다.\"\n            }\n          }\n        },\n        {\n          name: \"enablePhysicsParams(enabled)\",\n          snippet: `enablePhysicsParams(true)`,\n          selection: \"true\",\n          tip: {\n            description: { ko: \"물리 값 설정을 활성화하거나 비활성화하기\" },\n            params: [\n              { name: \"enabled\", description: { ko: \"true 또는 false\" } }\n            ],\n            description2: {\n              ko:\n                \"오브젝트의 질량, 튕기는 정도, 마찰 설정을 활성화하거나 비활성화한다\"\n            }\n          }\n        },\n        {\n          name: \"setMass(value)\",\n          snippet: `setMass(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"질량 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 질량값)\" }\n              }\n            ],\n            description2: {\n              ko: \"질량을 설정한다.\\n다른 물리효과와 상호작용한다\"\n            }\n          }\n        },\n        {\n          name: \"setBounce(value)\",\n          snippet: `setBounce(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"튕기는 정도 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 튕기는 정도의 값)\" }\n              }\n            ],\n            description2: {\n              ko:\n                \"다른 스프라이트와 충돌했을 때, 설정한 값만큼 반작용이 일어난다.\\n값이 1일 경우 작용하는 힘을 그대로 전달받게 된다\"\n            }\n          }\n        },\n        {\n          name: \"setFriction(value)\",\n          snippet: `setFriction(1)`,\n          selection: \"1\",\n          tip: {\n            description: { ko: \"마찰 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 마찰값)\" }\n              }\n            ],\n            description2: {\n              ko: \"마찰을 설정한다.\\n다른 물리효과와 상호작용한다\"\n            }\n          }\n        },\n        {\n          name: \"getMass()\",\n          snippet: `getMass()`,\n          tip: {\n            description: { ko: \"질량 가져오기\" }\n          }\n        },\n        {\n          name: \"getBounce()\",\n          snippet: `getBounce()`,\n          tip: {\n            description: { ko: \"튕기는 정도 가져오기\" }\n          }\n        },\n        {\n          name: \"getFriction()\",\n          snippet: `getFriction()`,\n          tip: {\n            description: { ko: \"마찰 가져오기\" }\n          }\n        },\n        {\n          name: \"setVelocityX(value)\",\n          snippet: `setVelocityX(100)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"x축 속도 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속도값)\" }\n              }\n            ],\n            description2: {\n              ko: \"x축에 대한 속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n            }\n          }\n        },\n        {\n          name: \"setVelocityY(value)\",\n          snippet: `setVelocityY(100)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"y축 속도 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속도값)\" }\n              }\n            ],\n            description2: {\n              ko: \"y축에 대한 속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n            }\n          }\n        },\n        {\n          name: \"setVelocityZ(value)\",\n          snippet: `setVelocityZ(100)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"z축 속도 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속도값)\" }\n              }\n            ],\n            description2: {\n              ko: \"z축에 대한 속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n            }\n          }\n        },\n        {\n          name: \"getVelocityX()\",\n          snippet: `getVelocityX()`,\n          tip: {\n            description: { ko: \"x축 속도 가져오기\" }\n          }\n        },\n        {\n          name: \"getVelocityY()\",\n          snippet: `getVelocityY()`,\n          tip: {\n            description: { ko: \"y축 속도 가져오기\" }\n          }\n        },\n        {\n          name: \"getVelocityZ()\",\n          snippet: `getVelocityZ()`,\n          tip: {\n            description: { ko: \"z축 속도 가져오기\" }\n          }\n        },\n        {\n          name: \"setAngularVelocityX(value)\",\n          snippet: `setAngularVelocityX(5)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"x축 각속도 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속도값)\" }\n              }\n            ],\n            description2: {\n              ko: \"x축에 대한 각속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n            }\n          }\n        },\n        {\n          name: \"setAngularVelocityY(value)\",\n          snippet: `setAngularVelocityY(5)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"y축 각속도 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속도값)\" }\n              }\n            ],\n            description2: {\n              ko: \"y축에 대한 각속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n            }\n          }\n        },\n        {\n          name: \"setAngularVelocityZ(value)\",\n          snippet: `setAngularVelocityZ(5)`,\n          selection: \"100\",\n          tip: {\n            description: { ko: \"z축 각속도 설정하기\" },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"숫자(설정할 속도값)\" }\n              }\n            ],\n            description2: {\n              ko: \"z축에 대한 각속도를 설정한다.\\n질량이 0보다 커야 동작한다.\"\n            }\n          }\n        },\n        {\n          name: \"getAngularVelocityX()\",\n          snippet: `getVelocityX()`,\n          tip: {\n            description: { ko: \"x축 각속도 가져오기\" }\n          }\n        },\n        {\n          name: \"getAngularVelocityY()\",\n          snippet: `getVelocityY()`,\n          tip: {\n            description: { ko: \"y축 각속도 가져오기\" }\n          }\n        },\n        {\n          name: \"getAngularVelocityZ()\",\n          snippet: `getVelocityZ()`,\n          tip: {\n            description: { ko: \"z축 각속도 가져오기\" }\n          }\n        }\n      ]\n    },\n    {\n      name: \"ID_SOUND\",\n      api: [\n        {\n          name: \"playSound(name, isLoop)\",\n          snippet: `playSound(\"name\", false)`,\n          tip: {\n            description: { ko: `사운드 재생하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"사운드 이름\" }\n              },\n              {\n                name: \"isLoop\",\n                description: { ko: \"반복 재생 여부\" }\n              }\n            ],\n            description2: {\n              ko: `입력된 사운드를\\n1회 혹은 반복하여 재생한다.`\n            }\n          },\n          selection: \"name\",\n          selectionType: \"sound\"\n        },\n        {\n          name: \"restartSound(name)\",\n          snippet: `restartSound(\"name\")`,\n          tip: {\n            description: { ko: `사운드 처음부터 다시 재생하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"사운드 이름\" }\n              }\n            ],\n            description2: {\n              ko:\n                \"입력된 사운드를 처음부터 다시 재생한다.\\n(반복 여부는 playSound 함수에서 설정된 값을 따른다.)\"\n            }\n          },\n          selection: \"name\",\n          selectionType: \"sound\"\n        },\n        {\n          name: \"resumeSound(name)\",\n          snippet: `resumeSound(\"name\")`,\n          tip: {\n            description: { ko: `사운드 이어서 재생하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"사운드 이름\" }\n              }\n            ],\n            description2: {\n              ko:\n                \"입력된 사운드를 일시정지된 위치부터 다시 재생한다.\\n(반복 여부는 playSound 함수에서 설정된 값을 따른다.)\"\n            }\n          },\n          selection: \"name\",\n          selectionType: \"sound\"\n        },\n        {\n          name: \"stopAllSounds()\",\n          snippet: `stopAllSounds()`,\n          tip: {\n            description: { ko: `재생중인 모든 사운드 정지하기` }\n          }\n        },\n        {\n          name: \"stopSound(name)\",\n          snippet: `stopSound(\"name\")`,\n          tip: {\n            description: { ko: `사운드 정지하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"사운드 이름\" }\n              }\n            ]\n          },\n          selection: \"name\",\n          selectionType: \"sound\"\n        },\n        {\n          name: \"pauseSound(name)\",\n          snippet: `pauseSound(\"name\")`,\n          tip: {\n            description: { ko: `사운드 일시정지하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"사운드 이름\" }\n              }\n            ]\n          },\n          selection: \"name\",\n          selectionType: \"sound\"\n        },\n        {\n          name: \"setGlobalSoundVolume(value)\",\n          snippet: `setGlobalSoundVolume(1)`,\n          tip: {\n            description: { ko: `앱의 음량 설정하기` },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"음량(0~1 사이의 값)\" }\n              }\n            ]\n          },\n          selection: \"1\"\n        },\n        {\n          name: \"addGlobalSoundVolume(value)\",\n          snippet: `addGlobalSoundVolume(0.1)`,\n          tip: {\n            description: { ko: `앱의 음량을 value만큼 키우기` },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"음량의 변화 크기(0~1 사이의 값)\" }\n              }\n            ]\n          },\n          selection: \"0.1\"\n        },\n        {\n          name: \"getGlobalSoundVolume()\",\n          snippet: `getGlobalSoundVolume()`,\n          tip: {\n            description: { ko: `현재 앱의 음량 가져오기` }\n          }\n        },\n        {\n          name: \"setSoundVolume(name, value)\",\n          snippet: `setSoundVolume(\"name\", 1)`,\n          tip: {\n            description: { ko: `사운드 음량 설정하기` },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"사운드 이름\" }\n              },\n              {\n                name: \"value\",\n                description: { ko: \"음량(0~1 사이의 값)\" }\n              }\n            ]\n          },\n          selection: \"name\"\n        },\n        {\n          name: \"addSoundVolume(name, value)\",\n          snippet: `addSoundVolume(\"name\", 0.1)`,\n          tip: {\n            description: { ko: `사운드의 음량을 value만큼 키우기` },\n            params: [\n              {\n                name: \"value\",\n                description: { ko: \"음량의 변화 크기(0~1 사이의 값)\" }\n              }\n            ]\n          },\n          selection: \"name\"\n        },\n        {\n          name: \"getSoundVolume(name)\",\n          snippet: `getSoundVolume(\"name\")`,\n          tip: {\n            description: { ko: `사운드의 음량 가져오기` }\n          },\n          selection: \"name\"\n        }\n      ]\n    },\n    {\n      name: \"ID_TIME\",\n      api: [\n        {\n          name: \"getDeltaTime()\",\n          snippet: `getDeltaTime()`,\n          tip: {\n            description: {\n              ko: \"바로 전 프레임을 완료하는 데 걸린 시간(초 단위) 가져오기\"\n            }\n          }\n        },\n        {\n          name: \"startTimer()\",\n          snippet: `startTimer()`,\n          tip: {\n            description: { ko: \"타이머 시작하기\" }\n          }\n        },\n        {\n          name: \"pauseTimer()\",\n          snippet: `pauseTimer()`,\n          tip: {\n            description: { ko: \"타이머 멈추기\" }\n          }\n        },\n        {\n          name: \"resumeTimer()\",\n          snippet: `resumeTimer()`,\n          tip: {\n            description: { ko: \"타이머 이어서 시작하기\" }\n          }\n        },\n        {\n          name: \"resetTimer()\",\n          snippet: `resetTimer()`,\n          tip: {\n            description: { ko: \"타이머 0초로 되돌리기\" }\n          }\n        },\n        {\n          name: \"getTimer()\",\n          snippet: `getTimer()`,\n          tip: {\n            description: { ko: \"현재 타이머의 값 가져오기\" }\n          }\n        }\n      ]\n    },\n    {\n      name: \"ID_PARAMETER\",\n      api: [\n        {\n          name: \"function\",\n          snippet: \"function name(){}\",\n          newLine: \"{\",\n          selection: \"name\",\n          tip: {\n            description: { ko: \"함수를 선언한다.\" },\n            description2: {\n              ko: \"name이라는 이름의 함수를 선언한다.\\n\"\n            }\n          }\n        },\n        {\n          name: \"let\",\n          snippet: \"let name\",\n          selection: \"name\",\n          tip: {\n            description: { ko: \"변수를 선언한다.\" },\n            description2: {\n              ko: \"name이라는 이름의 변수를 선언한다.\\n\"\n            }\n          }\n        },\n        {\n          name: \"const\",\n          snippet: \"const name\",\n          selection: \"name\",\n          tip: {\n            description: { ko: \"상수를 선언한다.\" },\n            description2: {\n              ko: \"name이라는 이름의 상수를 선언한다.\\n\"\n            }\n          }\n        },\n        {\n          name: \"global\",\n          snippet: `global.name`,\n          selection: \"name\",\n          selectionType: \"global\",\n          tip: {\n            description: { ko: \"전역 변수\" },\n            description2: {\n              ko:\n                \"앱 전체에서 사용 가능한 전역 변수이다.\\nscene이 달라도 같이 사용된다\"\n            }\n          }\n        },\n        {\n          name: \"getObject(name)\",\n          snippet: `getObject(\"name\")`,\n          selection: \"name\",\n          selectionType: \"object\",\n          tip: {\n            description: { ko: \"지정한 이름을 가진 첫번째 오브젝트 가져오기\" },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"가져올 오브젝트의 이름 문자열\" }\n              }\n            ],\n            description2: { ko: \"name이 이름인 첫번째 오브젝트를 반환한다\" }\n          }\n        },\n        {\n          name: \"getObjects(name)\",\n          snippet: `getObjects(\"name\")`,\n          selection: \"name\",\n          selectionType: \"object\",\n          tip: {\n            description: { ko: \"지정한 이름을 가진 모든 오브젝트 가져오기\" },\n            params: [\n              {\n                name: \"name\",\n                description: { ko: \"가져올 오브젝트들의 이름 문자열\" }\n              }\n            ],\n            description2: { ko: \"name이 이름인 모든 오브젝트를 반환한다\" }\n          }\n        },\n        {\n          name: \"socket.connect(function())\",\n          snippet: \"socket.connect(function(){})\",\n          newLine: `socket.connect(function(){`,\n          tip: {\n            description: { ko: \"소켓 서버에 접속한다.\" }\n          }\n        },\n        {\n          name: \"socket.disconnect()\",\n          snippet: \"socket.disconnect()\",\n          tip: {\n            description: { ko: \"소켓 서버 연결을 해제한다.\" }\n          }\n        },\n        {\n          name: \"socket.isConnected()\",\n          snippet: \"socket.isConnected()\",\n          tip: {\n            description: { ko: \"소켓 서버와 연결 상태를 확인한다.\" }\n          }\n        },\n        {\n          name: \"socket.emit(data)\",\n          snippet: \"socket.emit(data)\",\n          tip: {\n            description: { ko: \"소켓서버에 데이터를 전송한다.\" }\n          }\n        },\n        {\n          name: \"socket.onReceive(function())\",\n          snippet: \"socket.onReceive(function(data){})\",\n          newLine: `socket.onReceive(function(data){`,\n          tip: {\n            description: { ko: \"소켓 서버로부터 메세지를 받는다.\" }\n          }\n        },\n        {\n          name: \"socket.joinRoom(roomId)\",\n          snippet: \"socket.joinRoom(roomId)\",\n          tip: {\n            description: { ko: \"소켓 서버의 특정한 룸에 입장한다.\" }\n          }\n        },\n        {\n          name: \"socket.leaveRoom(roomId)\",\n          snippet: \"socket.leaveRoom(roomId)\",\n          tip: {\n            description: { ko: \"소켓 서버의 룸에서 퇴장한다.\" }\n          }\n        },\n        {\n          name: \"socket.emitRoom(roomId,data)\",\n          snippet: \"socket.emitRoom(roomId,data)\",\n          tip: {\n            description: { ko: \"소켓 서버의 룸에 메세지를 전송한다.\" }\n          }\n        }\n      ]\n    }\n  ];\n\n  getAllFunctions() {\n    let functions = [];\n\n    this.apiList.forEach(category => {\n      const categoryName = category.name;\n      category.api.forEach(api => {\n        if (api.snippet) {\n          if (api.name === \"if / else / else if\") {\n            return;\n          }\n          const meta = categoryName;\n          const caption = api.name;\n          const value = api.snippet;\n          const newLine = api.newLine;\n          const selection = api.selection;\n          const selectionType = api.selectionType;\n          const requiredParamCount = api.requiredParamCount;\n          const tip = api.tip;\n          const funcRegex = /([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/gim;\n          const funcMatch = funcRegex.exec(api.name);\n          let name;\n          if (funcMatch) name = funcMatch[0];\n          functions.push({\n            name,\n            tip,\n            caption,\n            value,\n            meta,\n            newLine,\n            selection,\n            selectionType,\n            requiredParamCount\n          });\n        }\n      });\n    });\n\n    functions.push({\n      caption: \"if\",\n      value: `if(true){}`,\n      meta: \"meta\",\n      newLine: `if(true){`,\n      selection: \"true\"\n    });\n    functions.push({\n      caption: \"else if\",\n      value: `else if(true){}`,\n      meta: \"meta\",\n      newLine: `else if(true){`,\n      selection: \"true\"\n    });\n    functions.push({\n      caption: \"else\",\n      value: `else{}`,\n      meta: \"meta\",\n      newLine: `else{`\n    });\n    functions.push({\n      caption: \"true\",\n      value: `true`,\n      meta: \"boolean\"\n    });\n    functions.push({\n      caption: \"false\",\n      value: `false`,\n      meta: \"boolean\"\n    });\n\n    return functions;\n  }\n\n  getAPI(name) {\n    for (let i in this.apiList) {\n      for (let j in this.apiList[i].api) {\n        if (this.apiList[i].api[j].name === name) {\n          return this.apiList[i].api[j];\n        }\n      }\n    }\n  }\n}\n\nexport default new ApiLibrary3d();\n"]},"metadata":{},"sourceType":"module"}