{"ast":null,"code":"import _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as acorn from \"acorn\";\nimport apiLibrary from \"./apiLibrary\";\nvar disableError = false;\n\nvar JSEvaluator = /*#__PURE__*/function () {\n  function JSEvaluator(options) {\n    _classCallCheck(this, JSEvaluator);\n\n    this.AST = null;\n    this.options = _objectSpread({\n      callExpressionOnly: false\n    }, options);\n    this.mainFrame = null;\n    this.Entry = {\n      id: \"symbolName\",\n      type: \"object\",\n      // \"object\", \"label\", \"function\", \"string\", \"number\", \"array\", \"block\", \"boolean\", undefined\n      value: null,\n      params: undefined,\n      kind: \"let\",\n      // \"let\", \"var\", \"const\", \"frame\", \"argument\", \"reserved\", \"native\", \"property\"\n      loc: {\n        start: {\n          line: 0,\n          column: 0\n        },\n        end: {\n          line: 0,\n          column: 0\n        },\n        pos: {\n          start: 0,\n          end: 0\n        }\n      }\n    };\n    this.errors = [];\n    this.parseErrors = [];\n    this.reserved = [];\n    this.lowerReservedIdMap = new Map();\n    this.ERROR_MESSAGE = {\n      FUNCTION_UPPER_LOWER: {}\n    };\n  }\n\n  _createClass(JSEvaluator, [{\n    key: \"getErrors\",\n    value: function getErrors() {\n      // return [...this.errors, ...this.parseErrors];\n      return this.parseErrors;\n    }\n  }, {\n    key: \"resetErrors\",\n    value: function resetErrors() {\n      this.errors.length = 0;\n      this.parseErrors.length = 0;\n    }\n  }, {\n    key: \"pushError\",\n    value: function pushError(entry) {\n      var error = this.errors.find(function (element) {\n        if (element.loc.start.line !== entry.loc.start.line) {\n          return false;\n        }\n\n        if (element.loc.end.line !== entry.loc.end.line) {\n          return false;\n        }\n\n        if (element.loc.start.column !== entry.loc.start.column) {\n          return false;\n        }\n\n        if (element.loc.end.column !== entry.loc.end.column) {\n          return false;\n        }\n\n        if (element.type !== entry.type) {\n          return false;\n        }\n\n        return true;\n      });\n\n      if (!error) {\n        this.errors.push(entry);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"addReserved\",\n    value: function addReserved(reserved) {\n      this.reserved = [].concat(_toConsumableArray(this.reserved), [reserved]);\n    }\n  }, {\n    key: \"setListOfReserved\",\n    value: function setListOfReserved(list) {\n      this.reserved = _toConsumableArray(list);\n      this.setLowerReservedIdSet();\n    }\n  }, {\n    key: \"setLowerReservedIdSet\",\n    value: function setLowerReservedIdSet() {\n      for (var i = 0; i < this.reserved.length; i++) {\n        var origin = this.reserved[i].id;\n        var lower = origin.toLowerCase();\n        this.lowerReservedIdMap.set(lower, origin);\n      }\n    }\n  }, {\n    key: \"getListOfReserved\",\n    value: function getListOfReserved() {\n      return this.reserved;\n    }\n  }, {\n    key: \"getReserved\",\n    value: function getReserved(id) {\n      var ret = this.reserved.find(function (reserved) {\n        return reserved.id === id;\n      });\n\n      if (ret === undefined) {\n        return null;\n      }\n\n      return _objectSpread({\n        id: \"Returns of the \" + id\n      }, ret, {\n        kind: \"reserved\"\n      });\n    }\n  }, {\n    key: \"valueType\",\n    value: function valueType(value) {\n      var type = typeof value;\n\n      if (type === \"object\" && Array.isArray(value)) {\n        return \"array\";\n      }\n\n      return type;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(code, isMerge) {\n      this.parseErrors.length = 0;\n      var lastLineTokens = {\n        line: 0,\n        tokens: []\n      };\n\n      try {\n        this.AST = acorn.parse(code, {\n          ecmaVersion: 9,\n          // 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), 10 (2019, partial support)\n          sourceType: \"script\",\n          // \"module\"\n          onInsertedSemicolon: null,\n          onTrailingComma: null,\n          allowReserved: true,\n          allowReturnOutsideFunction: false,\n          allowImportExportEverywhere: false,\n          allowAwaitOutsideFunction: true,\n          allowHashBang: false,\n          locations: true,\n          onToken: function onToken(token) {\n            if (lastLineTokens.line !== token.loc.start.line) {\n              lastLineTokens.line = token.loc.start.line;\n              lastLineTokens.tokens = [];\n            }\n\n            lastLineTokens.tokens.push(token);\n          },\n          onComment: null,\n          ranges: false,\n          program: isMerge ? this.AST : null,\n          // The AST if we have, a current AST would be merged into this.\n          sourceFile: false,\n          directSourceFile: false,\n          preserveParens: false\n        });\n      } catch (e) {\n        //에러가 발생한 라인의 토큰 중 apiLibrary에 존재하는 토큰만 반환\n        var errorKeywords = lastLineTokens.tokens.filter(function (t) {\n          if (t.value && isNaN(t.value)) {\n            if (t.value.match(/^[0-9a-zA-Z]+$/)) {\n              var api = apiLibrary.getAPIbyId(t.value);\n              return api !== null;\n            }\n          }\n\n          return false;\n        }).map(function (t) {\n          return t.value;\n        });\n        errorKeywords = _toConsumableArray(new Set(errorKeywords));\n        this.printLog(e.name, \": \", e.message);\n        this.parseErrors.push({\n          type: \"error\",\n          message: e.name + \": \" + e.message,\n          pos: e.pos,\n          loc: {\n            start: {\n              line: e.loc.line,\n              column: e.loc.column\n            },\n            end: {\n              line: e.loc.line,\n              column: e.loc.column\n            }\n          },\n          keywords: errorKeywords\n        });\n        return false;\n      }\n\n      if (this.AST.type !== \"Program\") {\n        this.parseErrors.push({\n          type: \"error\",\n          message: \"Internal error: The type of the root node is not the Program\",\n          loc: {\n            start: {\n              line: 1,\n              column: 0\n            },\n            end: {\n              line: 1,\n              column: 0\n            }\n          }\n        });\n        this.AST = null;\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      this.mainFrame = null;\n      this.errors.length = 0;\n\n      try {\n        var state = {\n          frame: null,\n          isActive: true,\n          upStack: 0\n        };\n        this.printLog(\"Build!! symbol table\", this.AST);\n        this.ConsumeNode(this.AST, null, \"lvalue\", state);\n      } catch (error) {\n        this.printLog(error);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"SymbolTable\",\n    value: function SymbolTable() {\n      return this.mainFrame;\n    }\n  }, {\n    key: \"ConsumeNode\",\n    value: function ConsumeNode(node, parent, vType, state) {\n      if (!node) {\n        this.printLog(\"Empty node\");\n        return {\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: undefined\n        };\n      }\n\n      if (!node.type) {\n        this.printLog(\"Invalid type\");\n        return {\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: undefined\n        };\n      }\n\n      if (typeof this[node.type] !== \"function\") {\n        this.printLog(\"Unsupported type: \", node.type, node);\n        return {\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: undefined\n        };\n      }\n\n      return this[node.type](node, parent, vType, state);\n    } // Returns pushed index of an entry.\n\n  }, {\n    key: \"Push\",\n    value: function Push(entry, state) {\n      if (!state) {\n        this.mainFrame.value.stack.push(entry);\n      } else {\n        state.frame.value.stack.push(entry);\n      }\n    } // loc === null: global search\n    // table === null: global table\n    // isStartWidth === false: matched symbol\n\n  }, {\n    key: \"FindSymbol\",\n    value: function FindSymbol(name, loc, frame, isStartWith, upStack) {\n      var i;\n\n      if (!frame) {\n        frame = this.mainFrame;\n      }\n\n      if (!frame || !frame.value.stack) {\n        this.printLog(\"Symbol Table is empty\");\n        return null;\n      } // Step 1. Find the target frame using given \"loc\" information\n\n\n      var targetFrame = null;\n\n      if (typeof loc === \"undefined\") {\n        targetFrame = frame;\n      } else {\n        var frameList = [];\n        var _list = [frame];\n        var iter;\n\n        do {\n          iter = _list.pop();\n          frameList.push(iter);\n\n          for (i = 0; i < iter.value.stack.length; i++) {\n            if (iter.value.stack[i].kind === \"frame\") {\n              _list.unshift(iter.value.stack[i]);\n            }\n          }\n        } while (_list.length > 0);\n\n        var accuracy;\n\n        for (i = 0; i < frameList.length; i++) {\n          if (loc.pos) {\n            if (frameList[i].loc.pos.start <= loc.pos.start && loc.pos.end <= frameList[i].loc.pos.end) {\n              if (targetFrame === null) {\n                targetFrame = frameList[i];\n                accuracy = loc.pos.start - frameList[i].loc.pos.start + (frameList[i].loc.pos.end - loc.pos.end);\n              } else {\n                var tmp = loc.pos.start - frameList[i].loc.pos.start + (frameList[i].loc.pos.end - loc.pos.end);\n\n                if (tmp < accuracy) {\n                  accuracy = tmp;\n                  targetFrame = frameList[i];\n                }\n              }\n            }\n          } else if (frameList[i].loc.start.line <= loc.start.line && loc.end.line <= frameList[i].loc.end.line) {\n            if (targetFrame === null) {\n              targetFrame = frameList[i];\n              accuracy = loc.start.line - frameList[i].loc.start.line + (frameList[i].loc.end.line - loc.end.line);\n            } else {\n              var _tmp = loc.start.line - frameList[i].loc.start.line + (frameList[i].loc.end.line - loc.end.line);\n\n              if (_tmp < accuracy) {\n                accuracy = _tmp;\n                targetFrame = frameList[i];\n              }\n            }\n          }\n        }\n      }\n\n      var list = isStartWith === true ? [] : null;\n\n      if (!targetFrame) {\n        targetFrame = frame;\n\n        if (!targetFrame) {\n          // Not found\n          return list;\n        }\n      } // Find the symbol from the targetFrame.\n\n\n      do {\n        // Search in the local scope including arguments.\n        for (i = 0; i < targetFrame.value.stack.length; i++) {\n          if (targetFrame.value.stack[i].kind === \"frame\") {\n            continue;\n          }\n\n          if (targetFrame.value.stack[i].kind === \"argument\") {\n            continue;\n          }\n\n          if (isStartWith === true) {\n            if (this.valueType(targetFrame.value.stack[i].id) === \"string\" && targetFrame.value.stack[i].id.startsWith(name) === true) {\n              list.push(targetFrame.value.stack[i]);\n            }\n          } else if (targetFrame.value.stack[i].id === name) {\n            return targetFrame.value.stack[i];\n          }\n        } // Search in the parameter list\n\n\n        if (targetFrame.value.parent) {\n          var idx = targetFrame.value.parent.value.stack.indexOf(targetFrame) - 1;\n\n          while (idx >= 0 && targetFrame.value.parent.value.stack[idx].kind === \"argument\") {\n            if (isStartWith === true) {\n              if (this.valueType(targetFrame.value.parent.value.stack[idx].id) === \"string\" && targetFrame.value.parent.value.stack[idx].id.startsWith(name) === true) {\n                list.push(targetFrame.value.parent.value.stack[idx]);\n              }\n            } else if (targetFrame.value.parent.value.stack[idx].id === name) {\n              return targetFrame.value.parent.value.stack[idx];\n            }\n\n            idx--;\n          }\n        }\n\n        if (upStack) {\n          // Try again from the parent frame\n          targetFrame = targetFrame.value.parent;\n        } else {\n          // Or try again from the main frame. (global)\n          if (targetFrame !== this.mainFrame) {\n            targetFrame = this.mainFrame;\n          } else {\n            targetFrame = null;\n          }\n        }\n      } while (targetFrame);\n\n      return list;\n    } // handlers for nodes\n    //\n\n  }, {\n    key: \"VariableDeclarator\",\n    value: function VariableDeclarator(node, parent, vType, state) {\n      var left = this.ConsumeNode(node.id, node, \"rvalue\", state);\n      var kind;\n\n      if (left.kind === \"reserved\") {\n        this.pushError({\n          type: \"error\",\n          message: left.id + \" is a reserved as the \" + left.type,\n          loc: Object.assign({\n            pos: {\n              start: node.id.start,\n              end: node.id.end\n            }\n          }, node.id.loc)\n        });\n        return left;\n      }\n\n      if (left.type !== undefined) {\n        if (left.isGlobal) {\n          this.pushError({\n            type: \"info\",\n            message: \"The \" + left.value + \" would be the shadow variable\",\n            loc: Object.assign({\n              pos: {\n                start: node.id.start,\n                end: node.id.end\n              }\n            }, node.id.loc)\n          });\n        } else {\n          disableError && this.pushError({\n            type: \"warning\",\n            message: left.id + \" is already declared\",\n            loc: Object.assign({\n              pos: {\n                start: node.id.start,\n                end: node.id.end\n              }\n            }, node.id.loc)\n          });\n        } // In this case, register this variable to the local scope\n\n\n        kind = \"let\";\n      } else {\n        kind = parent.kind;\n\n        if (kind === undefined) {\n          this.printLog(\"Parent node has no kind field\");\n          kind = \"var\";\n        }\n      } // @NOTE:\n      // node.init could be null.\n\n\n      var value = this.ConsumeNode(node.init, node, \"rvalue\", state);\n      var ret = Object.assign({}, this.Entry, {\n        id: left.id,\n        type: value.type,\n        value: value.value,\n        params: value.params,\n        kind: kind,\n        loc: Object.assign({\n          pos: {\n            start: node.init ? node.init.start : node.start,\n            end: node.init ? node.init.end : node.end\n          }\n        }, node.init ? node.init.loc : node.loc)\n      });\n\n      if (kind === \"var\" && state.isActive === true) {\n        // Push to the global scope\n        this.Push(ret);\n      } else {\n        this.Push(ret, state);\n      }\n\n      return ret;\n    } // Terminal node\n\n  }, {\n    key: \"Identifier\",\n    value: function Identifier(node, parent, vType, state) {\n      var entry;\n\n      if (vType === \"lvalue\") {\n        entry = {\n          type: \"identifier\",\n          value: node.name\n        };\n      } else {\n        // Step 1. Find symbol in the given table first.\n        entry = this.FindSymbol(node.name, node.loc, state.frame, false, state.upStack);\n\n        if (!entry) {\n          if (state.isActive === false && state.upStack === 0) {\n            // Step 2. If the given table is for local scope,\n            //         try to search again in the global scope table.\n            entry = this.FindSymbol(node.name);\n\n            if (entry) {\n              entry.isGlobal = true; // Mark as global variable\n            }\n          }\n\n          if (!entry) {\n            // Step 3. If the symbol was not found,\n            //         try to find it from the reserved table.\n            entry = this.getReserved(node.name);\n          }\n\n          if (!entry) {\n            entry = {\n              id: node.name,\n              type: undefined,\n              value: undefined,\n              params: undefined,\n              kind: undefined\n            };\n          }\n        }\n      }\n\n      return entry;\n    } // Terminal node\n\n  }, {\n    key: \"Literal\",\n    value: function Literal(node, parent, vType, state) {\n      return {\n        type: this.valueType(node.value),\n        value: node.value\n      };\n    } // hello = {\n    //   test: \"hi\"\n    // }\n\n  }, {\n    key: \"ObjectExpression\",\n    value: function ObjectExpression(node, parent, vType, state) {\n      var _this = this;\n\n      var value = {\n        type: \"object\",\n        value: {}\n      };\n      node.properties.forEach(function (property) {\n        // property node is consisting with \"key\", \"value\"\n        var eValue = _this.ConsumeNode(property, node, \"rvalue\", state);\n\n        value = _objectSpread({}, value, {\n          value: _objectSpread({}, value.value, eValue)\n        });\n      });\n      return value;\n    } // A child node of the ObjectExpression\n\n  }, {\n    key: \"Property\",\n    value: function Property(node, parent, vType, state) {\n      var left = this.ConsumeNode(node.key, node, node.computed ? \"rvalue\" : \"lvalue\", state);\n      var right = this.ConsumeNode(node.value, node, \"rvalue\", state);\n\n      if (left.type === undefined || left.type === \"object\") {\n        this.pushError({\n          type: \"warning\",\n          message: left.id + \" is \" + left.type,\n          loc: Object.assign({\n            pos: {\n              start: node.key.start,\n              end: node.key.end\n            }\n          }, node.key.loc)\n        });\n      }\n\n      if (right.type === undefined) {\n        this.pushError({\n          type: \"warning\",\n          message: right.id + \" is \" + right.type,\n          loc: Object.assign({\n            pos: {\n              start: node.value ? node.value.start : node.start,\n              end: node.value ? node.value.end : node.end\n            }\n          }, node.value ? node.value.loc : node.loc)\n        });\n      }\n\n      var ret = _defineProperty({}, left.value, _objectSpread({}, right, {\n        kind: \"property\"\n      }));\n\n      return ret;\n    }\n  }, {\n    key: \"CallExpression\",\n    value: function CallExpression(node, parent, vType, state) {\n      var _this2 = this;\n\n      var evalArgs = [];\n      var returns = {\n        id: \"Returns of the function\",\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      }; // arguments and callee can have the assignment or the declaration statements.\n\n      var funcName = this.ConsumeNode(node.callee, node, \"rvalue\", state);\n\n      if (!funcName) {\n        this.printLog(\"Unsupported function call found, please check the reserved function list and its return value\", node.callee);\n        return returns;\n      }\n\n      node.arguments.forEach(function (argument) {\n        var pArg = _this2.ConsumeNode(argument, node, vType, state);\n\n        if (pArg.type === undefined && pArg.kind !== \"argument\") {\n          _this2.pushError({\n            type: \"warning\",\n            message: pArg.id + \" is undefined (call)\",\n            loc: Object.assign({\n              pos: {\n                start: argument.start,\n                end: argument.end\n              }\n            }, argument.loc)\n          });\n        }\n\n        evalArgs.push(pArg); // ignore return value\n      });\n\n      if (funcName.kind === undefined) {\n        var lowerFuncNameId = funcName.id.toLowerCase();\n\n        if (this.lowerReservedIdMap.has(lowerFuncNameId)) {\n          this.pushError({\n            type: \"error\",\n            message: this.ERROR_MESSAGE.FUNCTION_UPPER_LOWER,\n            typingFunction: funcName.id,\n            originFunction: this.lowerReservedIdMap.get(lowerFuncNameId),\n            loc: Object.assign({\n              pos: {\n                start: node.callee.start,\n                end: node.callee.end\n              }\n            }, node.callee.loc)\n          });\n        }\n\n        disableError && this.pushError({\n          type: \"warning\",\n          message: funcName.value + \" was not found in current scope\",\n          loc: Object.assign({\n            pos: {\n              start: node.callee.start,\n              end: node.callee.end\n            }\n          }, node.callee.loc)\n        });\n      } else if (funcName.type === \"function\") {\n        if (evalArgs.length !== funcName.requiredParamCount && evalArgs.length !== funcName.params.length) {\n          this.pushError({\n            type: \"warning\",\n            message: funcName.id + \" requires \" + (funcName.params ? funcName.params.length : 0) + \" parameters\",\n            loc: Object.assign({\n              pos: {\n                start: node.callee.start,\n                end: node.callee.end\n              }\n            }, node.callee.loc)\n          });\n        }\n\n        if (funcName.kind === \"reserved\") {\n          if (typeof funcName.value === \"object\") {\n            // TODO:\n            // validate funcName.value which was given by the user (developer)\n            if (typeof funcName.value.type === \"undefined\" || typeof funcName.value.value === \"undefined\") {\n              this.printLog(\"Reserved function has invalid return value\", funcName.value);\n            } else {\n              returns = funcName.value;\n            }\n          } else {\n            this.printLog(\"Reserved function has invalid type of value\", funcName);\n          }\n        } else if (funcName.kind === \"native\") {\n          if (typeof funcName.value === \"object\") {\n            returns = funcName.value;\n          } else {\n            this.printLog(\"Native function returns none\");\n          }\n        } else {\n          var i;\n\n          for (i = 0; i < funcName.params.length; i++) {\n            var pEntry = this.ConsumeNode(funcName.params[i], node, \"rvalue\", state);\n            var pValue = evalArgs[i] ? evalArgs[i] : pEntry;\n            var e = Object.assign({}, this.Entry, {\n              id: pEntry.id,\n              type: pValue.type,\n              value: pValue.value,\n              params: pValue.params,\n              kind: \"argument\",\n              // let, var, const, argument, frame, reserved\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n            this.Push(e, state);\n          }\n\n          return this.ConsumeNode(funcName.value, node, vType, state);\n        }\n      } else {\n        this.pushError({\n          type: \"error\",\n          message: funcName.value + \" is not a function\",\n          loc: Object.assign({\n            pos: {\n              start: node.start,\n              end: node.end\n            }\n          }, node.loc)\n        });\n      }\n\n      return returns;\n    }\n  }, {\n    key: \"UnaryExpression\",\n    value: function UnaryExpression(node, parent, vType, state) {\n      var entry = this.ConsumeNode(node.argument, node, \"rvalue\", state);\n\n      var ret = _objectSpread({}, entry);\n\n      if (ret.type === \"function\") {\n        this.pushError({\n          type: \"warning\",\n          message: \"trying to unary operation on a function \" + entry.id,\n          loc: Object.assign({\n            pos: {\n              start: node.argument ? node.argument.start : node.start,\n              end: node.argument ? node.argument.end : node.end\n            }\n          }, node.argument ? node.argument.loc : node.loc)\n        });\n      }\n\n      switch (node.operator) {\n        case \"-\":\n          if (ret.type !== \"function\" && ret.type !== \"number\") {\n            this.pushError({\n              type: \"warning\",\n              message: \"trying to unary operation on a \" + ret.type + \" \" + entry.id,\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          ret.value = -ret.value;\n          ret.type = this.valueType(ret.value);\n          break;\n\n        case \"!\":\n          ret.value = !ret.value;\n          ret.type = this.valueType(ret.value);\n          break;\n\n        case \"~\":\n          ret.value = ~ret.value;\n          ret.type = this.valueType(ret.value);\n          break;\n\n        case \"+\":\n          ret.value = Number(ret.value);\n          ret.type = this.valueType(ret.value);\n          break;\n\n        case \"typeof\":\n          ret.value = ret.type;\n          ret.type = \"string\";\n          break;\n\n        case \"delete\":\n          ret.value = undefined;\n          ret.type = undefined;\n          break;\n\n        default:\n          this.printLog(\"Unsupported UnaryOperator\", node.operator);\n          ret.value = undefined;\n          ret.type = undefined;\n          break;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"BinaryExpression\",\n    value: function BinaryExpression(node, parent, vType, state) {\n      var value;\n      var left = this.ConsumeNode(node.left, node, \"rvalue\", state);\n      var right = this.ConsumeNode(node.right, node, \"rvalue\", state);\n\n      if (!left || !right) {\n        this.printLog(left, right, \"Not yet prepared to evaluate code\");\n        return {\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: undefined\n        };\n      }\n\n      if (left.type === undefined && left.kind !== \"argument\") {\n        this.pushError({\n          type: \"warning\",\n          message: left.id + \" is undefined (binary)\",\n          loc: Object.assign({\n            pos: {\n              start: node.left.start,\n              end: node.left.end\n            }\n          }, node.left.loc)\n        });\n      }\n\n      if (right.type === undefined && right.kind !== \"argument\") {\n        this.pushError({\n          type: \"warning\",\n          message: right.id + \" is undefined (binary)\",\n          loc: Object.assign({\n            pos: {\n              start: node.right.start,\n              end: node.right.end\n            }\n          }, node.right.loc)\n        });\n      }\n\n      switch (node.operator) {\n        case \"<\":\n          value = left.value < right.value;\n          break;\n\n        case \">\":\n          value = left.value > right.value;\n          break;\n\n        case \"<=\":\n          value = left.value <= right.value;\n          break;\n\n        case \">=\":\n          value = left.value >= right.value;\n          break;\n\n        case \"!=\":\n          // eslint-disable-next-line\n          value = left.value != right.value;\n          break;\n\n        case \"!==\":\n          value = left.value !== right.value;\n          break;\n\n        case \"==\":\n          // eslint-disable-next-line\n          value = left.value == right.value;\n          break;\n\n        case \"===\":\n          value = left.value === right.value;\n          break;\n\n        case \"+\":\n          value = left.value + right.value;\n          break;\n\n        case \"/\":\n          if (left.kind !== \"argument\" && left.type !== \"number\" || right.kind !== \"argument\" && right.type !== \"number\") {\n            this.pushError({\n              type: \"warning\",\n              message: \"Trying to do a divide operation on the \" + left.type + \" | \" + right.type,\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          value = left.value / right.value;\n          break;\n\n        case \"-\":\n          if (left.kind !== \"argument\" && left.type !== \"number\" || right.kind !== \"argument\" && right.type !== \"number\") {\n            this.pushError({\n              type: \"warning\",\n              message: \"Trying to do a subtract operation on the \" + left.type + \" | \" + right.type,\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          value = left.value - right.value;\n          break;\n\n        case \"*\":\n          if (left.kind !== \"argument\" && left.type !== \"number\" || right.kind !== \"argument\" && right.type !== \"number\") {\n            this.pushError({\n              type: \"warning\",\n              message: \"Trying to do a multiply operation on the \" + left.type + \" | \" + right.type,\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          value = left.value * right.value;\n          break;\n\n        default:\n          this.printLog(\"Unsupported binary expression\", node.operator);\n          value = undefined;\n          break;\n      }\n\n      return {\n        type: this.valueType(value),\n        value: value,\n        params: undefined,\n        kind: \"let\"\n      };\n    }\n  }, {\n    key: \"ArrayExpression\",\n    value: function ArrayExpression(node, parent, vType, state) {\n      var _this3 = this;\n\n      var ret = [];\n      node.elements.forEach(function (element) {\n        ret.push(_this3.ConsumeNode(element, node, \"rvalue\", state));\n      });\n      return {\n        type: \"array\",\n        value: ret,\n        params: undefined,\n        kind: \"let\"\n      };\n    } // var func = function() {}\n\n  }, {\n    key: \"FunctionExpression\",\n    value: function FunctionExpression(node, parent, vType, state) {\n      var _this4 = this;\n\n      if (!this.options || !this.options.callExpressionOnly) {\n        var localState = {\n          frame: Object.assign({}, this.Entry, {\n            id: \"local\",\n            type: \"block\",\n            value: {\n              parent: null,\n              stack: []\n            },\n            kind: \"frame\",\n            loc: Object.assign({\n              pos: {\n                start: node.start,\n                end: node.end\n              }\n            }, node.loc)\n          }),\n          isActive: false,\n          upStack: 0\n        };\n        node.params.forEach(function (param) {\n          var pEntry = _this4.ConsumeNode(param, node, \"rvalue\", localState);\n\n          var entry = Object.assign({}, _this4.Entry, {\n            id: pEntry.id,\n            type: pEntry.type,\n            value: pEntry.value,\n            params: pEntry.params,\n            kind: \"argument\",\n            loc: Object.assign({\n              pos: {\n                start: param.start,\n                end: param.end\n              }\n            }, param.loc)\n          });\n\n          _this4.Push(entry, localState);\n        });\n        this.ConsumeNode(node.body, node, vType, localState);\n        this.printLog(\"localTable\", localState, \"globalTable\", state);\n      }\n\n      return {\n        type: \"function\",\n        params: _toConsumableArray(node.params),\n        value: node.body\n      };\n    }\n  }, {\n    key: \"ArrowFunctionExpression\",\n    value: function ArrowFunctionExpression(node, parent, vType, state) {\n      var _this5 = this;\n\n      if (!this.options || !this.options.callExpressionOnly) {\n        var localState = {\n          frame: Object.assign({}, this.Entry, {\n            id: \"local\",\n            type: \"block\",\n            value: {\n              parent: null,\n              stack: []\n            },\n            kind: \"frame\",\n            loc: Object.assign({\n              pos: {\n                start: node.start,\n                end: node.end\n              }\n            }, node.loc)\n          }),\n          isActive: false,\n          upStack: 0\n        };\n        node.params.forEach(function (param) {\n          var pEntry = _this5.ConsumeNode(param, node, \"rvalue\", localState);\n\n          var entry = Object.assign({}, _this5.Entry, {\n            id: pEntry.id,\n            type: pEntry.type,\n            value: pEntry.value,\n            params: pEntry.params,\n            kind: \"argument\",\n            loc: Object.assign({\n              pos: {\n                start: param.start,\n                end: param.end\n              }\n            }, param.loc)\n          });\n\n          _this5.Push(entry, localState);\n        });\n        this.ConsumeNode(node.body, node, vType, localState);\n        this.printLog(\"localTable\", localState, \"globalTable\", state);\n      }\n\n      return {\n        type: \"function\",\n        params: _toConsumableArray(node.params),\n        value: node.body\n      };\n    }\n  }, {\n    key: \"FunctionDeclaration\",\n    value: function FunctionDeclaration(node, parent, vType, state) {\n      var _this6 = this;\n\n      var funcName = this.ConsumeNode(node.id, parent, \"rvalue\", state);\n\n      if (funcName.kind === \"reserved\") {\n        this.pushError({\n          type: \"warning\",\n          message: funcName.id + \" is reserved as a \" + funcName.type,\n          loc: Object.assign({\n            pos: {\n              start: node.id.start,\n              end: node.id.end\n            }\n          }, node.id.loc)\n        });\n        return;\n      }\n\n      var kind = \"var\";\n\n      if (funcName.kind !== undefined) {\n        this.pushError({\n          type: \"warning\",\n          message: funcName.value + \" is already declared as \" + funcName.type,\n          loc: Object.assign({\n            pos: {\n              start: node.id.start,\n              end: node.id.end\n            }\n          }, node.id.loc)\n        });\n        kind = \"let\";\n      } // CHECKME:\n      // If the function was declared in a local scope, does it has to be registered as a local variable?\n      // or add it to as a global variable?\n\n\n      var entry = Object.assign({}, this.Entry, {\n        id: funcName.id,\n        type: \"function\",\n        params: _toConsumableArray(node.params),\n        value: node.body,\n        kind: kind,\n        loc: Object.assign({\n          pos: {\n            start: node.id.start,\n            end: node.id.end\n          }\n        }, node.id.loc)\n      });\n      this.Push(entry, state);\n\n      if (!this.options || !this.options.callExpressionOnly) {\n        // Evaluate body of the function\n        var localState = {\n          frame: Object.assign({}, this.Entry, {\n            id: \"local\",\n            type: \"block\",\n            value: {\n              parent: null,\n              stack: []\n            },\n            kind: \"frame\",\n            loc: Object.assign({\n              pos: {\n                start: node.start,\n                end: node.end\n              }\n            }, node.loc)\n          }),\n          isActive: false,\n          upStack: 0\n        };\n        node.params.forEach(function (param) {\n          var pEntry = _this6.ConsumeNode(param, node, \"rvalue\", localState);\n\n          entry = Object.assign({}, _this6.Entry, {\n            id: pEntry.id,\n            type: pEntry.type,\n            value: pEntry.value,\n            params: pEntry.params,\n            kind: \"argument\",\n            loc: Object.assign({\n              pos: {\n                start: node.start,\n                end: node.end\n              }\n            }, node.loc)\n          });\n\n          _this6.Push(entry, localState);\n        });\n        this.ConsumeNode(node.body, node, vType, localState);\n        this.printLog(\"localTable:\", localState, \"globalTable\", state);\n      }\n    }\n  }, {\n    key: \"ConditionalExpression\",\n    value: function ConditionalExpression(node, parent, vType, state) {\n      var ret = this.ConsumeNode(node.test, node, \"rvalue\", state);\n      var t = this.ConsumeNode(node.consequent, node, \"rvalue\", state);\n      var f = this.ConsumeNode(node.alternate, node, \"rvalue\", state);\n      return ret.value ? t : f;\n    } // code: hello.text = \"hi\"\n\n  }, {\n    key: \"MemberExpression\",\n    value: function MemberExpression(node, parent, vType, state) {\n      var obj = this.ConsumeNode(node.object, node, \"rvalue\", state);\n      var prop = this.ConsumeNode(node.property, node, node.computed ? \"rvalue\" : \"lvalue\", state);\n\n      if (!obj) {\n        this.printLog(\"Please check the reserved object list\", node.object);\n        return {\n          id: undefined,\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: undefined\n        };\n      }\n\n      if (obj.type === undefined) {\n        disableError && this.pushError({\n          type: \"error\",\n          message: \"cannot access \" + prop.value + \" of undefined\",\n          loc: Object.assign({\n            pos: {\n              start: node.object.start,\n              end: node.object.end\n            }\n          }, node.object.loc)\n        });\n        return obj;\n      }\n\n      if (obj.value === null || obj.value === undefined) {\n        if (obj.kind === \"reserved\") {\n          if (obj.type !== \"object\") {\n            this.erros.push({\n              type: \"warning\",\n              message: \"trying to change the property of a reserved \" + obj.type,\n              loc: Object.assign({\n                pos: {\n                  start: node.object.start,\n                  end: node.object.end\n                }\n              }, node.object.loc)\n            });\n          }\n        }\n\n        obj.type = \"object\";\n        obj.value = _defineProperty({}, prop.value, {\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: \"property\"\n        });\n      }\n\n      if (typeof obj.value[prop.value] === \"undefined\") {\n        if (obj.type !== \"object\" && obj.type !== \"array\") {\n          disableError && this.pushError({\n            type: \"error\",\n            message: \"cannot create property \" + prop.value + \" on the \" + obj.type,\n            loc: Object.assign({\n              pos: {\n                start: node.object.start,\n                end: node.object.end\n              }\n            }, node.object.loc)\n          });\n          return obj;\n        }\n      } else if (typeof obj.value[prop.value] === \"function\") {\n        return {\n          id: prop.value,\n          type: \"function\",\n          value: null,\n          // TODO: Return value of a function\n          params: new Array(obj.value[prop.value].length),\n          // Create an parameter array of a native function\n          kind: \"native\"\n        };\n      } else if (obj.type !== \"object\") {\n        return {\n          id: prop.value,\n          type: this.valueType(obj.value[prop.value]),\n          value: obj.value[prop.value],\n          params: undefined,\n          kind: \"native\"\n        };\n      }\n\n      return obj.value[prop.value];\n    }\n  }, {\n    key: \"BreakStatement\",\n    value: function BreakStatement(node, parent, vType, state) {\n      var label = this.ConsumeNode(node.label, node, \"rvalue\", state);\n\n      if (label.type === undefined) {\n        return;\n      }\n\n      if (label.type !== \"label\") {\n        this.pushError({\n          type: \"error\",\n          message: \"label \" + label.id + \" was not found\",\n          loc: Object.assign({\n            pos: {\n              start: node.label.start,\n              end: node.label.end\n            }\n          }, node.label.loc)\n        });\n      } else {\n        this.ConsumeNode(label.value, node, vType, state);\n      }\n    }\n  }, {\n    key: \"ContinueStatement\",\n    value: function ContinueStatement(node, parent, vType, state) {\n      var label = this.ConsumeNode(node.label, node, \"rvalue\", state);\n\n      if (label.type === undefined) {\n        return;\n      }\n\n      if (label.type !== \"label\") {\n        this.pushError({\n          type: \"error\",\n          message: \"label \" + label.id + \" was not found\",\n          loc: Object.assign({\n            pos: {\n              start: node.label.start,\n              end: node.label.end\n            }\n          }, node.label.loc)\n        });\n      } else {\n        this.ConsumeNode(label.value, node, vType, state);\n      }\n    }\n  }, {\n    key: \"LabeledStatement\",\n    value: function LabeledStatement(node, parent, vType, state) {\n      var label = this.ConsumeNode(node.label, node, vType, state);\n      var entry = Object.assign({}, this.Entry, {\n        id: label.id,\n        type: \"label\",\n        params: undefined,\n        value: node.body,\n        kind: \"let\",\n        loc: Object.assign({\n          pos: {\n            start: node.start,\n            end: node.end\n          }\n        }, node.loc)\n      });\n      this.Push(entry, state);\n      this.ConsumeNode(node.body, node, vType, state);\n    }\n  }, {\n    key: \"ReturnStatement\",\n    value: function ReturnStatement(node, parent, vType, state) {\n      return this.ConsumeNode(node.argument, node, vType, state);\n    }\n  }, {\n    key: \"ExpressionStatement\",\n    value: function ExpressionStatement(node, parent, vType, state) {\n      return this.ConsumeNode(node.expression, node, vType, state);\n    }\n  }, {\n    key: \"AwaitExpression\",\n    value: function AwaitExpression(node, parent, vType, state) {\n      return this.ConsumeNode(node.argument, node, vType, state);\n    }\n  }, {\n    key: \"AssignmentExpression\",\n    value: function AssignmentExpression(node, parent, vType, state) {\n      var left = this.ConsumeNode(node.left, node, \"rvalue\", state);\n      var right = this.ConsumeNode(node.right, node, \"rvalue\", state);\n\n      if (!left || !right) {\n        this.printLog(left, right, \"Not yet prepared to evaluate code\");\n        return {\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: undefined\n        };\n      }\n\n      if (right.type === undefined && right.kind !== \"argument\") {\n        disableError && this.pushError({\n          type: \"warning\",\n          message: right.id + \" is undefined (assign)\",\n          loc: Object.assign({\n            pos: {\n              start: node.right.start,\n              end: node.right.end\n            }\n          }, node.right.loc)\n        });\n      }\n\n      if (left.kind === \"reserved\") {\n        if (left.type === \"function\") {\n          this.pushError({\n            type: \"error\",\n            message: \"Cannot assign a value to the reserved function \" + left.id,\n            loc: Object.assign({\n              pos: {\n                start: node.left.start,\n                end: node.left.end\n              }\n            }, node.left.loc)\n          });\n          return left;\n        }\n      } else if (left.kind === undefined) {\n        // NOTE\n        // Create a new variable\n        left = Object.assign({}, this.Entry, {\n          id: left.id,\n          type: right.type,\n          value: right.value,\n          params: right.params,\n          kind: \"var\",\n          // let, var, const\n          loc: Object.assign({\n            pos: {\n              start: node.left.start,\n              end: node.left.end\n            }\n          }, node.left.loc)\n        });\n\n        if (state.isActive === true) {\n          // Push to the global table.\n          this.Push(left);\n        } else {\n          this.Push(left, state);\n        }\n      } else if (left.kind === \"const\") {\n        this.pushError({\n          type: \"error\",\n          message: \"Cannot change the constant \" + left.id,\n          loc: Object.assign({\n            pos: {\n              start: node.left.start,\n              end: node.left.end\n            }\n          }, node.left.loc)\n        });\n        return left;\n      }\n\n      switch (node.operator) {\n        case \"=\":\n          left.value = right.value;\n          left.params = right.params;\n          left.type = right.type;\n          break;\n\n        case \"+=\":\n          left.value += right.value;\n          left.type = this.valueType(left.value);\n          break;\n\n        case \"-=\":\n          if (right.type !== \"number\" || left.type !== \"number\") {\n            this.pushError({\n              type: \"warning\",\n              message: \"Trying to do a \" + node.operator + \" operation on the \" + right.type + \"/\" + left.type,\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          left.value -= right.value;\n          left.type = this.valueType(left.value);\n          break;\n\n        case \"*=\":\n          if (right.type !== \"number\" || left.type !== \"number\") {\n            this.pushError({\n              type: \"warning\",\n              message: \"Trying to do a \" + node.operator + \" operation on the \" + right.type + \"/\" + left.type,\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          left.value *= right.value;\n          left.type = this.valueType(left.value);\n          break;\n\n        case \"/=\":\n          if (right.type !== \"number\" || left.type !== \"number\") {\n            this.pushError({\n              type: \"warning\",\n              message: \"Trying to do a \" + node.operator + \" operation on the \" + right.type + \"/\" + left.type,\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          left.value /= right.value;\n          left.type = this.valueType(left.value);\n          break;\n\n        default:\n          this.printLog(\"unsupported operator\", node.operator);\n      }\n\n      return left;\n    }\n  }, {\n    key: \"DoWhileStatement\",\n    value: function DoWhileStatement(node, parent, vType, state) {\n      this.ConsumeNode(node.test, node, \"rvalue\", state);\n      this.ConsumeNode(node.body, node, vType, state);\n    }\n  }, {\n    key: \"WhileStatement\",\n    value: function WhileStatement(node, parent, vType, state) {\n      this.ConsumeNode(node.test, node, \"rvalue\", state);\n      this.ConsumeNode(node.body, node, vType, state);\n    }\n  }, {\n    key: \"UpdateExpression\",\n    value: function UpdateExpression(node, parent, vType, state) {\n      var v;\n      v = this.ConsumeNode(node.argument, node, \"rvalue\", state);\n\n      if (v.type === undefined && v.kind !== \"argument\") {\n        disableError && this.pushError({\n          type: \"warning\",\n          message: v.id + \" is undefined (update)\",\n          loc: Object.assign({\n            pos: {\n              start: node.start,\n              end: node.end\n            }\n          }, node.loc)\n        });\n      }\n\n      switch (node.operator) {\n        case \"++\":\n          if (v.type !== \"number\" && v.kind !== \"argument\") {\n            disableError && this.pushError({\n              type: \"info\",\n              message: v.value + \" is not a number type\",\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          v.value++;\n          break;\n\n        case \"--\":\n          if (v.type !== \"number\" && v.kind !== \"argument\") {\n            disableError && this.pushError({\n              type: \"info\",\n              message: v.value + \" is not a number type\",\n              loc: Object.assign({\n                pos: {\n                  start: node.start,\n                  end: node.end\n                }\n              }, node.loc)\n            });\n          }\n\n          v.value--;\n          break;\n\n        default:\n          this.printLog(\"Unsupported update operator\", node.operator);\n          v = {\n            type: undefined,\n            value: undefined\n          };\n          break;\n      }\n\n      return v;\n    }\n  }, {\n    key: \"ForStatement\",\n    value: function ForStatement(node, parent, vType, state) {\n      this.ConsumeNode(node.init, node, \"rvalue\", state);\n      this.ConsumeNode(node.test, node, \"rvalue\", state);\n      state.upStack++;\n      this.ConsumeNode(node.body, node, vType, state);\n      state.upStack--;\n      this.ConsumeNode(node.update, node, \"rvalue\", state);\n    }\n  }, {\n    key: \"BlockStatement\",\n    value: function BlockStatement(node, parent, vType, state) {\n      var _this7 = this;\n\n      var entry = Object.assign({}, this.Entry, {\n        id: null,\n        type: \"block\",\n        value: {\n          parent: state.frame,\n          stack: []\n        },\n        kind: \"frame\",\n        loc: Object.assign({\n          pos: {\n            start: node.start,\n            end: node.end\n          }\n        }, node.loc)\n      });\n      this.Push(entry, state);\n      var frame = state.frame;\n      state.frame = entry;\n      var list = [{\n        id: \"Result of the function call\",\n        type: undefined,\n        value: undefined,\n        params: undefined\n      }];\n      node.body.forEach(function (statement) {\n        var ret = _this7.ConsumeNode(statement, node, vType, state);\n\n        if (statement.type === \"ReturnStatement\") {\n          list.unshift(ret);\n        }\n      });\n      state.frame = frame;\n      return list[0];\n    }\n  }, {\n    key: \"IfStatement\",\n    value: function IfStatement(node, parent, vType, state) {\n      this.ConsumeNode(node.test, node, vType, state);\n      this.ConsumeNode(node.consequent, node, vType, state);\n      this.ConsumeNode(node.alternate, node, vType, state);\n    }\n  }, {\n    key: \"SwitchStatement\",\n    value: function SwitchStatement(node, parent, vType, state) {\n      var _this8 = this;\n\n      this.ConsumeNode(node.discriminant, node, vType, state);\n      node.cases.forEach(function (statement) {\n        return _this8.ConsumeNode(statement, node, vType, state);\n      });\n    }\n  }, {\n    key: \"SwitchCase\",\n    value: function SwitchCase(node, parent, vType, state) {\n      var _this9 = this;\n\n      this.ConsumeNode(node.test, node, vType, state);\n      node.consequent.forEach(function (statement) {\n        return _this9.ConsumeNode(statement, node, vType, state);\n      });\n    }\n  }, {\n    key: \"Program\",\n    value: function Program(node, parent, vType, state) {\n      var _this10 = this;\n\n      this.mainFrame = state.frame = Object.assign({}, this.Entry, {\n        id: \"main\",\n        type: \"block\",\n        value: {\n          parent: null,\n          stack: []\n        },\n        kind: \"frame\",\n        loc: Object.assign({\n          pos: {\n            start: node.start,\n            end: node.end\n          }\n        }, node.loc)\n      });\n      node.body.forEach(function (statement) {\n        return _this10.ConsumeNode(statement, node, \"lvalue\", state);\n      });\n    }\n  }, {\n    key: \"VariableDeclaration\",\n    value: function VariableDeclaration(node, parent, vType, state) {\n      var _this11 = this;\n\n      node.declarations.forEach(function (declaration) {\n        return _this11.ConsumeNode(declaration, node, \"lvalue\", state);\n      });\n    } // TODO:\n    // Following methods are not implemented node handlers.\n    //\n\n  }, {\n    key: \"ParenthesizedExpression\",\n    value: function ParenthesizedExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"ClassDeclaration\",\n    value: function ClassDeclaration(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"ClassExpression\",\n    value: function ClassExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"SequenceExpression\",\n    value: function SequenceExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"LogicalExpression\",\n    value: function LogicalExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"TaggedTemplateExpression\",\n    value: function TaggedTemplateExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"ThisExpression\",\n    value: function ThisExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"NewExpression\",\n    value: function NewExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"ObjectPattern\",\n    value: function ObjectPattern(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"YieldExpression\",\n    value: function YieldExpression(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"DebuggerStatement\",\n    value: function DebuggerStatement(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"ThrowStatement\",\n    value: function ThrowStatement(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"TryStatement\",\n    value: function TryStatement(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"WithStatement\",\n    value: function WithStatement(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"EmptyStatement\",\n    value: function EmptyStatement(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"ForInStatement\",\n    value: function ForInStatement(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"ForOfStatement\",\n    value: function ForOfStatement(node, parent, vType, state) {\n      this.printLog(\"Not implemented\", node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n  }, {\n    key: \"printLog\",\n    value: function printLog() {// console.log(...arguments);\n    }\n  }]);\n\n  return JSEvaluator;\n}();\n\nexport default JSEvaluator;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/utils/JSEvaluator.js"],"names":["acorn","apiLibrary","disableError","JSEvaluator","options","AST","callExpressionOnly","mainFrame","Entry","id","type","value","params","undefined","kind","loc","start","line","column","end","pos","errors","parseErrors","reserved","lowerReservedIdMap","Map","ERROR_MESSAGE","FUNCTION_UPPER_LOWER","length","entry","error","find","element","push","list","setLowerReservedIdSet","i","origin","lower","toLowerCase","set","ret","Array","isArray","code","isMerge","lastLineTokens","tokens","parse","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","token","onComment","ranges","program","sourceFile","directSourceFile","preserveParens","e","errorKeywords","filter","t","isNaN","match","api","getAPIbyId","map","Set","printLog","name","message","keywords","state","frame","isActive","upStack","ConsumeNode","node","parent","vType","stack","isStartWith","targetFrame","frameList","iter","pop","unshift","accuracy","tmp","valueType","startsWith","idx","indexOf","left","pushError","Object","assign","isGlobal","init","Push","FindSymbol","getReserved","properties","forEach","property","eValue","key","computed","right","evalArgs","returns","funcName","callee","arguments","argument","pArg","lowerFuncNameId","has","typingFunction","originFunction","get","requiredParamCount","pEntry","pValue","operator","Number","elements","localState","param","body","test","consequent","f","alternate","obj","object","prop","erros","label","expression","v","update","statement","discriminant","cases","declarations","declaration"],"mappings":"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","sourcesContent":["import * as acorn from \"acorn\";\nimport apiLibrary from \"./apiLibrary\";\n\nconst disableError = false;\n\nclass JSEvaluator {\n  constructor(options) {\n    this.AST = null;\n    this.options = {\n      callExpressionOnly: false, // true: Evaluate function body only if it is called, false: evaluate function body always\n      ...options\n    };\n    this.mainFrame = null;\n    this.Entry = {\n      id: \"symbolName\",\n      type: \"object\", // \"object\", \"label\", \"function\", \"string\", \"number\", \"array\", \"block\", \"boolean\", undefined\n      value: null,\n      params: undefined,\n      kind: \"let\", // \"let\", \"var\", \"const\", \"frame\", \"argument\", \"reserved\", \"native\", \"property\"\n      loc: {\n        start: {\n          line: 0,\n          column: 0\n        },\n        end: {\n          line: 0,\n          column: 0\n        },\n        pos: {\n          start: 0,\n          end: 0\n        }\n      }\n    };\n    this.errors = [];\n    this.parseErrors = [];\n    this.reserved = [];\n    this.lowerReservedIdMap = new Map();\n    this.ERROR_MESSAGE = {\n      FUNCTION_UPPER_LOWER: {}\n    };\n  }\n\n  getErrors() {\n    // return [...this.errors, ...this.parseErrors];\n    return this.parseErrors;\n  }\n\n  resetErrors() {\n    this.errors.length = 0;\n    this.parseErrors.length = 0;\n  }\n\n  pushError(entry) {\n    var error = this.errors.find(element => {\n      if (element.loc.start.line !== entry.loc.start.line) {\n        return false;\n      }\n\n      if (element.loc.end.line !== entry.loc.end.line) {\n        return false;\n      }\n\n      if (element.loc.start.column !== entry.loc.start.column) {\n        return false;\n      }\n\n      if (element.loc.end.column !== entry.loc.end.column) {\n        return false;\n      }\n\n      if (element.type !== entry.type) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!error) {\n      this.errors.push(entry);\n      return true;\n    }\n\n    return false;\n  }\n\n  addReserved(reserved) {\n    this.reserved = [...this.reserved, reserved];\n  }\n\n  setListOfReserved(list) {\n    this.reserved = [...list];\n    this.setLowerReservedIdSet();\n  }\n\n  setLowerReservedIdSet() {\n    for (let i = 0; i < this.reserved.length; i++) {\n      const origin = this.reserved[i].id;\n      const lower = origin.toLowerCase();\n      this.lowerReservedIdMap.set(lower, origin);\n    }\n  }\n\n  getListOfReserved() {\n    return this.reserved;\n  }\n\n  getReserved(id) {\n    let ret = this.reserved.find(reserved => reserved.id === id);\n\n    if (ret === undefined) {\n      return null;\n    }\n\n    return {\n      id: \"Returns of the \" + id,\n      ...ret,\n      kind: \"reserved\"\n    };\n  }\n\n  valueType(value) {\n    const type = typeof value;\n\n    if (type === \"object\" && Array.isArray(value)) {\n      return \"array\";\n    }\n\n    return type;\n  }\n\n  parse(code, isMerge) {\n    this.parseErrors.length = 0;\n    let lastLineTokens = {line:0, tokens:[]}\n    try {\n      this.AST = acorn.parse(code, {\n        ecmaVersion: 9, // 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), 10 (2019, partial support)\n        sourceType: \"script\", // \"module\"\n        onInsertedSemicolon: null,\n        onTrailingComma: null,\n        allowReserved: true,\n        allowReturnOutsideFunction: false,\n        allowImportExportEverywhere: false,\n        allowAwaitOutsideFunction: true,\n        allowHashBang: false,\n        locations: true,\n        onToken: token =>{\n          if(lastLineTokens.line !== token.loc.start.line) {\n            lastLineTokens.line = token.loc.start.line;\n            lastLineTokens.tokens = [];\n          }\n          lastLineTokens.tokens.push(token);\n        },\n        onComment: null,\n        ranges: false,\n        program: isMerge ? this.AST : null, // The AST if we have, a current AST would be merged into this.\n        sourceFile: false,\n        directSourceFile: false,\n        preserveParens: false\n      });\n    } catch (e) {\n      //에러가 발생한 라인의 토큰 중 apiLibrary에 존재하는 토큰만 반환\n      let errorKeywords = lastLineTokens.tokens.filter(t=>{\n        if(t.value && isNaN(t.value)) {\n          if(t.value.match(/^[0-9a-zA-Z]+$/)) {\n            const api = apiLibrary.getAPIbyId(t.value);\n            return api !== null;\n          }\n        }\n        return false;\n      }).map(t=>t.value)\n      errorKeywords = [...new Set(errorKeywords)];\n\n      this.printLog(e.name, \": \", e.message);\n      this.parseErrors.push({\n        type: \"error\",\n        message: e.name + \": \" + e.message,\n        pos: e.pos,\n        loc: {\n          start: {\n            line: e.loc.line,\n            column: e.loc.column\n          },\n          end: {\n            line: e.loc.line,\n            column: e.loc.column\n          }\n        },\n        keywords: errorKeywords\n      });\n      return false;\n    }\n\n    if (this.AST.type !== \"Program\") {\n      this.parseErrors.push({\n        type: \"error\",\n        message: \"Internal error: The type of the root node is not the Program\",\n        loc: {\n          start: {\n            line: 1,\n            column: 0\n          },\n          end: {\n            line: 1,\n            column: 0\n          }\n        }\n      });\n      this.AST = null;\n      return false;\n    }\n    return true;\n  }\n\n  build() {\n    this.mainFrame = null;\n    this.errors.length = 0;\n\n    try {\n      var state = {\n        frame: null,\n        isActive: true,\n        upStack: 0\n      };\n\n      this.printLog(\"Build!! symbol table\", this.AST);\n      this.ConsumeNode(this.AST, null, \"lvalue\", state);\n    } catch (error) {\n      this.printLog(error);\n      return false;\n    }\n\n    return true;\n  }\n\n  SymbolTable() {\n    return this.mainFrame;\n  }\n\n  ConsumeNode(node, parent, vType, state) {\n    if (!node) {\n      this.printLog(\"Empty node\");\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n\n    if (!node.type) {\n      this.printLog(\"Invalid type\");\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n\n    if (typeof this[node.type] !== \"function\") {\n      this.printLog(\"Unsupported type: \", node.type, node);\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n\n    return this[node.type](node, parent, vType, state);\n  }\n\n  // Returns pushed index of an entry.\n  Push(entry, state) {\n    if (!state) {\n      this.mainFrame.value.stack.push(entry);\n    } else {\n      state.frame.value.stack.push(entry);\n    }\n  }\n\n  // loc === null: global search\n  // table === null: global table\n  // isStartWidth === false: matched symbol\n  FindSymbol(name, loc, frame, isStartWith, upStack) {\n    let i;\n\n    if (!frame) {\n      frame = this.mainFrame;\n    }\n\n    if (!frame || !frame.value.stack) {\n      this.printLog(\"Symbol Table is empty\");\n      return null;\n    }\n\n    // Step 1. Find the target frame using given \"loc\" information\n    let targetFrame = null;\n    if (typeof loc === \"undefined\") {\n      targetFrame = frame;\n    } else {\n      let frameList = [];\n      let list = [frame];\n      let iter;\n\n      do {\n        iter = list.pop();\n        frameList.push(iter);\n\n        for (i = 0; i < iter.value.stack.length; i++) {\n          if (iter.value.stack[i].kind === \"frame\") {\n            list.unshift(iter.value.stack[i]);\n          }\n        }\n      } while (list.length > 0);\n\n      let accuracy;\n      for (i = 0; i < frameList.length; i++) {\n        if (loc.pos) {\n          if (\n            frameList[i].loc.pos.start <= loc.pos.start &&\n            loc.pos.end <= frameList[i].loc.pos.end\n          ) {\n            if (targetFrame === null) {\n              targetFrame = frameList[i];\n              accuracy =\n                loc.pos.start -\n                frameList[i].loc.pos.start +\n                (frameList[i].loc.pos.end - loc.pos.end);\n            } else {\n              let tmp =\n                loc.pos.start -\n                frameList[i].loc.pos.start +\n                (frameList[i].loc.pos.end - loc.pos.end);\n              if (tmp < accuracy) {\n                accuracy = tmp;\n                targetFrame = frameList[i];\n              }\n            }\n          }\n        } else if (\n          frameList[i].loc.start.line <= loc.start.line &&\n          loc.end.line <= frameList[i].loc.end.line\n        ) {\n          if (targetFrame === null) {\n            targetFrame = frameList[i];\n            accuracy =\n              loc.start.line -\n              frameList[i].loc.start.line +\n              (frameList[i].loc.end.line - loc.end.line);\n          } else {\n            let tmp =\n              loc.start.line -\n              frameList[i].loc.start.line +\n              (frameList[i].loc.end.line - loc.end.line);\n            if (tmp < accuracy) {\n              accuracy = tmp;\n              targetFrame = frameList[i];\n            }\n          }\n        }\n      }\n    }\n\n    let list = isStartWith === true ? [] : null;\n    if (!targetFrame) {\n      targetFrame = frame;\n      if (!targetFrame) {\n        // Not found\n        return list;\n      }\n    }\n\n    // Find the symbol from the targetFrame.\n    do {\n      // Search in the local scope including arguments.\n      for (i = 0; i < targetFrame.value.stack.length; i++) {\n        if (targetFrame.value.stack[i].kind === \"frame\") {\n          continue;\n        }\n\n        if (targetFrame.value.stack[i].kind === \"argument\") {\n          continue;\n        }\n\n        if (isStartWith === true) {\n          if (\n            this.valueType(targetFrame.value.stack[i].id) === \"string\" &&\n            targetFrame.value.stack[i].id.startsWith(name) === true\n          ) {\n            list.push(targetFrame.value.stack[i]);\n          }\n        } else if (targetFrame.value.stack[i].id === name) {\n          return targetFrame.value.stack[i];\n        }\n      }\n\n      // Search in the parameter list\n      if (targetFrame.value.parent) {\n        let idx = targetFrame.value.parent.value.stack.indexOf(targetFrame) - 1;\n        while (\n          idx >= 0 &&\n          targetFrame.value.parent.value.stack[idx].kind === \"argument\"\n        ) {\n          if (isStartWith === true) {\n            if (\n              this.valueType(targetFrame.value.parent.value.stack[idx].id) ===\n                \"string\" &&\n              targetFrame.value.parent.value.stack[idx].id.startsWith(name) ===\n                true\n            ) {\n              list.push(targetFrame.value.parent.value.stack[idx]);\n            }\n          } else if (targetFrame.value.parent.value.stack[idx].id === name) {\n            return targetFrame.value.parent.value.stack[idx];\n          }\n          idx--;\n        }\n      }\n\n      if (upStack) {\n        // Try again from the parent frame\n        targetFrame = targetFrame.value.parent;\n      } else {\n        // Or try again from the main frame. (global)\n        if (targetFrame !== this.mainFrame) {\n          targetFrame = this.mainFrame;\n        } else {\n          targetFrame = null;\n        }\n      }\n    } while (targetFrame);\n\n    return list;\n  }\n\n  // handlers for nodes\n  //\n  VariableDeclarator(node, parent, vType, state) {\n    const left = this.ConsumeNode(node.id, node, \"rvalue\", state);\n    let kind;\n\n    if (left.kind === \"reserved\") {\n      this.pushError({\n        type: \"error\",\n        message: left.id + \" is a reserved as the \" + left.type,\n        loc: Object.assign(\n          { pos: { start: node.id.start, end: node.id.end } },\n          node.id.loc\n        )\n      });\n\n      return left;\n    }\n\n    if (left.type !== undefined) {\n      if (left.isGlobal) {\n        this.pushError({\n          type: \"info\",\n          message: \"The \" + left.value + \" would be the shadow variable\",\n          loc: Object.assign(\n            { pos: { start: node.id.start, end: node.id.end } },\n            node.id.loc\n          )\n        });\n      } else {\n        disableError &&\n          this.pushError({\n            type: \"warning\",\n            message: left.id + \" is already declared\",\n            loc: Object.assign(\n              { pos: { start: node.id.start, end: node.id.end } },\n              node.id.loc\n            )\n          });\n      }\n\n      // In this case, register this variable to the local scope\n      kind = \"let\";\n    } else {\n      kind = parent.kind;\n      if (kind === undefined) {\n        this.printLog(\"Parent node has no kind field\");\n        kind = \"var\";\n      }\n    }\n\n    // @NOTE:\n    // node.init could be null.\n    const value = this.ConsumeNode(node.init, node, \"rvalue\", state);\n\n    let ret = Object.assign({}, this.Entry, {\n      id: left.id,\n      type: value.type,\n      value: value.value,\n      params: value.params,\n      kind: kind,\n      loc: Object.assign(\n        {\n          pos: {\n            start: node.init ? node.init.start : node.start,\n            end: node.init ? node.init.end : node.end\n          }\n        },\n        node.init ? node.init.loc : node.loc\n      )\n    });\n\n    if (kind === \"var\" && state.isActive === true) {\n      // Push to the global scope\n      this.Push(ret);\n    } else {\n      this.Push(ret, state);\n    }\n\n    return ret;\n  }\n\n  // Terminal node\n  Identifier(node, parent, vType, state) {\n    var entry;\n\n    if (vType === \"lvalue\") {\n      entry = {\n        type: \"identifier\",\n        value: node.name\n      };\n    } else {\n      // Step 1. Find symbol in the given table first.\n      entry = this.FindSymbol(\n        node.name,\n        node.loc,\n        state.frame,\n        false,\n        state.upStack\n      );\n      if (!entry) {\n        if (state.isActive === false && state.upStack === 0) {\n          // Step 2. If the given table is for local scope,\n          //         try to search again in the global scope table.\n          entry = this.FindSymbol(node.name);\n          if (entry) {\n            entry.isGlobal = true; // Mark as global variable\n          }\n        }\n\n        if (!entry) {\n          // Step 3. If the symbol was not found,\n          //         try to find it from the reserved table.\n          entry = this.getReserved(node.name);\n        }\n\n        if (!entry) {\n          entry = {\n            id: node.name,\n            type: undefined,\n            value: undefined,\n            params: undefined,\n            kind: undefined\n          };\n        }\n      }\n    }\n\n    return entry;\n  }\n\n  // Terminal node\n  Literal(node, parent, vType, state) {\n    return {\n      type: this.valueType(node.value),\n      value: node.value\n    };\n  }\n\n  // hello = {\n  //   test: \"hi\"\n  // }\n  ObjectExpression(node, parent, vType, state) {\n    var value = {\n      type: \"object\",\n      value: {}\n    };\n\n    node.properties.forEach(property => {\n      // property node is consisting with \"key\", \"value\"\n      const eValue = this.ConsumeNode(property, node, \"rvalue\", state);\n      value = {\n        ...value,\n        value: {\n          ...value.value,\n          ...eValue\n        }\n      };\n    });\n\n    return value;\n  }\n\n  // A child node of the ObjectExpression\n  Property(node, parent, vType, state) {\n    const left = this.ConsumeNode(\n      node.key,\n      node,\n      node.computed ? \"rvalue\" : \"lvalue\",\n      state\n    );\n    const right = this.ConsumeNode(node.value, node, \"rvalue\", state);\n\n    if (left.type === undefined || left.type === \"object\") {\n      this.pushError({\n        type: \"warning\",\n        message: left.id + \" is \" + left.type,\n        loc: Object.assign(\n          { pos: { start: node.key.start, end: node.key.end } },\n          node.key.loc\n        )\n      });\n    }\n\n    if (right.type === undefined) {\n      this.pushError({\n        type: \"warning\",\n        message: right.id + \" is \" + right.type,\n        loc: Object.assign(\n          {\n            pos: {\n              start: node.value ? node.value.start : node.start,\n              end: node.value ? node.value.end : node.end\n            }\n          },\n          node.value ? node.value.loc : node.loc\n        )\n      });\n    }\n\n    const ret = {\n      [left.value]: {\n        ...right,\n        kind: \"property\"\n      }\n    };\n\n    return ret;\n  }\n\n  CallExpression(node, parent, vType, state) {\n    let evalArgs = [];\n    let returns = {\n      id: \"Returns of the function\",\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n\n    // arguments and callee can have the assignment or the declaration statements.\n    let funcName = this.ConsumeNode(node.callee, node, \"rvalue\", state);\n    if (!funcName) {\n      this.printLog(\n        \"Unsupported function call found, please check the reserved function list and its return value\",\n        node.callee\n      );\n      return returns;\n    }\n\n    node.arguments.forEach(argument => {\n      const pArg = this.ConsumeNode(argument, node, vType, state);\n      if (pArg.type === undefined && pArg.kind !== \"argument\") {\n        this.pushError({\n          type: \"warning\",\n          message: pArg.id + \" is undefined (call)\",\n          loc: Object.assign(\n            { pos: { start: argument.start, end: argument.end } },\n            argument.loc\n          )\n        });\n      }\n\n      evalArgs.push(pArg); // ignore return value\n    });\n\n    if (funcName.kind === undefined) {\n      const lowerFuncNameId = funcName.id.toLowerCase();\n      if (this.lowerReservedIdMap.has(lowerFuncNameId)) {\n        this.pushError({\n          type: \"error\",\n          message: this.ERROR_MESSAGE.FUNCTION_UPPER_LOWER,\n          typingFunction: funcName.id,\n          originFunction: this.lowerReservedIdMap.get(lowerFuncNameId),\n          loc: Object.assign(\n            { pos: { start: node.callee.start, end: node.callee.end } },\n            node.callee.loc\n          )\n        });\n      }\n\n      disableError &&\n        this.pushError({\n          type: \"warning\",\n          message: funcName.value + \" was not found in current scope\",\n          loc: Object.assign(\n            { pos: { start: node.callee.start, end: node.callee.end } },\n            node.callee.loc\n          )\n        });\n    } else if (funcName.type === \"function\") {\n      if (\n        evalArgs.length !== funcName.requiredParamCount &&\n        evalArgs.length !== funcName.params.length\n      ) {\n        this.pushError({\n          type: \"warning\",\n          message:\n            funcName.id +\n            \" requires \" +\n            (funcName.params ? funcName.params.length : 0) +\n            \" parameters\",\n          loc: Object.assign(\n            { pos: { start: node.callee.start, end: node.callee.end } },\n            node.callee.loc\n          )\n        });\n      }\n\n      if (funcName.kind === \"reserved\") {\n        if (typeof funcName.value === \"object\") {\n          // TODO:\n          // validate funcName.value which was given by the user (developer)\n          if (\n            typeof funcName.value.type === \"undefined\" ||\n            typeof funcName.value.value === \"undefined\"\n          ) {\n            this.printLog(\n              \"Reserved function has invalid return value\",\n              funcName.value\n            );\n          } else {\n            returns = funcName.value;\n          }\n        } else {\n          this.printLog(\n            \"Reserved function has invalid type of value\",\n            funcName\n          );\n        }\n      } else if (funcName.kind === \"native\") {\n        if (typeof funcName.value === \"object\") {\n          returns = funcName.value;\n        } else {\n          this.printLog(\"Native function returns none\");\n        }\n      } else {\n        let i;\n        for (i = 0; i < funcName.params.length; i++) {\n          const pEntry = this.ConsumeNode(\n            funcName.params[i],\n            node,\n            \"rvalue\",\n            state\n          );\n\n          const pValue = evalArgs[i] ? evalArgs[i] : pEntry;\n\n          let e = Object.assign({}, this.Entry, {\n            id: pEntry.id,\n            type: pValue.type,\n            value: pValue.value,\n            params: pValue.params,\n            kind: \"argument\", // let, var, const, argument, frame, reserved\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n\n          this.Push(e, state);\n        }\n\n        return this.ConsumeNode(funcName.value, node, vType, state);\n      }\n    } else {\n      this.pushError({\n        type: \"error\",\n        message: funcName.value + \" is not a function\",\n        loc: Object.assign(\n          { pos: { start: node.start, end: node.end } },\n          node.loc\n        )\n      });\n    }\n\n    return returns;\n  }\n\n  UnaryExpression(node, parent, vType, state) {\n    const entry = this.ConsumeNode(node.argument, node, \"rvalue\", state);\n    let ret = { ...entry };\n\n    if (ret.type === \"function\") {\n      this.pushError({\n        type: \"warning\",\n        message: \"trying to unary operation on a function \" + entry.id,\n        loc: Object.assign(\n          {\n            pos: {\n              start: node.argument ? node.argument.start : node.start,\n              end: node.argument ? node.argument.end : node.end\n            }\n          },\n          node.argument ? node.argument.loc : node.loc\n        )\n      });\n    }\n\n    switch (node.operator) {\n      case \"-\":\n        if (ret.type !== \"function\" && ret.type !== \"number\") {\n          this.pushError({\n            type: \"warning\",\n            message:\n              \"trying to unary operation on a \" + ret.type + \" \" + entry.id,\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n        }\n        ret.value = -ret.value;\n        ret.type = this.valueType(ret.value);\n        break;\n      case \"!\":\n        ret.value = !ret.value;\n        ret.type = this.valueType(ret.value);\n        break;\n      case \"~\":\n        ret.value = ~ret.value;\n        ret.type = this.valueType(ret.value);\n        break;\n      case \"+\":\n        ret.value = Number(ret.value);\n        ret.type = this.valueType(ret.value);\n        break;\n      case \"typeof\":\n        ret.value = ret.type;\n        ret.type = \"string\";\n        break;\n      case \"delete\":\n        ret.value = undefined;\n        ret.type = undefined;\n        break;\n      default:\n        this.printLog(\"Unsupported UnaryOperator\", node.operator);\n        ret.value = undefined;\n        ret.type = undefined;\n        break;\n    }\n\n    return ret;\n  }\n\n  BinaryExpression(node, parent, vType, state) {\n    let value;\n    const left = this.ConsumeNode(node.left, node, \"rvalue\", state);\n    const right = this.ConsumeNode(node.right, node, \"rvalue\", state);\n\n    if (!left || !right) {\n      this.printLog(left, right, \"Not yet prepared to evaluate code\");\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n\n    if (left.type === undefined && left.kind !== \"argument\") {\n      this.pushError({\n        type: \"warning\",\n        message: left.id + \" is undefined (binary)\",\n        loc: Object.assign(\n          { pos: { start: node.left.start, end: node.left.end } },\n          node.left.loc\n        )\n      });\n    }\n\n    if (right.type === undefined && right.kind !== \"argument\") {\n      this.pushError({\n        type: \"warning\",\n        message: right.id + \" is undefined (binary)\",\n        loc: Object.assign(\n          { pos: { start: node.right.start, end: node.right.end } },\n          node.right.loc\n        )\n      });\n    }\n\n    switch (node.operator) {\n      case \"<\":\n        value = left.value < right.value;\n        break;\n      case \">\":\n        value = left.value > right.value;\n        break;\n      case \"<=\":\n        value = left.value <= right.value;\n        break;\n      case \">=\":\n        value = left.value >= right.value;\n        break;\n      case \"!=\":\n        // eslint-disable-next-line\n        value = left.value != right.value;\n        break;\n      case \"!==\":\n        value = left.value !== right.value;\n        break;\n      case \"==\":\n        // eslint-disable-next-line\n        value = left.value == right.value;\n        break;\n      case \"===\":\n        value = left.value === right.value;\n        break;\n      case \"+\":\n        value = left.value + right.value;\n        break;\n      case \"/\":\n        if (\n          (left.kind !== \"argument\" && left.type !== \"number\") ||\n          (right.kind !== \"argument\" && right.type !== \"number\")\n        ) {\n          this.pushError({\n            type: \"warning\",\n            message:\n              \"Trying to do a divide operation on the \" +\n              left.type +\n              \" | \" +\n              right.type,\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n        }\n        value = left.value / right.value;\n        break;\n      case \"-\":\n        if (\n          (left.kind !== \"argument\" && left.type !== \"number\") ||\n          (right.kind !== \"argument\" && right.type !== \"number\")\n        ) {\n          this.pushError({\n            type: \"warning\",\n            message:\n              \"Trying to do a subtract operation on the \" +\n              left.type +\n              \" | \" +\n              right.type,\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n        }\n        value = left.value - right.value;\n        break;\n      case \"*\":\n        if (\n          (left.kind !== \"argument\" && left.type !== \"number\") ||\n          (right.kind !== \"argument\" && right.type !== \"number\")\n        ) {\n          this.pushError({\n            type: \"warning\",\n            message:\n              \"Trying to do a multiply operation on the \" +\n              left.type +\n              \" | \" +\n              right.type,\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n        }\n        value = left.value * right.value;\n        break;\n      default:\n        this.printLog(\"Unsupported binary expression\", node.operator);\n        value = undefined;\n        break;\n    }\n\n    return {\n      type: this.valueType(value),\n      value: value,\n      params: undefined,\n      kind: \"let\"\n    };\n  }\n\n  ArrayExpression(node, parent, vType, state) {\n    var ret = [];\n\n    node.elements.forEach(element => {\n      ret.push(this.ConsumeNode(element, node, \"rvalue\", state));\n    });\n\n    return {\n      type: \"array\",\n      value: ret,\n      params: undefined,\n      kind: \"let\"\n    };\n  }\n\n  // var func = function() {}\n  FunctionExpression(node, parent, vType, state) {\n    if (!this.options || !this.options.callExpressionOnly) {\n      var localState = {\n        frame: Object.assign({}, this.Entry, {\n          id: \"local\",\n          type: \"block\",\n          value: {\n            parent: null,\n            stack: []\n          },\n          kind: \"frame\",\n          loc: Object.assign(\n            { pos: { start: node.start, end: node.end } },\n            node.loc\n          )\n        }),\n        isActive: false,\n        upStack: 0\n      };\n\n      node.params.forEach(param => {\n        const pEntry = this.ConsumeNode(param, node, \"rvalue\", localState);\n\n        let entry = Object.assign({}, this.Entry, {\n          id: pEntry.id,\n          type: pEntry.type,\n          value: pEntry.value,\n          params: pEntry.params,\n          kind: \"argument\",\n          loc: Object.assign(\n            { pos: { start: param.start, end: param.end } },\n            param.loc\n          )\n        });\n        this.Push(entry, localState);\n      });\n      this.ConsumeNode(node.body, node, vType, localState);\n      this.printLog(\"localTable\", localState, \"globalTable\", state);\n    }\n\n    return {\n      type: \"function\",\n      params: [...node.params],\n      value: node.body\n    };\n  }\n\n  ArrowFunctionExpression(node, parent, vType, state) {\n    if (!this.options || !this.options.callExpressionOnly) {\n      var localState = {\n        frame: Object.assign({}, this.Entry, {\n          id: \"local\",\n          type: \"block\",\n          value: {\n            parent: null,\n            stack: []\n          },\n          kind: \"frame\",\n          loc: Object.assign(\n            { pos: { start: node.start, end: node.end } },\n            node.loc\n          )\n        }),\n        isActive: false,\n        upStack: 0\n      };\n\n      node.params.forEach(param => {\n        const pEntry = this.ConsumeNode(param, node, \"rvalue\", localState);\n\n        let entry = Object.assign({}, this.Entry, {\n          id: pEntry.id,\n          type: pEntry.type,\n          value: pEntry.value,\n          params: pEntry.params,\n          kind: \"argument\",\n          loc: Object.assign(\n            { pos: { start: param.start, end: param.end } },\n            param.loc\n          )\n        });\n        this.Push(entry, localState);\n      });\n      this.ConsumeNode(node.body, node, vType, localState);\n      this.printLog(\"localTable\", localState, \"globalTable\", state);\n    }\n\n    return {\n      type: \"function\",\n      params: [...node.params],\n      value: node.body\n    };\n  }\n\n  FunctionDeclaration(node, parent, vType, state) {\n    const funcName = this.ConsumeNode(node.id, parent, \"rvalue\", state);\n\n    if (funcName.kind === \"reserved\") {\n      this.pushError({\n        type: \"warning\",\n        message: funcName.id + \" is reserved as a \" + funcName.type,\n        loc: Object.assign(\n          { pos: { start: node.id.start, end: node.id.end } },\n          node.id.loc\n        )\n      });\n\n      return;\n    }\n\n    let kind = \"var\";\n    if (funcName.kind !== undefined) {\n      this.pushError({\n        type: \"warning\",\n        message: funcName.value + \" is already declared as \" + funcName.type,\n        loc: Object.assign(\n          { pos: { start: node.id.start, end: node.id.end } },\n          node.id.loc\n        )\n      });\n      kind = \"let\";\n    }\n\n    // CHECKME:\n    // If the function was declared in a local scope, does it has to be registered as a local variable?\n    // or add it to as a global variable?\n    let entry = Object.assign({}, this.Entry, {\n      id: funcName.id,\n      type: \"function\",\n      params: [...node.params],\n      value: node.body,\n      kind: kind,\n      loc: Object.assign(\n        { pos: { start: node.id.start, end: node.id.end } },\n        node.id.loc\n      )\n    });\n    this.Push(entry, state);\n\n    if (!this.options || !this.options.callExpressionOnly) {\n      // Evaluate body of the function\n      var localState = {\n        frame: Object.assign({}, this.Entry, {\n          id: \"local\",\n          type: \"block\",\n          value: {\n            parent: null,\n            stack: []\n          },\n          kind: \"frame\",\n          loc: Object.assign(\n            { pos: { start: node.start, end: node.end } },\n            node.loc\n          )\n        }),\n        isActive: false,\n        upStack: 0\n      };\n\n      node.params.forEach(param => {\n        const pEntry = this.ConsumeNode(param, node, \"rvalue\", localState);\n        entry = Object.assign({}, this.Entry, {\n          id: pEntry.id,\n          type: pEntry.type,\n          value: pEntry.value,\n          params: pEntry.params,\n          kind: \"argument\",\n          loc: Object.assign(\n            { pos: { start: node.start, end: node.end } },\n            node.loc\n          )\n        });\n        this.Push(entry, localState);\n      });\n\n      this.ConsumeNode(node.body, node, vType, localState);\n      this.printLog(\"localTable:\", localState, \"globalTable\", state);\n    }\n  }\n\n  ConditionalExpression(node, parent, vType, state) {\n    const ret = this.ConsumeNode(node.test, node, \"rvalue\", state);\n    const t = this.ConsumeNode(node.consequent, node, \"rvalue\", state);\n    const f = this.ConsumeNode(node.alternate, node, \"rvalue\", state);\n\n    return ret.value ? t : f;\n  }\n\n  // code: hello.text = \"hi\"\n  MemberExpression(node, parent, vType, state) {\n    const obj = this.ConsumeNode(node.object, node, \"rvalue\", state);\n    const prop = this.ConsumeNode(\n      node.property,\n      node,\n      node.computed ? \"rvalue\" : \"lvalue\",\n      state\n    );\n\n    if (!obj) {\n      this.printLog(\"Please check the reserved object list\", node.object);\n      return {\n        id: undefined,\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n\n    if (obj.type === undefined) {\n      disableError &&\n        this.pushError({\n          type: \"error\",\n          message: \"cannot access \" + prop.value + \" of undefined\",\n          loc: Object.assign(\n            { pos: { start: node.object.start, end: node.object.end } },\n            node.object.loc\n          )\n        });\n\n      return obj;\n    }\n\n    if (obj.value === null || obj.value === undefined) {\n      if (obj.kind === \"reserved\") {\n        if (obj.type !== \"object\") {\n          this.erros.push({\n            type: \"warning\",\n            message: \"trying to change the property of a reserved \" + obj.type,\n            loc: Object.assign(\n              { pos: { start: node.object.start, end: node.object.end } },\n              node.object.loc\n            )\n          });\n        }\n      }\n\n      obj.type = \"object\";\n      obj.value = {\n        [prop.value]: {\n          type: undefined,\n          value: undefined,\n          params: undefined,\n          kind: \"property\"\n        }\n      };\n    }\n\n    if (typeof obj.value[prop.value] === \"undefined\") {\n      if (obj.type !== \"object\" && obj.type !== \"array\") {\n        disableError &&\n          this.pushError({\n            type: \"error\",\n            message:\n              \"cannot create property \" + prop.value + \" on the \" + obj.type,\n            loc: Object.assign(\n              { pos: { start: node.object.start, end: node.object.end } },\n              node.object.loc\n            )\n          });\n\n        return obj;\n      }\n    } else if (typeof obj.value[prop.value] === \"function\") {\n      return {\n        id: prop.value,\n        type: \"function\",\n        value: null, // TODO: Return value of a function\n        params: new Array(obj.value[prop.value].length), // Create an parameter array of a native function\n        kind: \"native\"\n      };\n    } else if (obj.type !== \"object\") {\n      return {\n        id: prop.value,\n        type: this.valueType(obj.value[prop.value]),\n        value: obj.value[prop.value],\n        params: undefined,\n        kind: \"native\"\n      };\n    }\n\n    return obj.value[prop.value];\n  }\n\n  BreakStatement(node, parent, vType, state) {\n    const label = this.ConsumeNode(node.label, node, \"rvalue\", state);\n    if (label.type === undefined) {\n      return;\n    }\n\n    if (label.type !== \"label\") {\n      this.pushError({\n        type: \"error\",\n        message: \"label \" + label.id + \" was not found\",\n        loc: Object.assign(\n          { pos: { start: node.label.start, end: node.label.end } },\n          node.label.loc\n        )\n      });\n    } else {\n      this.ConsumeNode(label.value, node, vType, state);\n    }\n  }\n\n  ContinueStatement(node, parent, vType, state) {\n    const label = this.ConsumeNode(node.label, node, \"rvalue\", state);\n    if (label.type === undefined) {\n      return;\n    }\n\n    if (label.type !== \"label\") {\n      this.pushError({\n        type: \"error\",\n        message: \"label \" + label.id + \" was not found\",\n        loc: Object.assign(\n          { pos: { start: node.label.start, end: node.label.end } },\n          node.label.loc\n        )\n      });\n    } else {\n      this.ConsumeNode(label.value, node, vType, state);\n    }\n  }\n\n  LabeledStatement(node, parent, vType, state) {\n    const label = this.ConsumeNode(node.label, node, vType, state);\n\n    const entry = Object.assign({}, this.Entry, {\n      id: label.id,\n      type: \"label\",\n      params: undefined,\n      value: node.body,\n      kind: \"let\",\n      loc: Object.assign(\n        { pos: { start: node.start, end: node.end } },\n        node.loc\n      )\n    });\n    this.Push(entry, state);\n\n    this.ConsumeNode(node.body, node, vType, state);\n  }\n\n  ReturnStatement(node, parent, vType, state) {\n    return this.ConsumeNode(node.argument, node, vType, state);\n  }\n\n  ExpressionStatement(node, parent, vType, state) {\n    return this.ConsumeNode(node.expression, node, vType, state);\n  }\n\n  AwaitExpression(node, parent, vType, state) {\n    return this.ConsumeNode(node.argument, node, vType, state);\n  }\n\n  AssignmentExpression(node, parent, vType, state) {\n    let left = this.ConsumeNode(node.left, node, \"rvalue\", state);\n    const right = this.ConsumeNode(node.right, node, \"rvalue\", state);\n\n    if (!left || !right) {\n      this.printLog(left, right, \"Not yet prepared to evaluate code\");\n      return {\n        type: undefined,\n        value: undefined,\n        params: undefined,\n        kind: undefined\n      };\n    }\n\n    if (right.type === undefined && right.kind !== \"argument\") {\n      disableError &&\n        this.pushError({\n          type: \"warning\",\n          message: right.id + \" is undefined (assign)\",\n          loc: Object.assign(\n            { pos: { start: node.right.start, end: node.right.end } },\n            node.right.loc\n          )\n        });\n    }\n\n    if (left.kind === \"reserved\") {\n      if (left.type === \"function\") {\n        this.pushError({\n          type: \"error\",\n          message: \"Cannot assign a value to the reserved function \" + left.id,\n          loc: Object.assign(\n            { pos: { start: node.left.start, end: node.left.end } },\n            node.left.loc\n          )\n        });\n\n        return left;\n      }\n    } else if (left.kind === undefined) {\n      // NOTE\n      // Create a new variable\n      left = Object.assign({}, this.Entry, {\n        id: left.id,\n        type: right.type,\n        value: right.value,\n        params: right.params,\n        kind: \"var\", // let, var, const\n        loc: Object.assign(\n          { pos: { start: node.left.start, end: node.left.end } },\n          node.left.loc\n        )\n      });\n\n      if (state.isActive === true) {\n        // Push to the global table.\n        this.Push(left);\n      } else {\n        this.Push(left, state);\n      }\n    } else if (left.kind === \"const\") {\n      this.pushError({\n        type: \"error\",\n        message: \"Cannot change the constant \" + left.id,\n        loc: Object.assign(\n          { pos: { start: node.left.start, end: node.left.end } },\n          node.left.loc\n        )\n      });\n\n      return left;\n    }\n\n    switch (node.operator) {\n      case \"=\":\n        left.value = right.value;\n        left.params = right.params;\n        left.type = right.type;\n        break;\n      case \"+=\":\n        left.value += right.value;\n        left.type = this.valueType(left.value);\n        break;\n      case \"-=\":\n        if (right.type !== \"number\" || left.type !== \"number\") {\n          this.pushError({\n            type: \"warning\",\n            message:\n              \"Trying to do a \" +\n              node.operator +\n              \" operation on the \" +\n              right.type +\n              \"/\" +\n              left.type,\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n        }\n        left.value -= right.value;\n        left.type = this.valueType(left.value);\n        break;\n      case \"*=\":\n        if (right.type !== \"number\" || left.type !== \"number\") {\n          this.pushError({\n            type: \"warning\",\n            message:\n              \"Trying to do a \" +\n              node.operator +\n              \" operation on the \" +\n              right.type +\n              \"/\" +\n              left.type,\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n        }\n        left.value *= right.value;\n        left.type = this.valueType(left.value);\n        break;\n      case \"/=\":\n        if (right.type !== \"number\" || left.type !== \"number\") {\n          this.pushError({\n            type: \"warning\",\n            message:\n              \"Trying to do a \" +\n              node.operator +\n              \" operation on the \" +\n              right.type +\n              \"/\" +\n              left.type,\n            loc: Object.assign(\n              { pos: { start: node.start, end: node.end } },\n              node.loc\n            )\n          });\n        }\n\n        left.value /= right.value;\n        left.type = this.valueType(left.value);\n        break;\n      default:\n        this.printLog(\"unsupported operator\", node.operator);\n    }\n\n    return left;\n  }\n\n  DoWhileStatement(node, parent, vType, state) {\n    this.ConsumeNode(node.test, node, \"rvalue\", state);\n    this.ConsumeNode(node.body, node, vType, state);\n  }\n\n  WhileStatement(node, parent, vType, state) {\n    this.ConsumeNode(node.test, node, \"rvalue\", state);\n    this.ConsumeNode(node.body, node, vType, state);\n  }\n\n  UpdateExpression(node, parent, vType, state) {\n    let v;\n\n    v = this.ConsumeNode(node.argument, node, \"rvalue\", state);\n    if (v.type === undefined && v.kind !== \"argument\") {\n      disableError &&\n        this.pushError({\n          type: \"warning\",\n          message: v.id + \" is undefined (update)\",\n          loc: Object.assign(\n            { pos: { start: node.start, end: node.end } },\n            node.loc\n          )\n        });\n    }\n\n    switch (node.operator) {\n      case \"++\":\n        if (v.type !== \"number\" && v.kind !== \"argument\") {\n          disableError &&\n            this.pushError({\n              type: \"info\",\n              message: v.value + \" is not a number type\",\n              loc: Object.assign(\n                { pos: { start: node.start, end: node.end } },\n                node.loc\n              )\n            });\n        }\n        v.value++;\n        break;\n      case \"--\":\n        if (v.type !== \"number\" && v.kind !== \"argument\") {\n          disableError &&\n            this.pushError({\n              type: \"info\",\n              message: v.value + \" is not a number type\",\n              loc: Object.assign(\n                { pos: { start: node.start, end: node.end } },\n                node.loc\n              )\n            });\n        }\n        v.value--;\n        break;\n      default:\n        this.printLog(\"Unsupported update operator\", node.operator);\n        v = {\n          type: undefined,\n          value: undefined\n        };\n        break;\n    }\n\n    return v;\n  }\n\n  ForStatement(node, parent, vType, state) {\n    this.ConsumeNode(node.init, node, \"rvalue\", state);\n    this.ConsumeNode(node.test, node, \"rvalue\", state);\n\n    state.upStack++;\n    this.ConsumeNode(node.body, node, vType, state);\n    state.upStack--;\n\n    this.ConsumeNode(node.update, node, \"rvalue\", state);\n  }\n\n  BlockStatement(node, parent, vType, state) {\n    let entry = Object.assign({}, this.Entry, {\n      id: null,\n      type: \"block\",\n      value: {\n        parent: state.frame,\n        stack: []\n      },\n      kind: \"frame\",\n      loc: Object.assign(\n        { pos: { start: node.start, end: node.end } },\n        node.loc\n      )\n    });\n\n    this.Push(entry, state);\n\n    let frame = state.frame;\n    state.frame = entry;\n\n    let list = [\n      {\n        id: \"Result of the function call\",\n        type: undefined,\n        value: undefined,\n        params: undefined\n      }\n    ];\n\n    node.body.forEach(statement => {\n      const ret = this.ConsumeNode(statement, node, vType, state);\n      if (statement.type === \"ReturnStatement\") {\n        list.unshift(ret);\n      }\n    });\n\n    state.frame = frame;\n\n    return list[0];\n  }\n\n  IfStatement(node, parent, vType, state) {\n    this.ConsumeNode(node.test, node, vType, state);\n    this.ConsumeNode(node.consequent, node, vType, state);\n    this.ConsumeNode(node.alternate, node, vType, state);\n  }\n\n  SwitchStatement(node, parent, vType, state) {\n    this.ConsumeNode(node.discriminant, node, vType, state);\n    node.cases.forEach(statement =>\n      this.ConsumeNode(statement, node, vType, state)\n    );\n  }\n\n  SwitchCase(node, parent, vType, state) {\n    this.ConsumeNode(node.test, node, vType, state);\n    node.consequent.forEach(statement =>\n      this.ConsumeNode(statement, node, vType, state)\n    );\n  }\n\n  Program(node, parent, vType, state) {\n    this.mainFrame = state.frame = Object.assign({}, this.Entry, {\n      id: \"main\",\n      type: \"block\",\n      value: {\n        parent: null,\n        stack: []\n      },\n      kind: \"frame\",\n      loc: Object.assign(\n        { pos: { start: node.start, end: node.end } },\n        node.loc\n      )\n    });\n\n    node.body.forEach(statement =>\n      this.ConsumeNode(statement, node, \"lvalue\", state)\n    );\n  }\n\n  VariableDeclaration(node, parent, vType, state) {\n    node.declarations.forEach(declaration =>\n      this.ConsumeNode(declaration, node, \"lvalue\", state)\n    );\n  }\n\n  // TODO:\n  // Following methods are not implemented node handlers.\n  //\n  ParenthesizedExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  ClassDeclaration(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  ClassExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  SequenceExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  LogicalExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  TaggedTemplateExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  ThisExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  NewExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  ObjectPattern(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  YieldExpression(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  DebuggerStatement(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  ThrowStatement(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  TryStatement(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  WithStatement(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  EmptyStatement(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  ForInStatement(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  ForOfStatement(node, parent, vType, state) {\n    this.printLog(\"Not implemented\", node);\n    return {\n      type: undefined,\n      value: undefined,\n      params: undefined,\n      kind: undefined\n    };\n  }\n\n  printLog() {\n    // console.log(...arguments);\n  }\n}\n\nexport default JSEvaluator;\n"]},"metadata":{},"sourceType":"module"}