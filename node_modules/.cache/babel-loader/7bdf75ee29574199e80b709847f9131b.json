{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// import { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nexport var msalConfig = {\n  auth: {\n    clientId: \"077facfc-36c5-49ae-8a20-f9d25b0c8e47\",\n    authority: \"https://login.microsoftonline.com/organizations\",\n    redirectUri: \"https://wizclass.com\"\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // This configures where your cache will be stored\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n\n  },\n  system: {\n    loggerOptions: {// loggerCallback: (level, message, containsPii) => {\t\n      //   if (containsPii) {\t\t\n      //     return;\t\t\n      //   }\t\t\n      //   switch (level) {\t\t\n      //     case LogLevel.Error:\t\t\n      //       console.error(message);\t\t\n      //       return;\t\t\n      //     case LogLevel.Info:\t\t\n      //       console.info(message);\t\t\n      //       return;\t\t\n      //     case LogLevel.Verbose:\t\t\n      //       console.debug(message);\t\t\n      //       return;\t\t\n      //     case LogLevel.Warning:\t\t\n      //       console.warn(message);\t\t\n      //       return;\t\t\n      //   }\t    \n      // }\t\n    }\n  }\n};\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\n\nexport var loginRequest = {\n  scopes: [\"User.Read\"]\n};\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\n\nexport var graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Util/MsalConfig.js"],"names":["msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loginRequest","scopes","graphConfig","graphMeEndpoint"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,sCADN;AAEJC,IAAAA,SAAS,EAAE,iDAFP;AAGJC,IAAAA,WAAW,EAAE;AAHT,GADkB;AAMxBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE,gBADV;AAC4B;AACjCC,IAAAA,sBAAsB,EAAE,KAFnB,CAE0B;;AAF1B,GANiB;AAUxBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EAAE,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBa;AADT;AAVgB,CAAnB;AAmCP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,CAAC,WAAD;AADkB,CAArB;AAIP;AACA;AACA;AACA;;AACA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,eAAe,EAAE;AADQ,CAApB","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// import { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nexport const msalConfig = {\n  auth: {\n    clientId: \"077facfc-36c5-49ae-8a20-f9d25b0c8e47\",\n    authority: \"https://login.microsoftonline.com/organizations\",\n    redirectUri: \"https://wizclass.com\"\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n    storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n  system: {\t\n    loggerOptions: {\t\n      // loggerCallback: (level, message, containsPii) => {\t\n      //   if (containsPii) {\t\t\n      //     return;\t\t\n      //   }\t\t\n      //   switch (level) {\t\t\n      //     case LogLevel.Error:\t\t\n      //       console.error(message);\t\t\n      //       return;\t\t\n      //     case LogLevel.Info:\t\t\n      //       console.info(message);\t\t\n      //       return;\t\t\n      //     case LogLevel.Verbose:\t\t\n      //       console.debug(message);\t\t\n      //       return;\t\t\n      //     case LogLevel.Warning:\t\t\n      //       console.warn(message);\t\t\n      //       return;\t\t\n      //   }\t    \n      // }\t\n    }\t\n  }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n  scopes: [\"User.Read\"]\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n"]},"metadata":{},"sourceType":"module"}