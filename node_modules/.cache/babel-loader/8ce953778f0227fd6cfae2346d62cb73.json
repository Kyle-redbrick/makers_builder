{"ast":null,"code":"import _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Util/NotificationSocket.js\";\nimport React, { Component } from \"react\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport store from \"../../Common/Store\";\nimport UserInfo from \"../../Common/Component/UserInfo\";\nimport { URL } from \"./Constant\";\n\nvar NotificationSocket =\n/*#__PURE__*/\nfunction () {\n  function NotificationSocket() {\n    _classCallCheck(this, NotificationSocket);\n\n    this.userId = null;\n    this.socket = null;\n    this.subscribers = [];\n    this.shouldStoreNoti = false;\n  }\n\n  _createClass(NotificationSocket, [{\n    key: \"connect\",\n    value: function connect(userId) {\n      var _this = this;\n\n      if (!this.checkUserIdValid(userId)) return;\n      this.socket = io(URL.NOTIFICATION_SOCKET_SERVER, {});\n      this.socket.on(\"connect\", function () {\n        _this.userId = userId;\n\n        _this.socket.emit(\"join\", userId);\n      });\n      this.socket.on(\"wizlabNoti\", function (noti) {\n        if (_this.checkNotiValid(noti)) {\n          if (_this.shouldStoreNoti) {\n            _this.storeNoti(noti);\n          } else {\n            for (var i in _this.subscribers) {\n              _this.subscribers[i](noti);\n            }\n          }\n        }\n      });\n      this.socket.on(\"forceDisconnect\", this.disconnect.bind(this));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return !!this.socket;\n    }\n  }, {\n    key: \"checkUserIdValid\",\n    value: function checkUserIdValid(id) {\n      return !!id;\n    }\n  }, {\n    key: \"checkNotiValid\",\n    value: function checkNotiValid(noti) {\n      if (this.userId !== noti.userId) {\n        return false;\n      }\n\n      if (noti.storedAt) {\n        if (moment().diff(noti.storedAt, \"hours\") > 1) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(callback) {\n      this.subscribers.push(callback);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(callback) {\n      var index = this.subscribers.indexOf(callback);\n\n      if (index >= 0) {\n        this.subscribers.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"storeNoti\",\n    value: function storeNoti(noti) {\n      var notis = this.getStoredNotis();\n      notis.push(_objectSpread({}, noti, {\n        storedAt: moment().format()\n      }));\n      this.setStoredNotis(notis);\n    }\n  }, {\n    key: \"getStoredNotis\",\n    value: function getStoredNotis() {\n      var stringifiedNotis = localStorage.getItem(\"notification\");\n\n      if (stringifiedNotis) {\n        try {\n          return JSON.parse(stringifiedNotis);\n        } catch (_unused) {\n          return [];\n        }\n      } else {\n        return [];\n      }\n    }\n  }, {\n    key: \"popStoredNotis\",\n    value: function popStoredNotis() {\n      var _this2 = this;\n\n      var notis = this.getStoredNotis();\n      this.deleteStoredNoti();\n      notis.forEach(function (noti) {\n        if (_this2.checkNotiValid(noti)) {\n          for (var i in _this2.subscribers) {\n            _this2.subscribers[i](noti);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"setStoredNotis\",\n    value: function setStoredNotis(notis) {\n      localStorage.setItem(\"notification\", JSON.stringify(notis));\n    }\n  }, {\n    key: \"deleteStoredNoti\",\n    value: function deleteStoredNoti() {\n      localStorage.removeItem(\"notification\");\n    }\n  }]);\n\n  return NotificationSocket;\n}();\n\nvar notificationSocket = new NotificationSocket();\nexport default notificationSocket;\n\nvar Provider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Provider, _Component);\n\n  function Provider() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, Provider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Provider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this3.onUserLogin = function () {\n      notificationSocket.connect(_this3.props.id);\n    };\n\n    _this3.onUserLogout = function () {\n      notificationSocket.disconnect();\n    };\n\n    _this3.onBrowserBlur = function () {\n      notificationSocket.shouldStoreNoti = true;\n    };\n\n    _this3.onBrowserFocus = function () {\n      notificationSocket.shouldStoreNoti = false;\n      notificationSocket.popStoredNotis();\n\n      if (!notificationSocket.isConnected()) {\n        if (_this3.props.id) {\n          notificationSocket.connect(_this3.props.id);\n        }\n      }\n    };\n\n    return _this3;\n  }\n\n  _createClass(Provider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.id) {\n        notificationSocket.connect(this.props.id);\n      } // notificationSocket.subscribe(noti => {\n      //   toast.success(noti.message, {\n      //     position: toast.POSITION.BOTTOM_LEFT,\n      //     autoClose: 8000,\n      //     pauseOnHover: true\n      //   });\n      // });\n\n\n      window.addEventListener(\"blur\", this.onBrowserBlur);\n      window.addEventListener(\"focus\", this.onBrowserFocus);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"blur\", this.onBrowserBlur);\n      window.removeEventListener(\"focus\", this.onBrowserFocus);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.id !== prevProps.id) {\n        if (this.props.id) {\n          this.onUserLogin();\n        } else {\n          this.onUserLogout();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Provider;\n}(Component);\n\nvar ConnectedProvider = connect(function (state) {\n  var _state$userinfo = state.userinfo,\n      id = _state$userinfo.id,\n      email = _state$userinfo.email;\n  return {\n    id: id,\n    email: email\n  };\n})(Provider);\nexport var NotificationProvider = function NotificationProvider() {\n  return React.createElement(ReduxProvider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(UserInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(ConnectedProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Util/NotificationSocket.js"],"names":["React","Component","Provider","ReduxProvider","io","moment","connect","ToastContainer","store","UserInfo","URL","NotificationSocket","userId","socket","subscribers","shouldStoreNoti","checkUserIdValid","NOTIFICATION_SOCKET_SERVER","on","emit","noti","checkNotiValid","storeNoti","i","disconnect","bind","id","storedAt","diff","callback","push","index","indexOf","splice","notis","getStoredNotis","format","setStoredNotis","stringifiedNotis","localStorage","getItem","JSON","parse","deleteStoredNoti","forEach","setItem","stringify","removeItem","notificationSocket","onUserLogin","props","onUserLogout","onBrowserBlur","onBrowserFocus","popStoredNotis","isConnected","window","addEventListener","removeEventListener","prevProps","ConnectedProvider","state","userinfo","email","NotificationProvider"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport store from \"../../Common/Store\";\nimport UserInfo from \"../../Common/Component/UserInfo\";\nimport { URL } from \"./Constant\";\n\nclass NotificationSocket {\n  constructor() {\n    this.userId = null;\n    this.socket = null;\n    this.subscribers = [];\n    this.shouldStoreNoti = false;\n  }\n\n  connect(userId) {\n    if (!this.checkUserIdValid(userId)) return;\n    this.socket = io(URL.NOTIFICATION_SOCKET_SERVER, {});\n    this.socket.on(\"connect\", () => {\n      this.userId = userId;\n      this.socket.emit(\"join\", userId);\n    });\n    this.socket.on(\"wizlabNoti\", noti => {\n      if (this.checkNotiValid(noti)) {\n        if (this.shouldStoreNoti) {\n          this.storeNoti(noti);\n        } else {\n          for (let i in this.subscribers) {\n            this.subscribers[i](noti);\n          }\n        }\n      }\n    });\n    this.socket.on(\"forceDisconnect\", this.disconnect.bind(this));\n  }\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n  isConnected() {\n    return !!this.socket;\n  }\n  checkUserIdValid(id) {\n    return !!id;\n  }\n  checkNotiValid(noti) {\n    if (this.userId !== noti.userId) {\n      return false;\n    }\n    if (noti.storedAt) {\n      if (moment().diff(noti.storedAt, \"hours\") > 1) {\n        return false;\n      }\n    }\n    return true;\n  }\n  subscribe(callback) {\n    this.subscribers.push(callback);\n  }\n  unsubscribe(callback) {\n    const index = this.subscribers.indexOf(callback);\n    if (index >= 0) {\n      this.subscribers.splice(index, 1);\n    }\n  }\n  storeNoti(noti) {\n    const notis = this.getStoredNotis();\n    notis.push({ ...noti, storedAt: moment().format() });\n    this.setStoredNotis(notis);\n  }\n  getStoredNotis() {\n    const stringifiedNotis = localStorage.getItem(\"notification\");\n    if (stringifiedNotis) {\n      try {\n        return JSON.parse(stringifiedNotis);\n      } catch {\n        return [];\n      }\n    } else {\n      return [];\n    }\n  }\n  popStoredNotis() {\n    const notis = this.getStoredNotis();\n    this.deleteStoredNoti();\n    notis.forEach(noti => {\n      if (this.checkNotiValid(noti)) {\n        for (let i in this.subscribers) {\n          this.subscribers[i](noti);\n        }\n      }\n    });\n  }\n  setStoredNotis(notis) {\n    localStorage.setItem(\"notification\", JSON.stringify(notis));\n  }\n  deleteStoredNoti() {\n    localStorage.removeItem(\"notification\");\n  }\n}\nconst notificationSocket = new NotificationSocket();\nexport default notificationSocket;\n\nclass Provider extends Component {\n  componentDidMount() {\n    if (this.props.id) {\n      notificationSocket.connect(this.props.id);\n    }\n    // notificationSocket.subscribe(noti => {\n    //   toast.success(noti.message, {\n    //     position: toast.POSITION.BOTTOM_LEFT,\n    //     autoClose: 8000,\n    //     pauseOnHover: true\n    //   });\n    // });\n    window.addEventListener(\"blur\", this.onBrowserBlur);\n    window.addEventListener(\"focus\", this.onBrowserFocus);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"blur\", this.onBrowserBlur);\n    window.removeEventListener(\"focus\", this.onBrowserFocus);\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.id !== prevProps.id) {\n      if (this.props.id) {\n        this.onUserLogin();\n      } else {\n        this.onUserLogout();\n      }\n    }\n  }\n  onUserLogin = () => {\n    notificationSocket.connect(this.props.id);\n  };\n  onUserLogout = () => {\n    notificationSocket.disconnect();\n  };\n  onBrowserBlur = () => {\n    notificationSocket.shouldStoreNoti = true;\n  };\n  onBrowserFocus = () => {\n    notificationSocket.shouldStoreNoti = false;\n    notificationSocket.popStoredNotis();\n    if (!notificationSocket.isConnected()) {\n      if (this.props.id) {\n        notificationSocket.connect(this.props.id);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nconst ConnectedProvider = connect(state => {\n  const { id, email } = state.userinfo;\n  return { id, email };\n})(Provider);\n\nexport const NotificationProvider = () => {\n  return (\n    <ReduxProvider store={store}>\n      <UserInfo>\n        <ConnectedProvider />\n      </UserInfo>\n    </ReduxProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}