{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ACTION } from \"../../Util/Constant\";\nimport { ASSET_BASE_URL } from \"../../Util/Constant\";\nexport var setProject = function setProject(project, disableTimestamp) {\n  return {\n    type: ACTION.PROJECT_SET,\n    payload: {\n      project: project,\n      disableTimestamp: disableTimestamp\n    }\n  };\n};\nexport var setTemplateProject = function setTemplateProject(project) {\n  return {\n    type: ACTION.PROJECT_SET_TEMPLATE,\n    payload: {\n      project: project\n    }\n  };\n};\nvar initialState = {};\n\nvar project = function project() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case ACTION.PROJECT_SET:\n    case ACTION.PROJECT_SET_TEMPLATE:\n      return projectSet(state, payload);\n\n    default:\n      return state;\n  }\n};\n\nfunction projectSet(prevState, payload) {\n  var project = payload.project,\n      disableTimestamp = payload.disableTimestamp; // gameObjects asset path backward compatibility\n\n  var _state = _objectSpread({}, project.state);\n\n  var _scenes = _objectSpread({}, _state.game.scenes);\n\n  var _loop = function _loop(sceneId) {\n    var scene = _scenes[sceneId];\n    scene.gameObjectIds.forEach(function (gameObjectId) {\n      var gameObj = scene.gameObjects[gameObjectId];\n\n      if ([\"obj\", \"gltf\"].includes(gameObj.subtype)) {\n        [\"path\", \"texture\"].forEach(function (property) {\n          if (gameObj[property] && !gameObj[property].includes(ASSET_BASE_URL)) {\n            var _url = gameObj[property];\n\n            var babylonIndex = _url.indexOf(\"babylon\");\n\n            if (babylonIndex >= 0) {\n              _url = _url.substring(babylonIndex + 7);\n            }\n\n            gameObj[property] = ASSET_BASE_URL + _url;\n          }\n        });\n      }\n    });\n  };\n\n  for (var sceneId in _scenes) {\n    _loop(sceneId);\n  }\n\n  _state.scenes = _scenes;\n\n  var nextState = _objectSpread({}, prevState, project, {\n    state: _state\n  });\n\n  var nextTimeStamp = disableTimestamp ? \"\" : new Date().getTime();\n  nextState.timeStamp = nextTimeStamp;\n  return nextState;\n}\n\nexport default project;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Store/Reducer/project.js"],"names":["ACTION","ASSET_BASE_URL","setProject","project","disableTimestamp","type","PROJECT_SET","payload","setTemplateProject","PROJECT_SET_TEMPLATE","initialState","state","action","projectSet","prevState","_state","_scenes","game","scenes","sceneId","scene","gameObjectIds","forEach","gameObjectId","gameObj","gameObjects","includes","subtype","property","_url","babylonIndex","indexOf","substring","nextState","nextTimeStamp","Date","getTime","timeStamp"],"mappings":"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","sourcesContent":["import { ACTION } from \"../../Util/Constant\";\nimport { ASSET_BASE_URL } from \"../../Util/Constant\";\n\nexport const setProject = (project, disableTimestamp) => ({\n  type: ACTION.PROJECT_SET,\n  payload: { project, disableTimestamp }\n});\n\nexport const setTemplateProject = project => ({\n  type: ACTION.PROJECT_SET_TEMPLATE,\n  payload: { project }\n});\n\nconst initialState = {};\n\nconst project = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ACTION.PROJECT_SET:\n    case ACTION.PROJECT_SET_TEMPLATE:\n      return projectSet(state, payload);\n    default:\n      return state;\n  }\n};\n\nfunction projectSet(prevState, payload) {\n  const { project, disableTimestamp } = payload;\n\n  // gameObjects asset path backward compatibility\n  const _state = { ...project.state };\n  const _scenes = { ..._state.game.scenes };\n  for (const sceneId in _scenes) {\n    const scene = _scenes[sceneId];\n    scene.gameObjectIds.forEach(gameObjectId => {\n      const gameObj = scene.gameObjects[gameObjectId];\n      if ([\"obj\", \"gltf\"].includes(gameObj.subtype)) {\n        [\"path\", \"texture\"].forEach(property => {\n          if (\n            gameObj[property] &&\n            !gameObj[property].includes(ASSET_BASE_URL)\n          ) {\n            let _url = gameObj[property];\n            const babylonIndex = _url.indexOf(\"babylon\");\n            if (babylonIndex >= 0) {\n              _url = _url.substring(babylonIndex + 7);\n            }\n            gameObj[property] = ASSET_BASE_URL + _url;\n          }\n        });\n      }\n    });\n  }\n  _state.scenes = _scenes;\n\n  const nextState = {\n    ...prevState,\n    ...project,\n    state: _state\n  };\n  const nextTimeStamp = disableTimestamp ? \"\" : new Date().getTime();\n  nextState.timeStamp = nextTimeStamp;\n  return nextState;\n}\n\nexport default project;\n"]},"metadata":{},"sourceType":"module"}