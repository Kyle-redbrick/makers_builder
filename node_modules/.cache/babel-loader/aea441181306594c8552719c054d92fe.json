{"ast":null,"code":"import _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Python/Components/PopupComponents/CollectionPopup/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../../../../Common/Util/HTTPRequest\";\nimport \"./index.scss\";\nimport closeBtn from \"../../../../../Image/newPython/python-popup-close-btn@2x.png\";\nimport { playTabEffect, playButtonEffect } from \"../../../Util/PlaySound\";\n\nvar PythonCollection = function PythonCollection(props) {\n  var dismiss = props.dismiss,\n      isShowProjectItems = props.isShowProjectItems,\n      projectId = props.projectId;\n\n  var _useState = useState(\"API\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCollectionTab = _useState2[0],\n      setSelectedCollectionTab = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedKeywordIdx = _useState4[0],\n      setSelectedKeywordIdx = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      itemBookList = _useState6[0],\n      setItemBookList = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      collectionList = _useState8[0],\n      setCollectionList = _useState8[1];\n\n  useEffect(function () {\n    getCategoryItemBook();\n  }, []);\n\n  var getCategoryItemBook = function getCategoryItemBook() {\n    request.getPythonCategoryItembooks().then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setItemBookList(json);\n      json.forEach(function (_itemBooks) {\n        if (_itemBooks.title === selectedCollectionTab) {\n          setCollectionList(_itemBooks.itemBooks);\n        }\n      });\n    }).catch(function (e) {\n      console.error(e);\n    });\n  };\n\n  var handleCollectionTab = function handleCollectionTab(tab) {\n    setSelectedCollectionTab(tab);\n    itemBookList.forEach(function (_itemBooks) {\n      if (_itemBooks.title === tab) {\n        playTabEffect();\n        setCollectionList(_itemBooks.itemBooks);\n      }\n    });\n  };\n\n  var collectionStatus = function collectionStatus(_ref) {\n    var itemIndex = _ref.itemIndex,\n        listProjectId = _ref.listProjectId;\n    var res = \"\"; // default open, selected false\n\n    if (projectId === listProjectId && !isShowProjectItems) {\n      // 현재의 프로젝트에서 획득가능한 아이템, 퀘스트 not cleared\n      res = \"lock\";\n    } else if (itemIndex === selectedKeywordIdx) {\n      // 이전프로젝트에서 획득한 아이템 중에, selected체크\n      res = \"selected\";\n    }\n\n    return res;\n  };\n\n  var collectionDescription = function collectionDescription() {\n    var comment = props.intl.formatMessage({\n      id: \"ID_PYTHON_NO_ITEM\"\n    }); // default\n\n    var collectionProjectId = collectionList[selectedKeywordIdx].dreamProjectId; // 해당 아이템을 획득 할 수 있는 projectId\n\n    var collectionDescription = collectionList[selectedKeywordIdx].description; // 해당 아이템의 설명\n    // 아이템의 획득가능한 프로젝트가 현재의 프로젝트보다 낮은 단게의 프로젝트인지\n    // 지금의 프로젝트에서 획득가능한 아이템이라면, 퀘스트의 미션을 모두 풀어서 획득가능 상태가 되었는지 확인\n\n    if (collectionProjectId < projectId || collectionProjectId === projectId && isShowProjectItems) comment = collectionDescription;\n    return comment;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"pythonCollectionPopup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popupTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"titleName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_PYTHON_COLLECTION_TITLE\"\n  })), React.createElement(\"img\", {\n    className: \"closePopupBtn\",\n    onClick: function onClick() {\n      return dismiss();\n    },\n    src: closeBtn,\n    alt: \"close button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"popupBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"selectedColletionWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, collectionList[selectedKeywordIdx] && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, collectionList[selectedKeywordIdx].title), React.createElement(\"p\", {\n    className: \"detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, collectionDescription()))), React.createElement(\"div\", {\n    className: \"collectionListWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"tabList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, itemBookList.map(function (tab, i) {\n    return React.createElement(\"li\", {\n      className: \"\".concat(selectedCollectionTab === tab.title ? \"selected\" : \"\"),\n      onClick: function onClick() {\n        setSelectedKeywordIdx(0);\n        handleCollectionTab(tab.title);\n      },\n      key: tab + i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, tab.title);\n  })), React.createElement(\"div\", {\n    className: \"itemListWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"itemList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, collectionList.map(function (list, i) {\n    return React.createElement(\"li\", {\n      className: list.dreamProjectId > projectId // collection의 projectId가 학습중인 projectId 보다 크면 lock\n      ? \"lock\" : collectionStatus({\n        itemIndex: i,\n        listProjectId: list.dreamProjectId\n      }),\n      onClick: function onClick() {\n        playButtonEffect(list.dreamProjectId);\n        setSelectedKeywordIdx(i);\n      },\n      key: \"collectionList_\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, list.itemName);\n  }))))));\n};\n\nexport default injectIntl(PythonCollection);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Python/Components/PopupComponents/CollectionPopup/index.js"],"names":["React","useState","useEffect","injectIntl","request","closeBtn","playTabEffect","playButtonEffect","PythonCollection","props","dismiss","isShowProjectItems","projectId","selectedCollectionTab","setSelectedCollectionTab","selectedKeywordIdx","setSelectedKeywordIdx","itemBookList","setItemBookList","collectionList","setCollectionList","getCategoryItemBook","getPythonCategoryItembooks","then","res","json","forEach","_itemBooks","title","itemBooks","catch","e","console","error","handleCollectionTab","tab","collectionStatus","itemIndex","listProjectId","collectionDescription","comment","intl","formatMessage","id","collectionProjectId","dreamProjectId","description","map","i","list","itemName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../../../../Common/Util/HTTPRequest\"\nimport \"./index.scss\";\n\nimport closeBtn from \"../../../../../Image/newPython/python-popup-close-btn@2x.png\";\n\nimport { playTabEffect, playButtonEffect } from \"../../../Util/PlaySound\";\n\nconst PythonCollection = props => {\n  const { dismiss, isShowProjectItems, projectId} = props;\n  const [selectedCollectionTab, setSelectedCollectionTab] = useState(\"API\");\n  const [selectedKeywordIdx, setSelectedKeywordIdx] = useState(0);\n  const [itemBookList, setItemBookList] = useState([]);\n  const [collectionList, setCollectionList] = useState([]);\n\n  useEffect(() => {\n    getCategoryItemBook();\n  }, []);\n\n  const getCategoryItemBook = () => {\n    request\n    .getPythonCategoryItembooks()\n    .then(res => res.json())\n    .then(json => {\n      setItemBookList(json)\n      json.forEach(_itemBooks => {\n        if(_itemBooks.title === selectedCollectionTab) {\n          setCollectionList(_itemBooks.itemBooks);\n        }\n      });\n    })\n    .catch(e => {\n      console.error(e);\n    });\n  }\n\n\n  const handleCollectionTab = tab => {\n    setSelectedCollectionTab(tab);\n    itemBookList.forEach(_itemBooks => {\n      if(_itemBooks.title === tab) {\n        playTabEffect();\n        setCollectionList(_itemBooks.itemBooks)\n      }\n    });\n  };\n\n  const collectionStatus = ({itemIndex, listProjectId}) => {\n    let res = \"\"; // default open, selected false\n    if(projectId === listProjectId && !isShowProjectItems) { // 현재의 프로젝트에서 획득가능한 아이템, 퀘스트 not cleared\n      res = \"lock\"\n    } else if(itemIndex === selectedKeywordIdx) { // 이전프로젝트에서 획득한 아이템 중에, selected체크\n      res = \"selected\"\n    }\n    return res\n  }\n\n  const collectionDescription = () => {\n    let comment = props.intl.formatMessage({ id: \"ID_PYTHON_NO_ITEM\" }); // default\n    let collectionProjectId = collectionList[selectedKeywordIdx].dreamProjectId; // 해당 아이템을 획득 할 수 있는 projectId\n    let collectionDescription = collectionList[selectedKeywordIdx].description; // 해당 아이템의 설명\n\n    // 아이템의 획득가능한 프로젝트가 현재의 프로젝트보다 낮은 단게의 프로젝트인지\n    // 지금의 프로젝트에서 획득가능한 아이템이라면, 퀘스트의 미션을 모두 풀어서 획득가능 상태가 되었는지 확인\n    if( (collectionProjectId < projectId) || (collectionProjectId === projectId && isShowProjectItems) ) comment = collectionDescription;\n\n    return comment\n  }\n\n  return (\n    <div className=\"pythonCollectionPopup\">\n      <div className=\"popupTitle\">\n        <p className=\"titleName\">{props.intl.formatMessage({ id: \"ID_PYTHON_COLLECTION_TITLE\" })}</p>\n        <img\n          className=\"closePopupBtn\"\n          onClick={() => dismiss()}\n          src={closeBtn}\n          alt=\"close button\"\n        />\n      </div>\n      <div className=\"popupBody\">\n        <div className=\"selectedColletionWrapper\">\n          {collectionList[selectedKeywordIdx] && (\n            <>\n              <p className=\"title\">{collectionList[selectedKeywordIdx].title}</p>\n              <p className=\"detail\">\n                { collectionDescription() }\n              </p>\n            </>\n          )}\n        </div>\n        <div className=\"collectionListWrapper\">\n          <ul className=\"tabList\">\n            {itemBookList.map((tab, i) => {\n              return (\n                <li\n                  className={`${\n                    selectedCollectionTab === tab.title ? \"selected\" : \"\"\n                  }`}\n                  onClick={() => {\n                    setSelectedKeywordIdx(0);\n                    handleCollectionTab(tab.title);\n                  }}\n                  key={tab + i}\n                >\n                  {tab.title}\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"itemListWrapper\">\n            <ul className=\"itemList\">\n              {collectionList.map((list, i) => {\n              return (\n                <li\n                  className={\n                    list.dreamProjectId > projectId // collection의 projectId가 학습중인 projectId 보다 크면 lock\n                    ? \"lock\"\n                    : collectionStatus({itemIndex : i, listProjectId : list.dreamProjectId})\n                  }\n                  onClick={() => {\n                    playButtonEffect(list.dreamProjectId);\n                    setSelectedKeywordIdx(i);\n                  }}\n                  key={`collectionList_${i}`}\n                >\n                  {list.itemName}\n                </li>\n              );\n\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(PythonCollection);\n"]},"metadata":{},"sourceType":"module"}