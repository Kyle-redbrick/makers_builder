{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar ACTION = {\n  SUBSCRIBE_SET_EMAILS: \"setSubscribeEmails\",\n  SUBSCRIBE_ADD_EMAIL: \"addSubscribeEmail\",\n  SUBSCRIBE_DELETE_EMAIL: \"deleteSubscribeEmail\"\n};\nexport var setEmails = function setEmails(emails) {\n  return {\n    type: ACTION.SUBSCRIBE_SET_EMAILS,\n    payload: {\n      emails: emails\n    }\n  };\n};\nexport var addEmail = function addEmail(email) {\n  return {\n    type: ACTION.SUBSCRIBE_ADD_EMAIL,\n    payload: {\n      email: email\n    }\n  };\n};\nexport var deleteEmail = function deleteEmail(email) {\n  return {\n    type: ACTION.SUBSCRIBE_DELETE_EMAIL,\n    payload: {\n      email: email\n    }\n  };\n};\nvar initialState = {\n  emails: []\n};\n\nvar subscribe = function subscribe() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case ACTION.SUBSCRIBE_SET_EMAILS:\n      return _objectSpread({}, state, {\n        emails: payload.emails\n      });\n\n    case ACTION.SUBSCRIBE_ADD_EMAIL:\n      if (state.emails.includes(payload.email)) {\n        return state;\n      } else {\n        return _objectSpread({}, state, {\n          emails: [].concat(state.emails, payload.email)\n        });\n      }\n\n    case ACTION.SUBSCRIBE_DELETE_EMAIL:\n      return _objectSpread({}, state, {\n        emails: state.emails.filter(function (email) {\n          return email !== payload.email;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default subscribe;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Store/Reducer/Subscribe.js"],"names":["ACTION","SUBSCRIBE_SET_EMAILS","SUBSCRIBE_ADD_EMAIL","SUBSCRIBE_DELETE_EMAIL","setEmails","emails","type","payload","addEmail","email","deleteEmail","initialState","subscribe","state","action","includes","concat","filter"],"mappings":";AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,oBAAoB,EAAE,oBADT;AAEbC,EAAAA,mBAAmB,EAAE,mBAFR;AAGbC,EAAAA,sBAAsB,EAAE;AAHX,CAAf;AAMA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM;AAAA,SAAK;AAClCC,IAAAA,IAAI,EAAEN,MAAM,CAACC,oBADqB;AAElCM,IAAAA,OAAO,EAAE;AAAEF,MAAAA,MAAM,EAANA;AAAF;AAFyB,GAAL;AAAA,CAAxB;AAKP,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AAChCH,IAAAA,IAAI,EAAEN,MAAM,CAACE,mBADmB;AAEhCK,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAALA;AAAF;AAFuB,GAAL;AAAA,CAAtB;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAD,KAAK;AAAA,SAAK;AACnCH,IAAAA,IAAI,EAAEN,MAAM,CAACG,sBADsB;AAEnCI,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAALA;AAAF;AAF0B,GAAL;AAAA,CAAzB;AAKP,IAAME,YAAY,GAAG;AACnBN,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,IAAMO,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;AAAA,MAC1CR,IAD0C,GACxBQ,MADwB,CAC1CR,IAD0C;AAAA,MACpCC,OADoC,GACxBO,MADwB,CACpCP,OADoC;;AAElD,UAAQD,IAAR;AACE,SAAKN,MAAM,CAACC,oBAAZ;AACE,+BAAYY,KAAZ;AAAmBR,QAAAA,MAAM,EAAEE,OAAO,CAACF;AAAnC;;AACF,SAAKL,MAAM,CAACE,mBAAZ;AACE,UAAGW,KAAK,CAACR,MAAN,CAAaU,QAAb,CAAsBR,OAAO,CAACE,KAA9B,CAAH,EAAyC;AACvC,eAAOI,KAAP;AACD,OAFD,MAEO;AACL,iCAAYA,KAAZ;AAAmBR,UAAAA,MAAM,EAAE,GAAGW,MAAH,CAAUH,KAAK,CAACR,MAAhB,EAAwBE,OAAO,CAACE,KAAhC;AAA3B;AACD;;AACH,SAAKT,MAAM,CAACG,sBAAZ;AACE,+BACKU,KADL;AAEER,QAAAA,MAAM,EAAEQ,KAAK,CAACR,MAAN,CAAaY,MAAb,CAAoB,UAAAR,KAAK;AAAA,iBAAIA,KAAK,KAAKF,OAAO,CAACE,KAAtB;AAAA,SAAzB;AAFV;;AAIF;AACE,aAAOI,KAAP;AAfJ;AAiBD,CAnBD;;AAqBA,eAAeD,SAAf","sourcesContent":["const ACTION = {\n  SUBSCRIBE_SET_EMAILS: \"setSubscribeEmails\",\n  SUBSCRIBE_ADD_EMAIL: \"addSubscribeEmail\",\n  SUBSCRIBE_DELETE_EMAIL: \"deleteSubscribeEmail\"\n}\n\nexport const setEmails = emails => ({\n  type: ACTION.SUBSCRIBE_SET_EMAILS,\n  payload: { emails }\n});\n\nexport const addEmail = email => ({\n  type: ACTION.SUBSCRIBE_ADD_EMAIL,\n  payload: { email }\n});\n\nexport const deleteEmail = email => ({\n  type: ACTION.SUBSCRIBE_DELETE_EMAIL,\n  payload: { email }\n});\n\nconst initialState = {\n  emails: []\n};\n\nconst subscribe = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ACTION.SUBSCRIBE_SET_EMAILS:\n      return { ...state, emails: payload.emails };\n    case ACTION.SUBSCRIBE_ADD_EMAIL:\n      if(state.emails.includes(payload.email)) {\n        return state;\n      } else {\n        return { ...state, emails: [].concat(state.emails, payload.email) };\n      }\n    case ACTION.SUBSCRIBE_DELETE_EMAIL:\n      return {\n        ...state,\n        emails: state.emails.filter(email => email !== payload.email)\n      };\n    default:\n      return state;\n  }\n};\n\nexport default subscribe;"]},"metadata":{},"sourceType":"module"}