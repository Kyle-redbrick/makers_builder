{"ast":null,"code":"import _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/ResetPassword/Container.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport View from \"./View\";\nimport Validate from \"../../Common/Util/Validate\";\nimport PopUp, { showPopUp } from \"../../Common/Component/PopUp\";\nimport { updatePassword } from \"../../Common/Util/HTTPRequest\";\nimport sha256 from \"../../Common/Util/SHA256\";\nimport FindPw from \"../../Common/Component/FindPw\";\nexport var Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onChangeField = function (id, value) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, id, value), _defineProperty(_this$setState, \"showWarning\", false), _this$setState), function () {\n        if (_this.equalCheckTimeout) {\n          clearTimeout(_this.equalCheckTimeout);\n        }\n\n        _this.equalCheckTimeout = setTimeout(_this.setState({\n          showWarning: true\n        }), 500);\n      });\n    };\n\n    _this.onClickChange = function () {\n      if (!_this.allValid) return;\n      var params = {\n        verifiedToken: _this.verifiyToken,\n        password: sha256(_this.state.password)\n      };\n      updatePassword(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json.success) {\n          showPopUp(React.createElement(PopUp.OneButton, {\n            title: _this.props.intl.formatMessage({\n              id: \"ID_CHANGE_PASSWORD_SUCCESS\"\n            }),\n            buttonName: _this.props.intl.formatMessage({\n              id: \"ID_SIGNUP_SIGNED_CONFIRM\"\n            }),\n            buttonAction: function buttonAction() {\n              _this.props.history.replace(\"/\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }), {\n            darkmode: true\n          });\n        } else {\n          _this.setState({\n            failed: true\n          });\n        }\n      });\n    };\n\n    _this.onClickFind = function () {\n      showPopUp(React.createElement(FindPw, {\n        history: _this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), {\n        darkmode: true\n      });\n    };\n\n    _this.state = {\n      password: \"\",\n      passwordRe: \"\",\n      showWarning: false,\n      failed: false\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.verifiyToken) {\n        this.props.history.replace(\"/\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, Object.assign({}, this.state, {\n        allValid: this.allValid,\n        isPasswordLengthValid: this.isPasswordLengthValid,\n        isPasswordCombValid: this.isPasswordCombValid,\n        passwordReWarning: this.passwordReWarning,\n        onChangeField: this.onChangeField,\n        onClickChange: this.onClickChange,\n        onClickFind: this.onClickFind,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"isPasswordLengthValid\",\n    get: function get() {\n      return Validate.passwordLength(this.state.password);\n    }\n  }, {\n    key: \"isPasswordCombValid\",\n    get: function get() {\n      return Validate.passwordComb(this.state.password);\n    }\n  }, {\n    key: \"allFilled\",\n    get: function get() {\n      return this.state.password.length > 0 && this.state.passwordRe.length > 0;\n    }\n  }, {\n    key: \"allValid\",\n    get: function get() {\n      return this.allFilled && this.isPasswordLengthValid && this.isPasswordCombValid && !this.passwordReWarning;\n    }\n  }, {\n    key: \"passwordReWarning\",\n    get: function get() {\n      var warningId = this.state.passwordRe ? Validate.passwordRe(this.state.password, this.state.passwordRe).id : undefined;\n      return warningId ? this.props.intl.formatMessage({\n        id: warningId\n      }) : undefined;\n    }\n  }, {\n    key: \"verifiyToken\",\n    get: function get() {\n      var search = this.props.location.search;\n      var param = new URLSearchParams(search);\n      return param.get(\"verifyToken\");\n    }\n  }]);\n\n  return Container;\n}(Component);\nexport default withRouter(injectIntl(Container));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/ResetPassword/Container.js"],"names":["React","Component","withRouter","injectIntl","View","Validate","PopUp","showPopUp","updatePassword","sha256","FindPw","Container","props","onChangeField","id","value","setState","equalCheckTimeout","clearTimeout","setTimeout","showWarning","onClickChange","allValid","params","verifiedToken","verifiyToken","password","state","then","res","json","success","intl","formatMessage","history","replace","darkmode","failed","onClickFind","passwordRe","isPasswordLengthValid","isPasswordCombValid","passwordReWarning","passwordLength","passwordComb","length","allFilled","warningId","undefined","search","location","param","URLSearchParams","get"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport View from \"./View\";\nimport Validate from \"../../Common/Util/Validate\";\nimport PopUp, { showPopUp } from \"../../Common/Component/PopUp\";\nimport { updatePassword } from \"../../Common/Util/HTTPRequest\";\nimport sha256 from \"../../Common/Util/SHA256\";\nimport FindPw from \"../../Common/Component/FindPw\";\n\nexport class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"\",\n      passwordRe: \"\",\n      showWarning: false,\n      failed: false\n    };\n  }\n\n  get isPasswordLengthValid() {\n    return Validate.passwordLength(this.state.password);\n  }\n  get isPasswordCombValid() {\n    return Validate.passwordComb(this.state.password);\n  }\n  get allFilled() {\n    return this.state.password.length > 0 && this.state.passwordRe.length > 0;\n  }\n  get allValid() {\n    return this.allFilled\n      && this.isPasswordLengthValid && this.isPasswordCombValid\n      && !this.passwordReWarning;\n  }\n  get passwordReWarning() {\n    const warningId = this.state.passwordRe \n      ? Validate.passwordRe(this.state.password, this.state.passwordRe).id \n      : undefined;\n    return warningId ? this.props.intl.formatMessage({ id: warningId }) : undefined;\n  }\n  get verifiyToken() {\n    const search = this.props.location.search;\n    const param = new URLSearchParams(search);\n    return param.get(\"verifyToken\");\n  }\n\n  componentDidMount() {\n    if (!this.verifiyToken) {\n      this.props.history.replace(\"/\");\n    }\n  }\n\n  onChangeField = (id, value) => {\n    this.setState({\n      [id]: value,\n      showWarning: false\n    }, () => {\n      if (this.equalCheckTimeout) {\n        clearTimeout(this.equalCheckTimeout);\n      }\n      this.equalCheckTimeout = setTimeout(this.setState({ showWarning: true }), 500);\n    });\n  }\n\n  onClickChange = () => {\n    if (!this.allValid) return;\n\n    const params = {\n      verifiedToken: this.verifiyToken,\n      password: sha256(this.state.password)\n    };\n\n    updatePassword(params)\n      .then(res => res.json())\n      .then(json => {\n        if (json.success) {\n          showPopUp(\n            <PopUp.OneButton\n              title={this.props.intl.formatMessage({ id: \"ID_CHANGE_PASSWORD_SUCCESS\" })}\n              buttonName={this.props.intl.formatMessage({ id: \"ID_SIGNUP_SIGNED_CONFIRM\" })}\n              buttonAction={() => {\n                this.props.history.replace(\"/\");\n              }}\n            />,\n            { darkmode: true }\n          );\n        } else {\n          this.setState({ failed: true });\n        }\n      });\n  }\n\n  onClickFind = () => {\n    showPopUp(<FindPw history={this.props.history} />, { darkmode: true });\n  }\n\n  render() {\n    return (\n      <View\n        { ...this.state }\n        allValid={this.allValid}\n        isPasswordLengthValid={this.isPasswordLengthValid}\n        isPasswordCombValid={this.isPasswordCombValid}\n        passwordReWarning={this.passwordReWarning}\n        onChangeField={this.onChangeField}\n        onClickChange={this.onClickChange}\n        onClickFind={this.onClickFind}\n      />\n    )\n  }\n}\n\nexport default withRouter(injectIntl(Container));\n"]},"metadata":{},"sourceType":"module"}