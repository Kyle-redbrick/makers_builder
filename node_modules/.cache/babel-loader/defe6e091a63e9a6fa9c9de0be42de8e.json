{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Learn/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { showPopUp } from \"../../Common/Component/PopUp\";\nimport SignUp from \"../../Common/Component/SignUp\";\nimport View from \"./View\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onBrowserFocus = function () {\n      _this.getCategories();\n\n      _this.getMyCompletedCount();\n    };\n\n    _this.getCategories = function () {\n      request.getLearnCategories().then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this.setState({\n          categories: json.map(function (category) {\n            category.triedCount = 0;\n            category.completedCount = 0;\n            category.projects.forEach(function (project) {\n              category.triedCount += project.triedCount;\n              category.completedCount += project.completedCount;\n            });\n            return category;\n          })\n        });\n      }).catch(function (e) {\n        return console.error(e);\n      });\n    };\n\n    _this.getMyCompletedCount = function () {\n      var userinfo = _this.props.userinfo;\n\n      if (userinfo.id) {\n        request.getLearnUserProjects({\n          userId: userinfo.id\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          var myCompletedCount = 0;\n          json.forEach(function (userProject) {\n            if (userProject.completedAt) {\n              myCompletedCount++;\n            }\n          });\n\n          if (myCompletedCount > 0) {\n            _this.setState({\n              myCompletedCount: myCompletedCount\n            });\n          }\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      }\n    };\n\n    _this.getOnlineLearnings = function () {\n      request.getLearnProjects().then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        return _this.setState({\n          onlineLearnings: json\n        });\n      }).catch(function (e) {\n        return console.error(e);\n      });\n    };\n\n    _this.onClickCategory = function (index) {\n      if (index !== _this.state.selectedCategoryIndex) {\n        _this.setState({\n          selectedCategoryIndex: index\n        });\n      }\n    };\n\n    _this.onClickProject = function (projectId) {\n      if (projectId !== _this.state.selectedProjectId) {\n        _this.setState({\n          selectedProjectId: projectId\n        });\n      }\n    };\n\n    _this.onClickSignup = function () {\n      showPopUp(React.createElement(SignUp, {\n        history: _this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), {\n        darkmode: true,\n        mobileFullscreen: true\n      });\n    };\n\n    _this.onClickOnlineLearningTab = function (tab) {\n      if (_this.state.selectedOnlineLearningTab !== tab) {\n        _this.setState({\n          selectedOnlineLearningTab: tab\n        });\n      }\n    };\n\n    var categoryIndex = _this.props.match.params.categoryIndex;\n    _this.state = {\n      selectedCategoryIndex: categoryIndex ? Number(categoryIndex) : 0,\n      categories: [],\n      myCompletedCount: 0,\n      onlineLearnings: [],\n      selectedProjectId: undefined,\n      selectedOnlineLearningTab: \"all\"\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getCategories();\n      this.getMyCompletedCount();\n      this.getOnlineLearnings();\n      window.addEventListener(\"focus\", this.onBrowserFocus);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"focus\", this.onBrowserFocus);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var userinfo = this.props.userinfo;\n      var _this$state = this.state,\n          selectedCategoryIndex = _this$state.selectedCategoryIndex,\n          selectedProjectId = _this$state.selectedProjectId,\n          categories = _this$state.categories,\n          myCompletedCount = _this$state.myCompletedCount,\n          onlineLearnings = _this$state.onlineLearnings,\n          selectedOnlineLearningTab = _this$state.selectedOnlineLearningTab;\n      var onClickCategory = this.onClickCategory,\n          onClickProject = this.onClickProject,\n          onClickSignup = this.onClickSignup,\n          onClickOnlineLearningTab = this.onClickOnlineLearningTab;\n      return React.createElement(View, {\n        userinfo: userinfo,\n        categories: categories,\n        selectedCategoryIndex: selectedCategoryIndex,\n        selectedProjectId: selectedProjectId,\n        myCompletedCount: myCompletedCount,\n        onClickCategory: onClickCategory,\n        onClickProject: onClickProject,\n        onClickSignup: onClickSignup,\n        onClickOnlineLearningTab: onClickOnlineLearningTab,\n        selectedOnlineLearningTab: selectedOnlineLearningTab,\n        onlineLearnings: onlineLearnings.filter(function (onlineLearning) {\n          if (onlineLearning.id < 7) return null;\n\n          if (selectedOnlineLearningTab === \"all\") {\n            return true;\n          } else {\n            return onlineLearning.lang === selectedOnlineLearningTab;\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    userinfo: state.userinfo\n  };\n}, {})(withRouter(Container));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Learn/Container.js"],"names":["React","Component","connect","withRouter","request","showPopUp","SignUp","View","Container","props","onBrowserFocus","getCategories","getMyCompletedCount","getLearnCategories","then","res","json","setState","categories","map","category","triedCount","completedCount","projects","forEach","project","catch","e","console","error","userinfo","id","getLearnUserProjects","userId","myCompletedCount","userProject","completedAt","getOnlineLearnings","getLearnProjects","onlineLearnings","onClickCategory","index","state","selectedCategoryIndex","onClickProject","projectId","selectedProjectId","onClickSignup","history","darkmode","mobileFullscreen","onClickOnlineLearningTab","tab","selectedOnlineLearningTab","categoryIndex","match","params","Number","undefined","window","addEventListener","removeEventListener","filter","onlineLearning","lang"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { showPopUp } from \"../../Common/Component/PopUp\";\nimport SignUp from \"../../Common/Component/SignUp\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    const categoryIndex = this.props.match.params.categoryIndex;\n    this.state = {\n      selectedCategoryIndex: categoryIndex ? Number(categoryIndex) : 0,\n      categories: [],\n      myCompletedCount: 0,\n      onlineLearnings: [],\n      selectedProjectId: undefined,\n      selectedOnlineLearningTab: \"all\"\n    };\n  }\n\n  componentDidMount() {\n    this.getCategories();\n    this.getMyCompletedCount();\n    this.getOnlineLearnings();\n    window.addEventListener(\"focus\", this.onBrowserFocus);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"focus\", this.onBrowserFocus);\n  }\n\n  onBrowserFocus = () => {\n    this.getCategories();\n    this.getMyCompletedCount();\n  }\n\n  getCategories = () => {\n    request.getLearnCategories()\n      .then(res=> res.json())\n      .then(json=> {\n        this.setState({\n          categories: json.map(category=> {\n            category.triedCount = 0;\n            category.completedCount = 0;\n            category.projects.forEach(project=> {\n              category.triedCount += project.triedCount;\n              category.completedCount += project.completedCount;\n            })\n            return category;\n          })\n        })\n      })\n      .catch(e=>console.error(e));\n  }\n\n  getMyCompletedCount = () => {\n    const { userinfo } = this.props;\n    if(userinfo.id) {\n      request.getLearnUserProjects({ userId: userinfo.id })\n        .then(res=> res.json())\n        .then(json=> {\n          let myCompletedCount = 0;\n          json.forEach(userProject=> {\n            if(userProject.completedAt) {\n              myCompletedCount++;\n            }\n          });\n          if(myCompletedCount > 0) {\n            this.setState({ myCompletedCount });\n          }\n        })\n        .catch(e=>console.error(e));\n    }\n  }\n\n  getOnlineLearnings = () => {\n    request.getLearnProjects()\n      .then(res=> res.json())\n      .then(json=> this.setState({ onlineLearnings: json}))\n      .catch(e=>console.error(e));\n  }\n\n  onClickCategory = index => {\n    if(index !== this.state.selectedCategoryIndex) {\n      this.setState({selectedCategoryIndex: index});\n    }\n  }\n  \n  onClickProject = projectId => {\n    if(projectId !== this.state.selectedProjectId){\n      this.setState({ selectedProjectId: projectId });\n    }\n  }\n\n  onClickSignup = () => {\n    showPopUp(<SignUp history={this.props.history} />, {\n      darkmode: true,\n      mobileFullscreen: true\n    });\n  }\n\n  onClickOnlineLearningTab = tab => {\n    if(this.state.selectedOnlineLearningTab !== tab) {\n      this.setState({ selectedOnlineLearningTab: tab });\n    }\n  }\n\n  render() {\n    const { userinfo } = this.props;\n    const {\n      selectedCategoryIndex,\n      selectedProjectId,\n      categories,\n      myCompletedCount,\n      onlineLearnings,\n      selectedOnlineLearningTab\n    } = this.state;\n    const {\n      onClickCategory,\n      onClickProject,\n      onClickSignup,\n      onClickOnlineLearningTab\n    } = this;\n    return (\n      <View\n        userinfo={userinfo}\n        categories={categories}\n        selectedCategoryIndex={selectedCategoryIndex}\n        selectedProjectId={selectedProjectId}\n        myCompletedCount={myCompletedCount}\n        onClickCategory={onClickCategory}\n        onClickProject={onClickProject}\n        onClickSignup={onClickSignup}\n        onClickOnlineLearningTab={onClickOnlineLearningTab}\n        selectedOnlineLearningTab={selectedOnlineLearningTab}\n        onlineLearnings={onlineLearnings.filter(onlineLearning=>{\n          if(onlineLearning.id < 7) return null;\n          if(selectedOnlineLearningTab === \"all\") {\n            return true;\n          }else {\n            return onlineLearning.lang === selectedOnlineLearningTab\n          }\n        })}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({ userinfo: state.userinfo }),\n  {}\n)(withRouter(Container));\n"]},"metadata":{},"sourceType":"module"}