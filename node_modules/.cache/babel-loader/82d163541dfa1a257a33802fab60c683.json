{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Home/Component/NewProjectPopup/View.js\";\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport \"./index.scss\";\n\nfunction View(props) {\n  var editorFormat = props.editorFormat,\n      onClickEditorFormat = props.onClickEditorFormat,\n      projectName = props.projectName,\n      onChangeProjectName = props.onChangeProjectName,\n      onClickMake2DProject = props.onClickMake2DProject,\n      gameDimension = props.gameDimension,\n      intl = props.intl;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"builder--home__newProjectPopup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"builder--popup--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: \"ID_BUILDER_NEW_PROJECT_TITLE\"\n  })), gameDimension === \"2D\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newGamePopup__row row--format\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newGamePopup__row--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, intl.formatMessage({\n    id: \"ID_BUILDER_NEW_PROJECT_CHOOSE_LANG\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"format__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button__\".concat(editorFormat === \"text\" && \"active\"),\n    onClick: function onClick() {\n      return onClickEditorFormat(\"text\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: \"ID_BUILDER_NEW_PROJECT_TEXTCODING\"\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button__\".concat(editorFormat === \"block\" && \"active\"),\n    onClick: function onClick() {\n      return onClickEditorFormat(\"block\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, intl.formatMessage({\n    id: \"ID_BUILDER_NEW_PROJECT_BLOCKCODING\"\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newGamePopup__row row--name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newGamePopup__row--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, intl.formatMessage({\n    id: \"ID_BUILDER_NEW_PROJECT_PROJECT_NAME\"\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: onChangeProjectName,\n    value: projectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newGamePopup__row row--submit\",\n    onClick: onClickMake2DProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, intl.formatMessage({\n    id: \"ID_BUILDER_NEW_PROJECT_START\"\n  }))));\n}\n\nexport default injectIntl(View);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Home/Component/NewProjectPopup/View.js"],"names":["React","injectIntl","View","props","editorFormat","onClickEditorFormat","projectName","onChangeProjectName","onClickMake2DProject","gameDimension","intl","formatMessage","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAO,cAAP;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,MAEjBC,YAFiB,GASfD,KATe,CAEjBC,YAFiB;AAAA,MAGjBC,mBAHiB,GASfF,KATe,CAGjBE,mBAHiB;AAAA,MAIjBC,WAJiB,GASfH,KATe,CAIjBG,WAJiB;AAAA,MAKjBC,mBALiB,GASfJ,KATe,CAKjBI,mBALiB;AAAA,MAMjBC,oBANiB,GASfL,KATe,CAMjBK,oBANiB;AAAA,MAOjBC,aAPiB,GASfN,KATe,CAOjBM,aAPiB;AAAA,MAQjBC,IARiB,GASfP,KATe,CAQjBO,IARiB;AAUnB,sBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCA,IAAI,CAACC,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAAxC,CADF,EAEGH,aAAa,KAAK,IAAlB,iBACC;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CC,IAAI,CAACC,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAA3C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,oBAAaR,YAAY,KAAK,MAAjB,IAA2B,QAAxC,CADX;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,mBAAmB,CAAC,MAAD,CAAzB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGK,IAAI,CAACC,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAJH,CADF,eAQE;AACE,IAAA,SAAS,oBAAaR,YAAY,KAAK,OAAjB,IAA4B,QAAzC,CADX;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,mBAAmB,CAAC,OAAD,CAAzB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGK,IAAI,CAACC,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAJH,CARF,CAFF,CAHJ,eAuBE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CF,IAAI,CAACC,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAA3C,CADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEL,mBAA7B;AAAkD,IAAA,KAAK,EAAED,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAvBF,eA2BE;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,OAAO,EAAEE,oBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,IAAI,CAACC,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAAJ,CAJF,CA3BF,CADF;AAoCD;;AAED,eAAeX,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport \"./index.scss\";\nfunction View(props) {\n  const {\n    editorFormat,\n    onClickEditorFormat,\n    projectName,\n    onChangeProjectName,\n    onClickMake2DProject,\n    gameDimension,\n    intl\n  } = props;\n  return (\n    <div className=\"builder--home__newProjectPopup\">\n      <div className=\"builder--popup--title\">{intl.formatMessage({ id: \"ID_BUILDER_NEW_PROJECT_TITLE\" })}</div>\n      {gameDimension === \"2D\" && (\n        <div className=\"newGamePopup__row row--format\">\n          <div className=\"newGamePopup__row--title\">{intl.formatMessage({ id: \"ID_BUILDER_NEW_PROJECT_CHOOSE_LANG\" })}</div>\n          <div className=\"format__buttons\">\n            <button\n              className={`button__${editorFormat === \"text\" && \"active\"}`}\n              onClick={() => onClickEditorFormat(\"text\")}\n            >\n              {intl.formatMessage({ id: \"ID_BUILDER_NEW_PROJECT_TEXTCODING\" })}\n            </button>\n\n            <button\n              className={`button__${editorFormat === \"block\" && \"active\"}`}\n              onClick={() => onClickEditorFormat(\"block\")}\n            >\n              {intl.formatMessage({ id: \"ID_BUILDER_NEW_PROJECT_BLOCKCODING\" })}\n            </button>\n          </div>\n        </div>\n      )}\n\n      <div className=\"newGamePopup__row row--name\">\n        <div className=\"newGamePopup__row--title\">{intl.formatMessage({ id: \"ID_BUILDER_NEW_PROJECT_PROJECT_NAME\" })}</div>\n        <input type=\"text\" onChange={onChangeProjectName} value={projectName} />\n      </div>\n      <div\n        className=\"newGamePopup__row row--submit\"\n        onClick={onClickMake2DProject}\n      >\n        <p>{intl.formatMessage({ id: \"ID_BUILDER_NEW_PROJECT_START\" })}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default injectIntl(View);"]},"metadata":{},"sourceType":"module"}