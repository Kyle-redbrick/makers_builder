{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Component/Live/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport RndWrapper from \"../../utils/RndWrapper\";\nimport stringify from \"json-stringify-safe\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport { URL, isConnectProd } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as webrtcActions from \"../../Store/Reducer/webrtc\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as chatActions from \"../../Store/Reducer/chat\";\nimport * as sceneActions from \"../../Store/Reducer/scene\";\nimport Stomp from \"stompjs\";\nimport View from \"./View\";\nimport { showAlert // showTwoBtnAlert,\n, showTwoBtnAlertWithTextarea // showDeviceTest\n} from \"../../../../Common/Util/AlertManager\";\nimport DrawingBoard from \"./Component/DrawingBoard\";\nimport LogContainer from \"./Component/LogContainer\";\nimport LectureVideoContainer from \"./Component/LectureVideoContainer\";\nimport LectureSlideContainer from \"./Component/LectureSlideContainer\";\nimport FreeTrialSurveyPopup from \"./Component/FreeTrialSurveyPopup\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\"; // import { minifyJSON, restoreJSON } from \"../../utils/oobcMinify\";\n\nvar Janus = window.Janus;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n    _this.MEDIA_CAMERA = \"MEDIA_CAMERA\";\n    _this.MEDIA_SCREEN = \"MEDIA_SCREEN\";\n    _this.DATA_TYPE_DEVICE_STATUS = \"DATA_TYPE_DEVICE_STATUS\";\n    _this.DATA_TYPE_PROJECT = \"DATA_TYPE_PROJECT\";\n    _this.DATA_TYPE_CODE = \"DATA_TYPE_CODE\";\n    _this.DATA_TYPE_CANVAS = \"DATA_TYPE_CANVAS\";\n    _this.DATA_TYPE_CANVAS_TOGGLE = \"DATA_TYPE_CANVAS_TOGGLE\";\n    _this.DATA_TYPE_EDITOR_RANGE = \"DATA_TYPE_EDITOR_RANGE\";\n    _this.DATA_TYPE_HIGHLIGHT = \"DATA_TYPE_HIGHLIGHT\";\n    _this.DATA_TYPE_LOG = \"DATA_TYPE_LOG\";\n    _this.DATA_TYPE_EXIT = \"DATA_TYPE_EXIT\";\n    _this.DATA_TYPE_LECTURE_VIDEO = \"DATA_TYPE_LECTURE_VIDEO\";\n    _this.DATA_TYPE_LECTURE_SLIDE = \"DATA_TYPE_LECTURE_SLIDE\";\n    _this.DATA_TYPE_RECORDING = \"DATA_TYPE_RECORDING\";\n    _this.DATA_TYPE_JANUS_VIDEO = \"DATA_TYPE_JANUS_VIDEO\";\n    _this.WEBHOOK_TYPE_CONNECTED = \"WEBHOOK_TYPE_CONNECTED\";\n    _this.WEBHOOK_TYPE_CONNECTED_ALL = \"WEBHOOK_TYPE_CONNECTED_ALL\";\n    _this.WEBHOOK_TYPE_DISCONNECTED = \"WEBHOOK_TYPE_DISCONNECTED\";\n    _this.poorNetworkMessageMS = 5000;\n    _this.constraints = {\n      video: true,\n      audio: true\n    };\n\n    _this.handleMediaError = function (err, type) {\n      console.error(\"MEDIA TEST MEDIA TEST\", err.name);\n\n      if (err.name === \"NotFoundError\" || err.name === \"DevicesNotFoundError\") {\n        // 장비 자체가 없을때에\n        showPopUp(React.createElement(Popup.OneButton, {\n          intl: _this.props.intl,\n          titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\",\n          subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG_NO_DEVICE\",\n          buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }));\n      } else if (err.name === \"NotReadableError\" || err.name === \"TrackStartError\") {\n        // 다른 프로그램에서 이미 camera, mic를 사용중일때\n        showPopUp(React.createElement(Popup.OneButton, {\n          intl: _this.props.intl,\n          titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\",\n          subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG_NO_USABLE_DEVICE\",\n          buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }));\n      } else if (err.name === \"OverconstrainedError\" || err.name === \"ConstraintNotSatisfiedError\") {\n        // chrome의 특정 버전에서 getUserMedia() 가 오류 발생\n        showPopUp(React.createElement(Popup.OneButton, {\n          intl: _this.props.intl,\n          titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\",\n          subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG_NO_USABLE_CHROME\",\n          buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }));\n      } else if (err.name === \"NotAllowedError\" || err.name === \"PermissionDeniedError\") {\n        // 미디어 장치의 권한이 없을때 1. by System , 2.by browser\n        if (err.toString().includes(\"system\")) {\n          showPopUp(React.createElement(Popup.OneButton, {\n            intl: _this.props.intl,\n            titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE\",\n            subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG_NO_USABLE_BY_SYSTEM\",\n            buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 386\n            },\n            __self: this\n          }));\n        } else {\n          showPopUp(React.createElement(Popup.OneButton, {\n            intl: _this.props.intl,\n            titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE\",\n            subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG\",\n            buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395\n            },\n            __self: this\n          }));\n        }\n      } else if (err.name === \"TypeError\" || err.name === \"TypeError\") {\n        // 미디어 장치가 없을때\n        showPopUp(React.createElement(Popup.OneButton, {\n          intl: _this.props.intl,\n          titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\",\n          subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG_NO_DEVICE\",\n          buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }));\n      } else {//other errors\n      }\n\n      _this.sendWizLabReport({\n        type: \"media device(\".concat(type, \")\"),\n        errorName: err.name,\n        msg: err.toString()\n      });\n    };\n\n    _this.inputEventListener = function (evt) {\n      _this.sync = true;\n\n      if (_this.syncTimeout) {\n        clearTimeout(_this.syncTimeout);\n      }\n\n      _this.syncTimeout = setTimeout(function () {\n        _this.sync = false;\n      }, 2000);\n    };\n\n    _this.setup = function () {\n      _this.mqConnect(function () {\n        _this.setState({\n          isMqConnected: true\n        });\n\n        Janus.init({\n          debug: \"all\",\n          callback: _this.setupJanus\n        });\n      }, function (err) {\n        _this.sendWizLabReport(err);\n\n        console.error(err);\n\n        _this.setState({\n          isMqConnected: false\n        });\n      });\n    };\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      if (_this.sync) {\n        var next = nextProps.webrtcProject;\n        var current = _this.props.webrtcProject;\n\n        if (stringify(next) !== stringify(current)) {\n          // const nextState = next.state;\n          // const currentState = current.state;\n          if (_this.props.editorMode === \"block\") {\n            _this.sendData(_this.DATA_TYPE_PROJECT, next);\n          } else {\n            var isCodeChanged = true; // 코드만 변경되었는지 체크하는 변수\n\n            if (!next.state || !current.state || !next.state.interaction || current.state.interaction) {\n              isCodeChanged = false;\n            } else if (next.state.interaction.selected.scene !== current.state.interaction.selected.scene) {\n              isCodeChanged = false;\n            } else if (stringify(next.state.interaction.selected.objects) !== stringify(current.state.interaction.selected.objects)) {\n              isCodeChanged = false;\n            } else {\n              var selectedSceneId = next.state.interaction.selected.scene;\n              var selectedSpriteId = next.state.interaction.selected.objects[selectedSceneId].name;\n              var nextCode = next.state.scene.scenes[selectedSceneId].sprites[selectedSpriteId].code;\n              var currentCode = current.state.scene.scenes[selectedSceneId].sprites[selectedSpriteId].code;\n\n              if (nextCode !== currentCode) {\n                _this.sendData(_this.DATA_TYPE_CODE, {\n                  code: nextCode\n                });\n              } else {\n                isCodeChanged = false;\n              }\n            }\n\n            if (!isCodeChanged) {\n              _this.sendData(_this.DATA_TYPE_PROJECT, next);\n            }\n          }\n        }\n      }\n\n      if (_this.props.isTutor) {\n        if (nextProps.highlightBtnId !== _this.props.highlightBtnId) {\n          _this.sendData(_this.DATA_TYPE_HIGHLIGHT, nextProps.highlightBtnId); // set tutor state \n\n\n          if (_this.timer) {\n            clearTimeout(_this.timer);\n          }\n\n          _this.props.setBtnHighlight(nextProps.highlightBtnId);\n\n          _this.timer = setTimeout(function () {\n            _this.props.setBtnHighlight();\n          }, 800);\n        }\n\n        if (nextProps.webrtcDrawing.length !== _this.props.webrtcDrawing.length) {\n          _this.sendData(_this.DATA_TYPE_CANVAS, nextProps.webrtcDrawing[nextProps.webrtcDrawing.length - 1]);\n        }\n\n        if (nextProps.isDrawingBoardOn !== _this.props.isDrawingBoardOn) {\n          _this.sendData(_this.DATA_TYPE_CANVAS_TOGGLE, nextProps.isDrawingBoardOn);\n        }\n      } else {\n        if (stringify(nextProps.log) !== stringify(_this.props.log)) {\n          _this.sendData(_this.DATA_TYPE_LOG, nextProps.log);\n        }\n      }\n\n      var nextRange = stringify(nextProps.editorRange);\n      var currentRange = stringify(_this.props.editorRange);\n\n      if (nextRange !== currentRange) {\n        if (_this.sync) {\n          _this.sendData(_this.DATA_TYPE_EDITOR_RANGE, nextProps.editorRange);\n        }\n      }\n\n      return true;\n    };\n\n    _this.mqConnect = function (mqReadyCallback, mqErrorCallback) {\n      _this.mq.client = Stomp.client(URL.MQ);\n      _this.mq.client.debug = null;\n      _this.mq.client.reconnect_delay = 5000;\n      var client = _this.mq.client;\n      var headers = {\n        login: \"wizschool\",\n        passcode: \"Wizschool2018!!\",\n        host: \"/\"\n      };\n      headers[\"client-id\"] = _this.props.email + _this.props.roomId;\n      client.connect(headers, function (frame) {\n        var _this$mq = _this.mq,\n            client = _this$mq.client,\n            topicName = _this$mq.topicName;\n        _this.mq.subscription = client.subscribe(topicName, function (msg) {\n          var recvData = msg.body;\n          var senderId = msg.headers.senderId;\n\n          if (senderId !== _this.props.email) {\n            _this.onReceiveData(JSON.parse(recvData));\n          } else {// console.log(\"This is data that sending of me\");\n          }\n        });\n        mqReadyCallback();\n      }, function (err) {\n        mqErrorCallback(err);\n      });\n    };\n\n    _this.mqDisconnect = function () {\n      var _this$mq2 = _this.mq,\n          client = _this$mq2.client,\n          subscription = _this$mq2.subscription;\n\n      if (client) {\n        if (subscription) {\n          subscription.unsubscribe();\n        }\n\n        client.disconnect(function () {\n          _this.setState({\n            isMqConnected: false\n          });\n        });\n      }\n    };\n\n    _this.setupJanus = function () {\n      if (!Janus.isWebrtcSupported()) {\n        showPopUp(React.createElement(Popup.OneButton, {\n          intl: _this.props.intl,\n          titleId: \"ID_WEBRTC_UNSUPPORT\",\n          buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627\n          },\n          __self: this\n        }));\n        return;\n      }\n\n      _this.janus = new Janus({\n        server: _this.serverUrl,\n        iceTransportPolicy: \"relay\",\n        iceServers: URL.ICE_SERVERS,\n        success: _this.attachJanus,\n        error: function error(_error) {\n          Janus.error(_error);\n\n          _this.sendWizLabReport(_error);\n        },\n        destroyed: function destroyed() {\n          Janus.log(\"destroyed\");\n        }\n      });\n    };\n\n    _this.attachJanus = function () {\n      _this.janus.attach({\n        plugin: \"janus.plugin.videoroom\",\n        opaqueId: _this.opaqueId,\n        success: function success(pluginHandle) {\n          _this.videocall = pluginHandle;\n          _this.handleId = _this.videocall.getId();\n          Janus.log(\"Plugin attached! (\".concat(_this.videocall.getPlugin(), \", id=\").concat(_this.videocall.getId(), \")\"));\n          Janus.log(\"  -- This is a publisher/manager\");\n\n          _this.checkRoom(); // this.registerUsername();\n\n        },\n        error: function error(_error2) {\n          Janus.error(\"  -- Error attaching plugin...\", _error2);\n\n          _this.sendWizLabReport(_error2);\n        },\n        consentDialog: function consentDialog(on) {\n          Janus.debug(\"Consent dialog should be \".concat(on ? \"on\" : \"off\", \" now\"));\n        },\n        mediaState: function mediaState(medium, on) {\n          Janus.log(\"Janus \".concat(on ? \"started\" : \"stopped\", \" receiving our \").concat(medium));\n        },\n        webrtcState: function webrtcState(on) {\n          Janus.log(\"Janus says our WebRTC PeerConnection is \".concat(on ? \"up\" : \"down\", \" now\"));\n\n          if (on) {\n            _this.sendWebhook(_this.WEBHOOK_TYPE_CONNECTED);\n          }\n        },\n        onmessage: function onmessage(msg, jsep) {\n          Janus.debug(\" ::: Got a message (publisher) :::\");\n          Janus.debug(msg);\n          var event = msg.videoroom;\n          Janus.debug(\"Event: \" + event);\n\n          if (event) {\n            if (event === \"joined\") {\n              // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n              _this.myid = msg.id;\n              _this.mypvtid = msg.private_id;\n              Janus.log(\"Successfully joined room \".concat(msg.room, \" with ID \").concat(_this.myid));\n\n              _this.publishOwnFeed(); // Any new feed to attach to?\n\n\n              if (msg.publishers) {\n                var list = msg.publishers;\n                Janus.debug(\"Got a list of available publishers/feeds:\");\n                Janus.debug(list);\n                list.forEach(function (l) {\n                  var id = l.id;\n                  var display = l.display;\n                  var audio = l.audio_codec;\n                  var video = l.video_codec;\n                  Janus.debug(\"  >> [\".concat(id, \"] \").concat(display, \" audio: \").concat(audio, \", video: \").concat(video, \")\"));\n\n                  if (l.display !== _this.props.email) {\n                    _this.newRemoteFeed(id, display, audio, video);\n                  } else {\n                    _this.videocall.send({\n                      message: {\n                        request: \"kick\",\n                        room: _this.myroom,\n                        id: id\n                      },\n                      success: function success(data) {\n                        Janus.debug(data);\n                      }\n                    });\n                  }\n                });\n              }\n            } else if (event === \"destroyed\") {\n              // The room has been destroyed\n              Janus.warn(\"The room has been destroyed!\");\n            } else if (event === \"event\") {\n              // Any new feed to attach to?\n              if (msg.publishers) {\n                var _list = msg.publishers;\n                Janus.debug(\"Got a list of available publishers/feeds:\");\n                Janus.debug(_list);\n\n                _list.forEach(function (l) {\n                  var id = l.id;\n                  var display = l.display;\n                  var audio = l.audio_codec;\n                  var video = l.video_codec;\n                  Janus.debug(\"  >> [\".concat(id, \"] \").concat(display, \" audio: \").concat(audio, \", video: \").concat(video, \")\"));\n\n                  if (l.display !== _this.props.email) {\n                    _this.newRemoteFeed(id, display, audio, video);\n                  }\n                });\n              } else if (msg.leaving) {\n                // One of the publishers has gone away?\n                var leaving = msg.leaving;\n                Janus.log(\"Publisher left: \" + leaving);\n                _this.remoteFeed = null;\n\n                for (var i = 1; i < 6; i++) {\n                  if (_this.feeds[i] && _this.feeds[i].rfid === leaving) {\n                    _this.remoteFeed = _this.feeds[i];\n                    break;\n                  }\n                }\n\n                if (_this.remoteFeed) {\n                  Janus.debug(\"Feed \".concat(_this.remoteFeed.rfid, \" (\").concat(_this.remoteFeed.rfdisplay, \") has left the room, detaching\"));\n                  _this.feeds[_this.remoteFeed.rfindex] = null;\n\n                  _this.remoteFeed.detach();\n\n                  _this.setState({\n                    connected: false,\n                    startTime: undefined,\n                    log: undefined\n                  });\n\n                  _this.sendWebhook(_this.WEBHOOK_TYPE_DISCONNECTED);\n                }\n              } else if (msg.unpublished) {\n                // One of the publishers has unpublished?\n                var unpublished = msg[\"unpublished\"];\n                Janus.log(\"Publisher left: \".concat(unpublished));\n\n                if (unpublished === \"ok\") {\n                  // That's us\n                  _this.videocall.hangup();\n\n                  return;\n                }\n\n                _this.remoteFeed = null;\n\n                for (var _i = 1; _i < 6; _i++) {\n                  if (_this.feeds[_i] && _this.feeds[_i].rfid === unpublished) {\n                    _this.remoteFeed = _this.feeds[_i];\n                    break;\n                  }\n                }\n\n                if (_this.remoteFeed) {\n                  Janus.debug(\"Feed \".concat(_this.remoteFeed.rfid, \" (\").concat(_this.remoteFeed.rfdisplay, \") has left the room, detaching\"));\n                  _this.feeds[_this.remoteFeed.rfindex] = null;\n\n                  _this.remoteFeed.detach();\n\n                  _this.setState({\n                    connected: false,\n                    startTime: undefined,\n                    log: undefined\n                  });\n\n                  _this.sendWebhook(_this.WEBHOOK_TYPE_DISCONNECTED);\n                }\n              } else if (msg.error) {\n                if (msg.error_code === 426) {\n                  // This is a \"no such room\" error: give a more meaningful description\n                  // console.error(\n                  //   \"<p>Apparently room <code>\" +\n                  //     this.myroom +\n                  //     \"</code> (the one this demo uses as a test room) \" +\n                  //     \"does not exist...</p><p>Do you have an updated <code>janus.plugin.videoroom.jcfg</code> \" +\n                  //     \"configuration file? If not, make sure you copy the details of room <code>\" +\n                  //     this.myroom +\n                  //     \"</code> \" +\n                  //     \"from that sample in your current configuration file, then restart Janus and try again.\"\n                  // );\n                  Janus.error(\"No such room\");\n                } else {\n                  Janus.error(msg.error);\n\n                  _this.sendWizLabReport(msg.error);\n                }\n              }\n            }\n          }\n\n          if (jsep) {\n            Janus.debug(\"Handling SDP as well...\");\n            Janus.debug(jsep);\n\n            _this.videocall.handleRemoteJsep({\n              jsep: jsep\n            }); // Check if any of the media we wanted to publish has\n            // been rejected (e.g., wrong or unsupported codec)\n\n\n            var audio = msg.audio_codec;\n\n            if (_this.mystream && _this.mystream.getAudioTracks() && _this.mystream.getAudioTracks().length > 0 && !audio) {\n              // Audio has been rejected\n              Janus.warn(\"Our audio stream has been rejected, viewers won't hear us\");\n            }\n\n            var video = msg.video_codec;\n\n            if (_this.mystream && _this.mystream.getVideoTracks() && _this.mystream.getVideoTracks().length > 0 && !video) {\n              // Video has been rejected\n              Janus.warn(\"Our video stream has been rejected, viewers won't see us\");\n            }\n          }\n        },\n        onlocalstream: function onlocalstream(stream) {\n          Janus.debug(\" ::: Got a local stream :::\");\n          _this.mystream = stream;\n          Janus.debug(stream);\n          Janus.attachMediaStream(_this.localVideo, stream);\n        },\n        onremotestream: function onremotestream(stream) {// The publisher stream is sendonly, we don't expect anything here\n        },\n        oncleanup: function oncleanup() {\n          Janus.log(\" ::: Got a cleanup notification :::\");\n          _this.mystream = null;\n\n          _this.setState({\n            connected: false,\n            startTime: undefined,\n            log: undefined\n          });\n        }\n      });\n    };\n\n    _this.generateRoomId = function () {\n      var roomId = _this.props.roomId; // let newId = \"\";\n      // for (let i = 0; i < roomId.length; i++) {\n      //   newId += roomId.charAt(i).charCodeAt(0);\n      // }\n      // newId = parseInt(newId);\n      // // console.log(`GENERATED ROOM ID : ${newId}`);\n      // return newId;\n\n      return parseInt(roomId);\n    };\n\n    _this.checkRoom = function () {\n      // this.videocall.send({\n      //   message: { request: \"destroy\", room: this.myroom }\n      // });\n      // return;\n      Janus.debug(\"is room exist...?\");\n\n      _this.videocall.send({\n        message: {\n          request: \"exists\",\n          room: _this.myroom\n        },\n        success: function success(data) {\n          if (data.exists) {\n            _this.registerUsername();\n          } else {\n            Janus.debug(\"Room is creating...\");\n\n            _this.videocall.send({\n              message: {\n                request: \"create\",\n                bitrate: _this.maximumBitrate / 2,\n                publishers: 30,\n                bitrate_cap: true,\n                room: _this.myroom,\n                is_private: true\n              },\n              success: _this.registerUsername\n            });\n          }\n        }\n      });\n    };\n\n    _this.registerUsername = function () {\n      var email = _this.props.email;\n      var register = {\n        request: \"join\",\n        room: _this.myroom,\n        ptype: \"publisher\",\n        display: email\n      };\n\n      _this.videocall.send({\n        message: register\n      });\n    };\n\n    _this.unpublish = function () {\n      var message = {\n        request: \"unpublish\"\n      };\n\n      _this.videocall.send({\n        message: message\n      });\n    };\n\n    _this.publishOwnFeed = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          audioSend = _assertThisInitialize.audioSend,\n          videoSend = _assertThisInitialize.videoSend;\n\n      if (!audioSend && !videoSend) {\n        return;\n      } // Publish our stream\n\n\n      _this.videocall.createOffer({\n        // Add data:true here if you want to publish datachannels as well\n        media: {\n          // video: this.screen,\n          replaceVideo: true,\n          audioRecv: false,\n          videoRecv: false,\n          audioSend: audioSend,\n          videoSend: videoSend,\n          maxScreenShareWidth: _this.maxScreenShareWidth,\n          maxCameraWidth: _this.maxCameraWidth,\n          idealCameraWidth: _this.idealCameraWidth\n        },\n        // Publishers are sendonly\n        // If you want to test simulcasting (Chrome and Firefox only), then\n        // pass a ?simulcast=true when opening this demo page: it will turn\n        // the following 'simulcast' property to pass to janus.js to true\n        simulcast: false,\n        simulcast2: false,\n        success: function success(jsep) {\n          Janus.debug(\"Got publisher SDP!\");\n          Janus.debug(jsep);\n          var publish = {\n            request: \"configure\",\n            audio: _this.audioSend,\n            video: _this.videoSend\n          }; // You can force a specific codec to use when publishing by using the\n          // audiocodec and videocodec properties, for instance:\n          // \t\tpublish[\"audiocodec\"] = \"opus\"\n          // to force Opus as the audio codec to use, or:\n          // \t\tpublish[\"videocodec\"] = \"vp9\"\n          // to force VP9 as the videocodec to use. In both case, though, forcing\n          // a codec will only work if: (1) the codec is actually in the SDP (and\n          // so the browser supports it), and (2) the codec is in the list of\n          // allowed codecs in a room. With respect to the point (2) above,\n          // refer to the text in janus.plugin.videoroom.cfg for more details\n\n          _this.videocall.send({\n            message: publish,\n            jsep: jsep\n          });\n        },\n        error: function error(_error3) {\n          _this.sendWizLabReport(_error3);\n\n          Janus.error(\"WebRTC error:\", JSON.stringify(_error3));\n\n          if (_error3 === \"No capture device found\") {\n            showPopUp(React.createElement(Popup.OneButton, {\n              intl: _this.props.intl,\n              titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE\",\n              subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG\",\n              buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 985\n              },\n              __self: this\n            }));\n            return;\n          }\n\n          Janus.error(\"WebRTC error... \" + JSON.stringify(_error3));\n\n          if (_error3.message && _error3.message.includes(\"Permission\")) {\n            //mic&audio popup\n            showPopUp(React.createElement(Popup.OneButton, {\n              intl: _this.props.intl,\n              titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE\",\n              subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG\",\n              buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 998\n              },\n              __self: this\n            }));\n          }\n        }\n      });\n    };\n\n    _this.sendData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(type, data) {\n        var send, projectDataKey, maxSize, stateData, dataSize, totalCount, sentSize, i, size, string;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_this.videocall) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                // if (!this.state.connected) {\n                //   return;\n                // }\n                send = function send(data) {\n                  var _this$mq3 = _this.mq,\n                      client = _this$mq3.client,\n                      topicName = _this$mq3.topicName;\n                  var sendHeaders = {\n                    \"content-type\": \"application/json\",\n                    senderId: _this.props.email\n                  };\n                  client.send(topicName, sendHeaders, data);\n                }; // const send = data => {\n                //   this.videocall.data({\n                //     text: data,\n                //     error: reason => {\n                //       console.error(reason);\n                //     },\n                //     success: () => {\n                //       Janus.debug(\"Data Sent!\");\n                //     }\n                //   });\n                // };\n\n\n                if (!(type === _this.DATA_TYPE_PROJECT)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                if (!(Object.keys(data).length === 0)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 6:\n                projectDataKey = new Date().getTime();\n                _this.lastSentState = data;\n                maxSize = 10000; // let stateData =\n                //   this.props.editorMode === \"block\"\n                //     ? stringify(minifyJSON(data))\n                //     : stringify(data);\n\n                stateData = stringify(data);\n                dataSize = stateData.length;\n                totalCount = Math.ceil(dataSize / maxSize);\n                sentSize = 0;\n\n                for (i = 0; i < totalCount; ++i) {\n                  size = void 0;\n\n                  if (sentSize + maxSize > dataSize) {\n                    size = dataSize - sentSize;\n                  } else {\n                    size = maxSize;\n                  }\n\n                  string = stateData.substring(sentSize, sentSize + size);\n                  sentSize += string.length;\n                  send(JSON.stringify({\n                    type: type,\n                    key: projectDataKey,\n                    total: totalCount,\n                    index: i,\n                    data: string\n                  }));\n                }\n\n                _context.next = 17;\n                break;\n\n              case 16:\n                if (type === _this.DATA_TYPE_CANVAS) {\n                  _this.lastSentDrawing = data;\n                  send(stringify({\n                    type: type,\n                    drawing: data\n                  }));\n                } else if (type === _this.DATA_TYPE_CANVAS_TOGGLE) {\n                  send(stringify({\n                    type: type,\n                    isOn: data\n                  }));\n                } else if (type === _this.DATA_TYPE_EDITOR_RANGE) {\n                  _this.lastSentRange = data;\n\n                  if (data.byUser) {\n                    delete data[\"byUser\"];\n                    send(stringify({\n                      type: type,\n                      editorRange: data\n                    }));\n                  }\n                } else if (type === _this.DATA_TYPE_HIGHLIGHT) {\n                  send(stringify({\n                    type: type,\n                    highlightBtnId: data\n                  }));\n                } else if (type === _this.DATA_TYPE_LOG) {\n                  send(stringify({\n                    type: type,\n                    log: data\n                  }));\n                } else if (type === _this.DATA_TYPE_EXIT) {\n                  send(stringify({\n                    type: type\n                  }));\n                } else if (type === _this.DATA_TYPE_LECTURE_VIDEO) {\n                  send(stringify({\n                    type: type,\n                    lectureVideo: data\n                  }));\n                } else if (type === _this.DATA_TYPE_LECTURE_SLIDE) {\n                  send(stringify({\n                    type: type,\n                    lectureSlide: data\n                  }));\n                } else if (type === _this.DATA_TYPE_DEVICE_STATUS) {\n                  send(stringify({\n                    type: type,\n                    status: data\n                  }));\n                } else if (type === _this.DATA_TYPE_RECORDING) {\n                  send(stringify({\n                    type: type,\n                    isRecording: true\n                  }));\n                } else if (type === _this.DATA_TYPE_JANUS_VIDEO) {\n                  send(stringify({\n                    type: type,\n                    status: data\n                  }));\n                } else if (type === _this.DATA_TYPE_CODE) {\n                  send(stringify({\n                    type: type,\n                    code: data.code\n                  }));\n                }\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onReceiveData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n        var type, drawing, isOn, editorRange, log, lectureVideo, lectureSlide, isRecording, status, code, string, i, combinedState, _state, _lastState, assets, _drawing, _lastSentDrawing, _editorRange, _lastSentRange, fileName, newBitrate, sceneId, selectedSprite;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                type = data.type, drawing = data.drawing, isOn = data.isOn, editorRange = data.editorRange, log = data.log, lectureVideo = data.lectureVideo, lectureSlide = data.lectureSlide, isRecording = data.isRecording, status = data.status, code = data.code;\n\n                if (!(type === _this.DATA_TYPE_PROJECT)) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                if (!_this.projectData[data.key]) {\n                  _this.projectData[data.key] = {\n                    datas: [],\n                    total: data.total\n                  };\n                }\n\n                _this.projectData[data.key].datas[data.index] = data.data;\n\n                if (!(_this.projectData[data.key].datas.length === data.total)) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                string = \"\";\n\n                for (i = 0; i < data.total; ++i) {\n                  string += _this.projectData[data.key].datas[i];\n                }\n\n                delete _this.projectData[data.key]; // const combinedState =\n                //   this.props.editorMode === \"block\"\n                //     ? JSON.parse(restoreJSON(string))\n                //     : JSON.parse(string);\n\n                combinedState = JSON.parse(string);\n\n                if (!_this.lastSentState) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                _state = _objectSpread({}, combinedState);\n                _lastState = _objectSpread({}, _this.lastSentState);\n                if (_state.state.scene) _state.state.scene.timeStamp = 0;\n                if (_lastState.state.scene) _lastState.state.scene.timeStamp = 0;\n\n                if (!(stringify(_state) === stringify(_lastState))) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 16:\n                _context2.next = 18;\n                return AssetLibrary.loadAssetsForGame(combinedState.state.scene);\n\n              case 18:\n                assets = _context2.sent;\n                AssetLibrary.setAll(assets);\n\n                if (_this.projectTimeout) {\n                  clearTimeout(_this.projectTimeout);\n                }\n\n                _this.projectTimeout = setTimeout(function () {\n                  _this.props.setProject(combinedState, true);\n                }, 10);\n\n              case 22:\n                _context2.next = 48;\n                break;\n\n              case 24:\n                if (!(type === _this.DATA_TYPE_CANVAS)) {\n                  _context2.next = 34;\n                  break;\n                }\n\n                if (!_this.lastSentDrawing) {\n                  _context2.next = 30;\n                  break;\n                }\n\n                _drawing = _objectSpread({}, drawing);\n                _lastSentDrawing = _objectSpread({}, _this.lastSentDrawing);\n\n                if (!(stringify(_drawing) === stringify(_lastSentDrawing))) {\n                  _context2.next = 30;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 30:\n                if (_this.drawTimer) {\n                  clearTimeout(_this.drawTimer);\n                }\n\n                _this.drawTimer = setTimeout(function () {\n                  _this.props.addDrawing(drawing);\n                }, 500);\n                _context2.next = 48;\n                break;\n\n              case 34:\n                if (!(type === _this.DATA_TYPE_CANVAS_TOGGLE)) {\n                  _context2.next = 38;\n                  break;\n                }\n\n                _this.props.setDrawingBoard(isOn);\n\n                _context2.next = 48;\n                break;\n\n              case 38:\n                if (!(type === _this.DATA_TYPE_EDITOR_RANGE)) {\n                  _context2.next = 47;\n                  break;\n                }\n\n                if (!_this.lastSentRange) {\n                  _context2.next = 44;\n                  break;\n                }\n\n                _editorRange = _objectSpread({}, editorRange);\n                _lastSentRange = _objectSpread({}, _this.lastSentRange);\n\n                if (!(stringify(_editorRange) === stringify(_lastSentRange))) {\n                  _context2.next = 44;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 44:\n                _this.props.setEditorRange(editorRange);\n\n                _context2.next = 48;\n                break;\n\n              case 47:\n                if (type === _this.DATA_TYPE_HIGHLIGHT) {\n                  if (_this.timer) {\n                    clearTimeout(_this.timer);\n                  }\n\n                  _this.props.setBtnHighlight(data.highlightBtnId);\n\n                  _this.timer = setTimeout(function () {\n                    _this.props.setBtnHighlight();\n                  }, 800);\n                } else if (type === _this.DATA_TYPE_LOG) {\n                  _this.setState({\n                    log: log\n                  });\n                } else if (type === _this.DATA_TYPE_EXIT) {\n                  _this.unpublish();\n\n                  _this.setState({\n                    isEnd: true\n                  });\n\n                  _this.showFeedbackAlert();\n                } else if (type === _this.DATA_TYPE_LECTURE_VIDEO) {\n                  _this.setState({\n                    isLectureVideoOn: lectureVideo.isOn,\n                    selectedLectureVideoURL: lectureVideo.video\n                  });\n                } else if (type === _this.DATA_TYPE_LECTURE_SLIDE) {\n                  _this.setState({\n                    isLectureSlideOn: lectureSlide.isOn,\n                    selectedSlideIndex: lectureSlide.slide\n                  });\n                } else if (type === _this.DATA_TYPE_DEVICE_STATUS) {\n                  _this.setState({\n                    recvAudio: status.audioSend,\n                    recvVideo: status.videoSend,\n                    connected: true,\n                    startTime: Date.now()\n                  });\n                } else if (type === _this.DATA_TYPE_RECORDING) {\n                  _this.setState({\n                    isRecording: isRecording\n                  });\n\n                  fileName = _this.getRecordFileName();\n\n                  _this.videocall.send({\n                    message: {\n                      request: \"configure\",\n                      record: isRecording,\n                      filename: fileName\n                    }\n                  });\n                } else if (type === _this.DATA_TYPE_JANUS_VIDEO) {\n                  if (data.status) {\n                    newBitrate = _this.beforeBitrate / 2;\n\n                    if (newBitrate >= _this.minimumBitrate && _this.doDownGrade) {\n                      _this.videocall.send({\n                        message: {\n                          request: \"configure\",\n                          bitrate: newBitrate\n                        },\n                        success: function success(result) {\n                          console.log(\"bitrate down complete\", newBitrate);\n                          _this.beforeBitrate = newBitrate;\n                          _this.doDownGrade = false;\n                          setTimeout(function () {\n                            _this.doDownGrade = true;\n                          }, _this.doDownGradeInterVal);\n                        }\n                      });\n                    } else {// console.log(\n                      //   `new bitrate[${newBitrate}] is waitting [${this.doDownGrade}]`\n                      // );\n                    }\n                  }\n\n                  if (_this.beforeBitrate <= _this.maximumBitrate) {\n                    if (_this.upgradeTimer !== undefined) clearTimeout(_this.upgradeTimer);\n                    _this.upgradeTimer = setTimeout(function () {\n                      var upBitrate = _this.beforeBitrate * 2;\n\n                      if (upBitrate <= _this.maximumBitrate && _this.doUpgrade) {\n                        console.log(\"bitrate upgrade start\", upBitrate);\n\n                        _this.videocall.send({\n                          message: {\n                            request: \"configure\",\n                            bitrate: upBitrate\n                          },\n                          success: function success(result) {\n                            console.log(\"bitrate up complete\");\n                            _this.beforeBitrate = upBitrate;\n                            _this.doUpgrade = false;\n                            setTimeout(function () {\n                              _this.doUpgrade = true; // SocketUtil.sendSocket(\"slowLink\", false);\n\n                              _this.sendData(_this.DATA_TYPE_JANUS_VIDEO, false);\n                            }, _this.doUpgradeInterVal);\n                          }\n                        });\n                      }\n                    }, _this.doUpgradeInterVal);\n                  }\n                } else if (type === _this.DATA_TYPE_CODE) {\n                  if (_this.lastSentCode !== code) {\n                    _this.lastSentCode = code;\n                    sceneId = _this.props.selectedSceneId;\n                    selectedSprite = _this.props.selectedObject;\n\n                    if (selectedSprite.name) {\n                      _this.props.setSpriteCode(sceneId, selectedSprite.name, code);\n                    }\n                  }\n                }\n\n              case 48:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.getRecordFileName = function () {\n      var _this$props = _this.props,\n          isTutor = _this$props.isTutor,\n          reservationId = _this$props.reservationId; //const idPart = isTutor ? tutorEmail.split(\"@\")[0] : studentEmail.split(\"@\")[0];\n\n      var idPart = isTutor ? \"tutor\" : \"student\";\n      return \"\".concat(_this.recordFilePath, \"/\").concat(reservationId, \"/\").concat(reservationId, \"-\").concat(new Date().getTime(), \"-\").concat(idPart);\n    };\n\n    _this.setTimerRef = function (elem) {\n      if (!elem) return;\n      _this.timerRef = elem;\n      clearInterval(_this.timerInterval);\n      _this.timerInterval = setInterval(function () {\n        if (!_this.timerRef) return;\n        var timeDiff = Math.floor((Date.now() - _this.state.startTime) / 1000);\n        var min = Math.floor(timeDiff / 60);\n        var sec = timeDiff % 60;\n\n        var formNum = function formNum(num) {\n          return num.toString().length === 1 ? \"0\".concat(num) : num;\n        };\n\n        _this.timerRef.innerText = \"\".concat(formNum(min), \":\").concat(formNum(sec));\n      }, 1000);\n    };\n\n    _this.handleDrawingBtn = function (isOn) {\n      _this.props.setDrawingBoard(isOn);\n    };\n\n    _this.handleLectureSlideBtn = function (isOn) {\n      _this.setState({\n        isLectureSlideOn: isOn\n      });\n\n      _this.sendData(_this.DATA_TYPE_LECTURE_SLIDE, {\n        isOn: isOn,\n        slide: 0\n      });\n    };\n\n    _this.handleSelectedLectureSlide = function (selectedSlideIndex) {\n      _this.setState({\n        isLectureSlideOn: true,\n        selectedSlideIndex: selectedSlideIndex\n      });\n\n      _this.sendData(_this.DATA_TYPE_LECTURE_SLIDE, {\n        isOn: true,\n        slide: selectedSlideIndex\n      });\n    };\n\n    _this.handleLectureVideoBtn = function (isOn) {\n      _this.setState({\n        isLectureVideoOn: isOn\n      });\n\n      _this.sendData(_this.DATA_TYPE_LECTURE_VIDEO, {\n        isOn: isOn\n      });\n    };\n\n    _this.handleLectureVideoListBtn = function (isOn, selectedLectureVideoURL) {\n      _this.setState({\n        isLectureVideoListOn: isOn\n      });\n\n      if (selectedLectureVideoURL) {\n        _this.setState({\n          isLectureVideoOn: true,\n          selectedLectureVideoURL: selectedLectureVideoURL\n        });\n\n        _this.sendData(_this.DATA_TYPE_LECTURE_VIDEO, {\n          isOn: true,\n          video: selectedLectureVideoURL\n        });\n      }\n    };\n\n    _this.handleVoiceToggleButton = function () {\n      _this.setState({\n        audioEnabled: !_this.state.audioEnabled\n      }, function () {\n        _this.videocall.send({\n          message: {\n            request: \"configure\",\n            audio: _this.state.audioEnabled\n          }\n        });\n      });\n    };\n\n    _this.handleVideoToggleButton = function () {\n      _this.setState({\n        myVideoHidden: !_this.state.myVideoHidden\n      });\n    };\n\n    _this.handleChangeVideoButton = function () {\n      if (_this.screenMode === \"window\") {\n        _this.screenMode = \"camera\";\n\n        if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n          navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: true\n          }).then(function (stream) {\n            this.setStream(stream);\n          }.bind(_assertThisInitialized(_this)));\n        }\n      } else {\n        _this.screenMode = \"window\";\n\n        if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n          navigator.mediaDevices.getDisplayMedia({\n            video: {\n              width: _this.maxScreenShareWidth\n            },\n            audio: true\n          }).then(function (stream) {\n            navigator.mediaDevices.getUserMedia({\n              audio: true,\n              video: false\n            }).then(function (audioStream) {\n              stream.addTrack(audioStream.getAudioTracks()[0]);\n              this.setStream(stream);\n            }.bind(this));\n          }.bind(_assertThisInitialized(_this)), function (error) {\n            this.sendWizLabReport(error);\n            console.error(error);\n          });\n        }\n      }\n    };\n\n    _this.handleExitBtn = function () {\n      _this.showExitConfirmAlert();\n    };\n\n    _this.showExitConfirmAlert = function () {\n      var callback = function callback() {\n        request.setCompleteReservation({\n          reservationId: _this.props.reservationId\n        });\n\n        _this.sendData(_this.DATA_TYPE_EXIT, null);\n\n        _this.unpublish();\n\n        _this.setState({\n          isEnd: true\n        });\n\n        _this.showExitAlert();\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_CONFIRM\",\n        confirmButtonNameId: \"ID_WIZLIVE_EXIT\",\n        cancelButtonNameId: \"ID_WIZLIVE_CANCEL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1650\n        },\n        __self: this\n      }));\n    };\n\n    _this.showExitAlert = function () {\n      var callback = function callback() {\n        var _this$props2 = _this.props,\n            studentEmail = _this$props2.studentEmail,\n            reservationId = _this$props2.reservationId;\n        var url = \"\".concat(URL.WIZLIVE, \"/tutor/feedback/\").concat(studentEmail, \"/\").concat(reservationId, \"/false\");\n        window.open(url, \"_blank\");\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_COMPLETE\",\n        subtitleId: \"ID_WIZLIVE_FEEDBACK_REQUEST\",\n        confirmButtonNameId: \"ID_WIZLIVE_FEEDBACK_GO\",\n        cancelButtonNameId: \"ID_WIZLIVE_FEEDBACK_NEXTTIME\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1668\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleFreeTrialSurvey = function (isOn) {\n      _this.setState({\n        isShowSurveyPopup: isOn\n      });\n    };\n\n    _this.showFeedbackAlert = function () {\n      _this.handleFreeTrialSurvey(true);\n    };\n\n    _this.showFeedbackResultAlert = function (success) {\n      var title = success ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\" : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n      var subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n      showPopUp(React.createElement(Popup.OneButton, {\n        intl: _this.props.intl,\n        titleId: title,\n        subtitleId: subtitle,\n        buttonNameId: \"ID_WIZLIVE_COMFIRM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1693\n        },\n        __self: this\n      }));\n    };\n\n    _this.setRemoteVideo = function (video) {\n      _this.remoteVideo = video;\n    };\n\n    _this.setLocalVideo = function (video) {\n      _this.localVideo = video;\n    };\n\n    _this.handleSMS = function () {\n      showTwoBtnAlertWithTextarea(\"ID_WIZLIVE_CLASS_MESSAGE_TITLE\", undefined, \"ID_WIZLIVE_CLASS_MESSAGE_TEXT_HINT\", undefined, \"ID_WIZLIVE_CLASS_MESSAGE_TEXT_CONFIRM\", \"ID_WIZLIVE_CLASS_MESSAGE_TEXT_CANCEL\", function (msg) {\n        var param = {\n          tutorEmail: _this.props.email,\n          studentEmail: _this.props.studentEmail,\n          message: msg\n        };\n        request.postSendStudentMessage(param).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          showAlert(\"ID_WIZLIVE_CLASS_MESSAGE_SUCCESS\", undefined, \"ID_WIZLIVE_CLASS_MESSAGE_SUCCESS_OK\");\n        }).catch(function (e) {\n          console.error(e);\n        });\n      });\n    };\n\n    _this.sendWizLabReport = function (msg) {\n      var error = msg;\n\n      try {\n        error = JSON.stringify(error);\n      } catch (e) {}\n\n      var email = _this.props.email;\n      request.sendWizLabReport({\n        payload: JSON.stringify({\n          email: email,\n          error: error\n        })\n      });\n    };\n\n    _this.rnd = {\n      onDragStop: function onDragStop(e, d) {\n        _this.setState({\n          x: d.x,\n          y: d.y\n        });\n      },\n      onResize: function onResize(e, direction, ref, delta, position) {\n        _this.setState(_objectSpread({\n          width: Math.max(500, parseInt(ref.style.width)),\n          height: \"auto\"\n        }, position));\n      }\n    };\n    _this.janus = undefined;\n    _this.videocall = undefined;\n    _this.serverUrl = URL.JANUS_SERVER;\n    _this.localVideo = undefined;\n    _this.remoteVideo = undefined;\n    _this.mystream = undefined;\n    _this.myid = undefined;\n    _this.mypvtid = undefined; // We use this other ID just to map our subscriptions to us\n\n    _this.opaqueId = \"wizlive-\" + Janus.randomString(12);\n    _this.myroom = _this.generateRoomId();\n    _this.feeds = [];\n    _this.remoteFeed = undefined;\n    _this.maxScreenShareWidth = 720;\n    _this.maxCameraWidth = 720;\n    _this.idealCameraWidth = 480;\n    _this.timerRef = undefined;\n    _this.screenMode = \"camera\";\n    _this.audioSend = false;\n    _this.videoSend = false;\n    _this.recordFilePath = \"/home/ubuntu/states\";\n    _this.recodingEnabled = isConnectProd();\n    _this.projectData = {};\n    _this.sync = false; // janus video qulity params\n\n    _this.doDownGrade = true;\n    _this.doDownGradeInterVal = 7000;\n    _this.doUpgrade = true;\n    _this.doUpgradeInterVal = 10000;\n    _this.upgradeTimer = undefined;\n    _this.tempBitrate = 0;\n    _this.minimumBitrate = 64000;\n    _this.maximumBitrate = 1024000;\n    _this.beforeBitrate = _this.maximumBitrate / 2;\n    _this.timer = null;\n    _this.state = {\n      recvAudio: true,\n      recvVideo: true,\n      audioEnabled: true,\n      myVideoHidden: false,\n      connected: false,\n      log: undefined,\n      startTime: undefined,\n      isEnd: false,\n      poorNetwork: false,\n      isLectureVideoOn: false,\n      isLectureSlideOn: false,\n      isMqConnected: false,\n      isShowSurveyPopup: false,\n      isRecording: false,\n      userVideoId: undefined,\n      videoIdList: [],\n      audioInputList: [],\n      // audio input\n      audioOutputList: [],\n      // audio output\n      videoInputList: [] // video input\n\n    };\n    _this.mq = {\n      topicName: \"/topic/wizlive\".concat(_this.props.roomId, \"-\").concat(_this.props.tutorEmail),\n      client: null,\n      subscription: null\n    };\n    _this.opposite = \"\";\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.addEventListener(\"mousedown\", this.inputEventListener, true);\n      document.addEventListener(\"keydown\", this.inputEventListener, true);\n      var _this$props3 = this.props,\n          tutorEmail = _this$props3.tutorEmail,\n          email = _this$props3.email,\n          reservationId = _this$props3.reservationId,\n          pId = _this$props3.pId;\n      request.postWizLiveEntrance({\n        id: reservationId,\n        isTutor: email === tutorEmail,\n        pId: pId\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {// console.log(json);\n      }); // navigator.mediaDevices.getUserMedia(this.constraints).then(\n      //   () => {\n      //     console.log(\"MEDIA TEST[video(ok), mic(ok)]\");\n      //   },\n      //   err => {\n      //   }\n      // );\n      // [john] detect all media devices\n\n      navigator.mediaDevices.enumerateDevices().then(function (devices) {\n        // device.kind (audioinput / audiooutput / videoinput )\n        // device.label (device name)\n        // device.deviceId (unique id)\n        var defaultCameraId = undefined;\n        var defaultAudioId = undefined;\n        var tempAudioInput = [];\n        var tempVideoInput = [];\n        var tempAudioOutput = [];\n        var tempVideoIdList = [];\n        devices.forEach(function (device, idx) {\n          if (device.deviceId === \"\") return;\n\n          if (device.kind === \"audioinput\" && device.deviceId !== \"default\") {\n            // 현재 사용중인 default 장비가 array에 중복 되어 있음\n            // tempAudioInput.push(device.deviceId);\n            tempAudioInput.push({\n              id: device.deviceId,\n              label: device.label\n            });\n            if (!defaultAudioId) defaultAudioId = device.deviceId;\n          } else if (device.kind === \"videoinput\") {\n            // tempVideoInput.push(device.deviceId);\n            tempVideoInput.push({\n              id: device.deviceId,\n              label: device.label\n            });\n            tempVideoIdList.push(device.deviceId);\n            if (!defaultCameraId) defaultCameraId = device.deviceId;\n          } else if (device.kind === \"audiooutput\" && device.deviceId !== \"default\") {\n            // tempAudioOutput.push(device.deviceId);\n            tempAudioOutput.push({\n              id: device.deviceId,\n              label: device.label\n            });\n          }\n        });\n        this.setState({\n          userVideoId: defaultCameraId,\n          videoIdList: tempVideoIdList,\n          audioInputList: tempAudioInput,\n          videoInputList: tempVideoInput,\n          audioOutputList: tempAudioOutput\n        });\n      }.bind(this)).catch(function (err) {\n        console.error(err.name + \": \" + err.message);\n        this.sendWizLabReport(err);\n      });\n      navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true\n      }).then(function () {\n        _this2.audioSend = true;\n        _this2.videoSend = true;\n\n        _this2.setup();\n      }, function (err) {\n        navigator.mediaDevices.getUserMedia({\n          audio: true\n        }).then(function () {\n          _this2.handleMediaError(err, \"video\");\n\n          _this2.audioSend = true;\n          _this2.videoSend = false;\n\n          _this2.setup();\n        }, function (_err) {\n          navigator.mediaDevices.getUserMedia({\n            video: true\n          }).then(function () {\n            _this2.handleMediaError(err, \"audio\");\n\n            _this2.audioSend = false;\n            _this2.videoSend = true;\n\n            _this2.setup();\n          }, function (__err) {\n            _this2.handleMediaError(err, \"all\");\n\n            _this2.setup();\n\n            showPopUp(React.createElement(Popup.OneButton, {\n              intl: _this2.props.intl,\n              titleId: \"ID_BUILDER_LIVE_ACCESS_TITLE\",\n              subtitleId: \"ID_BUILDER_LIVE_ACCESS_MSG\",\n              buttonNameId: \"ID_BUILDER_LIVE_ACCESS_OK\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 239\n              },\n              __self: this\n            }));\n          });\n        });\n      }); // [john] detect input device changed\n\n      navigator.mediaDevices.ondevicechange = function (e) {\n        navigator.mediaDevices.enumerateDevices().then(function (devices) {\n          var _this3 = this;\n\n          var tempAudioInput = [];\n          var tempVideoInput = [];\n          var tempAudioOutput = [];\n          var tempVideoIdList = [];\n          devices.forEach(function (device) {\n            if (device.kind === \"audioinput\" && device.deviceId !== \"default\") {\n              // tempAudioInput.push(device.deviceId);\n              tempAudioInput.push({\n                id: device.deviceId,\n                label: device.label\n              });\n            } else if (device.kind === \"videoinput\") {\n              // tempVideoInput.push(device.deviceId);\n              tempVideoInput.push({\n                id: device.deviceId,\n                label: device.label\n              });\n              tempVideoIdList.push(device.deviceId);\n            } else if (device.kind === \"audiooutput\" && device.deviceId !== \"default\") {\n              // tempAudioOutput.push(device.deviceId);\n              tempAudioOutput.push({\n                id: device.deviceId,\n                label: device.label\n              });\n            }\n          }); // check new deviceId\n          // _streamId -> 기존에 없던 새로운 media 장비\n\n          var _streamId = undefined;\n\n          if (tempVideoInput.length > this.state.videoInputList.length) {\n            // 신규 장비 입력\n            // 신규 리스트 중에서 기존에 없는게 있는지 확인\n            tempVideoInput.forEach(function (item) {\n              if (!_this3.state.videoIdList.includes(item.id)) {\n                _streamId = item.id;\n              }\n            });\n          } else {\n            // 기존장비 제거\n            // 기존 리스트중에서 제거되고 남은 장비 중 첫번쨰\n            this.state.videoInputList.forEach(function (item) {\n              if (!tempVideoInput.includes(item)) {\n                _streamId = item.id;\n              }\n            });\n          }\n\n          if (_streamId) navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: {\n              deviceId: _streamId\n            }\n          }).then(function (stream) {\n            this.setStream(stream);\n          }.bind(this));\n          this.setState({\n            userVideoId: _streamId,\n            videoIdList: tempVideoIdList,\n            audioInputList: tempAudioInput,\n            videoInputList: tempVideoInput,\n            audioOutputList: tempAudioOutput\n          });\n        }.bind(_this2)).catch(function (err) {\n          console.error(err.name + \": \" + err.message);\n          this.sendWizLabReport(err);\n        });\n      };\n\n      this.getOppositeUserInfo();\n    }\n  }, {\n    key: \"getOppositeUserInfo\",\n    value: function getOppositeUserInfo() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          isTutor = _this$props4.isTutor,\n          studentEmail = _this$props4.studentEmail,\n          tutorEmail = _this$props4.tutorEmail,\n          reservationId = _this$props4.reservationId;\n      request.userProfile({\n        email: isTutor ? studentEmail : tutorEmail\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this4.opposite = json.name;\n\n        _this4.props.addRoom(reservationId, _this4.opposite, json.icon);\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.videocall) {\n        this.videocall.hangup();\n        this.janus.destroy();\n      }\n\n      if (this.timerInterval) {\n        clearInterval(this.timerInterval);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.inputEventListener);\n      document.removeEventListener(\"keydown\", this.inputEventListener);\n      this.mqDisconnect();\n    }\n  }, {\n    key: \"newRemoteFeed\",\n    value: function newRemoteFeed(id, display, audio, video) {\n      var _this5 = this;\n\n      // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n      this.remoteFeed = null;\n      this.janus.attach({\n        plugin: \"janus.plugin.videoroom\",\n        opaqueId: this.opaqueId,\n        success: function success(pluginHandle) {\n          _this5.remoteFeed = pluginHandle;\n          _this5.remoteFeed.simulcastStarted = false;\n          Janus.log(\"Plugin attached! (\".concat(_this5.remoteFeed.getPlugin(), \", id=\").concat(_this5.remoteFeed.getId(), \")\"));\n          Janus.log(\"  -- This is a subscriber\"); // We wait for the plugin to send us an offer\n\n          var subscribe = {\n            request: \"join\",\n            room: _this5.myroom,\n            ptype: \"subscriber\",\n            feed: id,\n            private_id: _this5.mypvtid\n          }; // In case you don't want to receive audio, video or data, even if the\n          // publisher is sending them, set the 'offer_audio', 'offer_video' or\n          // 'offer_data' properties to false (they're true by default), e.g.:\n          // \t\tsubscribe[\"offer_video\"] = false;\n          // For example, if the publisher is VP8 and this is Safari, let's avoid video\n\n          if (Janus.webRTCAdapter.browserDetails.browser === \"safari\" && (video === \"vp9\" || video === \"vp8\" && !Janus.safariVp8)) {\n            if (video) video = video.toUpperCase();\n            Janus.error(\"Publisher is using \".concat(video, \", but Safari doesn't support it: disabling video\"));\n            subscribe.offer_video = false;\n          }\n\n          _this5.remoteFeed.videoCodec = video;\n\n          _this5.remoteFeed.send({\n            message: subscribe\n          });\n        },\n        error: function error(_error4) {\n          _this5.sendWizLabReport(_error4);\n\n          Janus.error(\"  -- Error attaching plugin...\", _error4);\n        },\n        onmessage: function onmessage(msg, jsep) {\n          Janus.debug(\" ::: Got a message (subscriber) :::\");\n          Janus.debug(msg);\n          var event = msg.videoroom;\n          Janus.debug(\"Event: \" + event);\n\n          if (msg.error) {\n            _this5.sendWizLabReport(msg.error);\n\n            Janus.error(msg.error);\n          } else if (event) {\n            if (event === \"attached\") {\n              // Subscriber created and attached\n              for (var i = 1; i < 6; i++) {\n                if (!_this5.feeds[i]) {\n                  _this5.feeds[i] = _this5.remoteFeed;\n                  _this5.remoteFeed.rfindex = i;\n                  break;\n                }\n              }\n\n              _this5.remoteFeed.rfid = msg.id;\n              _this5.remoteFeed.rfdisplay = msg.display;\n              Janus.log(\"Successfully attached to feed \".concat(_this5.remoteFeed.rfid, \" (\").concat(_this5.remoteFeed.rfdisplay, \") in room \").concat(msg.room));\n\n              _this5.setState({\n                startTime: Date.now(),\n                connected: true\n              }, function () {\n                var audioSend = _this5.audioSend,\n                    videoSend = _this5.videoSend;\n\n                _this5.sendData(_this5.DATA_TYPE_DEVICE_STATUS, {\n                  audioSend: audioSend,\n                  videoSend: videoSend\n                });\n              });\n\n              if (_this5.recodingEnabled && !_this5.props.studentEmail.includes(\"student\") && !_this5.props.tutorEmail.includes(\"ttc\") && !_this5.props.studentEmail.includes(\"ttc\")) {\n                _this5.sendData(_this5.DATA_TYPE_RECORDING);\n              }\n\n              _this5.sendWebhook(_this5.WEBHOOK_TYPE_CONNECTED_ALL);\n            } else if (event === \"event\") {// Check if we got an event on a simulcast-related event from this publisher\n            } else if (event === \"slow_link\") {\n              // bitrate maximum:512000 , minimum : 64000 ,  default: 256000\n              console.log(\"slow link occured!\");\n\n              _this5.sendData(_this5.DATA_TYPE_JANUS_VIDEO, true); // if (this.poorNetworkTimer) {\n              //   clearTimeout(this.poorNetworkTimer);\n              // }\n              // this.setState({ poorNetwork: true }, () => {\n              //   this.poorNetworkTimer = setTimeout(() => {\n              //     this.setState({ poorNetwork: false });\n              //   }, this.poorNetworkMessageMS);\n              // });\n\n            } else {// What has just happened?\n              }\n          }\n\n          if (jsep) {\n            Janus.debug(\"Handling SDP as well...\");\n            Janus.debug(jsep); // Answer and attach\n\n            _this5.remoteFeed.createAnswer({\n              jsep: jsep,\n              // Add data:true here if you want to subscribe to datachannels as well\n              // (obviously only works if the publisher offered them in the first place)\n              media: {\n                data: false,\n                audioSend: false,\n                videoSend: false\n              },\n              // We want recvonly audio/video\n              success: function success(jsep) {\n                Janus.debug(\"Got SDP!\");\n                Janus.debug(jsep);\n                var body = {\n                  request: \"start\",\n                  room: _this5.myroom\n                };\n\n                _this5.remoteFeed.send({\n                  message: body,\n                  jsep: jsep\n                });\n              },\n              error: function error(_error5) {\n                _this5.sendWizLabReport(_error5);\n\n                Janus.error(\"WebRTC error:\", _error5);\n              }\n            });\n          }\n        },\n        webrtcState: function webrtcState(on) {\n          Janus.log(\"Janus says this WebRTC PeerConnection (feed #\".concat(_this5.remoteFeed.rfindex, \") is \").concat(on ? \"up\" : \"down\", \" now\")); //TODO: remove this\n\n          setTimeout(function () {\n            if (!_this5.props.isTutor) {\n              _this5.sendData(_this5.DATA_TYPE_LOG, _this5.props.log);\n            } else {\n              _this5.sendData(_this5.DATA_TYPE_PROJECT, {\n                state: {\n                  scene: _this5.props.scene,\n                  interaction: _this5.props.interaction,\n                  preview: _this5.props.preview\n                }\n              });\n            }\n          }, 2000);\n        },\n        onlocalstream: function onlocalstream(stream) {// The subscriber stream is recvonly, we don't expect anything here\n        },\n        onremotestream: function onremotestream(stream) {\n          if (_this5.remoteFeed && _this5.remoteFeed.rfindex) {\n            Janus.debug(\"Remote feed #\".concat(_this5.remoteFeed.rfindex));\n            Janus.attachMediaStream(_this5.remoteVideo, stream);\n            var videoTracks = stream.getVideoTracks();\n\n            if (!videoTracks || videoTracks.length === 0) {\n              if (_this5.poorNetworkTimer) {\n                clearTimeout(_this5.poorNetworkTimer);\n              }\n\n              _this5.setState({\n                poorNetwork: true\n              }, function () {\n                _this5.poorNetworkTimer = setTimeout(function () {\n                  _this5.setState({\n                    poorNetwork: false\n                  });\n                }, _this5.poorNetworkMessageMS);\n              });\n            }\n          }\n        },\n        ondataopen: function ondataopen(data) {\n          Janus.log(\"The DataChannel is available!\");\n        },\n        ondata: function ondata(data) {\n          // data = JSON.parse(data.toString());\n          Janus.debug(\"We got data from the DataChannel! \"); // this.onReceiveData(JSON.parse(data));\n        },\n        oncleanup: function oncleanup() {\n          Janus.log(\" ::: Got a cleanup notification (remote feed \".concat(id, \") :::\"));\n        }\n      });\n    }\n  }, {\n    key: \"setStream\",\n    value: function setStream(stream) {\n      var config = this.videocall.webrtcStuff;\n\n      if (config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n        var s = config.myStream.getVideoTracks()[0];\n        config.myStream.removeTrack(s);\n\n        try {\n          s.stop();\n        } catch (e) {\n          this.sendWizLabReport(e);\n        }\n      }\n\n      config.myStream.addTrack(stream.getVideoTracks()[0]);\n      config.myStream.addTrack(stream.getAudioTracks()[0]);\n      var videoTransceiver = null;\n      var transceivers = config.pc.getTransceivers();\n\n      if (transceivers && transceivers.length > 0) {\n        for (var i in transceivers) {\n          var t = transceivers[i];\n\n          if (t.sender && t.sender.track && t.sender.track.kind === \"video\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"video\") {\n            videoTransceiver = t;\n            break;\n          }\n        }\n      }\n\n      if (videoTransceiver && videoTransceiver.sender) {\n        videoTransceiver.sender.replaceTrack(stream.getVideoTracks()[0]);\n      } else {\n        config.pc.addTrack(stream.getVideoTracks()[0], stream);\n      } // Janus.attachMediaStream(this.localVideo, stream);\n\n    }\n  }, {\n    key: \"sendWebhook\",\n    value: function sendWebhook(type) {\n      var _this$props5 = this.props,\n          tutorEmail = _this$props5.tutorEmail,\n          studentEmail = _this$props5.studentEmail,\n          email = _this$props5.email,\n          reservationId = _this$props5.reservationId,\n          pId = _this$props5.pId,\n          pageType = _this$props5.pageType;\n      var isTutor = email === tutorEmail;\n      var msg = \"[new 위즈라이브 수업 알림]\\n\";\n\n      switch (type) {\n        case this.WEBHOOK_TYPE_CONNECTED:\n          if (isTutor) {\n            msg += \"\\uD29C\\uD130(\".concat(tutorEmail, \") \\uC785\\uC7A5 \\uC644\\uB8CC(\").concat(this.myroom, \")\");\n          } else {\n            msg += \"\\uD559\\uC0DD(\".concat(studentEmail, \") \\uC785\\uC7A5 \\uC644\\uB8CC(\").concat(this.myroom, \")\");\n          }\n\n          if (pageType === \"wizlive\") {\n            request.postWizLiveEntrance({\n              id: reservationId,\n              isTutor: isTutor,\n              pId: pId\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {// console.log(json);\n            });\n          } else {\n            request.postLiveEntrance({\n              id: reservationId,\n              isTutor: isTutor\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {// console.log(json);\n            });\n          }\n\n          break;\n\n        case this.WEBHOOK_TYPE_CONNECTED_ALL:\n          if (isTutor) {\n            msg += \"\\uD29C\\uD130(\".concat(tutorEmail, \"), \\uD559\\uC0DD(\").concat(studentEmail, \") \\uBAA8\\uB450 \\uC785\\uC7A5 \\uC644\\uB8CC. \\uC218\\uC5C5 \\uC2DC\\uC791\");\n          } else {\n            return;\n          }\n\n          break;\n\n        case this.WEBHOOK_TYPE_DISCONNECTED:\n          if (isTutor) {\n            msg += \"\\uD559\\uC0DD(\".concat(studentEmail, \") \\uC218\\uC5C5 \\uD1F4\\uC7A5\");\n          } else {\n            msg += \"\\uD29C\\uD130(\".concat(tutorEmail, \") \\uC218\\uC5C5 \\uD1F4\\uC7A5\");\n          }\n\n          break;\n\n        default:\n          return;\n      }\n\n      msg += \"\\n\";\n      request.sendWizLiveWebhook({\n        msg: msg\n      });\n    }\n  }, {\n    key: \"randomString\",\n    value: function randomString(len, charSet) {\n      charSet = charSet || \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      var randomString = \"\";\n\n      for (var i = 0; i < len; i++) {\n        var randomPoz = Math.floor(Math.random() * charSet.length);\n        randomString += charSet.substring(randomPoz, randomPoz + 1);\n      }\n\n      return randomString;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          isDrawingBoardOn = _this$props6.isDrawingBoardOn,\n          isTutor = _this$props6.isTutor,\n          roomId = _this$props6.roomId,\n          tutorEmail = _this$props6.tutorEmail,\n          lectureVideos = _this$props6.lectureVideos,\n          lectureSlides = _this$props6.lectureSlides,\n          reservationId = _this$props6.reservationId,\n          isFreeTrial = _this$props6.isFreeTrial,\n          handleSelectTab = _this$props6.handleSelectTab,\n          handleChangeZIndex = _this$props6.handleChangeZIndex,\n          zIndex = _this$props6.zIndex,\n          email = _this$props6.email;\n      var _this$state = this.state,\n          connected = _this$state.connected,\n          recvAudio = _this$state.recvAudio,\n          recvVideo = _this$state.recvVideo,\n          audioEnabled = _this$state.audioEnabled,\n          myVideoHidden = _this$state.myVideoHidden,\n          log = _this$state.log,\n          startTime = _this$state.startTime,\n          poorNetwork = _this$state.poorNetwork,\n          isEnd = _this$state.isEnd,\n          isLectureVideoOn = _this$state.isLectureVideoOn,\n          selectedLectureVideoURL = _this$state.selectedLectureVideoURL,\n          isLectureVideoListOn = _this$state.isLectureVideoListOn,\n          selectedSlideIndex = _this$state.selectedSlideIndex,\n          isLectureSlideOn = _this$state.isLectureSlideOn,\n          isMqConnected = _this$state.isMqConnected,\n          isShowSurveyPopup = _this$state.isShowSurveyPopup,\n          audioInputList = _this$state.audioInputList,\n          audioOutputList = _this$state.audioOutputList,\n          videoInputList = _this$state.videoInputList,\n          userVideoId = _this$state.userVideoId;\n      var setRemoteVideo = this.setRemoteVideo,\n          setLocalVideo = this.setLocalVideo,\n          handleVideoToggleButton = this.handleVideoToggleButton,\n          handleVoiceToggleButton = this.handleVoiceToggleButton,\n          handleChangeVideoButton = this.handleChangeVideoButton,\n          handleDrawingBtn = this.handleDrawingBtn,\n          handleExitBtn = this.handleExitBtn,\n          setTimerRef = this.setTimerRef,\n          handleLectureVideoBtn = this.handleLectureVideoBtn,\n          handleLectureVideoListBtn = this.handleLectureVideoListBtn,\n          handleSelectedLectureSlide = this.handleSelectedLectureSlide,\n          handleLectureSlideBtn = this.handleLectureSlideBtn,\n          handleFreeTrialSurvey = this.handleFreeTrialSurvey,\n          opposite = this.opposite,\n          handleSMS = this.handleSMS,\n          handleChangeTest = this.handleChangeTest,\n          handleDevice = this.handleDevice;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2011\n        },\n        __self: this\n      }, React.createElement(RndWrapper, {\n        id: \"live\",\n        style: {\n          zIndex: zIndex\n        },\n        defaultWidth: 300,\n        defaultHeight: 300 * 9 / 16 * 2 + 35,\n        defaultX: document.body.clientWidth - 365,\n        defaultY: 0,\n        minWidth: 300,\n        minHeight: 300 * 9 / 16 * 2 + 35,\n        lockAspectRatio: 16 / 9 / 2,\n        lockAspectRatioExtraHeight: 35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2012\n        },\n        __self: this\n      }, React.createElement(View, {\n        connected: connected,\n        recvAudio: recvAudio,\n        recvVideo: recvVideo,\n        audioEnabled: audioEnabled,\n        myVideoHidden: myVideoHidden,\n        log: log,\n        isDrawingBoardOn: isDrawingBoardOn,\n        isTutor: isTutor,\n        setRemoteVideo: setRemoteVideo,\n        setLocalVideo: setLocalVideo,\n        handleVideoToggleButton: handleVideoToggleButton,\n        handleVoiceToggleButton: handleVoiceToggleButton,\n        handleChangeVideoButton: handleChangeVideoButton,\n        handleDrawingBtn: handleDrawingBtn,\n        handleExitBtn: handleExitBtn,\n        startTime: startTime,\n        setTimerRef: setTimerRef,\n        poorNetwork: poorNetwork,\n        isEnd: isEnd,\n        roomId: roomId,\n        tutorEmail: tutorEmail,\n        opposite: opposite,\n        isLectureVideoOn: isLectureVideoOn,\n        handleLectureVideoListBtn: handleLectureVideoListBtn,\n        handleLectureVideoBtn: handleLectureVideoBtn,\n        selectedLectureVideoURL: selectedLectureVideoURL,\n        lectureVideos: lectureVideos,\n        isLectureVideoListOn: isLectureVideoListOn,\n        selectedSlideIndex: selectedSlideIndex,\n        isLectureSlideOn: isLectureSlideOn,\n        handleLectureSlideBtn: handleLectureSlideBtn,\n        handleSelectedLectureSlide: handleSelectedLectureSlide,\n        lectureSlides: lectureSlides,\n        isMqConnected: isMqConnected,\n        handleFreeTrialSurvey: handleFreeTrialSurvey,\n        isShowSurveyPopup: isShowSurveyPopup,\n        reservationId: reservationId,\n        isFreeTrial: isFreeTrial,\n        handleSelectTab: handleSelectTab,\n        handleChangeZIndex: handleChangeZIndex,\n        handleSMS: handleSMS,\n        audioInputList: audioInputList,\n        audioOutputList: audioOutputList,\n        videoInputList: videoInputList,\n        handleChangeTest: handleChangeTest,\n        userVideoId: userVideoId,\n        handleDevice: handleDevice,\n        email: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2024\n        },\n        __self: this\n      })), isTutor && React.createElement(LogContainer, {\n        log: log,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2075\n        },\n        __self: this\n      }), isDrawingBoardOn && React.createElement(DrawingBoard, {\n        handleClose: handleDrawingBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2076\n        },\n        __self: this\n      }), isLectureVideoOn && React.createElement(LectureVideoContainer, {\n        isTutor: isTutor,\n        handleLectureVideoBtn: handleLectureVideoBtn,\n        selectedLectureVideoURL: selectedLectureVideoURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2078\n        },\n        __self: this\n      }), isLectureSlideOn && React.createElement(LectureSlideContainer, {\n        isTutor: isTutor,\n        handleLectureSlideBtn: handleLectureSlideBtn,\n        handleSelectedLectureSlide: handleSelectedLectureSlide,\n        selectedSlideIndex: selectedSlideIndex,\n        lectureSlides: lectureSlides,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2085\n        },\n        __self: this\n      }), isShowSurveyPopup && React.createElement(FreeTrialSurveyPopup, {\n        reservationId: reservationId,\n        tutorEmail: tutorEmail,\n        handleFreeTrialSurvey: handleFreeTrialSurvey,\n        isFreeTrial: isFreeTrial,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2094\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    project: state.project,\n    email: state.userinfo.email,\n    webrtcProject: state.webrtc.project,\n    webrtcDrawing: state.webrtc.drawing,\n    isDrawingBoardOn: state.webrtc.isDrawingBoardOn,\n    editorRange: state.webrtc.editorRange,\n    highlightBtnId: state.interaction.highlightBtnId,\n    log: state.webrtc.log,\n    editorMode: state.scene.editorMode,\n    scene: state.scene,\n    interaction: state.interaction,\n    preview: state.preview,\n    selectedSceneId: state.interaction.selected.scene,\n    selectedObject: state.interaction.selected.objects[state.interaction.selected.scene]\n  };\n}, {\n  setProject: projectActions.setProject,\n  addDrawing: webrtcActions.addDrawing,\n  setDrawingBoard: webrtcActions.setDrawingBoard,\n  setEditorRange: webrtcActions.setEditorRange,\n  setBtnHighlight: interactionActions.setBtnHighlight,\n  addRoom: chatActions.addRoom,\n  setSpriteCode: sceneActions.setSpriteCode\n})(injectIntl(Container));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Component/Live/Container.js"],"names":["React","Component","connect","injectIntl","RndWrapper","stringify","AssetLibrary","URL","isConnectProd","request","projectActions","webrtcActions","interactionActions","chatActions","sceneActions","Stomp","View","showAlert","showTwoBtnAlertWithTextarea","DrawingBoard","LogContainer","LectureVideoContainer","LectureSlideContainer","FreeTrialSurveyPopup","Popup","showPopUp","Janus","window","Container","props","MEDIA_CAMERA","MEDIA_SCREEN","DATA_TYPE_DEVICE_STATUS","DATA_TYPE_PROJECT","DATA_TYPE_CODE","DATA_TYPE_CANVAS","DATA_TYPE_CANVAS_TOGGLE","DATA_TYPE_EDITOR_RANGE","DATA_TYPE_HIGHLIGHT","DATA_TYPE_LOG","DATA_TYPE_EXIT","DATA_TYPE_LECTURE_VIDEO","DATA_TYPE_LECTURE_SLIDE","DATA_TYPE_RECORDING","DATA_TYPE_JANUS_VIDEO","WEBHOOK_TYPE_CONNECTED","WEBHOOK_TYPE_CONNECTED_ALL","WEBHOOK_TYPE_DISCONNECTED","poorNetworkMessageMS","constraints","video","audio","handleMediaError","err","type","console","error","name","intl","toString","includes","sendWizLabReport","errorName","msg","inputEventListener","evt","sync","syncTimeout","clearTimeout","setTimeout","setup","mqConnect","setState","isMqConnected","init","debug","callback","setupJanus","shouldComponentUpdate","nextProps","nextState","next","webrtcProject","current","editorMode","sendData","isCodeChanged","state","interaction","selected","scene","objects","selectedSceneId","selectedSpriteId","nextCode","scenes","sprites","code","currentCode","isTutor","highlightBtnId","timer","setBtnHighlight","webrtcDrawing","length","isDrawingBoardOn","log","nextRange","editorRange","currentRange","mqReadyCallback","mqErrorCallback","mq","client","MQ","reconnect_delay","headers","login","passcode","host","email","roomId","frame","topicName","subscription","subscribe","recvData","body","senderId","onReceiveData","JSON","parse","mqDisconnect","unsubscribe","disconnect","isWebrtcSupported","janus","server","serverUrl","iceTransportPolicy","iceServers","ICE_SERVERS","success","attachJanus","destroyed","attach","plugin","opaqueId","pluginHandle","videocall","handleId","getId","getPlugin","checkRoom","consentDialog","on","mediaState","medium","webrtcState","sendWebhook","onmessage","jsep","event","videoroom","myid","id","mypvtid","private_id","room","publishOwnFeed","publishers","list","forEach","l","display","audio_codec","video_codec","newRemoteFeed","send","message","myroom","data","warn","leaving","remoteFeed","i","feeds","rfid","rfdisplay","rfindex","detach","connected","startTime","undefined","unpublished","hangup","error_code","handleRemoteJsep","mystream","getAudioTracks","getVideoTracks","onlocalstream","stream","attachMediaStream","localVideo","onremotestream","oncleanup","generateRoomId","parseInt","exists","registerUsername","bitrate","maximumBitrate","bitrate_cap","is_private","register","ptype","unpublish","audioSend","videoSend","createOffer","media","replaceVideo","audioRecv","videoRecv","maxScreenShareWidth","maxCameraWidth","idealCameraWidth","simulcast","simulcast2","publish","sendHeaders","Object","keys","projectDataKey","Date","getTime","lastSentState","maxSize","stateData","dataSize","totalCount","Math","ceil","sentSize","size","string","substring","key","total","index","lastSentDrawing","drawing","isOn","lastSentRange","byUser","lectureVideo","lectureSlide","status","isRecording","projectData","datas","combinedState","_state","_lastState","timeStamp","loadAssetsForGame","assets","setAll","projectTimeout","setProject","_drawing","_lastSentDrawing","drawTimer","addDrawing","setDrawingBoard","_editorRange","_lastSentRange","setEditorRange","isEnd","showFeedbackAlert","isLectureVideoOn","selectedLectureVideoURL","isLectureSlideOn","selectedSlideIndex","slide","recvAudio","recvVideo","now","fileName","getRecordFileName","record","filename","newBitrate","beforeBitrate","minimumBitrate","doDownGrade","result","doDownGradeInterVal","upgradeTimer","upBitrate","doUpgrade","doUpgradeInterVal","lastSentCode","sceneId","selectedSprite","selectedObject","setSpriteCode","reservationId","idPart","recordFilePath","setTimerRef","elem","timerRef","clearInterval","timerInterval","setInterval","timeDiff","floor","min","sec","formNum","num","innerText","handleDrawingBtn","handleLectureSlideBtn","handleSelectedLectureSlide","handleLectureVideoBtn","handleLectureVideoListBtn","isLectureVideoListOn","handleVoiceToggleButton","audioEnabled","handleVideoToggleButton","myVideoHidden","handleChangeVideoButton","screenMode","navigator","mediaDevices","getDisplayMedia","getUserMedia","then","setStream","bind","width","audioStream","addTrack","handleExitBtn","showExitConfirmAlert","setCompleteReservation","showExitAlert","studentEmail","url","WIZLIVE","open","handleFreeTrialSurvey","isShowSurveyPopup","showFeedbackResultAlert","title","subtitle","setRemoteVideo","remoteVideo","setLocalVideo","handleSMS","param","tutorEmail","postSendStudentMessage","res","json","catch","e","payload","rnd","onDragStop","d","x","y","onResize","direction","ref","delta","position","max","style","height","JANUS_SERVER","randomString","recodingEnabled","tempBitrate","poorNetwork","userVideoId","videoIdList","audioInputList","audioOutputList","videoInputList","opposite","document","addEventListener","pId","postWizLiveEntrance","enumerateDevices","devices","defaultCameraId","defaultAudioId","tempAudioInput","tempVideoInput","tempAudioOutput","tempVideoIdList","device","idx","deviceId","kind","push","label","_err","__err","ondevicechange","_streamId","item","getOppositeUserInfo","userProfile","addRoom","icon","destroy","removeEventListener","simulcastStarted","feed","webRTCAdapter","browserDetails","browser","safariVp8","toUpperCase","offer_video","videoCodec","createAnswer","preview","videoTracks","poorNetworkTimer","ondataopen","ondata","config","webrtcStuff","myStream","s","removeTrack","stop","videoTransceiver","transceivers","pc","getTransceivers","t","sender","track","receiver","replaceTrack","pageType","postLiveEntrance","sendWizLiveWebhook","len","charSet","randomPoz","random","lectureVideos","lectureSlides","isFreeTrial","handleSelectTab","handleChangeZIndex","zIndex","handleChangeTest","handleDevice","clientWidth","project","userinfo","webrtc"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport RndWrapper from \"../../utils/RndWrapper\";\nimport stringify from \"json-stringify-safe\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport { URL, isConnectProd } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as webrtcActions from \"../../Store/Reducer/webrtc\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as chatActions from \"../../Store/Reducer/chat\";\nimport * as sceneActions from \"../../Store/Reducer/scene\";\nimport Stomp from \"stompjs\";\nimport View from \"./View\";\nimport {\n  showAlert,\n  // showTwoBtnAlert,\n  showTwoBtnAlertWithTextarea\n  // showDeviceTest\n} from \"../../../../Common/Util/AlertManager\";\nimport DrawingBoard from \"./Component/DrawingBoard\";\nimport LogContainer from \"./Component/LogContainer\";\nimport LectureVideoContainer from \"./Component/LectureVideoContainer\";\nimport LectureSlideContainer from \"./Component/LectureSlideContainer\";\nimport FreeTrialSurveyPopup from \"./Component/FreeTrialSurveyPopup\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\";\n// import { minifyJSON, restoreJSON } from \"../../utils/oobcMinify\";\n\nconst Janus = window.Janus;\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.janus = undefined;\n    this.videocall = undefined;\n    this.serverUrl = URL.JANUS_SERVER;\n    this.localVideo = undefined;\n    this.remoteVideo = undefined;\n    this.mystream = undefined;\n    this.myid = undefined;\n    this.mypvtid = undefined; // We use this other ID just to map our subscriptions to us\n    this.opaqueId = \"wizlive-\" + Janus.randomString(12);\n    this.myroom = this.generateRoomId();\n    this.feeds = [];\n    this.remoteFeed = undefined;\n    this.maxScreenShareWidth = 720;\n    this.maxCameraWidth = 720;\n    this.idealCameraWidth = 480;\n    this.timerRef = undefined;\n    this.screenMode = \"camera\";\n    this.audioSend = false;\n    this.videoSend = false;\n\n    this.recordFilePath = \"/home/ubuntu/states\";\n    this.recodingEnabled = isConnectProd();\n\n    this.projectData = {};\n    this.sync = false;\n\n    // janus video qulity params\n    this.doDownGrade = true;\n    this.doDownGradeInterVal = 7000;\n    this.doUpgrade = true;\n    this.doUpgradeInterVal = 10000;\n    this.upgradeTimer = undefined;\n    this.tempBitrate = 0;\n    this.minimumBitrate = 64000;\n    this.maximumBitrate = 1024000;\n    this.beforeBitrate = this.maximumBitrate / 2;\n    this.timer = null;\n\n    this.state = {\n      recvAudio: true,\n      recvVideo: true,\n      audioEnabled: true,\n      myVideoHidden: false,\n      connected: false,\n      log: undefined,\n      startTime: undefined,\n      isEnd: false,\n      poorNetwork: false,\n      isLectureVideoOn: false,\n      isLectureSlideOn: false,\n      isMqConnected: false,\n      isShowSurveyPopup: false,\n      isRecording: false,\n\n      userVideoId: undefined,\n      videoIdList: [],\n      audioInputList: [], // audio input\n      audioOutputList: [], // audio output\n      videoInputList: [] // video input\n    };\n\n    this.mq = {\n      topicName: `/topic/wizlive${this.props.roomId}-${this.props.tutorEmail}`,\n      client: null,\n      subscription: null\n    };\n\n    this.opposite = \"\";\n  }\n\n  MEDIA_CAMERA = \"MEDIA_CAMERA\";\n  MEDIA_SCREEN = \"MEDIA_SCREEN\";\n  DATA_TYPE_DEVICE_STATUS = \"DATA_TYPE_DEVICE_STATUS\";\n  DATA_TYPE_PROJECT = \"DATA_TYPE_PROJECT\";\n  DATA_TYPE_CODE = \"DATA_TYPE_CODE\";\n  DATA_TYPE_CANVAS = \"DATA_TYPE_CANVAS\";\n  DATA_TYPE_CANVAS_TOGGLE = \"DATA_TYPE_CANVAS_TOGGLE\";\n  DATA_TYPE_EDITOR_RANGE = \"DATA_TYPE_EDITOR_RANGE\";\n  DATA_TYPE_HIGHLIGHT = \"DATA_TYPE_HIGHLIGHT\";\n  DATA_TYPE_LOG = \"DATA_TYPE_LOG\";\n  DATA_TYPE_EXIT = \"DATA_TYPE_EXIT\";\n  DATA_TYPE_LECTURE_VIDEO = \"DATA_TYPE_LECTURE_VIDEO\";\n  DATA_TYPE_LECTURE_SLIDE = \"DATA_TYPE_LECTURE_SLIDE\";\n  DATA_TYPE_RECORDING = \"DATA_TYPE_RECORDING\";\n\n  // janus Video\n  DATA_TYPE_JANUS_VIDEO = \"DATA_TYPE_JANUS_VIDEO\";\n\n  WEBHOOK_TYPE_CONNECTED = \"WEBHOOK_TYPE_CONNECTED\";\n  WEBHOOK_TYPE_CONNECTED_ALL = \"WEBHOOK_TYPE_CONNECTED_ALL\";\n  WEBHOOK_TYPE_DISCONNECTED = \"WEBHOOK_TYPE_DISCONNECTED\";\n\n  poorNetworkMessageMS = 5000;\n\n  // new Get user mediaDevice Code\n  constraints = {\n    video: true,\n    audio: true\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.inputEventListener, true);\n    document.addEventListener(\"keydown\", this.inputEventListener, true);\n\n    const { tutorEmail, email, reservationId, pId /*, pageType*/ } = this.props;\n\n    request\n      .postWizLiveEntrance({\n        id: reservationId,\n        isTutor: email === tutorEmail,\n        pId: pId\n      })\n      .then(res => res.json())\n      .then(json => {\n        // console.log(json);\n      });\n\n    // navigator.mediaDevices.getUserMedia(this.constraints).then(\n    //   () => {\n    //     console.log(\"MEDIA TEST[video(ok), mic(ok)]\");\n    //   },\n    //   err => {\n\n    //   }\n    // );\n\n    // [john] detect all media devices\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(\n        function(devices) {\n          // device.kind (audioinput / audiooutput / videoinput )\n          // device.label (device name)\n          // device.deviceId (unique id)\n          let defaultCameraId = undefined;\n          let defaultAudioId = undefined;\n          let tempAudioInput = [];\n          let tempVideoInput = [];\n          let tempAudioOutput = [];\n          let tempVideoIdList = [];\n          devices.forEach(function(device, idx) {\n            if (device.deviceId === \"\") return;\n            if (device.kind === \"audioinput\" && device.deviceId !== \"default\") {\n              // 현재 사용중인 default 장비가 array에 중복 되어 있음\n              // tempAudioInput.push(device.deviceId);\n              tempAudioInput.push({ id: device.deviceId, label: device.label });\n              if (!defaultAudioId) defaultAudioId = device.deviceId;\n            } else if (device.kind === \"videoinput\") {\n              // tempVideoInput.push(device.deviceId);\n              tempVideoInput.push({ id: device.deviceId, label: device.label });\n              tempVideoIdList.push(device.deviceId);\n              if (!defaultCameraId) defaultCameraId = device.deviceId;\n            } else if (\n              device.kind === \"audiooutput\" &&\n              device.deviceId !== \"default\"\n            ) {\n              // tempAudioOutput.push(device.deviceId);\n              tempAudioOutput.push({\n                id: device.deviceId,\n                label: device.label\n              });\n            }\n          });\n\n          this.setState({\n            userVideoId: defaultCameraId,\n            videoIdList: tempVideoIdList,\n            audioInputList: tempAudioInput,\n            videoInputList: tempVideoInput,\n            audioOutputList: tempAudioOutput\n          });\n        }.bind(this)\n      )\n      .catch(function(err) {\n        console.error(err.name + \": \" + err.message);\n        this.sendWizLabReport(err);\n      });\n\n    navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(\n      () => {\n        this.audioSend = true;\n        this.videoSend = true;\n        this.setup();\n      },\n      err => {\n        navigator.mediaDevices.getUserMedia({ audio: true }).then(\n          () => {\n            this.handleMediaError(err, \"video\");\n            this.audioSend = true;\n            this.videoSend = false;\n            this.setup();\n          },\n          _err => {\n            navigator.mediaDevices.getUserMedia({ video: true }).then(\n              () => {\n                this.handleMediaError(err, \"audio\");\n                this.audioSend = false;\n                this.videoSend = true;\n                this.setup();\n              },\n              __err => {\n                this.handleMediaError(err, \"all\");\n                this.setup();\n                showPopUp(\n                  <Popup.OneButton\n                    intl={this.props.intl}\n                    titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE\"\n                    subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG\"\n                    buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n                  />\n                );\n              }\n            );\n          }\n        );\n      }\n    );\n\n    // [john] detect input device changed\n    navigator.mediaDevices.ondevicechange = e => {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then(\n          function(devices) {\n            let tempAudioInput = [];\n            let tempVideoInput = [];\n            let tempAudioOutput = [];\n            let tempVideoIdList = [];\n            devices.forEach(function(device) {\n              if (\n                device.kind === \"audioinput\" &&\n                device.deviceId !== \"default\"\n              ) {\n                // tempAudioInput.push(device.deviceId);\n                tempAudioInput.push({\n                  id: device.deviceId,\n                  label: device.label\n                });\n              } else if (device.kind === \"videoinput\") {\n                // tempVideoInput.push(device.deviceId);\n                tempVideoInput.push({\n                  id: device.deviceId,\n                  label: device.label\n                });\n                tempVideoIdList.push(device.deviceId);\n              } else if (\n                device.kind === \"audiooutput\" &&\n                device.deviceId !== \"default\"\n              ) {\n                // tempAudioOutput.push(device.deviceId);\n                tempAudioOutput.push({\n                  id: device.deviceId,\n                  label: device.label\n                });\n              }\n            });\n\n            // check new deviceId\n            // _streamId -> 기존에 없던 새로운 media 장비\n            let _streamId = undefined;\n\n            if (tempVideoInput.length > this.state.videoInputList.length) {\n              // 신규 장비 입력\n              // 신규 리스트 중에서 기존에 없는게 있는지 확인\n              tempVideoInput.forEach(item => {\n                if (!this.state.videoIdList.includes(item.id)) {\n                  _streamId = item.id;\n                }\n              });\n            } else {\n              // 기존장비 제거\n              // 기존 리스트중에서 제거되고 남은 장비 중 첫번쨰\n              this.state.videoInputList.forEach(item => {\n                if (!tempVideoInput.includes(item)) {\n                  _streamId = item.id;\n                }\n              });\n            }\n\n            if (_streamId)\n              navigator.mediaDevices\n                .getUserMedia({ audio: true, video: { deviceId: _streamId } })\n                .then(\n                  function(stream) {\n                    this.setStream(stream);\n                  }.bind(this)\n                );\n\n            this.setState({\n              userVideoId: _streamId,\n              videoIdList: tempVideoIdList,\n              audioInputList: tempAudioInput,\n              videoInputList: tempVideoInput,\n              audioOutputList: tempAudioOutput\n            });\n          }.bind(this)\n        )\n        .catch(function(err) {\n          console.error(err.name + \": \" + err.message);\n          this.sendWizLabReport(err);\n        });\n    };\n\n    this.getOppositeUserInfo();\n  }\n\n  handleMediaError = (err, type) => {\n    console.error(\"MEDIA TEST MEDIA TEST\", err.name);\n    if (err.name === \"NotFoundError\" || err.name === \"DevicesNotFoundError\") {\n      // 장비 자체가 없을때에\n      showPopUp(\n        <Popup.OneButton\n          intl={this.props.intl}\n          titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\"\n          subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG_NO_DEVICE\"\n          buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n        />\n      );\n    } else if (\n      err.name === \"NotReadableError\" ||\n      err.name === \"TrackStartError\"\n    ) {\n      // 다른 프로그램에서 이미 camera, mic를 사용중일때\n      showPopUp(\n        <Popup.OneButton\n          intl={this.props.intl}\n          titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\"\n          subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG_NO_USABLE_DEVICE\"\n          buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n        />\n      );\n    } else if (\n      err.name === \"OverconstrainedError\" ||\n      err.name === \"ConstraintNotSatisfiedError\"\n    ) {\n      // chrome의 특정 버전에서 getUserMedia() 가 오류 발생\n      showPopUp(\n        <Popup.OneButton\n          intl={this.props.intl}\n          titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\"\n          subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG_NO_USABLE_CHROME\"\n          buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n        />\n      );\n    } else if (\n      err.name === \"NotAllowedError\" ||\n      err.name === \"PermissionDeniedError\"\n    ) {\n      // 미디어 장치의 권한이 없을때 1. by System , 2.by browser\n      if (err.toString().includes(\"system\")) {\n        showPopUp(\n          <Popup.OneButton\n            intl={this.props.intl}\n            titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE\"\n            subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG_NO_USABLE_BY_SYSTEM\"\n            buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n          />\n        );\n      } else {\n        showPopUp(\n          <Popup.OneButton\n            intl={this.props.intl}\n            titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE\"\n            subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG\"\n            buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n          />\n        );\n      }\n    } else if (err.name === \"TypeError\" || err.name === \"TypeError\") {\n      // 미디어 장치가 없을때\n      showPopUp(\n        <Popup.OneButton\n          intl={this.props.intl}\n          titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE_DEVICE_ERROR\"\n          subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG_NO_DEVICE\"\n          buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n        />\n      );\n    } else {\n      //other errors\n    }\n\n    this.sendWizLabReport({\n      type: `media device(${type})`,\n      errorName: err.name,\n      msg: err.toString()\n    });\n  };\n\n  inputEventListener = evt => {\n    this.sync = true;\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n    this.syncTimeout = setTimeout(() => {\n      this.sync = false;\n    }, 2000);\n  };\n\n  getOppositeUserInfo() {\n    const { isTutor, studentEmail, tutorEmail, reservationId } = this.props;\n    request\n      .userProfile({\n        email: isTutor ? studentEmail : tutorEmail\n      })\n      .then(res => res.json())\n      .then(json => {\n        this.opposite = json.name;\n        this.props.addRoom(reservationId, this.opposite, json.icon);\n      });\n  }\n\n  setup = () => {\n    this.mqConnect(\n      () => {\n        this.setState({\n          isMqConnected: true\n        });\n\n        Janus.init({\n          debug: \"all\",\n          callback: this.setupJanus\n        });\n      },\n      err => {\n        this.sendWizLabReport(err);\n        console.error(err);\n        this.setState({ isMqConnected: false });\n      }\n    );\n  };\n\n  componentWillMount() {\n    if (this.videocall) {\n      this.videocall.hangup();\n      this.janus.destroy();\n    }\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n    }\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.sync) {\n      const next = nextProps.webrtcProject;\n      const current = this.props.webrtcProject;\n\n      if (stringify(next) !== stringify(current)) {\n        // const nextState = next.state;\n        // const currentState = current.state;\n        if (this.props.editorMode === \"block\") {\n          this.sendData(this.DATA_TYPE_PROJECT, next);\n        } else {\n          let isCodeChanged = true; // 코드만 변경되었는지 체크하는 변수\n          if (\n            !next.state ||\n            !current.state ||\n            !next.state.interaction ||\n            current.state.interaction\n          ) {\n            isCodeChanged = false;\n          } else if (\n            next.state.interaction.selected.scene !==\n            current.state.interaction.selected.scene\n          ) {\n            isCodeChanged = false;\n          } else if (\n            stringify(next.state.interaction.selected.objects) !==\n            stringify(current.state.interaction.selected.objects)\n          ) {\n            isCodeChanged = false;\n          } else {\n            const selectedSceneId = next.state.interaction.selected.scene;\n            const selectedSpriteId =\n              next.state.interaction.selected.objects[selectedSceneId].name;\n            const nextCode =\n              next.state.scene.scenes[selectedSceneId].sprites[selectedSpriteId]\n                .code;\n            const currentCode =\n              current.state.scene.scenes[selectedSceneId].sprites[\n                selectedSpriteId\n              ].code;\n            if (nextCode !== currentCode) {\n              this.sendData(this.DATA_TYPE_CODE, { code: nextCode });\n            } else {\n              isCodeChanged = false;\n            }\n          }\n          if (!isCodeChanged) {\n            this.sendData(this.DATA_TYPE_PROJECT, next);\n          }\n        }\n      }\n    }\n\n    if (this.props.isTutor) {\n      if (nextProps.highlightBtnId !== this.props.highlightBtnId) {\n         this.sendData(this.DATA_TYPE_HIGHLIGHT, nextProps.highlightBtnId);\n         // set tutor state \n         if (this.timer) {\n          clearTimeout(this.timer);\n          }\n          this.props.setBtnHighlight(nextProps.highlightBtnId);\n        \n          this.timer = setTimeout(() => {\n            this.props.setBtnHighlight();\n          }, 800);\n      }\n\n      if (nextProps.webrtcDrawing.length !== this.props.webrtcDrawing.length) {\n        this.sendData(\n          this.DATA_TYPE_CANVAS,\n          nextProps.webrtcDrawing[nextProps.webrtcDrawing.length - 1]\n        );\n      }\n\n      if (nextProps.isDrawingBoardOn !== this.props.isDrawingBoardOn) {\n        this.sendData(this.DATA_TYPE_CANVAS_TOGGLE, nextProps.isDrawingBoardOn);\n      }\n    } else {\n      if (stringify(nextProps.log) !== stringify(this.props.log)) {\n        this.sendData(this.DATA_TYPE_LOG, nextProps.log);\n      }\n    }\n\n    const nextRange = stringify(nextProps.editorRange);\n    const currentRange = stringify(this.props.editorRange);\n    if (nextRange !== currentRange) {\n      if (this.sync) {\n        this.sendData(this.DATA_TYPE_EDITOR_RANGE, nextProps.editorRange);\n      }\n    }\n\n    return true;\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.inputEventListener);\n    document.removeEventListener(\"keydown\", this.inputEventListener);\n    this.mqDisconnect();\n  }\n\n  mqConnect = (mqReadyCallback, mqErrorCallback) => {\n    this.mq.client = Stomp.client(URL.MQ);\n    this.mq.client.debug = null;\n    this.mq.client.reconnect_delay = 5000;\n\n    const { client } = this.mq;\n    const headers = {\n      login: \"wizschool\",\n      passcode: \"Wizschool2018!!\",\n      host: \"/\"\n    };\n    headers[\"client-id\"] = this.props.email + this.props.roomId;\n\n    client.connect(\n      headers,\n      frame => {\n        const { client, topicName } = this.mq;\n        this.mq.subscription = client.subscribe(topicName, msg => {\n          const recvData = msg.body;\n          const senderId = msg.headers.senderId;\n          if (senderId !== this.props.email) {\n            this.onReceiveData(JSON.parse(recvData));\n          } else {\n            // console.log(\"This is data that sending of me\");\n          }\n        });\n        mqReadyCallback();\n      },\n      err => {\n        mqErrorCallback(err);\n      }\n    );\n  };\n\n  mqDisconnect = () => {\n    const { client, subscription } = this.mq;\n    if (client) {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      client.disconnect(() => {\n        this.setState({ isMqConnected: false });\n      });\n    }\n  };\n\n  setupJanus = () => {\n    if (!Janus.isWebrtcSupported()) {\n      showPopUp(\n        <Popup.OneButton\n          intl={this.props.intl}\n          titleId=\"ID_WEBRTC_UNSUPPORT\"\n          buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n        />\n      );\n      return;\n    }\n    this.janus = new Janus({\n      server: this.serverUrl,\n      iceTransportPolicy: \"relay\",\n      iceServers: URL.ICE_SERVERS,\n      success: this.attachJanus,\n      error: error => {\n        Janus.error(error);\n        this.sendWizLabReport(error);\n      },\n      destroyed: () => {\n        Janus.log(\"destroyed\");\n      }\n    });\n  };\n\n  attachJanus = () => {\n    this.janus.attach({\n      plugin: \"janus.plugin.videoroom\",\n      opaqueId: this.opaqueId,\n      success: pluginHandle => {\n        this.videocall = pluginHandle;\n        this.handleId = this.videocall.getId();\n        Janus.log(\n          `Plugin attached! (${this.videocall.getPlugin()}, id=${this.videocall.getId()})`\n        );\n        Janus.log(\"  -- This is a publisher/manager\");\n        this.checkRoom();\n        // this.registerUsername();\n      },\n      error: error => {\n        Janus.error(\"  -- Error attaching plugin...\", error);\n        this.sendWizLabReport(error);\n      },\n      consentDialog: on => {\n        Janus.debug(`Consent dialog should be ${on ? \"on\" : \"off\"} now`);\n      },\n      mediaState: (medium, on) => {\n        Janus.log(\n          `Janus ${on ? \"started\" : \"stopped\"} receiving our ${medium}`\n        );\n      },\n      webrtcState: on => {\n        Janus.log(\n          `Janus says our WebRTC PeerConnection is ${on ? \"up\" : \"down\"} now`\n        );\n        if (on) {\n          this.sendWebhook(this.WEBHOOK_TYPE_CONNECTED);\n        }\n      },\n      onmessage: (msg, jsep) => {\n        Janus.debug(\" ::: Got a message (publisher) :::\");\n        Janus.debug(msg);\n        const event = msg.videoroom;\n        Janus.debug(\"Event: \" + event);\n\n        if (event) {\n          if (event === \"joined\") {\n            // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n            this.myid = msg.id;\n            this.mypvtid = msg.private_id;\n            Janus.log(\n              `Successfully joined room ${msg.room} with ID ${this.myid}`\n            );\n\n            this.publishOwnFeed();\n            // Any new feed to attach to?\n            if (msg.publishers) {\n              const list = msg.publishers;\n              Janus.debug(\"Got a list of available publishers/feeds:\");\n              Janus.debug(list);\n              list.forEach(l => {\n                const id = l.id;\n                const display = l.display;\n                const audio = l.audio_codec;\n                const video = l.video_codec;\n                Janus.debug(\n                  `  >> [${id}] ${display} audio: ${audio}, video: ${video})`\n                );\n                if (l.display !== this.props.email) {\n                  this.newRemoteFeed(id, display, audio, video);\n                } else {\n                  this.videocall.send({\n                    message: { request: \"kick\", room: this.myroom, id: id },\n                    success: data => {\n                      Janus.debug(data);\n                    }\n                  });\n                }\n              });\n            }\n          } else if (event === \"destroyed\") {\n            // The room has been destroyed\n            Janus.warn(\"The room has been destroyed!\");\n          } else if (event === \"event\") {\n            // Any new feed to attach to?\n            if (msg.publishers) {\n              const list = msg.publishers;\n              Janus.debug(\"Got a list of available publishers/feeds:\");\n              Janus.debug(list);\n              list.forEach(l => {\n                const id = l.id;\n                const display = l.display;\n                const audio = l.audio_codec;\n                const video = l.video_codec;\n                Janus.debug(\n                  `  >> [${id}] ${display} audio: ${audio}, video: ${video})`\n                );\n                if (l.display !== this.props.email) {\n                  this.newRemoteFeed(id, display, audio, video);\n                }\n              });\n            } else if (msg.leaving) {\n              // One of the publishers has gone away?\n              const leaving = msg.leaving;\n              Janus.log(\"Publisher left: \" + leaving);\n              this.remoteFeed = null;\n\n              for (let i = 1; i < 6; i++) {\n                if (this.feeds[i] && this.feeds[i].rfid === leaving) {\n                  this.remoteFeed = this.feeds[i];\n                  break;\n                }\n              }\n              if (this.remoteFeed) {\n                Janus.debug(\n                  `Feed ${this.remoteFeed.rfid} (${this.remoteFeed.rfdisplay}) has left the room, detaching`\n                );\n                this.feeds[this.remoteFeed.rfindex] = null;\n                this.remoteFeed.detach();\n                this.setState({\n                  connected: false,\n                  startTime: undefined,\n                  log: undefined\n                });\n\n                this.sendWebhook(this.WEBHOOK_TYPE_DISCONNECTED);\n              }\n            } else if (msg.unpublished) {\n              // One of the publishers has unpublished?\n              const unpublished = msg[\"unpublished\"];\n              Janus.log(`Publisher left: ${unpublished}`);\n              if (unpublished === \"ok\") {\n                // That's us\n                this.videocall.hangup();\n                return;\n              }\n              this.remoteFeed = null;\n              for (let i = 1; i < 6; i++) {\n                if (this.feeds[i] && this.feeds[i].rfid === unpublished) {\n                  this.remoteFeed = this.feeds[i];\n                  break;\n                }\n              }\n              if (this.remoteFeed) {\n                Janus.debug(\n                  `Feed ${this.remoteFeed.rfid} (${this.remoteFeed.rfdisplay}) has left the room, detaching`\n                );\n                this.feeds[this.remoteFeed.rfindex] = null;\n                this.remoteFeed.detach();\n                this.setState({\n                  connected: false,\n                  startTime: undefined,\n                  log: undefined\n                });\n\n                this.sendWebhook(this.WEBHOOK_TYPE_DISCONNECTED);\n              }\n            } else if (msg.error) {\n              if (msg.error_code === 426) {\n                // This is a \"no such room\" error: give a more meaningful description\n                // console.error(\n                //   \"<p>Apparently room <code>\" +\n                //     this.myroom +\n                //     \"</code> (the one this demo uses as a test room) \" +\n                //     \"does not exist...</p><p>Do you have an updated <code>janus.plugin.videoroom.jcfg</code> \" +\n                //     \"configuration file? If not, make sure you copy the details of room <code>\" +\n                //     this.myroom +\n                //     \"</code> \" +\n                //     \"from that sample in your current configuration file, then restart Janus and try again.\"\n                // );\n                Janus.error(\"No such room\");\n              } else {\n                Janus.error(msg.error);\n                this.sendWizLabReport(msg.error);\n              }\n            }\n          }\n        }\n\n        if (jsep) {\n          Janus.debug(\"Handling SDP as well...\");\n          Janus.debug(jsep);\n          this.videocall.handleRemoteJsep({ jsep: jsep });\n          // Check if any of the media we wanted to publish has\n          // been rejected (e.g., wrong or unsupported codec)\n          const audio = msg.audio_codec;\n          if (\n            this.mystream &&\n            this.mystream.getAudioTracks() &&\n            this.mystream.getAudioTracks().length > 0 &&\n            !audio\n          ) {\n            // Audio has been rejected\n            Janus.warn(\n              \"Our audio stream has been rejected, viewers won't hear us\"\n            );\n          }\n          const video = msg.video_codec;\n          if (\n            this.mystream &&\n            this.mystream.getVideoTracks() &&\n            this.mystream.getVideoTracks().length > 0 &&\n            !video\n          ) {\n            // Video has been rejected\n            Janus.warn(\n              \"Our video stream has been rejected, viewers won't see us\"\n            );\n          }\n        }\n      },\n      onlocalstream: stream => {\n        Janus.debug(\" ::: Got a local stream :::\");\n        this.mystream = stream;\n        Janus.debug(stream);\n        Janus.attachMediaStream(this.localVideo, stream);\n      },\n      onremotestream: stream => {\n        // The publisher stream is sendonly, we don't expect anything here\n      },\n      oncleanup: () => {\n        Janus.log(\" ::: Got a cleanup notification :::\");\n        this.mystream = null;\n        this.setState({\n          connected: false,\n          startTime: undefined,\n          log: undefined\n        });\n      }\n    });\n  };\n\n  generateRoomId = () => {\n    const { roomId } = this.props;\n    // let newId = \"\";\n    // for (let i = 0; i < roomId.length; i++) {\n    //   newId += roomId.charAt(i).charCodeAt(0);\n    // }\n    // newId = parseInt(newId);\n    // // console.log(`GENERATED ROOM ID : ${newId}`);\n    // return newId;\n    return parseInt(roomId);\n  };\n\n  checkRoom = () => {\n    // this.videocall.send({\n    //   message: { request: \"destroy\", room: this.myroom }\n    // });\n    // return;\n    Janus.debug(\"is room exist...?\");\n    this.videocall.send({\n      message: { request: \"exists\", room: this.myroom },\n      success: data => {\n        if (data.exists) {\n          this.registerUsername();\n        } else {\n          Janus.debug(\"Room is creating...\");\n          this.videocall.send({\n            message: {\n              request: \"create\",\n              bitrate: this.maximumBitrate / 2,\n              publishers: 30,\n              bitrate_cap: true,\n              room: this.myroom,\n              is_private: true\n            },\n            success: this.registerUsername\n          });\n        }\n      }\n    });\n  };\n\n  registerUsername = () => {\n    const { email } = this.props;\n    const register = {\n      request: \"join\",\n      room: this.myroom,\n      ptype: \"publisher\",\n      display: email\n    };\n    this.videocall.send({ message: register });\n  };\n\n  unpublish = () => {\n    const message = {\n      request: \"unpublish\"\n    };\n    this.videocall.send({ message: message });\n  };\n\n  publishOwnFeed = () => {\n    const { audioSend, videoSend } = this;\n    if (!audioSend && !videoSend) {\n      return;\n    }\n    // Publish our stream\n    this.videocall.createOffer({\n      // Add data:true here if you want to publish datachannels as well\n      media: {\n        // video: this.screen,\n        replaceVideo: true,\n        audioRecv: false,\n        videoRecv: false,\n        audioSend,\n        videoSend,\n        maxScreenShareWidth: this.maxScreenShareWidth,\n        maxCameraWidth: this.maxCameraWidth,\n        idealCameraWidth: this.idealCameraWidth\n      }, // Publishers are sendonly\n      // If you want to test simulcasting (Chrome and Firefox only), then\n      // pass a ?simulcast=true when opening this demo page: it will turn\n      // the following 'simulcast' property to pass to janus.js to true\n      simulcast: false,\n      simulcast2: false,\n      success: jsep => {\n        Janus.debug(\"Got publisher SDP!\");\n        Janus.debug(jsep);\n        const publish = {\n          request: \"configure\",\n          audio: this.audioSend,\n          video: this.videoSend\n        };\n        // You can force a specific codec to use when publishing by using the\n        // audiocodec and videocodec properties, for instance:\n        // \t\tpublish[\"audiocodec\"] = \"opus\"\n        // to force Opus as the audio codec to use, or:\n        // \t\tpublish[\"videocodec\"] = \"vp9\"\n        // to force VP9 as the videocodec to use. In both case, though, forcing\n        // a codec will only work if: (1) the codec is actually in the SDP (and\n        // so the browser supports it), and (2) the codec is in the list of\n        // allowed codecs in a room. With respect to the point (2) above,\n        // refer to the text in janus.plugin.videoroom.cfg for more details\n        this.videocall.send({ message: publish, jsep: jsep });\n      },\n      error: error => {\n        this.sendWizLabReport(error);\n        Janus.error(\"WebRTC error:\", JSON.stringify(error));\n        if (error === \"No capture device found\") {\n          showPopUp(\n            <Popup.OneButton\n              intl={this.props.intl}\n              titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE\"\n              subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG\"\n              buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n            />\n          );\n          return;\n        }\n        Janus.error(\"WebRTC error... \" + JSON.stringify(error));\n        if (error.message && error.message.includes(\"Permission\")) {\n          //mic&audio popup\n          showPopUp(\n            <Popup.OneButton\n              intl={this.props.intl}\n              titleId=\"ID_BUILDER_LIVE_ACCESS_TITLE\"\n              subtitleId=\"ID_BUILDER_LIVE_ACCESS_MSG\"\n              buttonNameId=\"ID_BUILDER_LIVE_ACCESS_OK\"\n            />\n          );\n        }\n      }\n    });\n  };\n\n  newRemoteFeed(id, display, audio, video) {\n    // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n    this.remoteFeed = null;\n    this.janus.attach({\n      plugin: \"janus.plugin.videoroom\",\n      opaqueId: this.opaqueId,\n      success: pluginHandle => {\n        this.remoteFeed = pluginHandle;\n        this.remoteFeed.simulcastStarted = false;\n        Janus.log(\n          `Plugin attached! (${this.remoteFeed.getPlugin()}, id=${this.remoteFeed.getId()})`\n        );\n        Janus.log(\"  -- This is a subscriber\");\n        // We wait for the plugin to send us an offer\n        const subscribe = {\n          request: \"join\",\n          room: this.myroom,\n          ptype: \"subscriber\",\n          feed: id,\n          private_id: this.mypvtid\n        };\n        // In case you don't want to receive audio, video or data, even if the\n        // publisher is sending them, set the 'offer_audio', 'offer_video' or\n        // 'offer_data' properties to false (they're true by default), e.g.:\n        // \t\tsubscribe[\"offer_video\"] = false;\n        // For example, if the publisher is VP8 and this is Safari, let's avoid video\n        if (\n          Janus.webRTCAdapter.browserDetails.browser === \"safari\" &&\n          (video === \"vp9\" || (video === \"vp8\" && !Janus.safariVp8))\n        ) {\n          if (video) video = video.toUpperCase();\n\n          Janus.error(\n            `Publisher is using ${video}, but Safari doesn't support it: disabling video`\n          );\n          subscribe.offer_video = false;\n        }\n        this.remoteFeed.videoCodec = video;\n        this.remoteFeed.send({ message: subscribe });\n      },\n      error: error => {\n        this.sendWizLabReport(error);\n        Janus.error(\"  -- Error attaching plugin...\", error);\n      },\n      onmessage: (msg, jsep) => {\n        Janus.debug(\" ::: Got a message (subscriber) :::\");\n        Janus.debug(msg);\n        const event = msg.videoroom;\n        Janus.debug(\"Event: \" + event);\n        if (msg.error) {\n          this.sendWizLabReport(msg.error);\n          Janus.error(msg.error);\n        } else if (event) {\n          if (event === \"attached\") {\n            // Subscriber created and attached\n            for (let i = 1; i < 6; i++) {\n              if (!this.feeds[i]) {\n                this.feeds[i] = this.remoteFeed;\n                this.remoteFeed.rfindex = i;\n                break;\n              }\n            }\n            this.remoteFeed.rfid = msg.id;\n            this.remoteFeed.rfdisplay = msg.display;\n            Janus.log(\n              `Successfully attached to feed ${this.remoteFeed.rfid} (${this.remoteFeed.rfdisplay}) in room ${msg.room}`\n            );\n\n            this.setState({ startTime: Date.now(), connected: true }, () => {\n              const { audioSend, videoSend } = this;\n              this.sendData(this.DATA_TYPE_DEVICE_STATUS, {\n                audioSend,\n                videoSend\n              });\n            });\n\n            if (\n              this.recodingEnabled &&\n              !this.props.studentEmail.includes(\"student\") &&\n              !this.props.tutorEmail.includes(\"ttc\") &&\n              !this.props.studentEmail.includes(\"ttc\")\n            ) {\n              this.sendData(this.DATA_TYPE_RECORDING);\n            }\n            this.sendWebhook(this.WEBHOOK_TYPE_CONNECTED_ALL);\n          } else if (event === \"event\") {\n            // Check if we got an event on a simulcast-related event from this publisher\n          } else if (event === \"slow_link\") {\n            // bitrate maximum:512000 , minimum : 64000 ,  default: 256000\n            console.log(\"slow link occured!\");\n            this.sendData(this.DATA_TYPE_JANUS_VIDEO, true);\n\n            // if (this.poorNetworkTimer) {\n            //   clearTimeout(this.poorNetworkTimer);\n            // }\n            // this.setState({ poorNetwork: true }, () => {\n            //   this.poorNetworkTimer = setTimeout(() => {\n            //     this.setState({ poorNetwork: false });\n            //   }, this.poorNetworkMessageMS);\n            // });\n          } else {\n            // What has just happened?\n          }\n        }\n\n        if (jsep) {\n          Janus.debug(\"Handling SDP as well...\");\n          Janus.debug(jsep);\n          // Answer and attach\n          this.remoteFeed.createAnswer({\n            jsep: jsep,\n            // Add data:true here if you want to subscribe to datachannels as well\n            // (obviously only works if the publisher offered them in the first place)\n            media: { data: false, audioSend: false, videoSend: false }, // We want recvonly audio/video\n            success: jsep => {\n              Janus.debug(\"Got SDP!\");\n              Janus.debug(jsep);\n              const body = { request: \"start\", room: this.myroom };\n              this.remoteFeed.send({ message: body, jsep: jsep });\n            },\n            error: error => {\n              this.sendWizLabReport(error);\n              Janus.error(\"WebRTC error:\", error);\n            }\n          });\n        }\n      },\n      webrtcState: on => {\n        Janus.log(\n          `Janus says this WebRTC PeerConnection (feed #${\n            this.remoteFeed.rfindex\n          }) is ${on ? \"up\" : \"down\"} now`\n        );\n\n        //TODO: remove this\n        setTimeout(() => {\n          if (!this.props.isTutor) {\n            this.sendData(this.DATA_TYPE_LOG, this.props.log);\n          } else {\n            this.sendData(this.DATA_TYPE_PROJECT, {\n              state: {\n                scene: this.props.scene,\n                interaction: this.props.interaction,\n                preview: this.props.preview\n              }\n            });\n          }\n        }, 2000);\n      },\n      onlocalstream: stream => {\n        // The subscriber stream is recvonly, we don't expect anything here\n      },\n      onremotestream: stream => {\n        if (this.remoteFeed && this.remoteFeed.rfindex) {\n          Janus.debug(`Remote feed #${this.remoteFeed.rfindex}`);\n          Janus.attachMediaStream(this.remoteVideo, stream);\n          const videoTracks = stream.getVideoTracks();\n          if (!videoTracks || videoTracks.length === 0) {\n            if (this.poorNetworkTimer) {\n              clearTimeout(this.poorNetworkTimer);\n            }\n            this.setState({ poorNetwork: true }, () => {\n              this.poorNetworkTimer = setTimeout(() => {\n                this.setState({ poorNetwork: false });\n              }, this.poorNetworkMessageMS);\n            });\n          }\n        }\n      },\n      ondataopen: data => {\n        Janus.log(\"The DataChannel is available!\");\n      },\n      ondata: data => {\n        // data = JSON.parse(data.toString());\n        Janus.debug(\"We got data from the DataChannel! \");\n        // this.onReceiveData(JSON.parse(data));\n      },\n      oncleanup: () => {\n        Janus.log(` ::: Got a cleanup notification (remote feed ${id}) :::`);\n      }\n    });\n  }\n\n  sendData = async (type, data) => {\n    if (!this.videocall) {\n      return;\n    }\n    // if (!this.state.connected) {\n    //   return;\n    // }\n    const send = data => {\n      const { client, topicName } = this.mq;\n      const sendHeaders = {\n        \"content-type\": \"application/json\",\n        senderId: this.props.email\n      };\n      client.send(topicName, sendHeaders, data);\n    };\n\n    // const send = data => {\n    //   this.videocall.data({\n    //     text: data,\n    //     error: reason => {\n    //       console.error(reason);\n    //     },\n    //     success: () => {\n    //       Janus.debug(\"Data Sent!\");\n    //     }\n    //   });\n    // };\n\n    if (type === this.DATA_TYPE_PROJECT) {\n      if (Object.keys(data).length === 0) {\n        return;\n      }\n      const projectDataKey = new Date().getTime();\n\n      this.lastSentState = data;\n\n      const maxSize = 10000;\n      // let stateData =\n      //   this.props.editorMode === \"block\"\n      //     ? stringify(minifyJSON(data))\n      //     : stringify(data);\n\n      let stateData = stringify(data);\n\n      let dataSize = stateData.length;\n\n      const totalCount = Math.ceil(dataSize / maxSize);\n      let sentSize = 0;\n\n      for (let i = 0; i < totalCount; ++i) {\n        let size;\n        if (sentSize + maxSize > dataSize) {\n          size = dataSize - sentSize;\n        } else {\n          size = maxSize;\n        }\n\n        const string = stateData.substring(sentSize, sentSize + size);\n        sentSize += string.length;\n        send(\n          JSON.stringify({\n            type,\n            key: projectDataKey,\n            total: totalCount,\n            index: i,\n            data: string\n          })\n        );\n      }\n    } else if (type === this.DATA_TYPE_CANVAS) {\n      this.lastSentDrawing = data;\n      send(stringify({ type, drawing: data }));\n    } else if (type === this.DATA_TYPE_CANVAS_TOGGLE) {\n      send(stringify({ type, isOn: data }));\n    } else if (type === this.DATA_TYPE_EDITOR_RANGE) {\n      this.lastSentRange = data;\n      if (data.byUser) {\n        delete data[\"byUser\"];\n        send(stringify({ type, editorRange: data }));\n      }\n    } else if (type === this.DATA_TYPE_HIGHLIGHT) {\n      send(stringify({ type, highlightBtnId: data }));\n    } else if (type === this.DATA_TYPE_LOG) {\n      send(stringify({ type, log: data }));\n    } else if (type === this.DATA_TYPE_EXIT) {\n      send(stringify({ type }));\n    } else if (type === this.DATA_TYPE_LECTURE_VIDEO) {\n      send(stringify({ type, lectureVideo: data }));\n    } else if (type === this.DATA_TYPE_LECTURE_SLIDE) {\n      send(stringify({ type, lectureSlide: data }));\n    } else if (type === this.DATA_TYPE_DEVICE_STATUS) {\n      send(stringify({ type, status: data }));\n    } else if (type === this.DATA_TYPE_RECORDING) {\n      send(stringify({ type, isRecording: true }));\n    } else if (type === this.DATA_TYPE_JANUS_VIDEO) {\n      send(stringify({ type, status: data }));\n    } else if (type === this.DATA_TYPE_CODE) {\n      send(stringify({ type, code: data.code }));\n    }\n  };\n\n  onReceiveData = async data => {\n    const {\n      type,\n      drawing,\n      isOn,\n      editorRange,\n      // highlightBtnId,\n      log,\n      lectureVideo,\n      lectureSlide,\n      isRecording,\n      status,\n      code\n    } = data;\n\n    if (type === this.DATA_TYPE_PROJECT) {\n      if (!this.projectData[data.key]) {\n        this.projectData[data.key] = { datas: [], total: data.total };\n      }\n\n      this.projectData[data.key].datas[data.index] = data.data;\n      if (this.projectData[data.key].datas.length === data.total) {\n        let string = \"\";\n        for (let i = 0; i < data.total; ++i) {\n          string += this.projectData[data.key].datas[i];\n        }\n        delete this.projectData[data.key];\n\n        // const combinedState =\n        //   this.props.editorMode === \"block\"\n        //     ? JSON.parse(restoreJSON(string))\n        //     : JSON.parse(string);\n\n        const combinedState = JSON.parse(string);\n\n        if (this.lastSentState) {\n          const _state = { ...combinedState };\n          const _lastState = { ...this.lastSentState };\n          if (_state.state.scene) _state.state.scene.timeStamp = 0;\n          if (_lastState.state.scene) _lastState.state.scene.timeStamp = 0;\n          if (stringify(_state) === stringify(_lastState)) return;\n        }\n        const assets = await AssetLibrary.loadAssetsForGame(\n          combinedState.state.scene\n        );\n        AssetLibrary.setAll(assets);\n        if (this.projectTimeout) {\n          clearTimeout(this.projectTimeout);\n        }\n        this.projectTimeout = setTimeout(() => {\n          this.props.setProject(combinedState, true);\n        }, 10);\n      }\n    } else if (type === this.DATA_TYPE_CANVAS) {\n      if (this.lastSentDrawing) {\n        const _drawing = { ...drawing };\n        const _lastSentDrawing = { ...this.lastSentDrawing };\n        if (stringify(_drawing) === stringify(_lastSentDrawing)) return;\n      }\n\n      if (this.drawTimer) {\n        clearTimeout(this.drawTimer);\n      }\n      this.drawTimer = setTimeout(() => {\n        this.props.addDrawing(drawing);\n      }, 500);\n    } else if (type === this.DATA_TYPE_CANVAS_TOGGLE) {\n      this.props.setDrawingBoard(isOn);\n    } else if (type === this.DATA_TYPE_EDITOR_RANGE) {\n      if (this.lastSentRange) {\n        const _editorRange = { ...editorRange };\n        const _lastSentRange = { ...this.lastSentRange };\n        if (stringify(_editorRange) === stringify(_lastSentRange)) return;\n      }\n      this.props.setEditorRange(editorRange);\n    } else if (type === this.DATA_TYPE_HIGHLIGHT) {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n      this.props.setBtnHighlight(data.highlightBtnId);\n      \n      this.timer = setTimeout(() => {\n        this.props.setBtnHighlight();\n      }, 800);\n\n    } else if (type === this.DATA_TYPE_LOG) {\n      this.setState({ log });\n    } else if (type === this.DATA_TYPE_EXIT) {\n      this.unpublish();\n      this.setState({ isEnd: true });\n      this.showFeedbackAlert();\n    } else if (type === this.DATA_TYPE_LECTURE_VIDEO) {\n      this.setState({\n        isLectureVideoOn: lectureVideo.isOn,\n        selectedLectureVideoURL: lectureVideo.video\n      });\n    } else if (type === this.DATA_TYPE_LECTURE_SLIDE) {\n      this.setState({\n        isLectureSlideOn: lectureSlide.isOn,\n        selectedSlideIndex: lectureSlide.slide\n      });\n    } else if (type === this.DATA_TYPE_DEVICE_STATUS) {\n      this.setState({\n        recvAudio: status.audioSend,\n        recvVideo: status.videoSend,\n        connected: true,\n        startTime: Date.now()\n      });\n    } else if (type === this.DATA_TYPE_RECORDING) {\n      this.setState({ isRecording: isRecording });\n      const fileName = this.getRecordFileName();\n      this.videocall.send({\n        message: {\n          request: \"configure\",\n          record: isRecording,\n          filename: fileName\n        }\n      });\n    } else if (type === this.DATA_TYPE_JANUS_VIDEO) {\n      if (data.status) {\n        let newBitrate = this.beforeBitrate / 2;\n        if (newBitrate >= this.minimumBitrate && this.doDownGrade) {\n          this.videocall.send({\n            message: { request: \"configure\", bitrate: newBitrate },\n            success: result => {\n              console.log(\"bitrate down complete\", newBitrate);\n              this.beforeBitrate = newBitrate;\n              this.doDownGrade = false;\n              setTimeout(() => {\n                this.doDownGrade = true;\n              }, this.doDownGradeInterVal);\n            }\n          });\n        } else {\n          // console.log(\n          //   `new bitrate[${newBitrate}] is waitting [${this.doDownGrade}]`\n          // );\n        }\n      }\n\n      if (this.beforeBitrate <= this.maximumBitrate) {\n        if (this.upgradeTimer !== undefined) clearTimeout(this.upgradeTimer);\n\n        this.upgradeTimer = setTimeout(() => {\n          let upBitrate = this.beforeBitrate * 2;\n          if (upBitrate <= this.maximumBitrate && this.doUpgrade) {\n            console.log(\"bitrate upgrade start\", upBitrate);\n            this.videocall.send({\n              message: { request: \"configure\", bitrate: upBitrate },\n              success: result => {\n                console.log(\"bitrate up complete\");\n                this.beforeBitrate = upBitrate;\n                this.doUpgrade = false;\n                setTimeout(() => {\n                  this.doUpgrade = true;\n                  // SocketUtil.sendSocket(\"slowLink\", false);\n                  this.sendData(this.DATA_TYPE_JANUS_VIDEO, false);\n                }, this.doUpgradeInterVal);\n              }\n            });\n          }\n        }, this.doUpgradeInterVal);\n      }\n    } else if (type === this.DATA_TYPE_CODE) {\n      if (this.lastSentCode !== code) {\n        this.lastSentCode = code;\n        const sceneId = this.props.selectedSceneId;\n        const selectedSprite = this.props.selectedObject;\n        if (selectedSprite.name) {\n          this.props.setSpriteCode(sceneId, selectedSprite.name, code);\n        }\n      }\n    }\n  };\n\n  getRecordFileName = () => {\n    const { isTutor, reservationId } = this.props;\n    //const idPart = isTutor ? tutorEmail.split(\"@\")[0] : studentEmail.split(\"@\")[0];\n    const idPart = isTutor ? \"tutor\" : \"student\";\n    return `${\n      this.recordFilePath\n    }/${reservationId}/${reservationId}-${new Date().getTime()}-${idPart}`;\n  };\n\n  setTimerRef = elem => {\n    if (!elem) return;\n    this.timerRef = elem;\n    clearInterval(this.timerInterval);\n    this.timerInterval = setInterval(() => {\n      if (!this.timerRef) return;\n      const timeDiff = Math.floor((Date.now() - this.state.startTime) / 1000);\n      let min = Math.floor(timeDiff / 60);\n      let sec = timeDiff % 60;\n      const formNum = num => (num.toString().length === 1 ? `0${num}` : num);\n      this.timerRef.innerText = `${formNum(min)}:${formNum(sec)}`;\n    }, 1000);\n  };\n\n  handleDrawingBtn = isOn => {\n    this.props.setDrawingBoard(isOn);\n  };\n\n  handleLectureSlideBtn = isOn => {\n    this.setState({\n      isLectureSlideOn: isOn\n    });\n    this.sendData(this.DATA_TYPE_LECTURE_SLIDE, {\n      isOn: isOn,\n      slide: 0\n    });\n  };\n\n  handleSelectedLectureSlide = selectedSlideIndex => {\n    this.setState({\n      isLectureSlideOn: true,\n      selectedSlideIndex\n    });\n    this.sendData(this.DATA_TYPE_LECTURE_SLIDE, {\n      isOn: true,\n      slide: selectedSlideIndex\n    });\n  };\n\n  handleLectureVideoBtn = isOn => {\n    this.setState({\n      isLectureVideoOn: isOn\n    });\n    this.sendData(this.DATA_TYPE_LECTURE_VIDEO, {\n      isOn\n    });\n  };\n\n  handleLectureVideoListBtn = (isOn, selectedLectureVideoURL) => {\n    this.setState({\n      isLectureVideoListOn: isOn\n    });\n\n    if (selectedLectureVideoURL) {\n      this.setState({\n        isLectureVideoOn: true,\n        selectedLectureVideoURL\n      });\n      this.sendData(this.DATA_TYPE_LECTURE_VIDEO, {\n        isOn: true,\n        video: selectedLectureVideoURL\n      });\n    }\n  };\n\n  handleVoiceToggleButton = () => {\n    this.setState({ audioEnabled: !this.state.audioEnabled }, () => {\n      this.videocall.send({\n        message: { request: \"configure\", audio: this.state.audioEnabled }\n      });\n    });\n  };\n\n  handleVideoToggleButton = () => {\n    this.setState({ myVideoHidden: !this.state.myVideoHidden });\n  };\n\n  handleChangeVideoButton = () => {\n    if (this.screenMode === \"window\") {\n      this.screenMode = \"camera\";\n      if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(\n          function(stream) {\n            this.setStream(stream);\n          }.bind(this)\n        );\n      }\n    } else {\n      this.screenMode = \"window\";\n      if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices\n          .getDisplayMedia({\n            video: { width: this.maxScreenShareWidth },\n            audio: true\n          })\n          .then(\n            function(stream) {\n              navigator.mediaDevices\n                .getUserMedia({ audio: true, video: false })\n                .then(\n                  function(audioStream) {\n                    stream.addTrack(audioStream.getAudioTracks()[0]);\n                    this.setStream(stream);\n                  }.bind(this)\n                );\n            }.bind(this),\n            function(error) {\n              this.sendWizLabReport(error);\n              console.error(error);\n            }\n          );\n      }\n    }\n  };\n\n  setStream(stream) {\n    const config = this.videocall.webrtcStuff;\n    if (\n      config.myStream &&\n      config.myStream.getVideoTracks() &&\n      config.myStream.getVideoTracks().length\n    ) {\n      const s = config.myStream.getVideoTracks()[0];\n      config.myStream.removeTrack(s);\n      try {\n        s.stop();\n      } catch (e) {\n        this.sendWizLabReport(e);\n      }\n    }\n\n    config.myStream.addTrack(stream.getVideoTracks()[0]);\n    config.myStream.addTrack(stream.getAudioTracks()[0]);\n\n    let videoTransceiver = null;\n    const transceivers = config.pc.getTransceivers();\n    if (transceivers && transceivers.length > 0) {\n      for (let i in transceivers) {\n        const t = transceivers[i];\n        if (\n          (t.sender && t.sender.track && t.sender.track.kind === \"video\") ||\n          (t.receiver && t.receiver.track && t.receiver.track.kind === \"video\")\n        ) {\n          videoTransceiver = t;\n          break;\n        }\n      }\n    }\n    if (videoTransceiver && videoTransceiver.sender) {\n      videoTransceiver.sender.replaceTrack(stream.getVideoTracks()[0]);\n    } else {\n      config.pc.addTrack(stream.getVideoTracks()[0], stream);\n    }\n    // Janus.attachMediaStream(this.localVideo, stream);\n  }\n\n  handleExitBtn = () => {\n    this.showExitConfirmAlert();\n  };\n\n  showExitConfirmAlert = () => {\n    const callback = () => {\n      request.setCompleteReservation({\n        reservationId: this.props.reservationId\n      });\n      this.sendData(this.DATA_TYPE_EXIT, null);\n      this.unpublish();\n      this.setState({ isEnd: true });\n      this.showExitAlert();\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_CONFIRM\"\n        confirmButtonNameId=\"ID_WIZLIVE_EXIT\"\n        cancelButtonNameId=\"ID_WIZLIVE_CANCEL\"\n      />\n    );\n  };\n\n  showExitAlert = () => {\n    const callback = () => {\n      const { studentEmail, reservationId } = this.props;\n      const url = `${URL.WIZLIVE}/tutor/feedback/${studentEmail}/${reservationId}/false`;\n      window.open(url, \"_blank\");\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_COMPLETE\"\n        subtitleId=\"ID_WIZLIVE_FEEDBACK_REQUEST\"\n        confirmButtonNameId=\"ID_WIZLIVE_FEEDBACK_GO\"\n        cancelButtonNameId=\"ID_WIZLIVE_FEEDBACK_NEXTTIME\"\n      />\n    );\n  };\n\n  handleFreeTrialSurvey = isOn => {\n    this.setState({ isShowSurveyPopup: isOn });\n  };\n\n  showFeedbackAlert = () => {\n    this.handleFreeTrialSurvey(true);\n  };\n\n  showFeedbackResultAlert = success => {\n    let title = success\n      ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\"\n      : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n    let subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n    showPopUp(\n      <Popup.OneButton\n        intl={this.props.intl}\n        titleId={title}\n        subtitleId={subtitle}\n        buttonNameId=\"ID_WIZLIVE_COMFIRM\"\n      />\n    );\n  };\n\n  sendWebhook(type) {\n    const {\n      tutorEmail,\n      studentEmail,\n      email,\n      reservationId,\n      pId,\n      pageType\n    } = this.props;\n    const isTutor = email === tutorEmail;\n    let msg = \"[new 위즈라이브 수업 알림]\\n\";\n\n    switch (type) {\n      case this.WEBHOOK_TYPE_CONNECTED:\n        if (isTutor) {\n          msg += `튜터(${tutorEmail}) 입장 완료(${this.myroom})`;\n        } else {\n          msg += `학생(${studentEmail}) 입장 완료(${this.myroom})`;\n        }\n        if (pageType === \"wizlive\") {\n          request\n            .postWizLiveEntrance({\n              id: reservationId,\n              isTutor: isTutor,\n              pId: pId\n            })\n            .then(res => res.json())\n            .then(json => {\n              // console.log(json);\n            });\n        } else {\n          request\n            .postLiveEntrance({ id: reservationId, isTutor: isTutor })\n            .then(res => res.json())\n            .then(json => {\n              // console.log(json);\n            });\n        }\n        break;\n\n      case this.WEBHOOK_TYPE_CONNECTED_ALL:\n        if (isTutor) {\n          msg += `튜터(${tutorEmail}), 학생(${studentEmail}) 모두 입장 완료. 수업 시작`;\n        } else {\n          return;\n        }\n        break;\n\n      case this.WEBHOOK_TYPE_DISCONNECTED:\n        if (isTutor) {\n          msg += `학생(${studentEmail}) 수업 퇴장`;\n        } else {\n          msg += `튜터(${tutorEmail}) 수업 퇴장`;\n        }\n        break;\n      default:\n        return;\n    }\n    msg += \"\\n\";\n    request.sendWizLiveWebhook({ msg });\n  }\n\n  randomString(len, charSet) {\n    charSet =\n      charSet ||\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let randomString = \"\";\n    for (let i = 0; i < len; i++) {\n      const randomPoz = Math.floor(Math.random() * charSet.length);\n      randomString += charSet.substring(randomPoz, randomPoz + 1);\n    }\n    return randomString;\n  }\n\n  setRemoteVideo = video => {\n    this.remoteVideo = video;\n  };\n\n  setLocalVideo = video => {\n    this.localVideo = video;\n  };\n\n  // handleChangeTest = (type, id) => {\n  //   if (type === \"audioInput\") {\n  //     console.log(id);\n  //     navigator.mediaDevices\n  //       .getUserMedia({\n  //         audio: { deviceId: { exact: id } },\n  //         video: { deviceId: { exact: this.state.userVideoId } }\n  //       })\n  //       .then(\n  //         function(stream) {\n  //           console.log(stream);\n  //           this.setStream(stream);\n  //         }.bind(this)\n  //       );\n  //   } else if (type === \"audioOutput\") {\n  //     console.log(id);\n  //     const localVideo = document.querySelector(\"#localVideo\");\n  //     if (typeof localVideo.sinkId !== \"undefined\") {\n  //       localVideo\n  //         .setSinkId(id)\n  //         .then(() => {\n  //           console.log(`Success, audio output device attached: ${id}`);\n  //         })\n  //         .catch(error => {\n  //           let errorMessage = error;\n  //           if (error.name === \"SecurityError\") {\n  //             errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;\n  //           }\n  //           console.error(errorMessage);\n  //           // Jump back to first output device in the list as it's the default.\n  //         });\n  //     } else {\n  //       console.warn(\"Browser does not support output device selection.\");\n  //     }\n  //     // navigator.mediaDevices\n  //     //   .getUserMedia({\n  //     //     audio: { deviceId: { exact: id } },\n  //     //     video: { deviceId: { exact: this.state.userVideoId}}\n  //     //   })\n  //     //   .then(\n  //     //     function(stream) {\n  //     //       console.log(stream);\n  //     //       this.setStream(stream);\n  //     //     }.bind(this)\n  //     //   );\n  //   } else if (type === \"video\") {\n  //     this.setState({ userVideoId: id });\n  //     navigator.mediaDevices\n  //       .getUserMedia({ audio: true, video: { deviceId: { exact: id } } })\n  //       .then(\n  //         function(stream) {\n  //           this.setStream(stream);\n  //         }.bind(this)\n  //       );\n  //   }\n  //   // if (type === \"cam\") {\n  //   //   this.setState({ userVideoId: e.target.value });\n  //   //   navigator.mediaDevices\n  //   //     .getUserMedia({ audio: true, video: { deviceId: e.target.value } })\n  //   //     .then(\n  //   //       function(stream) {\n  //   //         this.setStream(stream);\n  //   //       }.bind(this)\n  //   //     );\n  //   // } else if (type === \"mic\") {\n  //   //   // navigator.mediaDevices\n  //   //   //   .getUserMedia({\n  //   //   //     audio: { deviceId: { exact: e.target.value } },\n  //   //   //     video: this.state.userVideoId\n  //   //   //   })\n  //   //   //   .then(\n  //   //   //     function(stream) {\n  //   //   //       this.setStream(stream);\n  //   //   //     }.bind(this)\n  //   //   //   );\n  //   // }\n  // };\n\n  // handleDevice = () => {\n  //   let params = {\n  //     audio: {\n  //       input: this.state.audioInputList,\n  //       output: this.state.audioOutputList\n  //     },\n  //     video: this.state.videoInputList\n  //   };\n\n  //   showDeviceTest(this.handleChangeTest, params);\n  // };\n\n  handleSMS = () => {\n    showTwoBtnAlertWithTextarea(\n      \"ID_WIZLIVE_CLASS_MESSAGE_TITLE\",\n      undefined,\n      \"ID_WIZLIVE_CLASS_MESSAGE_TEXT_HINT\",\n      undefined,\n      \"ID_WIZLIVE_CLASS_MESSAGE_TEXT_CONFIRM\",\n      \"ID_WIZLIVE_CLASS_MESSAGE_TEXT_CANCEL\",\n      msg => {\n        const param = {\n          tutorEmail: this.props.email,\n          studentEmail: this.props.studentEmail,\n          message: msg\n        };\n        request\n          .postSendStudentMessage(param)\n          .then(res => res.json())\n          .then(json => {\n            showAlert(\n              \"ID_WIZLIVE_CLASS_MESSAGE_SUCCESS\",\n              undefined,\n              \"ID_WIZLIVE_CLASS_MESSAGE_SUCCESS_OK\"\n            );\n          })\n          .catch(e => {\n            console.error(e);\n          });\n      }\n    );\n  };\n\n  // handleChangeTest = (type, e) => {\n  //   if (type === \"cam\") {\n  //     this.setState({ userVideoId: e.target.value });\n  //     navigator.mediaDevices\n  //       .getUserMedia({ audio: true, video: { deviceId: e.target.value } })\n  //       .then(\n  //         function(stream) {\n  //           this.setStream(stream);\n  //         }.bind(this)\n  //       );\n  //   } else if (type === \"mic\") {\n  //     // navigator.mediaDevices\n  //     //   .getUserMedia({\n  //     //     audio: { deviceId: { exact: e.target.value } },\n  //     //     video: this.state.userVideoId\n  //     //   })\n  //     //   .then(\n  //     //     function(stream) {\n  //     //       this.setStream(stream);\n  //     //     }.bind(this)\n  //     //   );\n  //   }\n  // };\n\n  sendWizLabReport = msg => {\n    let error = msg;\n    try {\n      error = JSON.stringify(error);\n    } catch (e) {}\n\n    const { email } = this.props;\n    request.sendWizLabReport({ payload: JSON.stringify({ email, error }) });\n  };\n\n  //for rnd\n  rnd = {\n    onDragStop: (e, d) => {\n      this.setState({ x: d.x, y: d.y });\n    },\n    onResize: (e, direction, ref, delta, position) => {\n      this.setState({\n        width: Math.max(500, parseInt(ref.style.width)),\n        height: \"auto\",\n        ...position\n      });\n    }\n  };\n\n  render() {\n    const {\n      isDrawingBoardOn,\n      isTutor,\n      roomId,\n      tutorEmail,\n      lectureVideos,\n      lectureSlides,\n      reservationId,\n      isFreeTrial,\n      handleSelectTab,\n      handleChangeZIndex,\n      zIndex,\n      email\n    } = this.props;\n    const {\n      connected,\n      recvAudio,\n      recvVideo,\n      audioEnabled,\n      myVideoHidden,\n      log,\n      startTime,\n      poorNetwork,\n      isEnd,\n      isLectureVideoOn,\n      selectedLectureVideoURL,\n      isLectureVideoListOn,\n      selectedSlideIndex,\n      isLectureSlideOn,\n      isMqConnected,\n      isShowSurveyPopup,\n      audioInputList,\n      audioOutputList,\n      videoInputList,\n      userVideoId\n    } = this.state;\n    const {\n      setRemoteVideo,\n      setLocalVideo,\n      handleVideoToggleButton,\n      handleVoiceToggleButton,\n      handleChangeVideoButton,\n      handleDrawingBtn,\n      handleExitBtn,\n      setTimerRef,\n      handleLectureVideoBtn,\n      handleLectureVideoListBtn,\n      handleSelectedLectureSlide,\n      handleLectureSlideBtn,\n      handleFreeTrialSurvey,\n      opposite,\n      handleSMS,\n      handleChangeTest,\n      handleDevice\n    } = this;\n\n    return (\n      <React.Fragment>\n        <RndWrapper\n          id=\"live\"\n          style={{ zIndex }}\n          defaultWidth={300}\n          defaultHeight={((300 * 9) / 16) * 2 + 35}\n          defaultX={document.body.clientWidth - 365}\n          defaultY={0}\n          minWidth={300}\n          minHeight={((300 * 9) / 16) * 2 + 35}\n          lockAspectRatio={16 / 9 / 2}\n          lockAspectRatioExtraHeight={35}\n        >\n          <View\n            connected={connected}\n            recvAudio={recvAudio}\n            recvVideo={recvVideo}\n            audioEnabled={audioEnabled}\n            myVideoHidden={myVideoHidden}\n            log={log}\n            isDrawingBoardOn={isDrawingBoardOn}\n            isTutor={isTutor}\n            setRemoteVideo={setRemoteVideo}\n            setLocalVideo={setLocalVideo}\n            handleVideoToggleButton={handleVideoToggleButton}\n            handleVoiceToggleButton={handleVoiceToggleButton}\n            handleChangeVideoButton={handleChangeVideoButton}\n            handleDrawingBtn={handleDrawingBtn}\n            handleExitBtn={handleExitBtn}\n            startTime={startTime}\n            setTimerRef={setTimerRef}\n            poorNetwork={poorNetwork}\n            isEnd={isEnd}\n            roomId={roomId}\n            tutorEmail={tutorEmail}\n            opposite={opposite}\n            isLectureVideoOn={isLectureVideoOn}\n            handleLectureVideoListBtn={handleLectureVideoListBtn}\n            handleLectureVideoBtn={handleLectureVideoBtn}\n            selectedLectureVideoURL={selectedLectureVideoURL}\n            lectureVideos={lectureVideos}\n            isLectureVideoListOn={isLectureVideoListOn}\n            selectedSlideIndex={selectedSlideIndex}\n            isLectureSlideOn={isLectureSlideOn}\n            handleLectureSlideBtn={handleLectureSlideBtn}\n            handleSelectedLectureSlide={handleSelectedLectureSlide}\n            lectureSlides={lectureSlides}\n            isMqConnected={isMqConnected}\n            handleFreeTrialSurvey={handleFreeTrialSurvey}\n            isShowSurveyPopup={isShowSurveyPopup}\n            reservationId={reservationId}\n            isFreeTrial={isFreeTrial}\n            handleSelectTab={handleSelectTab}\n            handleChangeZIndex={handleChangeZIndex}\n            handleSMS={handleSMS}\n            audioInputList={audioInputList}\n            audioOutputList={audioOutputList}\n            videoInputList={videoInputList}\n            handleChangeTest={handleChangeTest}\n            userVideoId={userVideoId}\n            handleDevice={handleDevice}\n            email={email}\n          />\n        </RndWrapper>\n        {isTutor && <LogContainer log={log} />}\n        {isDrawingBoardOn && <DrawingBoard handleClose={handleDrawingBtn} />}\n        {isLectureVideoOn && (\n          <LectureVideoContainer\n            isTutor={isTutor}\n            handleLectureVideoBtn={handleLectureVideoBtn}\n            selectedLectureVideoURL={selectedLectureVideoURL}\n          />\n        )}\n        {isLectureSlideOn && (\n          <LectureSlideContainer\n            isTutor={isTutor}\n            handleLectureSlideBtn={handleLectureSlideBtn}\n            handleSelectedLectureSlide={handleSelectedLectureSlide}\n            selectedSlideIndex={selectedSlideIndex}\n            lectureSlides={lectureSlides}\n          />\n        )}\n        {isShowSurveyPopup && (\n          <FreeTrialSurveyPopup\n            reservationId={reservationId}\n            tutorEmail={tutorEmail}\n            handleFreeTrialSurvey={handleFreeTrialSurvey}\n            isFreeTrial={isFreeTrial}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    project: state.project,\n    email: state.userinfo.email,\n    webrtcProject: state.webrtc.project,\n    webrtcDrawing: state.webrtc.drawing,\n    isDrawingBoardOn: state.webrtc.isDrawingBoardOn,\n    editorRange: state.webrtc.editorRange,\n    highlightBtnId: state.interaction.highlightBtnId,\n    log: state.webrtc.log,\n    editorMode: state.scene.editorMode,\n    scene: state.scene,\n    interaction: state.interaction,\n    preview: state.preview,\n    selectedSceneId: state.interaction.selected.scene,\n    selectedObject:\n      state.interaction.selected.objects[state.interaction.selected.scene]\n  }),\n  {\n    setProject: projectActions.setProject,\n    addDrawing: webrtcActions.addDrawing,\n    setDrawingBoard: webrtcActions.setDrawingBoard,\n    setEditorRange: webrtcActions.setEditorRange,\n    setBtnHighlight: interactionActions.setBtnHighlight,\n    addRoom: chatActions.addRoom,\n    setSpriteCode: sceneActions.setSpriteCode\n  }\n)(injectIntl(Container));\n"]},"metadata":{},"sourceType":"module"}