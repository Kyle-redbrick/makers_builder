{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Home/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport * as userInfoActions from \"../../Common/Store/Reducer/UserInfo\";\nimport PopUp, { showPopUp } from \"../../Common/Component/PopUp\";\nimport AccountUpdatePopup from \"../../Common/Component/AccountUpdatePopup\";\nimport EmailVerifiedPopup from \"../../Common/Component/EmailVerifiedPopup\";\nimport View from \"./View\";\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container() {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleEmailVerifySuccess = function (result) {\n      if (_this.props.user.email === result.email) {\n        _this.props.updateUserInfo({\n          verifiedEmail: result.verifiedEmail\n        });\n      }\n\n      showPopUp( /*#__PURE__*/React.createElement(EmailVerifiedPopup, {\n        isAgeOver14: result.isOver14Years,\n        userName: result.name,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }), {\n        darkmode: true\n      });\n    };\n\n    _this.handleEmailVerifyExpired = function () {\n      showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n        title: _this.props.intl.formatMessage({\n          id: \"ID_EMAIL_VERIFY_EXPIRED\"\n        }),\n        buttonName: _this.props.intl.formatMessage({\n          id: \"ID_POPUP_WARNING_REPEAT_CLICK_BTN\"\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }), {\n        darkmode: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.emailVerifyToken) {\n        this.verifyEmail(this.emailVerifyToken);\n      } else {\n        this.informAccountUpdateIfNeeded();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.user.email !== this.props.user.email) {\n        this.informAccountUpdateIfNeeded();\n      }\n    }\n  }, {\n    key: \"emailVerifyToken\",\n    get: function get() {\n      var search = this.props.location.search;\n      var param = new URLSearchParams(search);\n      var token = param.get(\"verifyToken\");\n      return token;\n    }\n  }, {\n    key: \"verifyEmail\",\n    value: function verifyEmail(token) {\n      var _this2 = this;\n\n      request.updateVerifiedEmail({\n        token: token\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        if (result.success) {\n          _this2.handleEmailVerifySuccess(result);\n        } else {\n          _this2.handleEmailVerifyExpired();\n        }\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, {\n    key: \"informAccountUpdateIfNeeded\",\n    value: function informAccountUpdateIfNeeded() {\n      var _this$props$user = this.props.user,\n          email = _this$props$user.email,\n          verifiedEmail = _this$props$user.verifiedEmail;\n      var isOldAccountUser = email && email.includes('@');\n\n      if (isOldAccountUser && !verifiedEmail) {\n        showPopUp( /*#__PURE__*/React.createElement(AccountUpdatePopup, {\n          history: this.props.history,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }\n        }), {\n          darkmode: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    user: state.userinfo\n  };\n}, {\n  updateUserInfo: userInfoActions.updateUserInfo\n})(injectIntl(withRouter(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Home/Container.js"],"names":["React","Component","connect","injectIntl","withRouter","request","userInfoActions","PopUp","showPopUp","AccountUpdatePopup","EmailVerifiedPopup","View","Container","handleEmailVerifySuccess","result","props","user","email","updateUserInfo","verifiedEmail","isOver14Years","name","darkmode","handleEmailVerifyExpired","intl","formatMessage","id","emailVerifyToken","verifyEmail","informAccountUpdateIfNeeded","prevProps","search","location","param","URLSearchParams","token","get","updateVerifiedEmail","then","res","json","success","catch","error","console","isOldAccountUser","includes","history","state","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport * as userInfoActions from \"../../Common/Store/Reducer/UserInfo\";\nimport PopUp, { showPopUp } from \"../../Common/Component/PopUp\";\nimport AccountUpdatePopup from \"../../Common/Component/AccountUpdatePopup\";\nimport EmailVerifiedPopup from \"../../Common/Component/EmailVerifiedPopup\";\nimport View from \"./View\";\n\nclass Container extends Component {\n\n  componentDidMount() {\n    if (this.emailVerifyToken) {\n      this.verifyEmail(this.emailVerifyToken);\n    } else {\n      this.informAccountUpdateIfNeeded();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.user.email !== this.props.user.email) {\n      this.informAccountUpdateIfNeeded();\n    }\n  }\n\n  get emailVerifyToken() {\n    const search = this.props.location.search;\n    const param = new URLSearchParams(search);\n    const token = param.get(\"verifyToken\");\n    return token;\n  }\n\n  verifyEmail(token) {\n    request.updateVerifiedEmail({ token })\n      .then(res => res.json())\n      .then(result => {\n        if (result.success) {\n          this.handleEmailVerifySuccess(result);\n        } else {\n          this.handleEmailVerifyExpired();\n        }\n      })\n      .catch(error => console.error(error))\n  }\n  handleEmailVerifySuccess = result => {\n    if (this.props.user.email === result.email) {\n      this.props.updateUserInfo({ verifiedEmail: result.verifiedEmail })\n    }\n    showPopUp(\n      <EmailVerifiedPopup\n        isAgeOver14={result.isOver14Years}\n        userName={result.name}\n      />,\n      { darkmode: true }\n    );\n  }\n  handleEmailVerifyExpired = () => {\n    showPopUp(\n      <PopUp.OneButton\n        title={this.props.intl.formatMessage({\n          id: \"ID_EMAIL_VERIFY_EXPIRED\"\n        })}\n        buttonName={this.props.intl.formatMessage({\n          id: \"ID_POPUP_WARNING_REPEAT_CLICK_BTN\"\n        })}\n      />,\n      { darkmode: true }\n    );\n  }\n\n  informAccountUpdateIfNeeded() {\n    const { email, verifiedEmail } = this.props.user;\n    const isOldAccountUser = email && email.includes('@');\n    if (isOldAccountUser && !verifiedEmail) {\n      showPopUp(<AccountUpdatePopup history={this.props.history} />, { darkmode: true })\n    }\n  }\n\n  render() {\n    return (\n      <View />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    user: state.userinfo\n  }),\n  {\n    updateUserInfo: userInfoActions.updateUserInfo\n  }\n)(injectIntl(withRouter(Container)));\n"]},"metadata":{},"sourceType":"module"}