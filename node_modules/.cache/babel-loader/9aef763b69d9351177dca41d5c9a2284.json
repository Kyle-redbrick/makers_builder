{"ast":null,"code":"import _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Property/Component/AnimationItemWrapper/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nexport default function AnimaItemWrapper(AnimaItem) {\n  return /*#__PURE__*/function (_Component) {\n    _inherits(Wrapper, _Component);\n\n    var _super = _createSuper(Wrapper);\n\n    function Wrapper(props) {\n      var _this;\n\n      _classCallCheck(this, Wrapper);\n\n      _this = _super.call(this, props);\n\n      _this.setAnimation = function () {\n        var _this$props = _this.props,\n            sprite = _this$props.sprite,\n            width = _this$props.width,\n            item = _this$props.item;\n        var flow = item.indexes;\n\n        var _this$setAnimeSize = _this.setAnimeSize(sprite, width),\n            animeW = _this$setAnimeSize.animeW,\n            animeH = _this$setAnimeSize.animeH;\n\n        var img = new Image();\n        var widthCnt, heightCnt, positions, animationStyle;\n\n        img.onload = function () {\n          widthCnt = img.naturalWidth / sprite.spriteSize[0];\n          heightCnt = img.naturalHeight / sprite.spriteSize[1];\n          positions = _this.setPositions(animeW, animeH, widthCnt);\n          animationStyle = {\n            width: animeW,\n            height: animeH,\n            margin: \"auto\",\n            background: \"url(\".concat(sprite.spritePath, \")\"),\n            backgroundPosition: \"\".concat(positions[flow[0]]),\n            backgroundOrigin: \"border-box\",\n            backgroundSize: \"\".concat(widthCnt * animeW, \"px \").concat(heightCnt * animeH, \"px\")\n          };\n\n          _this.setState({\n            flow: flow,\n            widthCnt: widthCnt,\n            heightCnt: heightCnt,\n            animeW: animeW,\n            animeH: animeH,\n            positions: positions,\n            animationStyle: animationStyle\n          } // ,()=>{setTimeout}\n          );\n        };\n\n        img.src = sprite.spritePath;\n      };\n\n      _this.setAnimeSize = function (sprite, width) {\n        var _sprite$spriteSize = _slicedToArray(sprite.spriteSize, 2),\n            spriteW = _sprite$spriteSize[0],\n            spriteH = _sprite$spriteSize[1];\n\n        var animeW, animeH;\n\n        if (spriteW > spriteH) {\n          animeW = width;\n          animeH = width * spriteH / spriteW;\n        } else {\n          animeW = width * spriteW / spriteH;\n          animeH = width;\n        }\n\n        return {\n          animeW: animeW,\n          animeH: animeH\n        };\n      };\n\n      _this.setPositions = function (animeW, animeH, widthCnt) {\n        var item = _this.props.item;\n        var flow = item.indexes;\n        var positions = {};\n\n        for (var i in flow) {\n          var index = flow[i];\n          var x = index % widthCnt * animeW;\n          var y = Math.floor(index / widthCnt) * animeH;\n          positions[index] = \"-\".concat(x, \"px -\").concat(y, \"px\");\n        }\n\n        return positions;\n      };\n\n      _this.playAnimation = function () {\n        var _this$state = _this.state,\n            animation = _this$state.animation,\n            flow = _this$state.flow,\n            positions = _this$state.positions;\n        if (animation) return undefined;\n        var animebox = document.getElementById(_this.state.id);\n        var count = 0;\n        var isPaused = false;\n        var frameRate = Number(_this.props.item.frameRate);\n        animation = setInterval(function () {\n          if (!isPaused) {\n            if (count % flow.length === flow.length - 1) {\n              isPaused = true;\n              setTimeout(function () {\n                isPaused = false;\n              }, 1000);\n            }\n\n            var index = flow[count % flow.length];\n            var nextPosition = positions[index];\n            animebox.style.backgroundPosition = nextPosition;\n            count++;\n          }\n        }, 1000 / frameRate);\n\n        _this.setState({\n          animation: animation\n        });\n      };\n\n      _this.stopAnimation = function () {\n        var _this$state2 = _this.state,\n            id = _this$state2.id,\n            animation = _this$state2.animation,\n            positions = _this$state2.positions;\n        var animebox = document.getElementById(id);\n        animebox.style.backgroundPosition = positions[0];\n\n        if (animation) {\n          clearInterval(animation);\n\n          _this.setState({\n            animation: undefined\n          });\n        }\n      };\n\n      var _this$props2 = _this.props,\n          listName = _this$props2.listName,\n          _sprite = _this$props2.sprite,\n          name = _this$props2.name;\n      _this.state = {\n        id: \"animebox-\".concat(listName, \"-\").concat(_sprite.id, \"-\").concat(name),\n        // id: `animebox-${name}`,\n        animation: undefined,\n        animationStyle: {}\n      };\n      return _this;\n    }\n\n    _createClass(Wrapper, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.setAnimation();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (prevProps.sprite.id !== this.props.sprite.id) {\n          this.setState({\n            animationStyle: {}\n          }, this.setAnimation); // this.setAnimation();\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state3 = this.state,\n            id = _this$state3.id,\n            animationStyle = _this$state3.animationStyle;\n        return React.createElement(AnimaItem, Object.assign({}, this.props, {\n          id: id,\n          animationStyle: animationStyle,\n          handleOnMouseOver: this.playAnimation,\n          handleOnMouseOut: this.stopAnimation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }));\n      }\n    }]);\n\n    return Wrapper;\n  }(Component);\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Property/Component/AnimationItemWrapper/index.js"],"names":["React","Component","AnimaItemWrapper","AnimaItem","props","setAnimation","sprite","width","item","flow","indexes","setAnimeSize","animeW","animeH","img","Image","widthCnt","heightCnt","positions","animationStyle","onload","naturalWidth","spriteSize","naturalHeight","setPositions","height","margin","background","spritePath","backgroundPosition","backgroundOrigin","backgroundSize","setState","src","spriteW","spriteH","i","index","x","y","Math","floor","playAnimation","state","animation","undefined","animebox","document","getElementById","id","count","isPaused","frameRate","Number","setInterval","length","setTimeout","nextPosition","style","stopAnimation","clearInterval","listName","name","prevProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default function AnimaItemWrapper(AnimaItem) {\n  return class Wrapper extends Component {\n    constructor(props) {\n      super(props);\n      let { listName, sprite, name } = this.props;\n      this.state = {\n        id: `animebox-${listName}-${sprite.id}-${name}`,\n        // id: `animebox-${name}`,\n        animation: undefined,\n        animationStyle: {}\n      };\n    }\n\n    componentDidMount() {\n      this.setAnimation();\n    }\n    componentDidUpdate(prevProps) {\n      if (prevProps.sprite.id !== this.props.sprite.id) {\n        this.setState({ animationStyle: {} }, this.setAnimation);\n        // this.setAnimation();\n      }\n    }\n\n    setAnimation = () => {\n      let { sprite, width, item } = this.props;\n      let flow = item.indexes;\n      let { animeW, animeH } = this.setAnimeSize(sprite, width);\n      let img = new Image();\n      let widthCnt, heightCnt, positions, animationStyle;\n      img.onload = () => {\n        widthCnt = img.naturalWidth / sprite.spriteSize[0];\n        heightCnt = img.naturalHeight / sprite.spriteSize[1];\n        positions = this.setPositions(animeW, animeH, widthCnt);\n        animationStyle = {\n          width: animeW,\n          height: animeH,\n          margin: \"auto\",\n          background: `url(${sprite.spritePath})`,\n          backgroundPosition: `${positions[flow[0]]}`,\n          backgroundOrigin: \"border-box\",\n          backgroundSize: `${widthCnt * animeW}px ${heightCnt * animeH}px`\n        };\n\n        this.setState(\n          {\n            flow,\n            widthCnt,\n            heightCnt,\n            animeW,\n            animeH,\n            positions,\n            animationStyle\n          }\n          // ,()=>{setTimeout}\n        );\n      };\n      img.src = sprite.spritePath;\n    };\n\n    setAnimeSize = (sprite, width) => {\n      let [spriteW, spriteH] = sprite.spriteSize;\n      let animeW, animeH;\n      if (spriteW > spriteH) {\n        animeW = width;\n        animeH = (width * spriteH) / spriteW;\n      } else {\n        animeW = (width * spriteW) / spriteH;\n        animeH = width;\n      }\n      return { animeW, animeH };\n    };\n\n    setPositions = (animeW, animeH, widthCnt) => {\n      let { item } = this.props;\n      let flow = item.indexes;\n      let positions = {};\n      for (let i in flow) {\n        const index = flow[i];\n        let x = (index % widthCnt) * animeW;\n        let y = Math.floor(index / widthCnt) * animeH;\n        positions[index] = `-${x}px -${y}px`;\n      }\n      return positions;\n    };\n\n    playAnimation = () => {\n      let { animation, flow, positions } = this.state;\n      if (animation) return undefined;\n      const animebox = document.getElementById(this.state.id);\n      let count = 0;\n      let isPaused = false;\n      let frameRate = Number(this.props.item.frameRate);\n      animation = setInterval(() => {\n        if (!isPaused) {\n          if (count % flow.length === flow.length - 1) {\n            isPaused = true;\n            setTimeout(() => {\n              isPaused = false;\n            }, 1000);\n          }\n          let index = flow[count % flow.length];\n          let nextPosition = positions[index];\n          animebox.style.backgroundPosition = nextPosition;\n          count++;\n        }\n      }, 1000 / frameRate);\n      this.setState({ animation });\n    };\n    stopAnimation = () => {\n      let { id, animation, positions } = this.state;\n      const animebox = document.getElementById(id);\n      animebox.style.backgroundPosition = positions[0];\n      if (animation) {\n        clearInterval(animation);\n        this.setState({ animation: undefined });\n      }\n    };\n\n    render() {\n      let { id, animationStyle } = this.state;\n      return (\n        <AnimaItem\n          {...this.props}\n          id={id}\n          animationStyle={animationStyle}\n          handleOnMouseOver={this.playAnimation}\n          handleOnMouseOut={this.stopAnimation}\n        />\n      );\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}