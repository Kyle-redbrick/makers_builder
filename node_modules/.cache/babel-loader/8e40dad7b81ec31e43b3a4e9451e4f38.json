{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { URL } from \"../../../../Common/Util/Constant\";\nimport { injectIntl } from \"react-intl\";\nimport AssetLibrary from \"../assetLibrary\";\nimport createUserScript from \"./userScript\";\nimport obfuscate from \"./obfuscate\";\nimport isDev from \"./isDev\";\n\nfunction generateBabylonPage(_x) {\n  return _generateBabylonPage.apply(this, arguments);\n}\n\nfunction _generateBabylonPage() {\n  _generateBabylonPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n    var _ref, gameData, onParseError, isBuilderPlay, title, screenMode, baseURL, version, babylonSources, wizSources, defaultStyle, userScript, babylonCanvasId, babylonStyle, babylonElement, babylonConfig, babylonScript, inputBoxElement, inputBoxStyle, html;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref = params || {}, gameData = _ref.gameData, onParseError = _ref.onParseError, isBuilderPlay = _ref.isBuilderPlay;\n            title = \"BabylonTest\";\n            screenMode = \"HORIZONTAL\";\n            baseURL = isDev() ? \"/\" : URL.GAME_SRC;\n            version = \"0.1.1\";\n            babylonSources = \"\\n    <script src=\\\"https://cdn.babylonjs.com/babylon.js\\\"></script>\\n    <script src=\\\"https://cdn.babylonjs.com/gui/babylon.gui.min.js\\\"></script>\\n    <script src=\\\"https://cdn.babylonjs.com/cannon.js\\\"></script>\\n    <script src=\\\"https://cdn.babylonjs.com/loaders/babylonjs.loaders.min.js\\\"></script>\\n    <script src=\\\"https://code.jquery.com/pep/0.4.3/pep.js\\\"></script>\\n  \";\n            wizSources = isDev() ? \"\\n    <script src=\\\"\".concat(baseURL, \"babylon/babylonConstant.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"babylon/babylonApis.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"babylon/babylonGame.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"babylon/babylonScene.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"babylon/babylonGameObject.js\\\"></script>\\n    <script src=\\\"\").concat(baseURL, \"babylon/babylonSound.js\\\"></script>\\n  \") : \"\\n    <script src=\\\"\".concat(baseURL, \"babylon/wiz_lib_3d.js?ver=\").concat(version, \"\\\"></script>\\n  \");\n            defaultStyle = \"\\n    html, body {\\n        margin: 0;\\n        padding: 0;\\n        width: 100%;\\n        height: 100%;\\n        overflow: hidden;\\n    }\\n  \";\n            userScript = createUserScript(gameData, {\n              onParseError: onParseError\n            });\n            babylonCanvasId = \"babylonCanvas\";\n            babylonStyle = \"\\n    .babylonCanvasContainer {\\n        width: 100%;\\n        height: 100%;\\n    }\\n    #babylonCanvas {\\n        display: block;\\n        width: 100%;\\n        height: 100%;\\n        touch-action: none;\\n        outline: none;\\n        cursor: pointer;\\n    }\\n  \";\n            babylonElement = \"\\n    <div class=\\\"babylonCanvasContainer\\\">\\n        <canvas id=\\\"\".concat(babylonCanvasId, \"\\\" tabindex=\\\"1\\\"></canvas>\\n    </div>\\n  \");\n            _context.next = 14;\n            return createBabylonConfig(gameData, isBuilderPlay);\n\n          case 14:\n            babylonConfig = _context.sent;\n            babylonScript = \"\\n    var canvas = document.getElementById(\\\"\".concat(babylonCanvasId, \"\\\");\\n    var babylonGame = BabylonGame.create(canvas, \").concat(JSON.stringify(babylonConfig), \");\\n    babylonGame.runScene(\\\"\").concat(gameData.startSceneId, \"\\\");\\n    canvas.focus();\\n  \");\n            inputBoxElement = \"\\n    <div class=\\\"InputBoxContainer\\\">\\n      <div class=\\\"InputBoxInner--\".concat(screenMode, \"\\\">\\n          <p class=\\\"InputBox--title\\\">\\uD0C0\\uC774\\uD2C0</p>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"InputBox--input\\\"\\n            name=\\\"InputBox--input\\\"\\n            placeholder=\").concat(this.props.intl.formatMessage({\n              id: \"ID_INPUT_PLACEHOLDER\"\n            }), \"\\n            onkeydown=\\\"onInputKeyDown();\\\"\\n          />\\n          <button class=\\\"InputBoxBtn InputBoxbtn--\").concat(screenMode, \" InputBoxBtn--cancel\\\" onclick=\\\"onInputCancel();\\\" >\\n            \").concat(this.props.intl.formatMessage({\n              id: \"ID_INPUT_POPUP_CANCLE\"\n            }), \"\\n          </button>\\n          <button class=\\\"InputBoxBtn InputBoxbtn--\").concat(screenMode, \" InputBoxBtn--confirm\\\" onclick=\\\"onInputConfirm();\\\">\\n            \").concat(this.props.intl.formatMessage({\n              id: \"ID_INPUT_POPUP_CONFIRM\"\n            }), \"\\n          </button>\\n        </div>\\n    </div>\\n  \");\n            inputBoxStyle = \"\\n    .InputBoxContainer{\\n      position: absolute;\\n      top:0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n      background-color: rgba(0, 0, 0, 0.5);\\n      display: none;\\n    }\\n    .InputBoxInner--HORIZONTAL{\\n      position: relative;\\n      background-color: #393e4f;\\n      width: 48%;\\n      height: 35%;\\n      border-radius: 18px;\\n      text-align: center;\\n      margin: 0 auto;\\n      margin-top:10%;\\n      padding:4% 4% 4% 4%;\\n    }\\n    .InputBoxInner--VERTICAL{\\n      position: relative;\\n      background-color: #393e4f;\\n      width: 70%;\\n      height: 20%;\\n      border-radius: 18px;\\n      text-align: center;\\n      margin: 0 auto;\\n      margin-top:60%;\\n      padding:4% 4% 4% 4%;\\n    }\\n\\n    .InputBox--title{\\n      color: #ffffff;\\n      width: 100%;\\n      text-align: center;\\n      font-weight: bold;\\n      margin-top:0;\\n      margin-bottom: 5%;\\n      font-family:\\\"Source Sans Pro\\\", sans-serif;\\n      font-size: 20px;\\n    }\\n    .InputBox--input{\\n      box-sizing: border-box;\\n      width: 100%;\\n      line-height: 3;\\n      padding-left: 3%;\\n      font-size: 14px;\\n      border-radius: 6px;\\n      border: solid 1px #2f3443;\\n      background-color: #272b37;\\n      color: #fff;\\n    }\\n    .InputBox--input::placeholder{\\n      color: #afafaf;\\n    }\\n    .InputBox--input:focus, .InputBoxBtn:focus{\\n      outline: none;\\n    }\\n    .InputBoxbtn--HORIZONTAL.InputBoxBtn{\\n      width:40%;\\n      height: 23%;\\n      border-radius: 25px;\\n      margin-right:1.5%;\\n      margin-left:1.5%;\\n      cursor: pointer;\\n      margin-top:7%;\\n      font-size:13px;\\n    }\\n    .InputBoxbtn--VERTICAL.InputBoxBtn{\\n      width:40%;\\n      height: 25%;\\n      border-radius: 25px;\\n      margin-right:1.5%;\\n      margin-left:1.5%;\\n      cursor: pointer;\\n      margin-top:10%;\\n      font-size:18px;\\n\\n    }\\n    .InputBoxBtn--cancel{\\n      border-radius: 20px;\\n      border: solid 1px #1db6ff;\\n      background: transparent;\\n      color: #1db6ff;\\n    }\\n    .InputBoxBtn--confirm{\\n      background-color: #2c9ee0;\\n      color:#ffffff;\\n      border: none;\\n    }\\n\\n    @media screen and (max-width: 768px) {\\n      .InputBoxInner--HORIZONTAL{\\n        width: 70%;\\n        height: 60%;\\n        margin-top:5%;\\n      }\\n      .InputBoxbtn--HORIZONTAL.InputBoxBtn{\\n        height: 25%;\\n        margin-top:7%;\\n      }\\n      .InputBox--input{\\n        line-height: 1.7;\\n        font-size: 16px;\\n        line-height: 1.5;\\n        width:90%;\\n      }\\n    }\\n  \";\n\n            if (!isBuilderPlay) {\n              userScript = obfuscate(userScript);\n              babylonScript = obfuscate(babylonScript);\n            }\n\n            html = \"\\n    <!DOCTYPE html>\\n        <head>\\n            <title>\".concat(title, \"</title>\\n            <meta charset=\\\"utf-8\\\">\\n            <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=0\\\"/>\\n            \").concat(babylonSources, \"\\n            \").concat(wizSources, \"\\n            <style>\\n                \").concat(defaultStyle, \"\\n                \").concat(babylonStyle, \"\\n                \").concat(inputBoxStyle, \"\\n            </style>\\n        </head>\\n        <body>\\n            \").concat(babylonElement, \"\\n            \").concat(inputBoxElement, \"\\n            <script>\\n                \").concat(userScript, \"\\n                \").concat(babylonScript, \"\\n            </script>\\n        </body>\\n    </html>\\n  \");\n            return _context.abrupt(\"return\", html);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _generateBabylonPage.apply(this, arguments);\n}\n\nfunction createBabylonConfig(_x2, _x3) {\n  return _createBabylonConfig.apply(this, arguments);\n}\n\nfunction _createBabylonConfig() {\n  _createBabylonConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(gameData, isBuilderPlay) {\n    var scenes, assets, assetBaseURL, config;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            scenes = {};\n            gameData.sceneIds.forEach(function (sceneId) {\n              scenes[sceneId] = gameData.scenes[sceneId];\n            });\n            _context2.next = 4;\n            return AssetLibrary.loadAssetsForGame(gameData);\n\n          case 4:\n            assets = _context2.sent;\n            assetBaseURL = isDev() ? \"/\" : isBuilderPlay ? URL.GAME_SRC : \"https://tianchengai-assets.oss-cn-beijing.aliyuncs.com/\";\n            config = {\n              scenes: scenes,\n              assets: assets,\n              assetBaseURL: assetBaseURL\n            };\n            return _context2.abrupt(\"return\", config);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createBabylonConfig.apply(this, arguments);\n}\n\nexport default injectIntl(generateBabylonPage);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/utils/gamePageGenerator/generateBabylonPage.js"],"names":["URL","injectIntl","AssetLibrary","createUserScript","obfuscate","isDev","generateBabylonPage","params","gameData","onParseError","isBuilderPlay","title","screenMode","baseURL","GAME_SRC","version","babylonSources","wizSources","defaultStyle","userScript","babylonCanvasId","babylonStyle","babylonElement","createBabylonConfig","babylonConfig","babylonScript","JSON","stringify","startSceneId","inputBoxElement","props","intl","formatMessage","id","inputBoxStyle","html","scenes","sceneIds","forEach","sceneId","loadAssetsForGame","assets","assetBaseURL","config"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,kCAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;SAEeC,mB;;;;;kFAAf,iBAAmCC,MAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACoDA,MAAM,IAAI,EAD9D,EACUC,QADV,QACUA,QADV,EACoBC,YADpB,QACoBA,YADpB,EACkCC,aADlC,QACkCA,aADlC;AAGQC,YAAAA,KAHR,GAGgB,aAHhB;AAIQC,YAAAA,UAJR,GAIqB,YAJrB;AAKQC,YAAAA,OALR,GAKkBR,KAAK,KAAK,GAAL,GAAWL,GAAG,CAACc,QALtC;AAMQC,YAAAA,OANR,GAMkB,OANlB;AAOQC,YAAAA,cAPR;AAcQC,YAAAA,UAdR,GAcqBZ,KAAK,mCAEPQ,OAFO,uEAGPA,OAHO,mEAIPA,OAJO,mEAKPA,OALO,oEAMPA,OANO,yEAOPA,OAPO,6EAUPA,OAVO,uCAU6BE,OAV7B,qBAd1B;AA0BQG,YAAAA,YA1BR;AAoCMC,YAAAA,UApCN,GAoCmBhB,gBAAgB,CAACK,QAAD,EAAW;AAAEC,cAAAA,YAAY,EAAZA;AAAF,aAAX,CApCnC;AAsCQW,YAAAA,eAtCR,GAsC0B,eAtC1B;AAuCQC,YAAAA,YAvCR;AAqDQC,YAAAA,cArDR,gFAuDsBF,eAvDtB;AAAA;AAAA,mBA0D8BG,mBAAmB,CAACf,QAAD,EAAWE,aAAX,CA1DjD;;AAAA;AA0DQc,YAAAA,aA1DR;AA2DMC,YAAAA,aA3DN,0DA4D4CL,eA5D5C,oEA6DmDM,IAAI,CAACC,SAAL,CAC7CH,aAD6C,CA7DnD,4CAgE4BhB,QAAQ,CAACoB,YAhErC;AAoEQC,YAAAA,eApER,wFAsEmCjB,UAtEnC,mOA4E0B,KAAKkB,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B,CA5E1B,6HA+EoDrB,UA/EpD,gFAgFc,KAAKkB,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B,CAhFd,uFAkFoDrB,UAlFpD,iFAmFc,KAAKkB,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA9B,CAnFd;AAwFQC,YAAAA,aAxFR;;AAwME,gBAAI,CAACxB,aAAL,EAAoB;AAClBS,cAAAA,UAAU,GAAGf,SAAS,CAACe,UAAD,CAAtB;AACAM,cAAAA,aAAa,GAAGrB,SAAS,CAACqB,aAAD,CAAzB;AACD;;AAEKU,YAAAA,IA7MR,uEAgNqBxB,KAhNrB,oMAmNcK,cAnNd,2BAoNcC,UApNd,oDAsNkBC,YAtNlB,+BAuNkBG,YAvNlB,+BAwNkBa,aAxNlB,kFA4NcZ,cA5Nd,2BA6NcO,eA7Nd,qDA+NkBV,UA/NlB,+BAgOkBM,aAhOlB;AAAA,6CAqOSU,IArOT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwOeZ,mB;;;;;kFAAf,kBAAmCf,QAAnC,EAA6CE,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ0B,YAAAA,MADR,GACiB,EADjB;AAEE5B,YAAAA,QAAQ,CAAC6B,QAAT,CAAkBC,OAAlB,CAA0B,UAAAC,OAAO,EAAI;AACnCH,cAAAA,MAAM,CAACG,OAAD,CAAN,GAAkB/B,QAAQ,CAAC4B,MAAT,CAAgBG,OAAhB,CAAlB;AACD,aAFD;AAFF;AAAA,mBAKuBrC,YAAY,CAACsC,iBAAb,CAA+BhC,QAA/B,CALvB;;AAAA;AAKQiC,YAAAA,MALR;AAMQC,YAAAA,YANR,GAMuBrC,KAAK,KACtB,GADsB,GAEtBK,aAAa,GACbV,GAAG,CAACc,QADS,GAEb,yDAVN;AAWQ6B,YAAAA,MAXR,GAWiB;AAAEP,cAAAA,MAAM,EAANA,MAAF;AAAUK,cAAAA,MAAM,EAANA,MAAV;AAAkBC,cAAAA,YAAY,EAAZA;AAAlB,aAXjB;AAAA,8CAYSC,MAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,eAAe1C,UAAU,CAACK,mBAAD,CAAzB","sourcesContent":["import { URL } from \"../../../../Common/Util/Constant\";\nimport { injectIntl } from \"react-intl\";\nimport AssetLibrary from \"../assetLibrary\";\nimport createUserScript from \"./userScript\";\nimport obfuscate from \"./obfuscate\";\nimport isDev from \"./isDev\";\n\nasync function generateBabylonPage(params) {\n  const { gameData, onParseError, isBuilderPlay } = params || {};\n\n  const title = \"BabylonTest\";\n  const screenMode = \"HORIZONTAL\";\n  const baseURL = isDev() ? \"/\" : URL.GAME_SRC;\n  const version = \"0.1.1\";\n  const babylonSources = `\n    <script src=\"https://cdn.babylonjs.com/babylon.js\"></script>\n    <script src=\"https://cdn.babylonjs.com/gui/babylon.gui.min.js\"></script>\n    <script src=\"https://cdn.babylonjs.com/cannon.js\"></script>\n    <script src=\"https://cdn.babylonjs.com/loaders/babylonjs.loaders.min.js\"></script>\n    <script src=\"https://code.jquery.com/pep/0.4.3/pep.js\"></script>\n  `;\n  const wizSources = isDev()\n    ? `\n    <script src=\"${baseURL}babylon/babylonConstant.js\"></script>\n    <script src=\"${baseURL}babylon/babylonApis.js\"></script>\n    <script src=\"${baseURL}babylon/babylonGame.js\"></script>\n    <script src=\"${baseURL}babylon/babylonScene.js\"></script>\n    <script src=\"${baseURL}babylon/babylonGameObject.js\"></script>\n    <script src=\"${baseURL}babylon/babylonSound.js\"></script>\n  `\n    : `\n    <script src=\"${baseURL}babylon/wiz_lib_3d.js?ver=${version}\"></script>\n  `;\n  const defaultStyle = `\n    html, body {\n        margin: 0;\n        padding: 0;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n  `;\n\n  let userScript = createUserScript(gameData, { onParseError });\n\n  const babylonCanvasId = \"babylonCanvas\";\n  const babylonStyle = `\n    .babylonCanvasContainer {\n        width: 100%;\n        height: 100%;\n    }\n    #babylonCanvas {\n        display: block;\n        width: 100%;\n        height: 100%;\n        touch-action: none;\n        outline: none;\n        cursor: pointer;\n    }\n  `;\n  const babylonElement = `\n    <div class=\"babylonCanvasContainer\">\n        <canvas id=\"${babylonCanvasId}\" tabindex=\"1\"></canvas>\n    </div>\n  `;\n  const babylonConfig = await createBabylonConfig(gameData, isBuilderPlay);\n  let babylonScript = `\n    var canvas = document.getElementById(\"${babylonCanvasId}\");\n    var babylonGame = BabylonGame.create(canvas, ${JSON.stringify(\n      babylonConfig\n    )});\n    babylonGame.runScene(\"${gameData.startSceneId}\");\n    canvas.focus();\n  `;\n\n  const inputBoxElement = `\n    <div class=\"InputBoxContainer\">\n      <div class=\"InputBoxInner--${screenMode}\">\n          <p class=\"InputBox--title\">타이틀</p>\n          <input\n            type=\"text\"\n            class=\"InputBox--input\"\n            name=\"InputBox--input\"\n            placeholder=${this.props.intl.formatMessage({ id: \"ID_INPUT_PLACEHOLDER\" })}\n            onkeydown=\"onInputKeyDown();\"\n          />\n          <button class=\"InputBoxBtn InputBoxbtn--${screenMode} InputBoxBtn--cancel\" onclick=\"onInputCancel();\" >\n            ${this.props.intl.formatMessage({ id: \"ID_INPUT_POPUP_CANCLE\" })}\n          </button>\n          <button class=\"InputBoxBtn InputBoxbtn--${screenMode} InputBoxBtn--confirm\" onclick=\"onInputConfirm();\">\n            ${this.props.intl.formatMessage({ id: \"ID_INPUT_POPUP_CONFIRM\" })}\n          </button>\n        </div>\n    </div>\n  `;\n  const inputBoxStyle = `\n    .InputBoxContainer{\n      position: absolute;\n      top:0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: none;\n    }\n    .InputBoxInner--HORIZONTAL{\n      position: relative;\n      background-color: #393e4f;\n      width: 48%;\n      height: 35%;\n      border-radius: 18px;\n      text-align: center;\n      margin: 0 auto;\n      margin-top:10%;\n      padding:4% 4% 4% 4%;\n    }\n    .InputBoxInner--VERTICAL{\n      position: relative;\n      background-color: #393e4f;\n      width: 70%;\n      height: 20%;\n      border-radius: 18px;\n      text-align: center;\n      margin: 0 auto;\n      margin-top:60%;\n      padding:4% 4% 4% 4%;\n    }\n\n    .InputBox--title{\n      color: #ffffff;\n      width: 100%;\n      text-align: center;\n      font-weight: bold;\n      margin-top:0;\n      margin-bottom: 5%;\n      font-family:\"Source Sans Pro\", sans-serif;\n      font-size: 20px;\n    }\n    .InputBox--input{\n      box-sizing: border-box;\n      width: 100%;\n      line-height: 3;\n      padding-left: 3%;\n      font-size: 14px;\n      border-radius: 6px;\n      border: solid 1px #2f3443;\n      background-color: #272b37;\n      color: #fff;\n    }\n    .InputBox--input::placeholder{\n      color: #afafaf;\n    }\n    .InputBox--input:focus, .InputBoxBtn:focus{\n      outline: none;\n    }\n    .InputBoxbtn--HORIZONTAL.InputBoxBtn{\n      width:40%;\n      height: 23%;\n      border-radius: 25px;\n      margin-right:1.5%;\n      margin-left:1.5%;\n      cursor: pointer;\n      margin-top:7%;\n      font-size:13px;\n    }\n    .InputBoxbtn--VERTICAL.InputBoxBtn{\n      width:40%;\n      height: 25%;\n      border-radius: 25px;\n      margin-right:1.5%;\n      margin-left:1.5%;\n      cursor: pointer;\n      margin-top:10%;\n      font-size:18px;\n\n    }\n    .InputBoxBtn--cancel{\n      border-radius: 20px;\n      border: solid 1px #1db6ff;\n      background: transparent;\n      color: #1db6ff;\n    }\n    .InputBoxBtn--confirm{\n      background-color: #2c9ee0;\n      color:#ffffff;\n      border: none;\n    }\n\n    @media screen and (max-width: 768px) {\n      .InputBoxInner--HORIZONTAL{\n        width: 70%;\n        height: 60%;\n        margin-top:5%;\n      }\n      .InputBoxbtn--HORIZONTAL.InputBoxBtn{\n        height: 25%;\n        margin-top:7%;\n      }\n      .InputBox--input{\n        line-height: 1.7;\n        font-size: 16px;\n        line-height: 1.5;\n        width:90%;\n      }\n    }\n  `;\n\n  if (!isBuilderPlay) {\n    userScript = obfuscate(userScript);\n    babylonScript = obfuscate(babylonScript);\n  }\n\n  const html = `\n    <!DOCTYPE html>\n        <head>\n            <title>${title}</title>\n            <meta charset=\"utf-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=0\"/>\n            ${babylonSources}\n            ${wizSources}\n            <style>\n                ${defaultStyle}\n                ${babylonStyle}\n                ${inputBoxStyle}\n            </style>\n        </head>\n        <body>\n            ${babylonElement}\n            ${inputBoxElement}\n            <script>\n                ${userScript}\n                ${babylonScript}\n            </script>\n        </body>\n    </html>\n  `;\n  return html;\n}\n\nasync function createBabylonConfig(gameData, isBuilderPlay) {\n  const scenes = {};\n  gameData.sceneIds.forEach(sceneId => {\n    scenes[sceneId] = gameData.scenes[sceneId];\n  });\n  const assets = await AssetLibrary.loadAssetsForGame(gameData);\n  const assetBaseURL = isDev()\n    ? \"/\"\n    : isBuilderPlay\n    ? URL.GAME_SRC\n    : \"https://tianchengai-assets.oss-cn-beijing.aliyuncs.com/\";\n  const config = { scenes, assets, assetBaseURL };\n  return config;\n}\n\nexport default injectIntl(generateBabylonPage);\n"]},"metadata":{},"sourceType":"module"}