{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Scene/View.js\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport SceneItem from \"./Component/SceneItem\";\nimport addImg from \"../../../../Image/builder/light-mode-sound-plus.svg\";\nimport addImg_darkmode from \"../../../../Image/builder/dark-mode-sound-plus.svg\";\nimport copyImg from \"../../../../Image/builder/light-mode-scene-copy.svg\";\nimport copyImg_darkmode from \"../../../../Image/builder/dark-mode-scene-copy.svg\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\nimport \"./index.scss\";\nexport default function (props) {\n  var _this = this;\n\n  var isOpened = props.isOpened,\n      handleAddScene = props.handleAddScene,\n      handleCopyScene = props.handleCopyScene,\n      handleRemoveScene = props.handleRemoveScene,\n      handleSelectScene = props.handleSelectScene,\n      handleSelectTab = props.handleSelectTab,\n      handleChangeZIndex = props.handleChangeZIndex,\n      moveDndScene = props.moveDndScene,\n      scenes = props.scenes,\n      sceneIds = props.sceneIds,\n      selectedSceneId = props.selectedSceneId,\n      onDragStart = props.onDragStart,\n      screenMode = props.screenMode,\n      intl = props.intl;\n  var colorTheme = getColorTheme();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SceneContainer\",\n    onMouseDown: function onMouseDown() {\n      return handleChangeZIndex(\"scene\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SceneTitleLine handle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SceneTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"ID_SCENE_TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SceneClose\",\n    onClick: function onClick() {\n      return handleSelectTab(\"scene\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg,\n    alt: \"close btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SceneContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, sceneIds.map(function (key, index) {\n    var scene = scenes[key];\n    var isSelected = selectedSceneId === key;\n    return /*#__PURE__*/React.createElement(SceneItem, {\n      handleSelectTab: handleSelectTab,\n      scene: scene,\n      isSelected: isSelected,\n      index: index,\n      handleRemoveScene: handleRemoveScene,\n      handleSelectScene: handleSelectScene,\n      isOpened: isOpened,\n      key: key,\n      sceneId: key,\n      moveDndItem: moveDndScene,\n      onDragStart: onDragStart,\n      screenMode: screenMode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Scene_Setting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Scene_Add\",\n    onClick: function onClick() {\n      return handleAddScene();\n    },\n    \"data-tip\": intl.formatMessage({\n      id: \"ID_TOOLTIP_SCENE_ADD\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Scene_Add_Img\",\n    src: colorTheme === \"darkMode\" ? addImg_darkmode : addImg,\n    alt: \"add scene\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Scene_Copy\",\n    onClick: handleCopyScene,\n    \"data-tip\": intl.formatMessage({\n      id: \"ID_TOOLTIP_SCENE_COPY\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"Scene_Copy_Img\",\n    src: colorTheme === \"darkMode\" ? copyImg_darkmode : copyImg,\n    alt: \"copy scene\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Scene/View.js"],"names":["React","FormattedMessage","SceneItem","getColorTheme","props","isOpened","handleAddScene","handleCopyScene","handleRemoveScene","handleSelectScene","handleSelectTab","handleChangeZIndex","moveDndScene","scenes","sceneIds","selectedSceneId","onDragStart","screenMode","intl","colorTheme","closeImg_darkmode","closeImg","map","key","index","scene","isSelected","formatMessage","id","addImg_darkmode","addImg","copyImg_darkmode","copyImg"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport SceneItem from \"./Component/SceneItem\";\nimport addImg from \"../../../../Image/builder/light-mode-sound-plus.svg\";\nimport addImg_darkmode from \"../../../../Image/builder/dark-mode-sound-plus.svg\";\nimport copyImg from \"../../../../Image/builder/light-mode-scene-copy.svg\";\nimport copyImg_darkmode from \"../../../../Image/builder/dark-mode-scene-copy.svg\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\nimport \"./index.scss\";\nexport default function(props) {\n  const {\n    isOpened,\n    handleAddScene,\n    handleCopyScene,\n    handleRemoveScene,\n    handleSelectScene,\n    handleSelectTab,\n    handleChangeZIndex,\n    moveDndScene,\n    scenes,\n    sceneIds,\n    selectedSceneId,\n    onDragStart,\n    screenMode,\n    intl\n  } = props;\n  const colorTheme = getColorTheme();\n\n  return (\n    <div\n      className=\"SceneContainer\"\n      onMouseDown={() => handleChangeZIndex(\"scene\")}\n    >\n      <div className=\"SceneTitleLine handle\">\n        <div className=\"SceneTitle\">\n          <FormattedMessage id=\"ID_SCENE_TITLE\" />\n        </div>\n        <div className=\"SceneClose\" onClick={() => handleSelectTab(\"scene\")}>\n          <img\n            src={colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg}\n            alt=\"close btn\"\n          />\n        </div>\n      </div>\n      <div className=\"SceneContent\">\n        {sceneIds.map((key, index) => {\n          let scene = scenes[key];\n          let isSelected = selectedSceneId === key;\n\n          return (\n            <SceneItem\n              handleSelectTab={handleSelectTab}\n              scene={scene}\n              isSelected={isSelected}\n              index={index}\n              handleRemoveScene={handleRemoveScene}\n              handleSelectScene={handleSelectScene}\n              isOpened={isOpened}\n              key={key}\n              sceneId={key}\n              moveDndItem={moveDndScene}\n              onDragStart={onDragStart}\n              screenMode={screenMode}\n            />\n          );\n        })}\n      </div>\n      <div className=\"Scene_Setting\">\n        <div\n          className=\"Scene_Add\"\n          onClick={() => handleAddScene()}\n          data-tip={intl.formatMessage({\n            id: \"ID_TOOLTIP_SCENE_ADD\"\n          })}\n        >\n          <img\n            className=\"Scene_Add_Img\"\n            src={colorTheme === \"darkMode\" ? addImg_darkmode : addImg}\n            alt=\"add scene\"\n          />\n        </div>\n        <div\n          className=\"Scene_Copy\"\n          onClick={handleCopyScene}\n          data-tip={intl.formatMessage({\n            id: \"ID_TOOLTIP_SCENE_COPY\"\n          })}\n        >\n          <img\n            className=\"Scene_Copy_Img\"\n            src={colorTheme === \"darkMode\" ? copyImg_darkmode : copyImg}\n            alt=\"copy scene\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}