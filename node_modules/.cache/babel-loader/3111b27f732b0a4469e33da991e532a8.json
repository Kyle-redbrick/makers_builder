{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/ObjectList/Container.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as contextMenuActions from \"../../Store/Reducer/contextMenu\";\nimport { createDefaultGameObjId } from \"../../Util/NameApis\";\nimport View from \"./View\";\nimport codeEditorIcon from \"../../../../Image/builder3d/icon-30-right-click-code-editor.svg\";\nimport copyIcon from \"../../../../Image/builder3d/icon-30-right-click-duplicate.svg\";\nimport deleteIcon from \"../../../../Image/builder3d/icon-30-right-click-delete.svg\";\nimport lockIcon from \"../../../../Image/builder3d/icon-30-right-click-lock.svg\";\nimport unlockIcon from \"../../../../Image/builder3d/icon-30-right-click-unlock.svg\";\nvar _window$BabylonConsta = window.BabylonConstant,\n    GAMEOBJECT = _window$BabylonConsta.GAMEOBJECT,\n    PROPERTY_ID = _window$BabylonConsta.PROPERTY_ID;\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Container)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onClickAddButton = function () {\n      if (_this.props.currentSceneId) {\n        _this.props.setIsObjectBoxOn(true);\n      } else {\n        alert(\"먼저 씬을 추가해 주세요.\");\n      }\n    };\n\n    _this.onMoveNode = function (event) {\n      _this.updateGameObjectParent(event);\n\n      _this.reorderGameObjects(event);\n    };\n\n    _this.onToggleGameObject = function (nodeData, e) {\n      var expanded = !nodeData.node.expanded;\n      var _this$props = _this.props,\n          currentSceneId = _this$props.currentSceneId,\n          updateGameObjectProperty = _this$props.updateGameObjectProperty;\n      var gameObjId = nodeData.node.id;\n      updateGameObjectProperty(currentSceneId, gameObjId, \"expanded\", expanded);\n    };\n\n    _this.onClickNode = function (nodeData) {\n      var _this$props2 = _this.props,\n          selectGameObject = _this$props2.selectGameObject,\n          currentSceneId = _this$props2.currentSceneId;\n      var node = nodeData.node;\n      var gameObjId = node.id;\n      selectGameObject(currentSceneId, gameObjId);\n      setTimeout(function () {\n        _this.styleCurrentNode();\n      }, 0.05);\n    };\n\n    _this.onDoubleClickNode = function (nodeData) {\n      var _this$props3 = _this.props,\n          babylonPreview = _this$props3.babylonPreview,\n          selectGameObject = _this$props3.selectGameObject,\n          currentSceneId = _this$props3.currentSceneId,\n          currentObjectId = _this$props3.currentObjectId;\n      var node = nodeData.node;\n      var gameObjId = node.id;\n\n      if (gameObjId !== currentObjectId) {\n        selectGameObject(currentSceneId, gameObjId);\n      }\n\n      var currentBabylonScene = babylonPreview.currentScene;\n\n      if (currentBabylonScene) {\n        currentBabylonScene.setEditorCameraFocus(gameObjId);\n      }\n    };\n\n    _this.onRightClickNode = function (nodeData, e) {\n      var _this$props4 = _this.props,\n          currentSceneId = _this$props4.currentSceneId,\n          currentObjectId = _this$props4.currentObjectId,\n          selectGameObject = _this$props4.selectGameObject;\n      var node = nodeData.node;\n      var gameObjId = node.id;\n      var position = {\n        x: e.clientX,\n        y: e.clientY\n      };\n\n      if (gameObjId !== currentObjectId) {\n        selectGameObject(currentSceneId, gameObjId);\n      }\n\n      _this.showContextMenuFor(nodeData, position);\n    };\n\n    _this.onClickCode = function (nodeData) {\n      var _this$props5 = _this.props,\n          currentSceneId = _this$props5.currentSceneId,\n          currentObjectId = _this$props5.currentObjectId,\n          selectGameObject = _this$props5.selectGameObject,\n          setIsEditorOn = _this$props5.setIsEditorOn;\n      var node = nodeData.node;\n      var gameObjId = node.id;\n\n      if (gameObjId !== currentObjectId) {\n        selectGameObject(currentSceneId, gameObjId);\n      }\n\n      setIsEditorOn(true);\n    };\n\n    _this.onClickCopy = function () {\n      var _this$props6 = _this.props,\n          currentSceneId = _this$props6.currentSceneId,\n          currentGameObjects = _this$props6.currentGameObjects,\n          currentGameObject = _this$props6.currentGameObject,\n          addGameObject = _this$props6.addGameObject;\n\n      var copiedGameObjAndChildren = _this.getCopiedGameObjectAndChildren(currentGameObject, currentGameObjects);\n\n      var copiedGameObj = copiedGameObjAndChildren[0];\n\n      _this.transformGameObjectLittle(copiedGameObj);\n\n      copiedGameObjAndChildren.forEach(function (gameObj) {\n        addGameObject(currentSceneId, gameObj);\n      });\n    };\n\n    _this.onClickRemove = function (nodeData) {\n      var gameObjIdsToRemove = [];\n\n      _this.traverse(nodeData.node, function (node) {\n        gameObjIdsToRemove.push(node.id);\n      });\n\n      var _this$props7 = _this.props,\n          currentSceneId = _this$props7.currentSceneId,\n          removeGameObjects = _this$props7.removeGameObjects,\n          selectGameObject = _this$props7.selectGameObject;\n      selectGameObject(currentSceneId, null);\n      removeGameObjects(currentSceneId, gameObjIdsToRemove);\n    };\n\n    _this.onClickLock = function () {\n      var currentGameObject = _this.props.currentGameObject;\n      var isLocked = !currentGameObject.isLocked;\n\n      _this.onChangePlainProperty(PROPERTY_ID.LOCK, isLocked);\n    };\n\n    _this.traverse = function (node, func) {\n      if (!node) {\n        return;\n      }\n\n      if (Array.isArray(node)) {\n        node.forEach(function (_node) {\n          _this.traverse(_node, func);\n        });\n      } else {\n        if (func) {\n          func(node);\n        }\n\n        _this.traverse(node.children, func);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.componentNode = ReactDOM.findDOMNode(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      // if (prevProps.currentObjectId !== this.props.currentObjectId) {\n      setTimeout(function () {\n        _this2.styleCurrentNode();\n      }, 0.5); // }\n    }\n  }, {\n    key: \"updateGameObjectParent\",\n    value: function updateGameObjectParent(event) {\n      var node = event.node,\n          nextParentNode = event.nextParentNode;\n      var _this$props8 = this.props,\n          currentSceneId = _this$props8.currentSceneId,\n          updateGameObjectProperty = _this$props8.updateGameObjectProperty;\n      var gameObjId = node.id;\n      var nextParentId = nextParentNode ? nextParentNode.id : null;\n      updateGameObjectProperty(currentSceneId, gameObjId, PROPERTY_ID.PARENT_ID, nextParentId);\n    }\n  }, {\n    key: \"reorderGameObjects\",\n    value: function reorderGameObjects(event) {\n      var treeData = event.treeData;\n      var _this$props9 = this.props,\n          currentSceneId = _this$props9.currentSceneId,\n          reorderGameObjects = _this$props9.reorderGameObjects;\n      var reorderedGameObjIds = [];\n      this.traverse(treeData, function (node) {\n        reorderedGameObjIds.push(node.id);\n      });\n      reorderGameObjects(currentSceneId, reorderedGameObjIds);\n    }\n  }, {\n    key: \"styleCurrentNode\",\n    value: function styleCurrentNode() {\n      if (this.componentNode instanceof HTMLElement) {\n        var selected = this.componentNode.querySelector(\".objectList_item-current\");\n        if (!selected) return;\n        var prevSelected = this.componentNode.querySelector(\".current\");\n\n        if (prevSelected) {\n          prevSelected.classList.remove(\"current\");\n        }\n\n        selected.parentNode.parentNode.parentNode.parentNode.classList.add(\"current\");\n      }\n    }\n  }, {\n    key: \"showContextMenuFor\",\n    value: function showContextMenuFor(nodeData, position) {\n      var menus = this.getContextMenuFor(nodeData);\n      this.props.showContextMenu(menus, position);\n    }\n  }, {\n    key: \"getContextMenuFor\",\n    value: function getContextMenuFor(nodeData) {\n      var _this3 = this;\n\n      var currentScene = this.props.currentScene;\n      var node = nodeData.node;\n      var gameObjId = node.id;\n      var gameObj = currentScene.gameObjects[gameObjId];\n      var menus = [{\n        img: codeEditorIcon,\n        name: \"코드 에디터\",\n        onClick: function onClick() {\n          return _this3.onClickCode(nodeData);\n        }\n      }, {\n        img: copyIcon,\n        name: \"복제\",\n        onClick: this.onClickCopy\n      }];\n\n      if (!gameObj.isLocked) {\n        menus.push({\n          img: deleteIcon,\n          name: \"삭제\",\n          onClick: function onClick() {\n            return _this3.onClickRemove(nodeData);\n          }\n        });\n      }\n\n      if (gameObj.isLocked) {\n        menus.push({\n          img: unlockIcon,\n          name: \"잠금 해제\",\n          onClick: function onClick() {\n            return _this3.onClickLock(nodeData);\n          }\n        });\n      } else {\n        menus.push({\n          img: lockIcon,\n          name: \"잠금\",\n          onClick: function onClick() {\n            return _this3.onClickLock(nodeData);\n          }\n        });\n      }\n\n      return menus;\n    }\n  }, {\n    key: \"getCopiedGameObjectAndChildren\",\n    value: function getCopiedGameObjectAndChildren(gameObj, gameObjs) {\n      var copiedGameObjAndChildren = [];\n      var gameObjIds = Object.keys(gameObjs).map(function (gameObjId) {\n        return gameObjs[gameObjId].id;\n      });\n\n      var traverse = function traverse(gameObj, parentGameObj, gameObjs) {\n        var copiedGameObj = JSON.parse(JSON.stringify(gameObj));\n        var copiedGameObjId = createDefaultGameObjId(gameObjIds, copiedGameObj.type);\n        copiedGameObj.id = copiedGameObjId;\n        copiedGameObjAndChildren.push(copiedGameObj);\n        gameObjIds.push(copiedGameObjId);\n\n        if (parentGameObj) {\n          copiedGameObj.parentId = parentGameObj.id;\n        }\n\n        for (var i in gameObjs) {\n          if (gameObjs[i].parentId === gameObj.id) {\n            traverse(gameObjs[i], copiedGameObj, gameObjs);\n          }\n        }\n      };\n\n      traverse(gameObj, null, gameObjs);\n      return copiedGameObjAndChildren;\n    }\n  }, {\n    key: \"transformGameObjectLittle\",\n    value: function transformGameObjectLittle(gameObject) {\n      if (gameObject.position) {\n        if (!isNaN(gameObject.position.x)) {\n          gameObject.position.x += 0.1;\n        }\n\n        if (!isNaN(gameObject.position.y)) {\n          gameObject.position.y += 0.1;\n        }\n\n        if (!isNaN(gameObject.position.z)) {\n          gameObject.position.z += 0.1;\n        }\n      }\n    }\n  }, {\n    key: \"onChangePlainProperty\",\n    value: function onChangePlainProperty(propertyId, value) {\n      var _this$props10 = this.props,\n          currentSceneId = _this$props10.currentSceneId,\n          currentGameObject = _this$props10.currentGameObject,\n          updateGameObjectProperty = _this$props10.updateGameObjectProperty;\n      updateGameObjectProperty(currentSceneId, currentGameObject.id, propertyId, value);\n    }\n  }, {\n    key: \"getTree\",\n    value: function getTree() {\n      var tree = [];\n      var gameObjects = this.props.currentObjects;\n\n      if (!gameObjects) {\n        return tree;\n      }\n\n      var getParent = function getParent(tree, parentId) {\n        for (var i in tree) {\n          var node = tree[i];\n\n          if (node.id === parentId) {\n            return node;\n          } else {\n            var parent = getParent(node.children, parentId);\n\n            if (parent) {\n              return parent;\n            }\n          }\n        }\n      };\n\n      var gameObjectIds = this.props.gameObjectIds;\n\n      for (var i in gameObjectIds) {\n        var gameObjectId = gameObjectIds[i];\n        var gameObject = gameObjects[gameObjectId];\n        var node = this.convertToNode(gameObject);\n\n        if (gameObject.parentId) {\n          var parent = getParent(tree, gameObject.parentId);\n\n          if (parent) {\n            parent.children.push(node);\n          }\n        } else {\n          tree.push(node);\n        }\n      }\n\n      return tree;\n    }\n  }, {\n    key: \"convertToNode\",\n    value: function convertToNode(gameObj) {\n      return {\n        id: gameObj.id,\n        title: this.getNodeTitleFor(gameObj),\n        children: [],\n        expanded: gameObj.expanded,\n        current: gameObj.id === this.props.currentObjectId\n      };\n    }\n  }, {\n    key: \"getNodeTitleFor\",\n    value: function getNodeTitleFor(gameObj) {\n      switch (gameObj.type) {\n        case GAMEOBJECT.CAMERA:\n          return gameObj.name + (gameObj.isActiveCamera ? \" (시작 카메라)\" : \"\");\n\n        default:\n          return gameObj.name;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.isSoundsShowing) {\n        return React.createElement(React.Fragment, null);\n      }\n\n      var currentGameObjects = this.props.currentGameObjects;\n      return React.createElement(View, {\n        onClickAddButton: this.onClickAddButton,\n        onMoveNode: this.onMoveNode,\n        onClickNode: this.onClickNode,\n        onDoubleClickNode: this.onDoubleClickNode,\n        onRightClickNode: this.onRightClickNode,\n        treeData: this.getTree(),\n        onToggleGameObject: this.onToggleGameObject,\n        onClickCode: this.onClickCode,\n        onClickLock: this.onClickLock,\n        gameObjects: currentGameObjects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  var _state$builder = state.builder,\n      babylonPreview = _state$builder.babylonPreview,\n      isSoundsShowing = _state$builder.isSoundsShowing;\n  var scenes = state.game.scenes;\n  var _state$interaction = state.interaction,\n      currentSceneId = _state$interaction.currentSceneId,\n      currentGameObjectIds = _state$interaction.currentGameObjectIds;\n  var currentScene = scenes[currentSceneId];\n  var currentObjectId = currentGameObjectIds[currentSceneId];\n  var gameObjectIds = currentScene ? currentScene.gameObjectIds : null;\n  var currentGameObjects = currentScene ? currentScene.gameObjects : {};\n  var currentObjects = currentScene ? currentScene.gameObjects : null;\n  var currentGameObjectId = state.interaction.currentGameObjectIds[currentSceneId];\n  var currentGameObject = currentScene && currentScene.gameObjects[currentGameObjectId];\n  return {\n    babylonPreview: babylonPreview,\n    isSoundsShowing: isSoundsShowing,\n    scenes: scenes,\n    currentObjects: currentObjects,\n    currentSceneId: currentSceneId,\n    currentScene: currentScene,\n    currentObjectId: currentObjectId,\n    gameObjectIds: gameObjectIds,\n    currentGameObject: currentGameObject,\n    currentGameObjects: currentGameObjects\n  };\n}, {\n  selectGameObject: interactionActions.selectGameObject,\n  addGameObject: gameActions.addGameObject,\n  removeGameObjects: gameActions.removeGameObjects,\n  reorderGameObjects: gameActions.reorderGameObjects,\n  updateGameObjectProperty: gameActions.updateGameObjectProperty,\n  setIsEditorOn: builderActions.setIsEditorOn,\n  setShowSounds: builderActions.setShowSounds,\n  setIsObjectBoxOn: builderActions.setIsObjectBoxOn,\n  showContextMenu: contextMenuActions.showContextMenu\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/ObjectList/Container.js"],"names":["React","Component","ReactDOM","connect","gameActions","builderActions","interactionActions","contextMenuActions","createDefaultGameObjId","View","window","BabylonConstant","GAMEOBJECT","PROPERTY_ID","Container","onClickAddButton","props","currentSceneId","setIsObjectBoxOn","alert","onMoveNode","event","updateGameObjectParent","reorderGameObjects","onToggleGameObject","nodeData","e","expanded","node","updateGameObjectProperty","gameObjId","id","onClickNode","selectGameObject","setTimeout","styleCurrentNode","onDoubleClickNode","babylonPreview","currentObjectId","currentBabylonScene","currentScene","setEditorCameraFocus","onRightClickNode","position","x","clientX","y","clientY","showContextMenuFor","onClickCode","setIsEditorOn","onClickCopy","currentGameObjects","currentGameObject","addGameObject","copiedGameObjAndChildren","getCopiedGameObjectAndChildren","copiedGameObj","transformGameObjectLittle","forEach","gameObj","onClickRemove","gameObjIdsToRemove","traverse","push","removeGameObjects","onClickLock","isLocked","onChangePlainProperty","LOCK","func","Array","isArray","_node","children","componentNode","findDOMNode","prevProps","nextParentNode","nextParentId","PARENT_ID","treeData","reorderedGameObjIds","HTMLElement","selected","querySelector","prevSelected","classList","remove","parentNode","add","menus","getContextMenuFor","showContextMenu","gameObjects","img","codeEditorIcon","name","onClick","copyIcon","deleteIcon","unlockIcon","lockIcon","gameObjs","gameObjIds","Object","keys","map","parentGameObj","JSON","parse","stringify","copiedGameObjId","type","parentId","i","gameObject","isNaN","z","propertyId","value","tree","currentObjects","getParent","parent","gameObjectIds","gameObjectId","convertToNode","title","getNodeTitleFor","current","CAMERA","isActiveCamera","isSoundsShowing","getTree","state","builder","scenes","game","interaction","currentGameObjectIds","currentGameObjectId","setShowSounds"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as contextMenuActions from \"../../Store/Reducer/contextMenu\";\nimport { createDefaultGameObjId } from \"../../Util/NameApis\";\nimport View from \"./View\";\n\nimport codeEditorIcon from \"../../../../Image/builder3d/icon-30-right-click-code-editor.svg\";\nimport copyIcon from \"../../../../Image/builder3d/icon-30-right-click-duplicate.svg\";\nimport deleteIcon from \"../../../../Image/builder3d/icon-30-right-click-delete.svg\";\nimport lockIcon from \"../../../../Image/builder3d/icon-30-right-click-lock.svg\";\nimport unlockIcon from \"../../../../Image/builder3d/icon-30-right-click-unlock.svg\";\n\nconst { GAMEOBJECT, PROPERTY_ID } = window.BabylonConstant;\n\nclass Container extends Component {\n  componentDidMount() {\n    this.componentNode = ReactDOM.findDOMNode(this);\n  }\n  componentDidUpdate(prevProps) {\n    // if (prevProps.currentObjectId !== this.props.currentObjectId) {\n    setTimeout(() => {\n      this.styleCurrentNode();\n    }, 0.5);\n    // }\n  }\n  onClickAddButton = () => {\n    if (this.props.currentSceneId) {\n      this.props.setIsObjectBoxOn(true);\n    } else {\n      alert(\"먼저 씬을 추가해 주세요.\");\n    }\n  };\n\n  onMoveNode = event => {\n    this.updateGameObjectParent(event);\n    this.reorderGameObjects(event);\n  };\n  updateGameObjectParent(event) {\n    const { node, nextParentNode } = event;\n    const { currentSceneId, updateGameObjectProperty } = this.props;\n    const gameObjId = node.id;\n    const nextParentId = nextParentNode ? nextParentNode.id : null;\n    updateGameObjectProperty(\n      currentSceneId,\n      gameObjId,\n      PROPERTY_ID.PARENT_ID,\n      nextParentId\n    );\n  }\n  onToggleGameObject = (nodeData, e) => {\n    const expanded = !nodeData.node.expanded;\n    const { currentSceneId, updateGameObjectProperty } = this.props;\n    const gameObjId = nodeData.node.id;\n\n    updateGameObjectProperty(currentSceneId, gameObjId, \"expanded\", expanded);\n  };\n  reorderGameObjects(event) {\n    const { treeData } = event;\n    const { currentSceneId, reorderGameObjects } = this.props;\n    const reorderedGameObjIds = [];\n    this.traverse(treeData, node => {\n      reorderedGameObjIds.push(node.id);\n    });\n    reorderGameObjects(currentSceneId, reorderedGameObjIds);\n  }\n\n  styleCurrentNode() {\n    if (this.componentNode instanceof HTMLElement) {\n      const selected = this.componentNode.querySelector(\n        \".objectList_item-current\"\n      );\n      if (!selected) return;\n      const prevSelected = this.componentNode.querySelector(\".current\");\n      if (prevSelected) {\n        prevSelected.classList.remove(\"current\");\n      }\n      selected.parentNode.parentNode.parentNode.parentNode.classList.add(\n        \"current\"\n      );\n    }\n  }\n\n  onClickNode = nodeData => {\n    const { selectGameObject, currentSceneId } = this.props;\n    const node = nodeData.node;\n    const gameObjId = node.id;\n    selectGameObject(currentSceneId, gameObjId);\n    setTimeout(() => {\n      this.styleCurrentNode();\n    }, 0.05);\n  };\n  onDoubleClickNode = nodeData => {\n    const {\n      babylonPreview,\n      selectGameObject,\n      currentSceneId,\n      currentObjectId\n    } = this.props;\n    const node = nodeData.node;\n    const gameObjId = node.id;\n    if (gameObjId !== currentObjectId) {\n      selectGameObject(currentSceneId, gameObjId);\n    }\n    const currentBabylonScene = babylonPreview.currentScene;\n    if (currentBabylonScene) {\n      currentBabylonScene.setEditorCameraFocus(gameObjId);\n    }\n  };\n\n  onRightClickNode = (nodeData, e) => {\n    const { currentSceneId, currentObjectId, selectGameObject } = this.props;\n    const node = nodeData.node;\n    const gameObjId = node.id;\n    const position = { x: e.clientX, y: e.clientY };\n    if (gameObjId !== currentObjectId) {\n      selectGameObject(currentSceneId, gameObjId);\n    }\n    this.showContextMenuFor(nodeData, position);\n  };\n  showContextMenuFor(nodeData, position) {\n    const menus = this.getContextMenuFor(nodeData);\n    this.props.showContextMenu(menus, position);\n  }\n  getContextMenuFor(nodeData) {\n    const { currentScene } = this.props;\n    const node = nodeData.node;\n    const gameObjId = node.id;\n    const gameObj = currentScene.gameObjects[gameObjId];\n    const menus = [\n      {\n        img: codeEditorIcon,\n        name: \"코드 에디터\",\n        onClick: () => this.onClickCode(nodeData)\n      },\n      {\n        img: copyIcon,\n        name: \"복제\",\n        onClick: this.onClickCopy\n      }\n    ];\n    if (!gameObj.isLocked) {\n      menus.push({\n        img: deleteIcon,\n        name: \"삭제\",\n        onClick: () => this.onClickRemove(nodeData)\n      });\n    }\n    if (gameObj.isLocked) {\n      menus.push({\n        img: unlockIcon,\n        name: \"잠금 해제\",\n        onClick: () => this.onClickLock(nodeData)\n      });\n    } else {\n      menus.push({\n        img: lockIcon,\n        name: \"잠금\",\n        onClick: () => this.onClickLock(nodeData)\n      });\n    }\n\n    return menus;\n  }\n  onClickCode = nodeData => {\n    const {\n      currentSceneId,\n      currentObjectId,\n      selectGameObject,\n      setIsEditorOn\n    } = this.props;\n    const node = nodeData.node;\n    const gameObjId = node.id;\n    if (gameObjId !== currentObjectId) {\n      selectGameObject(currentSceneId, gameObjId);\n    }\n    setIsEditorOn(true);\n  };\n\n  onClickCopy = () => {\n    const {\n      currentSceneId,\n      currentGameObjects,\n      currentGameObject,\n      addGameObject\n    } = this.props;\n\n    const copiedGameObjAndChildren = this.getCopiedGameObjectAndChildren(\n      currentGameObject,\n      currentGameObjects\n    );\n\n    const copiedGameObj = copiedGameObjAndChildren[0];\n    this.transformGameObjectLittle(copiedGameObj);\n\n    copiedGameObjAndChildren.forEach(gameObj => {\n      addGameObject(currentSceneId, gameObj);\n    });\n  };\n  getCopiedGameObjectAndChildren(gameObj, gameObjs) {\n    const copiedGameObjAndChildren = [];\n\n    const gameObjIds = Object.keys(gameObjs).map(\n      gameObjId => gameObjs[gameObjId].id\n    );\n\n    const traverse = (gameObj, parentGameObj, gameObjs) => {\n      const copiedGameObj = JSON.parse(JSON.stringify(gameObj));\n      const copiedGameObjId = createDefaultGameObjId(\n        gameObjIds,\n        copiedGameObj.type\n      );\n      copiedGameObj.id = copiedGameObjId;\n      copiedGameObjAndChildren.push(copiedGameObj);\n\n      gameObjIds.push(copiedGameObjId);\n\n      if (parentGameObj) {\n        copiedGameObj.parentId = parentGameObj.id;\n      }\n\n      for (let i in gameObjs) {\n        if (gameObjs[i].parentId === gameObj.id) {\n          traverse(gameObjs[i], copiedGameObj, gameObjs);\n        }\n      }\n    };\n\n    traverse(gameObj, null, gameObjs);\n    return copiedGameObjAndChildren;\n  }\n\n  transformGameObjectLittle(gameObject) {\n    if (gameObject.position) {\n      if (!isNaN(gameObject.position.x)) {\n        gameObject.position.x += 0.1;\n      }\n      if (!isNaN(gameObject.position.y)) {\n        gameObject.position.y += 0.1;\n      }\n      if (!isNaN(gameObject.position.z)) {\n        gameObject.position.z += 0.1;\n      }\n    }\n  }\n\n  onClickRemove = nodeData => {\n    const gameObjIdsToRemove = [];\n    this.traverse(nodeData.node, node => {\n      gameObjIdsToRemove.push(node.id);\n    });\n\n    const { currentSceneId, removeGameObjects, selectGameObject } = this.props;\n    selectGameObject(currentSceneId, null);\n    removeGameObjects(currentSceneId, gameObjIdsToRemove);\n  };\n\n  onChangePlainProperty(propertyId, value) {\n    const {\n      currentSceneId,\n      currentGameObject,\n      updateGameObjectProperty\n    } = this.props;\n    updateGameObjectProperty(\n      currentSceneId,\n      currentGameObject.id,\n      propertyId,\n      value\n    );\n  }\n\n  onClickLock = () => {\n    const { currentGameObject } = this.props;\n    const isLocked = !currentGameObject.isLocked;\n    this.onChangePlainProperty(PROPERTY_ID.LOCK, isLocked);\n  };\n\n  getTree() {\n    const tree = [];\n\n    const gameObjects = this.props.currentObjects;\n    if (!gameObjects) {\n      return tree;\n    }\n\n    const getParent = (tree, parentId) => {\n      for (let i in tree) {\n        const node = tree[i];\n        if (node.id === parentId) {\n          return node;\n        } else {\n          const parent = getParent(node.children, parentId);\n          if (parent) {\n            return parent;\n          }\n        }\n      }\n    };\n\n    const { gameObjectIds } = this.props;\n    for (let i in gameObjectIds) {\n      const gameObjectId = gameObjectIds[i];\n      const gameObject = gameObjects[gameObjectId];\n      const node = this.convertToNode(gameObject);\n      if (gameObject.parentId) {\n        const parent = getParent(tree, gameObject.parentId);\n        if (parent) {\n          parent.children.push(node);\n        }\n      } else {\n        tree.push(node);\n      }\n    }\n\n    return tree;\n  }\n  convertToNode(gameObj) {\n    return {\n      id: gameObj.id,\n      title: this.getNodeTitleFor(gameObj),\n      children: [],\n      expanded: gameObj.expanded,\n      current: gameObj.id === this.props.currentObjectId\n    };\n  }\n  getNodeTitleFor(gameObj) {\n    switch (gameObj.type) {\n      case GAMEOBJECT.CAMERA:\n        return gameObj.name + (gameObj.isActiveCamera ? \" (시작 카메라)\" : \"\");\n      default:\n        return gameObj.name;\n    }\n  }\n  traverse = (node, func) => {\n    if (!node) {\n      return;\n    }\n    if (Array.isArray(node)) {\n      node.forEach(_node => {\n        this.traverse(_node, func);\n      });\n    } else {\n      if (func) {\n        func(node);\n      }\n      this.traverse(node.children, func);\n    }\n  };\n\n  render() {\n    if (this.props.isSoundsShowing) {\n      return <></>;\n    }\n    const { currentGameObjects } = this.props;\n    return (\n      <View\n        onClickAddButton={this.onClickAddButton}\n        onMoveNode={this.onMoveNode}\n        onClickNode={this.onClickNode}\n        onDoubleClickNode={this.onDoubleClickNode}\n        onRightClickNode={this.onRightClickNode}\n        treeData={this.getTree()}\n        onToggleGameObject={this.onToggleGameObject}\n        onClickCode={this.onClickCode}\n        onClickLock={this.onClickLock}\n        gameObjects={currentGameObjects}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    const { babylonPreview, isSoundsShowing } = state.builder;\n    const { scenes } = state.game;\n    const { currentSceneId, currentGameObjectIds } = state.interaction;\n    const currentScene = scenes[currentSceneId];\n    const currentObjectId = currentGameObjectIds[currentSceneId];\n    const gameObjectIds = currentScene ? currentScene.gameObjectIds : null;\n    const currentGameObjects = currentScene ? currentScene.gameObjects : {};\n    const currentObjects = currentScene ? currentScene.gameObjects : null;\n    const currentGameObjectId =\n      state.interaction.currentGameObjectIds[currentSceneId];\n    const currentGameObject =\n      currentScene && currentScene.gameObjects[currentGameObjectId];\n    return {\n      babylonPreview,\n      isSoundsShowing,\n      scenes,\n      currentObjects,\n      currentSceneId,\n      currentScene,\n      currentObjectId,\n      gameObjectIds,\n      currentGameObject,\n      currentGameObjects\n    };\n  },\n  {\n    selectGameObject: interactionActions.selectGameObject,\n    addGameObject: gameActions.addGameObject,\n    removeGameObjects: gameActions.removeGameObjects,\n    reorderGameObjects: gameActions.reorderGameObjects,\n    updateGameObjectProperty: gameActions.updateGameObjectProperty,\n    setIsEditorOn: builderActions.setIsEditorOn,\n    setShowSounds: builderActions.setShowSounds,\n    setIsObjectBoxOn: builderActions.setIsObjectBoxOn,\n    showContextMenu: contextMenuActions.showContextMenu\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}