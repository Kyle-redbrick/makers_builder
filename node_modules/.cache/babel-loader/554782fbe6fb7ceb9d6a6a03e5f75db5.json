{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport var GetGridStyle = function GetGridStyle(_ref) {\n  var list = _ref.list,\n      index = _ref.index,\n      columnNumber = _ref.columnNumber,\n      itemSpace = _ref.itemSpace,\n      lineSpace = _ref.lineSpace,\n      containerWidth = _ref.containerWidth,\n      itemHeight = _ref.itemHeight;\n\n  /* \n    list : Array\n    index : map 내부의 index\n    columnNumber : 각 row에 정렬되는 item\n    itemSpace : 아이템의 사이의 간격\n    lineSpace : row 간격\n    containerWidth : (optional) 전체 컨테이너 크기 -> item width 자동 계산\n    itemHeight : (optional) item 의 높이 -> default: none\n    - 부모 컨테이너의 css 에  display: flex, flex-wrap: wrap;\n    */\n  var listLength = list.length;\n  var style = {};\n  style = index % columnNumber !== columnNumber - 1 ? _objectSpread({}, style, {\n    marginRight: \"\".concat(itemSpace, \"px\")\n  }) : _objectSpread({}, style);\n  style = listLength % columnNumber === 0 ? index < listLength - columnNumber ? _objectSpread({}, style, {\n    marginBottom: \"\".concat(lineSpace, \"px\")\n  }) : _objectSpread({}, style) : index < listLength - listLength % columnNumber ? _objectSpread({}, style, {\n    marginBottom: \"\".concat(lineSpace, \"px\")\n  }) : _objectSpread({}, style);\n  style = containerWidth ? _objectSpread({}, style, {\n    width: \"\".concat((containerWidth - itemSpace * (columnNumber - 1)) / columnNumber, \"px\")\n  }) : _objectSpread({}, style);\n  style = itemHeight ? _objectSpread({}, style, {\n    height: \"\".concat(itemHeight, \"px\")\n  }) : _objectSpread({}, style);\n  return style;\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Util/GridStyle.js"],"names":["GetGridStyle","list","index","columnNumber","itemSpace","lineSpace","containerWidth","itemHeight","listLength","length","style","marginRight","marginBottom","width","height"],"mappings":";AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAQtB;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,UACI,QADJA,UACI;;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,MAAMC,UAAU,GAAGP,IAAI,CAACQ,MAAxB;AAEA,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,GACHR,KAAK,GAAGC,YAAR,KAAyBA,YAAY,GAAG,CAAxC,qBACSO,KADT,EACmB;AAAEC,IAAAA,WAAW,YAAKP,SAAL;AAAb,GADnB,sBAESM,KAFT,CADF;AAKAA,EAAAA,KAAK,GACHF,UAAU,GAAGL,YAAb,KAA8B,CAA9B,GACID,KAAK,GAAGM,UAAU,GAAGL,YAArB,qBACOO,KADP,EACiB;AAAEE,IAAAA,YAAY,YAAKP,SAAL;AAAd,GADjB,sBAEOK,KAFP,CADJ,GAIIR,KAAK,GAAGM,UAAU,GAAIA,UAAU,GAAGL,YAAnC,qBACKO,KADL,EACe;AAAEE,IAAAA,YAAY,YAAKP,SAAL;AAAd,GADf,sBAEKK,KAFL,CALN;AASAA,EAAAA,KAAK,GAAGJ,cAAc,qBAEbI,KAFa,EAGb;AACDG,IAAAA,KAAK,YAAK,CAACP,cAAc,GAAGF,SAAS,IAAID,YAAY,GAAG,CAAnB,CAA3B,IACRA,YADG;AADJ,GAHa,sBAQbO,KARa,CAAtB;AAUAA,EAAAA,KAAK,GAAGH,UAAU,qBAETG,KAFS,EAGT;AACDI,IAAAA,MAAM,YAAKP,UAAL;AADL,GAHS,sBAOTG,KAPS,CAAlB;AASA,SAAOA,KAAP;AACD,CAxDM","sourcesContent":["export const GetGridStyle = ({\n  list,\n  index,\n  columnNumber,\n  itemSpace,\n  lineSpace,\n  containerWidth,\n  itemHeight\n}) => {\n  /* \n    list : Array\n    index : map 내부의 index\n    columnNumber : 각 row에 정렬되는 item\n    itemSpace : 아이템의 사이의 간격\n    lineSpace : row 간격\n    containerWidth : (optional) 전체 컨테이너 크기 -> item width 자동 계산\n    itemHeight : (optional) item 의 높이 -> default: none\n    - 부모 컨테이너의 css 에  display: flex, flex-wrap: wrap;\n    */\n  const listLength = list.length;\n\n  let style = {};\n  style =\n    index % columnNumber !== columnNumber - 1\n      ? { ...style, ...{ marginRight: `${itemSpace}px` } }\n      : { ...style };\n\n  style =\n    listLength % columnNumber === 0\n      ? index < listLength - columnNumber\n        ? { ...style, ...{ marginBottom: `${lineSpace}px` } }\n        : { ...style }\n      : index < listLength - (listLength % columnNumber)\n      ? { ...style, ...{ marginBottom: `${lineSpace}px` } }\n      : { ...style };\n\n  style = containerWidth\n    ? {\n        ...style,\n        ...{\n          width: `${(containerWidth - itemSpace * (columnNumber - 1)) /\n            columnNumber}px`\n        }\n      }\n    : { ...style };\n\n  style = itemHeight\n    ? {\n        ...style,\n        ...{\n          height: `${itemHeight}px`\n        }\n      }\n    : { ...style };\n\n  return style;\n};\n"]},"metadata":{},"sourceType":"module"}