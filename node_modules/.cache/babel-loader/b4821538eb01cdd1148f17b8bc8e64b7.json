{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { GRAMMAR, BLOCK, DATA } from \"./Type\";\nexport default [// 사칙연산\n{\n  name: \"+\",\n  dataType: DATA.NUMBER\n}, {\n  name: \"-\",\n  dataType: DATA.NUMBER\n}, {\n  name: \"*\",\n  dataType: DATA.NUMBER\n}, {\n  name: \"/\",\n  dataType: DATA.NUMBER\n}, {\n  name: \"%\",\n  dataType: DATA.NUMBER\n}, // 문자열 더하기\n{\n  name: \"+\",\n  dataType: DATA.STRING\n}, // 논리연산\n{\n  name: \"&&\",\n  dataType: DATA.BOOLEAN\n}, {\n  name: \"||\",\n  dataType: DATA.BOOLEAN\n}, // 비교연산\n{\n  name: \">\",\n  dataType: DATA.BOOLEAN\n}, {\n  name: \">=\",\n  dataType: DATA.BOOLEAN\n}, {\n  name: \"<\",\n  dataType: DATA.BOOLEAN\n}, {\n  name: \"<=\",\n  dataType: DATA.BOOLEAN\n}, {\n  name: \"==\",\n  dataType: DATA.BOOLEAN\n}, {\n  name: \"!=\",\n  dataType: DATA.BOOLEAN\n}, // 로직 Not 연산\n{\n  name: \"!\",\n  dataType: DATA.BOOLEAN\n}].map(function (operator) {\n  var _spriteDataTypes, _grammars, _dataTypes;\n\n  var childDataTypes = [operator.dataType];\n\n  if ([\">\", \">=\", \"<\", \"<=\"].indexOf(operator.name) > -1) {\n    childDataTypes = [DATA.NUMBER];\n  }\n\n  if ([\"==\", \"!=\"].indexOf(operator.name) > -1 || operator.name === \"+\" && operator.dataType === DATA.STRING) {\n    childDataTypes = [DATA.NUMBER, DATA.STRING, DATA.BOOLEAN];\n  }\n\n  var spriteDataTypes = (_spriteDataTypes = {}, _defineProperty(_spriteDataTypes, DATA.NUMBER, [DATA.SPRITE, DATA.TEXT, DATA.JOYSTICK, DATA.SCREEN]), _defineProperty(_spriteDataTypes, DATA.STRING, [DATA.TEXT]), _defineProperty(_spriteDataTypes, DATA.BOOLEAN, [DATA.SPRITE, DATA.TEXT]), _spriteDataTypes);\n  var child = {\n    grammars: (_grammars = {}, _defineProperty(_grammars, BLOCK.CONSTANT, GRAMMAR.OBJECTIVE), _defineProperty(_grammars, BLOCK.VARIABLE, GRAMMAR.OBJECTIVE), _defineProperty(_grammars, BLOCK.SPRITE, GRAMMAR.OBJECTIVE), _grammars),\n    blockTypes: [BLOCK.CONSTANT, BLOCK.VARIABLE, BLOCK.SPRITE],\n    dataTypes: (_dataTypes = {}, _defineProperty(_dataTypes, BLOCK.CONSTANT, childDataTypes), _defineProperty(_dataTypes, BLOCK.VARIABLE, childDataTypes), _defineProperty(_dataTypes, BLOCK.SPRITE, spriteDataTypes[childDataTypes[0]]), _dataTypes)\n  };\n  var childs = [child];\n\n  if (operator.name !== \"!\") {\n    childs.push(JSON.parse(JSON.stringify(child)));\n  }\n\n  return _objectSpread({}, operator, {\n    childs: childs\n  });\n});","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Editor/Component/OOBCEditor/Util/Operator.js"],"names":["GRAMMAR","BLOCK","DATA","name","dataType","NUMBER","STRING","BOOLEAN","map","operator","childDataTypes","indexOf","spriteDataTypes","SPRITE","TEXT","JOYSTICK","SCREEN","child","grammars","CONSTANT","OBJECTIVE","VARIABLE","blockTypes","dataTypes","childs","push","JSON","parse","stringify"],"mappings":"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","sourcesContent":["import { GRAMMAR, BLOCK, DATA } from \"./Type\";\n\nexport default [\n  // 사칙연산\n  {\n    name: \"+\",\n    dataType: DATA.NUMBER\n  },\n  {\n    name: \"-\",\n    dataType: DATA.NUMBER\n  },\n  {\n    name: \"*\",\n    dataType: DATA.NUMBER\n  },\n  {\n    name: \"/\",\n    dataType: DATA.NUMBER\n  },\n  {\n    name: \"%\",\n    dataType: DATA.NUMBER\n  },\n  // 문자열 더하기\n  {\n    name: \"+\",\n    dataType: DATA.STRING\n  },\n  // 논리연산\n  {\n    name: \"&&\",\n    dataType: DATA.BOOLEAN\n  },\n  {\n    name: \"||\",\n    dataType: DATA.BOOLEAN\n  },\n  // 비교연산\n  {\n    name: \">\",\n    dataType: DATA.BOOLEAN\n  },\n  {\n    name: \">=\",\n    dataType: DATA.BOOLEAN\n  },\n  {\n    name: \"<\",\n    dataType: DATA.BOOLEAN\n  },\n  {\n    name: \"<=\",\n    dataType: DATA.BOOLEAN\n  },\n  {\n    name: \"==\",\n    dataType: DATA.BOOLEAN\n  },\n  {\n    name: \"!=\",\n    dataType: DATA.BOOLEAN\n  },\n  // 로직 Not 연산\n  {\n    name: \"!\",\n    dataType: DATA.BOOLEAN\n  }\n].map(operator => {\n  let childDataTypes = [operator.dataType];\n  if ([\">\", \">=\", \"<\", \"<=\"].indexOf(operator.name) > -1) {\n    childDataTypes = [DATA.NUMBER];\n  }\n  if (\n    [\"==\", \"!=\"].indexOf(operator.name) > -1 ||\n    (operator.name === \"+\" && operator.dataType === DATA.STRING)\n  ) {\n    childDataTypes = [DATA.NUMBER, DATA.STRING, DATA.BOOLEAN];\n  }\n\n  const spriteDataTypes = {\n    [DATA.NUMBER]: [DATA.SPRITE, DATA.TEXT, DATA.JOYSTICK, DATA.SCREEN],\n    [DATA.STRING]: [DATA.TEXT],\n    [DATA.BOOLEAN]: [DATA.SPRITE, DATA.TEXT]\n  };\n\n  const child = {\n    grammars: {\n      [BLOCK.CONSTANT]: GRAMMAR.OBJECTIVE,\n      [BLOCK.VARIABLE]: GRAMMAR.OBJECTIVE,\n      [BLOCK.SPRITE]: GRAMMAR.OBJECTIVE\n    },\n    blockTypes: [BLOCK.CONSTANT, BLOCK.VARIABLE, BLOCK.SPRITE],\n    dataTypes: {\n      [BLOCK.CONSTANT]: childDataTypes,\n      [BLOCK.VARIABLE]: childDataTypes,\n      [BLOCK.SPRITE]: spriteDataTypes[childDataTypes[0]]\n    }\n  };\n  const childs = [child];\n  if (operator.name !== \"!\") {\n    childs.push(JSON.parse(JSON.stringify(child)));\n  }\n\n  return { ...operator, childs };\n});\n"]},"metadata":{},"sourceType":"module"}