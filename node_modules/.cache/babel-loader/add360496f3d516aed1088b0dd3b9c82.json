{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Ranking/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { withSubscribe } from \"../../Common/Util/Subscribe\";\nimport View from \"./View\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.getSemesterInfo =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return request.getSemester();\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              json = _context.sent;\n\n              _this.setState({\n                semester: json\n              });\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 10]]);\n    }));\n\n    _this.handleSelectTab = function (selectedTab) {\n      _this.setState({\n        selectedTab: selectedTab\n      }, function () {\n        _this.getMyRankingInfo();\n\n        _this.getRankingList();\n      });\n    };\n\n    _this.getMyRankingInfo =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var params, response, json;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              params = {\n                type: _this.state.selectedTab,\n                email: _this.props.userinfo.email\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return request.getMyRanking(params);\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context2.sent;\n\n              _this.setState({\n                myRanking: json // 나의 ranking정보\n\n              });\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 11]]);\n    }));\n    _this.getRankingList =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _this$state, currentPage, pageSize, searchKey, params, response, json, count, rows;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state = _this.state, currentPage = _this$state.currentPage, pageSize = _this$state.pageSize, searchKey = _this$state.searchKey;\n              params = {\n                type: _this.state.selectedTab\n              };\n\n              if (searchKey === \"\") {\n                params.limit = pageSize;\n                params.offset = (currentPage - 1) * pageSize;\n              } else {\n                params.searchKey = searchKey;\n              }\n\n              _context3.next = 5;\n              return request.getUserRankings(params);\n\n            case 5:\n              response = _context3.sent;\n              _context3.next = 8;\n              return response.json();\n\n            case 8:\n              json = _context3.sent;\n              count = json.count, rows = json.rows; // 검색 list 재정렬\n\n              rows.sort(function (prev, next) {\n                return prev.rank - next.rank;\n              }); // TO-Do : 학기 정보 셋팅\n\n              _this.setState({\n                totalRankingCount: count,\n                // 검색된 ranker 수\n                totalRankingPage: Math.ceil(count / pageSize),\n                // 검색 page \n                userRankings: rows,\n                // 검색된 ranker\n                isSearchedByKey: searchKey !== \"\"\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    _this.onClickMoveMyPage = function () {\n      _this.props.history.push(\"/mypage\");\n    };\n\n    _this.onClickPageNumber = function (pageNo) {\n      _this.setState({\n        currentPage: pageNo\n      }, function () {\n        _this.getRankingList();\n      });\n    };\n\n    _this.handleOnChangeSearchKey = function (e) {\n      _this.setState({\n        searchKey: e.target.value\n      });\n    };\n\n    _this.handleOnKeyUp = function (e) {\n      if (e.keyCode === 13) {\n        _this.getRankingList();\n      }\n    };\n\n    _this.getPageInfo = function () {\n      var pages = [];\n\n      for (var i = _this.state.startPage; i <= _this.state.totalRankingPage; i++) {\n        pages.push(i);\n        if (pages.length === 10) break;\n      }\n\n      return {\n        pages: pages,\n        currentPage: _this.state.currentPage\n      };\n    };\n\n    _this.onClickPageHandler = function (type) {\n      var _this$getPageInfo = _this.getPageInfo(),\n          pages = _this$getPageInfo.pages;\n\n      if (type === \"next\") {\n        // 다음 버튼 눌렀을때\n        // 현재 보여주는 page다음의 페이지가 총 페이지 수 보다 작을때\n        if (pages[pages.length - 1] + 1 <= _this.state.totalRankingPage) {\n          _this.setState({\n            startPage: pages[pages.length - 1] + 1\n          });\n\n          _this.onClickPageNumber(pages[pages.length - 1] + 1);\n        }\n      } else {\n        // 이전 버튼 눌렀을때\n        if (pages[0] - _this.state.pageSize > 0) {\n          // 현재 pageList의 첫번보다 pageSize만큼 더 있는지 확인\n          _this.setState({\n            startPage: pages[0] - 10\n          });\n\n          _this.onClickPageNumber(pages[0] - 10);\n        } else {\n          //없으면 현재 pageList에서 첫번째로 이돔\n          _this.setState({\n            startPage: pages[0]\n          });\n\n          _this.onClickPageNumber(pages[0]);\n        }\n      }\n    };\n\n    _this.onClickSubScribe = function (type, userInfo) {\n      if (type === \"subscribe\") {\n        _this.props.subscribe(userInfo.email, function (result) {\n          if (result) _this.subscribeCountManage(\"plus\", userInfo.email);\n        });\n      } else if (type === \"unsubscribe\") {\n        _this.props.unsubscribe(userInfo.email, function (result) {\n          if (result) _this.subscribeCountManage(\"minus\", userInfo.email);\n        });\n      }\n    };\n\n    _this.subscribeCountManage = function (type, email) {\n      var _userRankings = _this.state.userRankings;\n\n      for (var i = 0; i < _userRankings.length; i++) {\n        if (_userRankings[i].user.email === email) {\n          if (type === \"plus\") _userRankings[i].user.subscribeCount += 1;\n          if (type === \"minus\" && _userRankings[i].user.subscribeCount > 0) _userRankings[i].user.subscribeCount -= 1;\n          break;\n        }\n      }\n\n      _this.setState({\n        userRankings: _userRankings\n      });\n    };\n\n    _this.state = {\n      semester: undefined,\n      // 학기\n      totalRankingCount: 0,\n      // 검색된 ranker 수\n      totalRankingPage: 0,\n      // 검색 page list\n      userRankings: [],\n      // ranker list\n      myRanking: undefined,\n      // 나의 ranking 정보\n      selectedTab: \"learn\",\n      // selected tab\n      offset: 0,\n      // paging\n      pageSize: 10,\n      //paging\n      currentPage: 1,\n      // 현재 페이지\n      startPage: 1,\n      // start\n      searchKey: \"\",\n      // 검색어\n      isSearchedByKey: false // 검색어로 검색했을때\n\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getSemesterInfo();\n      this.getMyRankingInfo();\n      this.getRankingList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          semester = _this$state2.semester,\n          selectedTab = _this$state2.selectedTab,\n          userRankings = _this$state2.userRankings,\n          myRanking = _this$state2.myRanking,\n          isSearchedByKey = _this$state2.isSearchedByKey;\n      var _this$props = this.props,\n          intl = _this$props.intl,\n          userinfo = _this$props.userinfo,\n          subscribeInfo = _this$props.subscribeInfo;\n      var handleSelectTab = this.handleSelectTab,\n          getPageInfo = this.getPageInfo,\n          onClickPageNumber = this.onClickPageNumber,\n          handleOnChangeSearchKey = this.handleOnChangeSearchKey,\n          handleOnKeyUp = this.handleOnKeyUp,\n          getRankingList = this.getRankingList,\n          onClickPageHandler = this.onClickPageHandler,\n          onClickMoveMyPage = this.onClickMoveMyPage,\n          onClickSubScribe = this.onClickSubScribe;\n      var pageInfo = getPageInfo();\n      return React.createElement(View, {\n        intl: intl,\n        me: userinfo,\n        semester: semester,\n        pages: pageInfo.pages,\n        currentPage: pageInfo.currentPage,\n        selectedTab: selectedTab,\n        handleSelectTab: handleSelectTab,\n        userRankings: userRankings,\n        myRanking: myRanking,\n        onClickPageNumber: onClickPageNumber,\n        handleOnChangeSearchKey: handleOnChangeSearchKey,\n        handleOnKeyUp: handleOnKeyUp,\n        getRankingList: getRankingList,\n        isSearchedByKey: isSearchedByKey,\n        onClickPageHandler: onClickPageHandler,\n        onClickMoveMyPage: onClickMoveMyPage,\n        subscribedEmails: subscribeInfo.emails,\n        onClickSubScribe: onClickSubScribe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    userinfo: state.userinfo\n  };\n}, {})(injectIntl(withSubscribe(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Ranking/Container.js"],"names":["React","Component","connect","injectIntl","request","withSubscribe","View","Container","props","getSemesterInfo","getSemester","response","json","setState","semester","console","log","handleSelectTab","selectedTab","getMyRankingInfo","getRankingList","params","type","state","email","userinfo","getMyRanking","myRanking","currentPage","pageSize","searchKey","limit","offset","getUserRankings","count","rows","sort","prev","next","rank","totalRankingCount","totalRankingPage","Math","ceil","userRankings","isSearchedByKey","onClickMoveMyPage","history","push","onClickPageNumber","pageNo","handleOnChangeSearchKey","e","target","value","handleOnKeyUp","keyCode","getPageInfo","pages","i","startPage","length","onClickPageHandler","onClickSubScribe","userInfo","subscribe","result","subscribeCountManage","unsubscribe","_userRankings","user","subscribeCount","undefined","intl","subscribeInfo","pageInfo","emails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { withSubscribe } from \"../../Common/Util/Subscribe\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      semester: undefined, // 학기\n      totalRankingCount: 0, // 검색된 ranker 수\n      totalRankingPage: 0, // 검색 page list\n      userRankings: [], // ranker list\n      myRanking : undefined, // 나의 ranking 정보\n      selectedTab: \"learn\", // selected tab\n      offset: 0, // paging\n      pageSize: 10, //paging\n      currentPage: 1, // 현재 페이지\n      startPage: 1, // start\n      searchKey : \"\", // 검색어\n      isSearchedByKey : false // 검색어로 검색했을때\n    }\n  }\n\n  componentDidMount() {\n    this.getSemesterInfo();\n    this.getMyRankingInfo();\n    this.getRankingList();\n  }\n\n  getSemesterInfo = async () => {\n    try {\n      let response = await request.getSemester();\n      const json = await response.json();\n      this.setState({ semester : json })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  handleSelectTab = selectedTab => {\n    this.setState(\n      {selectedTab}, \n      () => { \n        this.getMyRankingInfo();\n        this.getRankingList();\n      }\n    );\n  }\n\n  getMyRankingInfo = async () => {\n    let params = { type: this.state.selectedTab, email : this.props.userinfo.email } \n    try {\n      let response = await request.getMyRanking(params);\n      const json = await response.json();\n\n      this.setState({\n        myRanking: json, // 나의 ranking정보\n      }) \n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  getRankingList = async () => {\n    const { currentPage, pageSize, searchKey } = this.state;\n    let params = { type: this.state.selectedTab } \n\n    if(searchKey === \"\") {\n      params.limit = pageSize;\n      params.offset = (currentPage - 1) * pageSize;\n    } else {\n      params.searchKey = searchKey\n    }\n    let response = await request.getUserRankings(params);\n    const json = await response.json();\n    const {count, rows} = json;\n\n    // 검색 list 재정렬\n    rows.sort(function(prev, next){\n      return prev.rank - next.rank\n    });\n\n    // TO-Do : 학기 정보 셋팅\n    this.setState({\n      totalRankingCount: count, // 검색된 ranker 수\n      totalRankingPage: Math.ceil(count/pageSize), // 검색 page \n      userRankings: rows, // 검색된 ranker\n      isSearchedByKey: searchKey !== \"\"\n    })\n  }\n\n  onClickMoveMyPage = () => {\n    this.props.history.push(\"/mypage\");\n  }\n\n  onClickPageNumber = (pageNo) => {\n    this.setState(\n      { currentPage: pageNo }, \n      () => { this.getRankingList() }\n    );\n\n  }\n\n  handleOnChangeSearchKey = (e) => {\n    this.setState({searchKey:e.target.value})\n  }\n\n  handleOnKeyUp = (e) => {\n    if (e.keyCode === 13) {\n      this.getRankingList();\n    }\n  }\n\n  getPageInfo = () => {\n    let pages = []\n    for(let i = this.state.startPage; i <= this.state.totalRankingPage; i++){\n      pages.push(i)\n      if(pages.length === 10) break;\n    }\n    return {\n      pages: pages,\n      currentPage: this.state.currentPage\n    }\n  }\n\n  onClickPageHandler = (type) => {\n    const {pages} = this.getPageInfo();\n    if(type === \"next\") {  // 다음 버튼 눌렀을때\n      // 현재 보여주는 page다음의 페이지가 총 페이지 수 보다 작을때\n      if(pages[pages.length-1]+1 <= this.state.totalRankingPage) {\n        this.setState({startPage:pages[pages.length-1]+1})\n        this.onClickPageNumber(pages[pages.length-1]+1)\n      }\n    } else { // 이전 버튼 눌렀을때\n      if(pages[0]-this.state.pageSize > 0){ // 현재 pageList의 첫번보다 pageSize만큼 더 있는지 확인\n        this.setState({startPage:pages[0]-10})\n        this.onClickPageNumber(pages[0]-10)\n      } else { //없으면 현재 pageList에서 첫번째로 이돔\n        this.setState({startPage:pages[0]})\n        this.onClickPageNumber(pages[0])\n      }\n    }\n  }\n\n  onClickSubScribe = (type, userInfo) => {\n    if(type === \"subscribe\") {\n      this.props.subscribe(\n        userInfo.email, \n        (result) => { \n          if(result) this.subscribeCountManage(\"plus\" , userInfo.email);\n        }\n      );\n\n    } else if(type === \"unsubscribe\"){\n      this.props.unsubscribe(\n        userInfo.email, \n        (result) => { \n          if(result) this.subscribeCountManage(\"minus\" , userInfo.email);\n        }\n      );\n    }\n  }\n\n  subscribeCountManage = (type, email) => {\n    let _userRankings = this.state.userRankings\n    for(let i =0; i< _userRankings.length; i++){\n      if(_userRankings[i].user.email === email) {\n        if(type === \"plus\") _userRankings[i].user.subscribeCount += 1\n        if(type === \"minus\" && _userRankings[i].user.subscribeCount > 0) _userRankings[i].user.subscribeCount -= 1\n        break;\n      }\n    }\n\n    this.setState({userRankings: _userRankings})\n  }\n\n  render() {\n    const { \n      semester, \n      selectedTab, \n      userRankings, \n      myRanking, \n      isSearchedByKey \n    } = this.state;\n    const { intl, userinfo, subscribeInfo  } = this.props;\n    const { \n      handleSelectTab, \n      getPageInfo, \n      onClickPageNumber, \n      handleOnChangeSearchKey, \n      handleOnKeyUp, \n      getRankingList,\n      onClickPageHandler,\n      onClickMoveMyPage,\n      onClickSubScribe\n    } = this;\n    const pageInfo = getPageInfo();\n\n    return (\n      <View\n        intl={intl}\n        me={userinfo}\n        semester={semester}\n        pages={pageInfo.pages}\n        currentPage={pageInfo.currentPage}\n        selectedTab={selectedTab}\n        handleSelectTab={handleSelectTab}\n\n        userRankings={userRankings}\n        myRanking={myRanking}\n        onClickPageNumber={onClickPageNumber}\n        handleOnChangeSearchKey={handleOnChangeSearchKey}\n        handleOnKeyUp={handleOnKeyUp}\n        getRankingList={getRankingList}\n        isSearchedByKey={isSearchedByKey}\n        onClickPageHandler={onClickPageHandler}\n        onClickMoveMyPage={onClickMoveMyPage}\n        subscribedEmails={subscribeInfo.emails}\n        onClickSubScribe={onClickSubScribe}\n      />\n    );\n  }\n}\nexport default connect(\n  state => ({ userinfo: state.userinfo }),\n  {}\n)(injectIntl(withSubscribe(Container)));\n"]},"metadata":{},"sourceType":"module"}