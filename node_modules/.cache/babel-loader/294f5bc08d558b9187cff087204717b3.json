{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/Comment/View.js\";\nimport React from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport ContextMenu from \"../ContextMenu\";\nimport { SIGNOUT_PROFILE_IMAGE } from \"../../Util/Constant\";\nimport { dateFormatter } from \"../../Util/DateFormatter\";\nimport UserIconWrapper from \"../../../Common/Component/UserIconWrapper\";\nimport morePlus from \"../../../Image/more-plus.svg\";\nimport arrowDownImg from \"../../../Image/social_arrow-down.svg\";\nimport arrowUpImg from \"../../../Image/social_arrow-up.svg\";\nimport userDefaultImg from \"../../../Image/userDefaultImg.png\";\n\nvar View = function View(props) {\n  var userinfo = props.userinfo,\n      comments = props.comments,\n      allCommentCount = props.allCommentCount,\n      isLoggedIn = props.isLoggedIn,\n      user = props.user,\n      hasMore = props.hasMore,\n      handleLoadMore = props.handleLoadMore,\n      _handleInputChange = props.handleInputChange,\n      _handleAddComment = props.handleAddComment,\n      handleSetInputTarget = props.handleSetInputTarget,\n      mainInputMessage = props.mainInputMessage,\n      subInputMessage = props.subInputMessage,\n      subInputTargetId = props.subInputTargetId,\n      subInputTargetType = props.subInputTargetType,\n      targetUser = props.targetUser,\n      handleDeleteComment = props.handleDeleteComment,\n      handleDeleteReply = props.handleDeleteReply,\n      editTargetType = props.editTargetType,\n      editTargetId = props.editTargetId,\n      editInputMessage = props.editInputMessage,\n      handleEditComment = props.handleEditComment,\n      handleEditReply = props.handleEditReply,\n      handleReport = props.handleReport,\n      openedFolds = props.openedFolds,\n      onClickFoldMore = props.onClickFoldMore,\n      intl = props.intl,\n      handleCommentsShow = props.handleCommentsShow,\n      isCommentsShow = props.isCommentsShow,\n      isMobile = props.isMobile;\n  return React.createElement(\"div\", {\n    className: \"CommentView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"CommentView__mobile__\".concat(isMobile ? \"on\" : \"off\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_COMMENT_REVIEW\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \" \", allCommentCount, React.createElement(\"img\", {\n    className: \"content__more__img\",\n    src: isCommentsShow ? arrowUpImg : arrowDownImg,\n    alt: \"arrowDown\",\n    onClick: function onClick() {\n      return handleCommentsShow();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"CommentViewRight CommentViewRight__\".concat(isMobile ? isCommentsShow ? \"on\" : \"off\" : \"on\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(WriteView, {\n    user: user,\n    inputValue: mainInputMessage,\n    handleInputChange: function handleInputChange(e) {\n      return _handleInputChange(e, \"main\");\n    },\n    handleAddComment: function handleAddComment(e) {\n      return _handleAddComment(e, \"main\");\n    },\n    isLoggedIn: isLoggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"CommentItemList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, comments.map(function (comment) {\n    comment.message = comment.isDeletedFromAdmin ? intl.formatMessage({\n      id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n    }) : comment.isDeleted ? intl.formatMessage({\n      id: \"ID_COMMENT_DELETED\"\n    }) : comment.message;\n    var isFold = (comment.message.length > 180 || comment.message.split(\"\\n\").length > 5) && openedFolds && !openedFolds.includes(comment.id);\n    return React.createElement(\"li\", {\n      className: \"CommentItem\",\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CommentItem__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, comment.user.signedOut ? React.createElement(\"div\", {\n      className: \"UserTag SignOutUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"UserTagIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"UserTagIcon__img\",\n      alt: \"user icon\",\n      src: SIGNOUT_PROFILE_IMAGE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"UserTagName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"(\", React.createElement(FormattedMessage, {\n      id: \"ID_SIGNEDOUT_USER\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \")\")) : React.createElement(Link, {\n      to: \"/userpage/\".concat(comment.user.id),\n      className: \"UserTag__link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"UserTag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(UserIconWrapper, {\n      iconSrc: comment.user.icon,\n      style: {\n        width: \"48px\",\n        height: \"48px\",\n        minWidth: \"48px\",\n        minHeight: \"48px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"UserTagName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, comment.user.name), React.createElement(\"div\", {\n      className: \"CommentDot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"CommentItem__Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CommentItem__date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, dateFormatter(comment.createdAt)), isLoggedIn && !comment.isDeleted && React.createElement(\"div\", {\n      className: \"CommentDot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), isLoggedIn && !comment.isDeleted && !comment.user.signedOut && React.createElement(\"p\", {\n      className: \"CommentItem__replyBtn\",\n      onClick: function onClick(e) {\n        return handleSetInputTarget(e, \"comment\", comment.id, comment.id, null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"ID_COMMENT_REPLY_BUTTON\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))))), !comment.isDeleted && !comment.user.signedOut && React.createElement(\"div\", {\n      className: \"CommentItem__headerBtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(ContextMenu, {\n      onClickEdit: comment.user.email === userinfo.email && function () {\n        props.handleSetEditTarget({\n          editTargetType: \"comment\",\n          editTargetId: comment.id,\n          editInputMessage: comment.message\n        });\n      },\n      onClickReport: !(comment.user.email === userinfo.email) && function () {\n        handleReport(comment.id);\n      },\n      onClickDelete: comment.user.email === userinfo.email && function () {\n        handleDeleteComment({\n          id: comment.id,\n          commentId: comment.id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"CommentItem__body CommentEditForm\",\n      id: \"EditForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, editTargetType === \"comment\" && editTargetId === comment.id ? React.createElement(EditView, {\n      inputValue: editInputMessage,\n      handleInputChange: function handleInputChange(e) {\n        return _handleInputChange(e, \"edit\");\n      },\n      handleSubmit: handleEditComment,\n      handleCancel: function handleCancel() {\n        props.handleSetEditTarget({\n          editTargetType: \"\",\n          editTargetId: null,\n          editInputMessage: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      className: \"CommentItem__content CommentItem__content__\".concat(isFold ? \"fold\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, comment.message), isFold && !comment.isDeleted && React.createElement(\"div\", {\n      className: \"content__more\",\n      onClick: function onClick() {\n        return onClickFoldMore(comment.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content__more__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"ID_SOCIAL_COMMENT_CONTENTS_MORE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })))), subInputTargetType === \"comment\" && comment.id === subInputTargetId ? React.createElement(WriteView, {\n      user: user,\n      inputValue: subInputMessage,\n      handleInputChange: function handleInputChange(e) {\n        return _handleInputChange(e, \"sub\");\n      },\n      handleAddComment: function handleAddComment(e) {\n        return _handleAddComment(e, \"sub\");\n      },\n      isLoggedIn: isLoggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null), React.createElement(\"ul\", {\n      className: \"CommentItemList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, comment.replies.map(function (reply) {\n      reply.message = reply.isDeletedFromAdmin ? intl.formatMessage({\n        id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n      }) : reply.isDeleted ? intl.formatMessage({\n        id: \"ID_COMMENT_DELETED\"\n      }) : reply.message;\n      var isFold = (reply.message.length > 180 || reply.message.split(\"\\n\").length > 5) && openedFolds && !openedFolds.includes(reply.id);\n      return React.createElement(\"li\", {\n        className: \"CommentItem\",\n        key: reply.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CommentItem__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, reply.user.signedOut ? React.createElement(\"div\", {\n        className: \"UserTag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"UserTagIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"UserTagIcon__img\",\n        alt: \"user icon\",\n        src: SIGNOUT_PROFILE_IMAGE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"UserTagName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"(\", React.createElement(FormattedMessage, {\n        id: \"ID_SIGNEDOUT_USER\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), \")\")) : React.createElement(Link, {\n        to: \"/userpage/\".concat(reply.user.id),\n        className: \"UserTag__link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"UserTag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(UserIconWrapper, {\n        iconSrc: reply.user.icon,\n        style: {\n          width: \"40px\",\n          height: \"42px\",\n          minWidth: \"40px\",\n          minHeight: \"42px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"UserTagName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, reply.user.name), React.createElement(\"div\", {\n        className: \"CommentDot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"CommentItem__Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CommentItem__date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, dateFormatter(reply.createdAt)), isLoggedIn && !reply.isDeleted && React.createElement(\"div\", {\n        className: \"CommentDot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }), isLoggedIn && !reply.isDeleted && !reply.user.signedOut && React.createElement(\"p\", {\n        className: \"CommentItem__replyBtn\",\n        onClick: function onClick(e) {\n          return handleSetInputTarget(e, \"reply\", reply.id, comment.id, reply.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ID_COMMENT_REPLY_BUTTON\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }))))), !reply.isDeleted && !reply.user.signedOut && React.createElement(\"div\", {\n        className: \"CommentItem__headerBtnRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(ContextMenu, {\n        onClickEdit: reply.user.email === userinfo.email && function () {\n          props.handleSetEditTarget({\n            editTargetType: \"reply\",\n            editTargetId: reply.id,\n            editInputMessage: reply.message\n          });\n        },\n        onClickReport: !(reply.user.email === userinfo.email) && function () {\n          handleReport(comment.id, reply.id);\n        },\n        onClickDelete: reply.user.email === userinfo.email && function () {\n          handleDeleteReply({\n            id: reply.id,\n            commentId: reply.id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"CommentItem__body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, editTargetType === \"reply\" && editTargetId === reply.id ? React.createElement(EditView, {\n        inputValue: editInputMessage,\n        handleInputChange: function handleInputChange(e) {\n          return _handleInputChange(e, \"edit\");\n        },\n        handleSubmit: handleEditReply,\n        handleCancel: function handleCancel() {\n          props.handleSetEditTarget({\n            editTargetType: \"\",\n            editTargetId: null,\n            editInputMessage: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        className: \"CommentItem__content CommentItem__content__\".concat(isFold ? \"fold\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, reply.targetUser && React.createElement(\"span\", {\n        className: \"CommentItem__targetUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, reply.targetUser.signedOut ? React.createElement(FormattedMessage, {\n        id: \"ID_SIGNEDOUT_USER\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }) : reply.targetUser.name), reply.message), isFold && !reply.isDeleted && React.createElement(\"div\", {\n        className: \"content__more\",\n        onClick: function onClick() {\n          return onClickFoldMore(reply.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content__more__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ID_SOCIAL_COMMENT_CONTENTS_MORE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"content__more__img\",\n        src: arrowDownImg,\n        alt: \"arrowDown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }))), subInputTargetType === \"reply\" && reply.id === subInputTargetId ? React.createElement(WriteView, {\n        user: user,\n        targetUser: targetUser,\n        inputValue: subInputMessage,\n        handleInputChange: function handleInputChange(e) {\n          return _handleInputChange(e, \"sub\");\n        },\n        handleAddComment: function handleAddComment(e) {\n          return _handleAddComment(e, \"sub\");\n        },\n        isLoggedIn: isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null)));\n    }))));\n  })), hasMore && React.createElement(\"div\", {\n    className: \"CommentView__loadMoreBtn\",\n    onClick: handleLoadMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: morePlus,\n    alt: \"more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }), React.createElement(FormattedMessage, {\n    id: \"ID_COMMENT_MOREBTN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }))));\n};\n\nexport default injectIntl(View);\nvar WriteView = injectIntl(function (props) {\n  var user = props.user,\n      handleAddComment = props.handleAddComment,\n      handleInputChange = props.handleInputChange,\n      inputValue = props.inputValue,\n      targetUser = props.targetUser,\n      isLoggedIn = props.isLoggedIn,\n      handleButtonHeightChange = props.handleButtonHeightChange;\n  return React.createElement(\"div\", {\n    className: \"CommentWrite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"UserTag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454\n    },\n    __self: this\n  }, React.createElement(UserIconWrapper, {\n    iconSrc: isLoggedIn ? user.icon : userDefaultImg,\n    userDefault: isLoggedIn ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    className: \"CommentWriteForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, targetUser && React.createElement(\"span\", {\n    className: \"CommentItem__targetUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463\n    },\n    __self: this\n  }, targetUser.name), React.createElement(\"textarea\", {\n    className: \"CommentWriteForm__textarea\",\n    onChange: handleInputChange,\n    onKeyDown: handleButtonHeightChange,\n    value: inputValue,\n    placeholder: isLoggedIn ? props.intl.formatMessage({\n      id: \"ID_COMMENT_TEXTAREA_PH\"\n    }) : props.intl.formatMessage({\n      id: \"ID_COMMENT_TEXTAREA_LOGIN\"\n    }),\n    disabled: !isLoggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CommentWriteForm__btnRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"submitBtn\",\n    className: \"CommentWriteForm__submitBtn submitBtn--\".concat(isLoggedIn ? \"on\" : \"off\"),\n    type: \"submit\",\n    onClick: handleAddComment,\n    value: props.intl.formatMessage({\n      id: \"ID_COMMENT_SUBMITBTN\"\n    }),\n    disabled: !isLoggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }))));\n});\nvar EditView = injectIntl(function (props) {\n  var handleSubmit = props.handleSubmit,\n      handleInputChange = props.handleInputChange,\n      inputValue = props.inputValue,\n      targetUser = props.targetUser;\n  return React.createElement(\"form\", {\n    className: \"CommentWriteForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508\n    },\n    __self: this\n  }, targetUser && React.createElement(\"span\", {\n    className: \"CommentItem__targetUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510\n    },\n    __self: this\n  }, targetUser.name), React.createElement(\"textarea\", {\n    className: \"CommentWriteForm__textarea\",\n    onChange: handleInputChange,\n    value: inputValue,\n    placeholder: props.intl.formatMessage({\n      id: \"ID_COMMENT_TEXTAREA_PH\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CommentWriteForm__btnRow\",\n    style: {\n      marginBottom: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"CommentWriteForm__submitBtn\",\n    id: \"editBtn\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    value: props.intl.formatMessage({\n      id: \"ID_COMMENT_EDIT_BUTTON\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/Comment/View.js"],"names":["React","FormattedMessage","injectIntl","Link","ContextMenu","SIGNOUT_PROFILE_IMAGE","dateFormatter","UserIconWrapper","userDefaultImg","View","props","userinfo","comments","allCommentCount","isLoggedIn","user","hasMore","handleLoadMore","handleInputChange","handleAddComment","handleSetInputTarget","mainInputMessage","subInputMessage","subInputTargetId","subInputTargetType","targetUser","handleDeleteComment","handleDeleteReply","editTargetType","editTargetId","editInputMessage","handleEditComment","handleEditReply","handleReport","openedFolds","onClickFoldMore","intl","handleCommentsShow","isCommentsShow","isMobile","arrowUpImg","arrowDownImg","e","map","comment","message","isDeletedFromAdmin","formatMessage","id","isDeleted","isFold","length","split","includes","signedOut","icon","width","height","minWidth","minHeight","name","createdAt","email","handleSetEditTarget","commentId","replies","reply","morePlus","WriteView","inputValue","handleButtonHeightChange","EditView","handleSubmit","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;;;;AAIA,OAAOC,cAAP,MAA2B,mCAA3B;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAAA,MAElBC,QAFkB,GA+BhBD,KA/BgB,CAElBC,QAFkB;AAAA,MAGlBC,QAHkB,GA+BhBF,KA/BgB,CAGlBE,QAHkB;AAAA,MAIlBC,eAJkB,GA+BhBH,KA/BgB,CAIlBG,eAJkB;AAAA,MAKlBC,UALkB,GA+BhBJ,KA/BgB,CAKlBI,UALkB;AAAA,MAMlBC,IANkB,GA+BhBL,KA/BgB,CAMlBK,IANkB;AAAA,MAOlBC,OAPkB,GA+BhBN,KA/BgB,CAOlBM,OAPkB;AAAA,MAQlBC,cARkB,GA+BhBP,KA/BgB,CAQlBO,cARkB;AAAA,MASlBC,kBATkB,GA+BhBR,KA/BgB,CASlBQ,iBATkB;AAAA,MAUlBC,iBAVkB,GA+BhBT,KA/BgB,CAUlBS,gBAVkB;AAAA,MAWlBC,oBAXkB,GA+BhBV,KA/BgB,CAWlBU,oBAXkB;AAAA,MAYlBC,gBAZkB,GA+BhBX,KA/BgB,CAYlBW,gBAZkB;AAAA,MAalBC,eAbkB,GA+BhBZ,KA/BgB,CAalBY,eAbkB;AAAA,MAclBC,gBAdkB,GA+BhBb,KA/BgB,CAclBa,gBAdkB;AAAA,MAelBC,kBAfkB,GA+BhBd,KA/BgB,CAelBc,kBAfkB;AAAA,MAgBlBC,UAhBkB,GA+BhBf,KA/BgB,CAgBlBe,UAhBkB;AAAA,MAiBlBC,mBAjBkB,GA+BhBhB,KA/BgB,CAiBlBgB,mBAjBkB;AAAA,MAkBlBC,iBAlBkB,GA+BhBjB,KA/BgB,CAkBlBiB,iBAlBkB;AAAA,MAmBlBC,cAnBkB,GA+BhBlB,KA/BgB,CAmBlBkB,cAnBkB;AAAA,MAoBlBC,YApBkB,GA+BhBnB,KA/BgB,CAoBlBmB,YApBkB;AAAA,MAqBlBC,gBArBkB,GA+BhBpB,KA/BgB,CAqBlBoB,gBArBkB;AAAA,MAsBlBC,iBAtBkB,GA+BhBrB,KA/BgB,CAsBlBqB,iBAtBkB;AAAA,MAuBlBC,eAvBkB,GA+BhBtB,KA/BgB,CAuBlBsB,eAvBkB;AAAA,MAwBlBC,YAxBkB,GA+BhBvB,KA/BgB,CAwBlBuB,YAxBkB;AAAA,MAyBlBC,WAzBkB,GA+BhBxB,KA/BgB,CAyBlBwB,WAzBkB;AAAA,MA0BlBC,eA1BkB,GA+BhBzB,KA/BgB,CA0BlByB,eA1BkB;AAAA,MA2BlBC,IA3BkB,GA+BhB1B,KA/BgB,CA2BlB0B,IA3BkB;AAAA,MA4BlBC,kBA5BkB,GA+BhB3B,KA/BgB,CA4BlB2B,kBA5BkB;AAAA,MA6BlBC,cA7BkB,GA+BhB5B,KA/BgB,CA6BlB4B,cA7BkB;AAAA,MA8BlBC,QA9BkB,GA+BhB7B,KA/BgB,CA8BlB6B,QA9BkB;AAgCpB,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,iCAA0BA,QAAQ,GAAG,IAAH,GAAU,KAA5C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OAC+C1B,eAD/C,EAEE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,GAAG,EAAEyB,cAAc,GAAGE,UAAH,GAAgBC,YAFrC;AAGE,IAAA,GAAG,EAAC,WAHN;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMJ,kBAAkB,EAAxB;AAAA,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AACE,IAAA,SAAS,+CACPE,QAAQ,GAAID,cAAc,GAAG,IAAH,GAAU,KAA5B,GAAqC,IADtC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEvB,IADR;AAEE,IAAA,UAAU,EAAEM,gBAFd;AAGE,IAAA,iBAAiB,EAAE,2BAAAqB,CAAC;AAAA,aAAIxB,kBAAiB,CAACwB,CAAD,EAAI,MAAJ,CAArB;AAAA,KAHtB;AAIE,IAAA,gBAAgB,EAAE,0BAAAA,CAAC;AAAA,aAAIvB,iBAAgB,CAACuB,CAAD,EAAI,MAAJ,CAApB;AAAA,KAJrB;AAKE,IAAA,UAAU,EAAE5B,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAAC+B,GAAT,CAAa,UAAAC,OAAO,EAAI;AACvBA,IAAAA,OAAO,CAACC,OAAR,GAAkBD,OAAO,CAACE,kBAAR,GACdV,IAAI,CAACW,aAAL,CAAmB;AACjBC,MAAAA,EAAE,EAAE;AADa,KAAnB,CADc,GAIdJ,OAAO,CAACK,SAAR,GACAb,IAAI,CAACW,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAnB,CADA,GAEAJ,OAAO,CAACC,OANZ;AAOA,QAAIK,MAAM,GACR,CAACN,OAAO,CAACC,OAAR,CAAgBM,MAAhB,GAAyB,GAAzB,IACCP,OAAO,CAACC,OAAR,CAAgBO,KAAhB,CAAsB,IAAtB,EAA4BD,MAA5B,GAAqC,CADvC,KAEAjB,WAFA,IAGA,CAACA,WAAW,CAACmB,QAAZ,CAAqBT,OAAO,CAACI,EAA7B,CAJH;AAMA,WACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,GAAG,EAAEJ,OAAO,CAACI,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,OAAO,CAAC7B,IAAR,CAAauC,SAAb,GACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,GAAG,EAAC,WAFN;AAGE,MAAA,GAAG,EAAEjD,qBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAQE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,MARF,CADD,GAcC,oBAAC,IAAD;AACE,MAAA,EAAE,sBAAeuC,OAAO,CAAC7B,IAAR,CAAaiC,EAA5B,CADJ;AAEE,MAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AACE,MAAA,OAAO,EAAEJ,OAAO,CAAC7B,IAAR,CAAawC,IADxB;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,SAAS,EAAE;AAJN,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+Bf,OAAO,CAAC7B,IAAR,CAAa6C,IAA5C,CAVF,EAWE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtD,aAAa,CAACsC,OAAO,CAACiB,SAAT,CADhB,CADF,EAIG/C,UAAU,IAAI,CAAC8B,OAAO,CAACK,SAAvB,IACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAOGnC,UAAU,IACT,CAAC8B,OAAO,CAACK,SADV,IAEC,CAACL,OAAO,CAAC7B,IAAR,CAAauC,SAFf,IAGG;AACE,MAAA,SAAS,EAAC,uBADZ;AAEE,MAAA,OAAO,EAAE,iBAAAZ,CAAC;AAAA,eACRtB,oBAAoB,CAClBsB,CADkB,EAElB,SAFkB,EAGlBE,OAAO,CAACI,EAHU,EAIlBJ,OAAO,CAACI,EAJU,EAKlB,IALkB,CADZ;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAVN,CAZF,CAJF,CAfJ,EA4DG,CAACJ,OAAO,CAACK,SAAT,IAAsB,CAACL,OAAO,CAAC7B,IAAR,CAAauC,SAApC,IACC;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,WAAW,EACTV,OAAO,CAAC7B,IAAR,CAAa+C,KAAb,KAAuBnD,QAAQ,CAACmD,KAAhC,IACC,YAAM;AACLpD,QAAAA,KAAK,CAACqD,mBAAN,CAA0B;AACxBnC,UAAAA,cAAc,EAAE,SADQ;AAExBC,UAAAA,YAAY,EAAEe,OAAO,CAACI,EAFE;AAGxBlB,UAAAA,gBAAgB,EAAEc,OAAO,CAACC;AAHF,SAA1B;AAKD,OATL;AAWE,MAAA,aAAa,EACX,EAAED,OAAO,CAAC7B,IAAR,CAAa+C,KAAb,KAAuBnD,QAAQ,CAACmD,KAAlC,KACC,YAAM;AACL7B,QAAAA,YAAY,CAACW,OAAO,CAACI,EAAT,CAAZ;AACD,OAfL;AAiBE,MAAA,aAAa,EACXJ,OAAO,CAAC7B,IAAR,CAAa+C,KAAb,KAAuBnD,QAAQ,CAACmD,KAAhC,IACC,YAAM;AACLpC,QAAAA,mBAAmB,CAAC;AAClBsB,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EADM;AAElBgB,UAAAA,SAAS,EAAEpB,OAAO,CAACI;AAFD,SAAD,CAAnB;AAID,OAxBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA7DJ,CADF,EA6FE;AACE,MAAA,SAAS,EAAC,mCADZ;AAEE,MAAA,EAAE,EAAC,UAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGpB,cAAc,KAAK,SAAnB,IACDC,YAAY,KAAKe,OAAO,CAACI,EADxB,GAEC,oBAAC,QAAD;AACE,MAAA,UAAU,EAAElB,gBADd;AAEE,MAAA,iBAAiB,EAAE,2BAAAY,CAAC;AAAA,eAAIxB,kBAAiB,CAACwB,CAAD,EAAI,MAAJ,CAArB;AAAA,OAFtB;AAGE,MAAA,YAAY,EAAEX,iBAHhB;AAIE,MAAA,YAAY,EAAE,wBAAM;AAClBrB,QAAAA,KAAK,CAACqD,mBAAN,CAA0B;AACxBnC,UAAAA,cAAc,EAAE,EADQ;AAExBC,UAAAA,YAAY,EAAE,IAFU;AAGxBC,UAAAA,gBAAgB,EAAE;AAHM,SAA1B;AAKD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,GAeC,0CACE;AACE,MAAA,SAAS,uDACPoB,MAAM,GAAG,MAAH,GAAY,EADX,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGN,OAAO,CAACC,OALX,CADF,EAQGK,MAAM,IAAI,CAACN,OAAO,CAACK,SAAnB,IACC;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMd,eAAe,CAACS,OAAO,CAACI,EAAT,CAArB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,iCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CATJ,CAnBJ,EA8CGxB,kBAAkB,KAAK,SAAvB,IACDoB,OAAO,CAACI,EAAR,KAAezB,gBADd,GAEC,oBAAC,SAAD;AACE,MAAA,IAAI,EAAER,IADR;AAEE,MAAA,UAAU,EAAEO,eAFd;AAGE,MAAA,iBAAiB,EAAE,2BAAAoB,CAAC;AAAA,eAAIxB,kBAAiB,CAACwB,CAAD,EAAI,KAAJ,CAArB;AAAA,OAHtB;AAIE,MAAA,gBAAgB,EAAE,0BAAAA,CAAC;AAAA,eAAIvB,iBAAgB,CAACuB,CAAD,EAAI,KAAJ,CAApB;AAAA,OAJrB;AAKE,MAAA,UAAU,EAAE5B,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,GAUC,yCAxDJ,EA0DE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG8B,OAAO,CAACqB,OAAR,CAAgBtB,GAAhB,CAAoB,UAAAuB,KAAK,EAAI;AAC5BA,MAAAA,KAAK,CAACrB,OAAN,GAAgBqB,KAAK,CAACpB,kBAAN,GACZV,IAAI,CAACW,aAAL,CAAmB;AACjBC,QAAAA,EAAE,EAAE;AADa,OAAnB,CADY,GAIZkB,KAAK,CAACjB,SAAN,GACAb,IAAI,CAACW,aAAL,CAAmB;AACjBC,QAAAA,EAAE,EAAE;AADa,OAAnB,CADA,GAIAkB,KAAK,CAACrB,OARV;AASA,UAAIK,MAAM,GACR,CAACgB,KAAK,CAACrB,OAAN,CAAcM,MAAd,GAAuB,GAAvB,IACCe,KAAK,CAACrB,OAAN,CAAcO,KAAd,CAAoB,IAApB,EAA0BD,MAA1B,GAAmC,CADrC,KAEAjB,WAFA,IAGA,CAACA,WAAW,CAACmB,QAAZ,CAAqBa,KAAK,CAAClB,EAA3B,CAJH;AAMA,aACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAA4B,QAAA,GAAG,EAAEkB,KAAK,CAAClB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGkB,KAAK,CAACnD,IAAN,CAAWuC,SAAX,GACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,GAAG,EAAC,WAFN;AAGE,QAAA,GAAG,EAAEjD,qBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAQE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACG,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,MARF,CADD,GAcC,oBAAC,IAAD;AACE,QAAA,EAAE,sBAAe6D,KAAK,CAACnD,IAAN,CAAWiC,EAA1B,CADJ;AAEE,QAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AACE,QAAA,OAAO,EAAEkB,KAAK,CAACnD,IAAN,CAAWwC,IADtB;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,QAAQ,EAAE,MAHL;AAILC,UAAAA,SAAS,EAAE;AAJN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,KAAK,CAACnD,IAAN,CAAW6C,IADd,CAVF,EAaE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGtD,aAAa,CAAC4D,KAAK,CAACL,SAAP,CADhB,CADF,EAIG/C,UAAU,IAAI,CAACoD,KAAK,CAACjB,SAArB,IACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAOGnC,UAAU,IACT,CAACoD,KAAK,CAACjB,SADR,IAEC,CAACiB,KAAK,CAACnD,IAAN,CAAWuC,SAFb,IAGG;AACE,QAAA,SAAS,EAAC,uBADZ;AAEE,QAAA,OAAO,EAAE,iBAAAZ,CAAC;AAAA,iBACRtB,oBAAoB,CAClBsB,CADkB,EAElB,OAFkB,EAGlBwB,KAAK,CAAClB,EAHY,EAIlBJ,OAAO,CAACI,EAJU,EAKlBkB,KAAK,CAACnD,IALY,CADZ;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CAVN,CAdF,CAJF,CAfJ,EA8DG,CAACmD,KAAK,CAACjB,SAAP,IAAoB,CAACiB,KAAK,CAACnD,IAAN,CAAWuC,SAAhC,IACC;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,WAAW,EACTY,KAAK,CAACnD,IAAN,CAAW+C,KAAX,KAAqBnD,QAAQ,CAACmD,KAA9B,IACC,YAAM;AACLpD,UAAAA,KAAK,CAACqD,mBAAN,CAA0B;AACxBnC,YAAAA,cAAc,EAAE,OADQ;AAExBC,YAAAA,YAAY,EAAEqC,KAAK,CAAClB,EAFI;AAGxBlB,YAAAA,gBAAgB,EAAEoC,KAAK,CAACrB;AAHA,WAA1B;AAKD,SATL;AAWE,QAAA,aAAa,EACX,EAAEqB,KAAK,CAACnD,IAAN,CAAW+C,KAAX,KAAqBnD,QAAQ,CAACmD,KAAhC,KACC,YAAM;AACL7B,UAAAA,YAAY,CAACW,OAAO,CAACI,EAAT,EAAakB,KAAK,CAAClB,EAAnB,CAAZ;AACD,SAfL;AAiBE,QAAA,aAAa,EACXkB,KAAK,CAACnD,IAAN,CAAW+C,KAAX,KAAqBnD,QAAQ,CAACmD,KAA9B,IACC,YAAM;AACLnC,UAAAA,iBAAiB,CAAC;AAChBqB,YAAAA,EAAE,EAAEkB,KAAK,CAAClB,EADM;AAEhBgB,YAAAA,SAAS,EAAEE,KAAK,CAAClB;AAFD,WAAD,CAAjB;AAID,SAxBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA/DJ,CADF,EA+FE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,cAAc,KAAK,OAAnB,IACDC,YAAY,KAAKqC,KAAK,CAAClB,EADtB,GAEC,oBAAC,QAAD;AACE,QAAA,UAAU,EAAElB,gBADd;AAEE,QAAA,iBAAiB,EAAE,2BAAAY,CAAC;AAAA,iBAClBxB,kBAAiB,CAACwB,CAAD,EAAI,MAAJ,CADC;AAAA,SAFtB;AAKE,QAAA,YAAY,EAAEV,eALhB;AAME,QAAA,YAAY,EAAE,wBAAM;AAClBtB,UAAAA,KAAK,CAACqD,mBAAN,CAA0B;AACxBnC,YAAAA,cAAc,EAAE,EADQ;AAExBC,YAAAA,YAAY,EAAE,IAFU;AAGxBC,YAAAA,gBAAgB,EAAE;AAHM,WAA1B;AAKD,SAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,GAiBC,0CACE;AACE,QAAA,SAAS,uDACPoB,MAAM,GAAG,MAAH,GAAY,EADX,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGgB,KAAK,CAACzC,UAAN,IACC;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyC,KAAK,CAACzC,UAAN,CAAiB6B,SAAjB,GACC,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGCY,KAAK,CAACzC,UAAN,CAAiBmC,IAJrB,CANJ,EAcGM,KAAK,CAACrB,OAdT,CADF,EAkBGK,MAAM,IAAI,CAACgB,KAAK,CAACjB,SAAjB,IACC;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMd,eAAe,CAAC+B,KAAK,CAAClB,EAAP,CAArB;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iCAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,GAAG,EAAEP,YAFP;AAGE,QAAA,GAAG,EAAC,WAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAnBJ,CAlBJ,EAuDGjB,kBAAkB,KAAK,OAAvB,IACD0C,KAAK,CAAClB,EAAN,KAAazB,gBADZ,GAEC,oBAAC,SAAD;AACE,QAAA,IAAI,EAAER,IADR;AAEE,QAAA,UAAU,EAAEU,UAFd;AAGE,QAAA,UAAU,EAAEH,eAHd;AAIE,QAAA,iBAAiB,EAAE,2BAAAoB,CAAC;AAAA,iBAClBxB,kBAAiB,CAACwB,CAAD,EAAI,KAAJ,CADC;AAAA,SAJtB;AAOE,QAAA,gBAAgB,EAAE,0BAAAA,CAAC;AAAA,iBACjBvB,iBAAgB,CAACuB,CAAD,EAAI,KAAJ,CADC;AAAA,SAPrB;AAUE,QAAA,UAAU,EAAE5B,UAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,GAeC,yCAtEJ,CA/FF,CADF;AA2KD,KA3LA,CADH,CA1DF,CA7FF,CADF;AAyVD,GAvWA,CADH,CAZF,EAsXGE,OAAO,IACN;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,OAAO,EAAEC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEkD,QAAV;AAAoB,IAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAvXJ,CAVF,CADF;AA0YD,CA1aD;;AA4aA,eAAejE,UAAU,CAACO,IAAD,CAAzB;AAEA,IAAM2D,SAAS,GAAGlE,UAAU,CAAC,UAAAQ,KAAK,EAAI;AAAA,MAElCK,IAFkC,GAShCL,KATgC,CAElCK,IAFkC;AAAA,MAGlCI,gBAHkC,GAShCT,KATgC,CAGlCS,gBAHkC;AAAA,MAIlCD,iBAJkC,GAShCR,KATgC,CAIlCQ,iBAJkC;AAAA,MAKlCmD,UALkC,GAShC3D,KATgC,CAKlC2D,UALkC;AAAA,MAMlC5C,UANkC,GAShCf,KATgC,CAMlCe,UANkC;AAAA,MAOlCX,UAPkC,GAShCJ,KATgC,CAOlCI,UAPkC;AAAA,MAQlCwD,wBARkC,GAShC5D,KATgC,CAQlC4D,wBARkC;AAUpC,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,OAAO,EAAExD,UAAU,GAAGC,IAAI,CAACwC,IAAR,GAAe/C,cADpC;AAEE,IAAA,WAAW,EAAEM,UAAU,GAAG,KAAH,GAAW,IAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,UAAU,IACT;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CA,UAAU,CAACmC,IAAtD,CAFJ,EAIE;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,QAAQ,EAAE1C,iBAFZ;AAGE,IAAA,SAAS,EAAEoD,wBAHb;AAIE,IAAA,KAAK,EAAED,UAJT;AAKE,IAAA,WAAW,EACTvD,UAAU,GACNJ,KAAK,CAAC0B,IAAN,CAAWW,aAAX,CAAyB;AACvBC,MAAAA,EAAE,EAAE;AADmB,KAAzB,CADM,GAINtC,KAAK,CAAC0B,IAAN,CAAWW,aAAX,CAAyB;AACvBC,MAAAA,EAAE,EAAE;AADmB,KAAzB,CAVR;AAcE,IAAA,QAAQ,EAAE,CAAClC,UAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAoBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,SAAS,mDACPA,UAAU,GAAG,IAAH,GAAU,KADb,CAFX;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAEK,gBANX;AAOE,IAAA,KAAK,EAAET,KAAK,CAAC0B,IAAN,CAAWW,aAAX,CAAyB;AAC9BC,MAAAA,EAAE,EAAE;AAD0B,KAAzB,CAPT;AAUE,IAAA,QAAQ,EAAE,CAAClC,UAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,CARF,CADF;AA8CD,CAxD2B,CAA5B;AA0DA,IAAMyD,QAAQ,GAAGrE,UAAU,CAAC,UAAAQ,KAAK,EAAI;AAAA,MAEjC8D,YAFiC,GAM/B9D,KAN+B,CAEjC8D,YAFiC;AAAA,MAGjCtD,iBAHiC,GAM/BR,KAN+B,CAGjCQ,iBAHiC;AAAA,MAIjCmD,UAJiC,GAM/B3D,KAN+B,CAIjC2D,UAJiC;AAAA,MAKjC5C,UALiC,GAM/Bf,KAN+B,CAKjCe,UALiC;AAOnC,SACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UAAU,IACT;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CA,UAAU,CAACmC,IAAtD,CAFJ,EAIE;AACE,IAAA,SAAS,EAAC,4BADZ;AAEE,IAAA,QAAQ,EAAE1C,iBAFZ;AAGE,IAAA,KAAK,EAAEmD,UAHT;AAIE,IAAA,WAAW,EAAE3D,KAAK,CAAC0B,IAAN,CAAWW,aAAX,CAAyB;AACpCC,MAAAA,EAAE,EAAE;AADgC,KAAzB,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAYE;AACE,IAAA,SAAS,EAAC,0BADZ;AAEE,IAAA,KAAK,EAAE;AAAEyB,MAAAA,YAAY,EAAE;AAAhB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,OAAO,EAAED,YAJX;AAKE,IAAA,KAAK,EAAE9D,KAAK,CAAC0B,IAAN,CAAWW,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAZF,CADF;AA2BD,CAlC0B,CAA3B","sourcesContent":["import React from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport ContextMenu from \"../ContextMenu\";\nimport { SIGNOUT_PROFILE_IMAGE } from \"../../Util/Constant\";\nimport { dateFormatter } from \"../../Util/DateFormatter\";\nimport UserIconWrapper from \"../../../Common/Component/UserIconWrapper\";\nimport morePlus from \"../../../Image/more-plus.svg\";\nimport arrowDownImg from \"../../../Image/social_arrow-down.svg\";\nimport arrowUpImg from \"../../../Image/social_arrow-up.svg\";\nimport userDefaultImg from \"../../../Image/userDefaultImg.png\";\nconst View = props => {\n  const {\n    userinfo,\n    comments,\n    allCommentCount,\n    isLoggedIn,\n    user,\n    hasMore,\n    handleLoadMore,\n    handleInputChange,\n    handleAddComment,\n    handleSetInputTarget,\n    mainInputMessage,\n    subInputMessage,\n    subInputTargetId,\n    subInputTargetType,\n    targetUser,\n    handleDeleteComment,\n    handleDeleteReply,\n    editTargetType,\n    editTargetId,\n    editInputMessage,\n    handleEditComment,\n    handleEditReply,\n    handleReport,\n    openedFolds,\n    onClickFoldMore,\n    intl,\n    handleCommentsShow,\n    isCommentsShow,\n    isMobile\n  } = props;\n  return (\n    <div className=\"CommentView\">\n      <h1 className={`CommentView__mobile__${isMobile ? \"on\" : \"off\"}`}>\n        <FormattedMessage id=\"ID_COMMENT_REVIEW\" /> {allCommentCount}\n        <img\n          className=\"content__more__img\"\n          src={isCommentsShow ? arrowUpImg : arrowDownImg}\n          alt=\"arrowDown\"\n          onClick={() => handleCommentsShow()}\n        />\n      </h1>\n      <div\n        className={`CommentViewRight CommentViewRight__${\n          isMobile ? (isCommentsShow ? \"on\" : \"off\") : \"on\"\n        }`}\n      >\n        <WriteView\n          user={user}\n          inputValue={mainInputMessage}\n          handleInputChange={e => handleInputChange(e, \"main\")}\n          handleAddComment={e => handleAddComment(e, \"main\")}\n          isLoggedIn={isLoggedIn}\n        />\n        <ul className=\"CommentItemList\">\n          {comments.map(comment => {\n            comment.message = comment.isDeletedFromAdmin\n              ? intl.formatMessage({\n                  id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n                })\n              : comment.isDeleted\n              ? intl.formatMessage({ id: \"ID_COMMENT_DELETED\" })\n              : comment.message;\n            let isFold =\n              (comment.message.length > 180 ||\n                comment.message.split(\"\\n\").length > 5) &&\n              openedFolds &&\n              !openedFolds.includes(comment.id);\n\n            return (\n              <li className=\"CommentItem\" key={comment.id}>\n                <div className=\"CommentItem__header\">\n                  {comment.user.signedOut ? (\n                    <div className=\"UserTag SignOutUser\">\n                      <p className=\"UserTagIcon\">\n                        <img\n                          className=\"UserTagIcon__img\"\n                          alt=\"user icon\"\n                          src={SIGNOUT_PROFILE_IMAGE}\n                        />\n                      </p>\n                      <p className=\"UserTagName\">\n                        (<FormattedMessage id=\"ID_SIGNEDOUT_USER\" />)\n                      </p>\n                    </div>\n                  ) : (\n                    <Link\n                      to={`/userpage/${comment.user.id}`}\n                      className=\"UserTag__link\"\n                    >\n                      <div className=\"UserTag\">\n                        <UserIconWrapper\n                          iconSrc={comment.user.icon}\n                          style={{\n                            width: \"48px\",\n                            height: \"48px\",\n                            minWidth: \"48px\",\n                            minHeight: \"48px\"\n                          }}\n                        />\n                        <span className=\"UserTagName\">{comment.user.name}</span>\n                        <div className=\"CommentDot\" />\n                        <div className=\"CommentItem__Info\">\n                          <div className=\"CommentItem__date\">\n                            {dateFormatter(comment.createdAt)}\n                          </div>\n                          {isLoggedIn && !comment.isDeleted && (\n                            <div className=\"CommentDot\" />\n                          )}\n                          {isLoggedIn &&\n                            !comment.isDeleted &&\n                            !comment.user.signedOut && (\n                              <p\n                                className=\"CommentItem__replyBtn\"\n                                onClick={e =>\n                                  handleSetInputTarget(\n                                    e,\n                                    \"comment\",\n                                    comment.id,\n                                    comment.id,\n                                    null\n                                  )\n                                }\n                              >\n                                <FormattedMessage id=\"ID_COMMENT_REPLY_BUTTON\" />\n                              </p>\n                            )}\n                        </div>\n                      </div>\n                    </Link>\n                  )}\n                  {!comment.isDeleted && !comment.user.signedOut && (\n                    <div className=\"CommentItem__headerBtnRow\">\n                      <ContextMenu\n                        onClickEdit={\n                          comment.user.email === userinfo.email &&\n                          (() => {\n                            props.handleSetEditTarget({\n                              editTargetType: \"comment\",\n                              editTargetId: comment.id,\n                              editInputMessage: comment.message\n                            });\n                          })\n                        }\n                        onClickReport={\n                          !(comment.user.email === userinfo.email) &&\n                          (() => {\n                            handleReport(comment.id);\n                          })\n                        }\n                        onClickDelete={\n                          comment.user.email === userinfo.email &&\n                          (() => {\n                            handleDeleteComment({\n                              id: comment.id,\n                              commentId: comment.id\n                            });\n                          })\n                        }\n                      />\n                    </div>\n                  )}\n                </div>\n                <div\n                  className=\"CommentItem__body CommentEditForm\"\n                  id=\"EditForm\"\n                >\n                  {editTargetType === \"comment\" &&\n                  editTargetId === comment.id ? (\n                    <EditView\n                      inputValue={editInputMessage}\n                      handleInputChange={e => handleInputChange(e, \"edit\")}\n                      handleSubmit={handleEditComment}\n                      handleCancel={() => {\n                        props.handleSetEditTarget({\n                          editTargetType: \"\",\n                          editTargetId: null,\n                          editInputMessage: \"\"\n                        });\n                      }}\n                    />\n                  ) : (\n                    <>\n                      <p\n                        className={`CommentItem__content CommentItem__content__${\n                          isFold ? \"fold\" : \"\"\n                        }`}\n                      >\n                        {comment.message}\n                      </p>\n                      {isFold && !comment.isDeleted && (\n                        <div\n                          className=\"content__more\"\n                          onClick={() => onClickFoldMore(comment.id)}\n                        >\n                          <div className=\"content__more__text\">\n                            <FormattedMessage id=\"ID_SOCIAL_COMMENT_CONTENTS_MORE\" />\n                          </div>\n                          {/* <img\n                            className=\"content__more__img\"\n                            src={arrowDownImg}\n                            alt=\"arrowDown\"\n                          /> */}\n                        </div>\n                      )}\n                    </>\n                  )}\n\n                  {/* <hr className=\"CommentItem__hr\" /> */}\n                  {subInputTargetType === \"comment\" &&\n                  comment.id === subInputTargetId ? (\n                    <WriteView\n                      user={user}\n                      inputValue={subInputMessage}\n                      handleInputChange={e => handleInputChange(e, \"sub\")}\n                      handleAddComment={e => handleAddComment(e, \"sub\")}\n                      isLoggedIn={isLoggedIn}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                  <ul className=\"CommentItemList\">\n                    {comment.replies.map(reply => {\n                      reply.message = reply.isDeletedFromAdmin\n                        ? intl.formatMessage({\n                            id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n                          })\n                        : reply.isDeleted\n                        ? intl.formatMessage({\n                            id: \"ID_COMMENT_DELETED\"\n                          })\n                        : reply.message;\n                      let isFold =\n                        (reply.message.length > 180 ||\n                          reply.message.split(\"\\n\").length > 5) &&\n                        openedFolds &&\n                        !openedFolds.includes(reply.id);\n\n                      return (\n                        <li className=\"CommentItem\" key={reply.id}>\n                          <div className=\"CommentItem__header\">\n                            {reply.user.signedOut ? (\n                              <div className=\"UserTag\">\n                                <p className=\"UserTagIcon\">\n                                  <img\n                                    className=\"UserTagIcon__img\"\n                                    alt=\"user icon\"\n                                    src={SIGNOUT_PROFILE_IMAGE}\n                                  />\n                                </p>\n                                <p className=\"UserTagName\">\n                                  (<FormattedMessage id=\"ID_SIGNEDOUT_USER\" />)\n                                </p>\n                              </div>\n                            ) : (\n                              <Link\n                                to={`/userpage/${reply.user.id}`}\n                                className=\"UserTag__link\"\n                              >\n                                <div className=\"UserTag\">\n                                  <UserIconWrapper\n                                    iconSrc={reply.user.icon}\n                                    style={{\n                                      width: \"40px\",\n                                      height: \"42px\",\n                                      minWidth: \"40px\",\n                                      minHeight: \"42px\"\n                                    }}\n                                  />\n                                  <p className=\"UserTagName\">\n                                    {reply.user.name}\n                                  </p>\n                                  <div className=\"CommentDot\" />\n                                  <div className=\"CommentItem__Info\">\n                                    <div className=\"CommentItem__date\">\n                                      {dateFormatter(reply.createdAt)}\n                                    </div>\n                                    {isLoggedIn && !reply.isDeleted && (\n                                      <div className=\"CommentDot\" />\n                                    )}\n                                    {isLoggedIn &&\n                                      !reply.isDeleted &&\n                                      !reply.user.signedOut && (\n                                        <p\n                                          className=\"CommentItem__replyBtn\"\n                                          onClick={e =>\n                                            handleSetInputTarget(\n                                              e,\n                                              \"reply\",\n                                              reply.id,\n                                              comment.id,\n                                              reply.user\n                                            )\n                                          }\n                                        >\n                                          <FormattedMessage id=\"ID_COMMENT_REPLY_BUTTON\" />\n                                        </p>\n                                      )}\n                                  </div>\n                                </div>\n                              </Link>\n                            )}\n                            {!reply.isDeleted && !reply.user.signedOut && (\n                              <div className=\"CommentItem__headerBtnRow\">\n                                <ContextMenu\n                                  onClickEdit={\n                                    reply.user.email === userinfo.email &&\n                                    (() => {\n                                      props.handleSetEditTarget({\n                                        editTargetType: \"reply\",\n                                        editTargetId: reply.id,\n                                        editInputMessage: reply.message\n                                      });\n                                    })\n                                  }\n                                  onClickReport={\n                                    !(reply.user.email === userinfo.email) &&\n                                    (() => {\n                                      handleReport(comment.id, reply.id);\n                                    })\n                                  }\n                                  onClickDelete={\n                                    reply.user.email === userinfo.email &&\n                                    (() => {\n                                      handleDeleteReply({\n                                        id: reply.id,\n                                        commentId: reply.id\n                                      });\n                                    })\n                                  }\n                                />\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"CommentItem__body\">\n                            {editTargetType === \"reply\" &&\n                            editTargetId === reply.id ? (\n                              <EditView\n                                inputValue={editInputMessage}\n                                handleInputChange={e =>\n                                  handleInputChange(e, \"edit\")\n                                }\n                                handleSubmit={handleEditReply}\n                                handleCancel={() => {\n                                  props.handleSetEditTarget({\n                                    editTargetType: \"\",\n                                    editTargetId: null,\n                                    editInputMessage: \"\"\n                                  });\n                                }}\n                              />\n                            ) : (\n                              <>\n                                <p\n                                  className={`CommentItem__content CommentItem__content__${\n                                    isFold ? \"fold\" : \"\"\n                                  }`}\n                                >\n                                  {reply.targetUser && (\n                                    <span className=\"CommentItem__targetUser\">\n                                      {reply.targetUser.signedOut ? (\n                                        <FormattedMessage id=\"ID_SIGNEDOUT_USER\" />\n                                      ) : (\n                                        reply.targetUser.name\n                                      )}\n                                    </span>\n                                  )}\n                                  {reply.message}\n                                </p>\n\n                                {isFold && !reply.isDeleted && (\n                                  <div\n                                    className=\"content__more\"\n                                    onClick={() => onClickFoldMore(reply.id)}\n                                  >\n                                    <div className=\"content__more__text\">\n                                      <FormattedMessage id=\"ID_SOCIAL_COMMENT_CONTENTS_MORE\" />\n                                    </div>\n                                    <img\n                                      className=\"content__more__img\"\n                                      src={arrowDownImg}\n                                      alt=\"arrowDown\"\n                                    />\n                                  </div>\n                                )}\n                              </>\n                            )}\n\n                            {/* <hr className=\"CommentItem__hr\" /> */}\n                            {subInputTargetType === \"reply\" &&\n                            reply.id === subInputTargetId ? (\n                              <WriteView\n                                user={user}\n                                targetUser={targetUser}\n                                inputValue={subInputMessage}\n                                handleInputChange={e =>\n                                  handleInputChange(e, \"sub\")\n                                }\n                                handleAddComment={e =>\n                                  handleAddComment(e, \"sub\")\n                                }\n                                isLoggedIn={isLoggedIn}\n                              />\n                            ) : (\n                              <></>\n                            )}\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n        {hasMore && (\n          <div className=\"CommentView__loadMoreBtn\" onClick={handleLoadMore}>\n            <img src={morePlus} alt=\"more\" />\n            <FormattedMessage id=\"ID_COMMENT_MOREBTN\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(View);\n\nconst WriteView = injectIntl(props => {\n  const {\n    user,\n    handleAddComment,\n    handleInputChange,\n    inputValue,\n    targetUser,\n    isLoggedIn,\n    handleButtonHeightChange\n  } = props;\n  return (\n    <div className=\"CommentWrite\">\n      <div className=\"UserTag\">\n        <UserIconWrapper\n          iconSrc={isLoggedIn ? user.icon : userDefaultImg}\n          userDefault={isLoggedIn ? false : true}\n        />\n      </div>\n\n      <form className=\"CommentWriteForm\">\n        {targetUser && (\n          <span className=\"CommentItem__targetUser\">{targetUser.name}</span>\n        )}\n        <textarea\n          className=\"CommentWriteForm__textarea\"\n          onChange={handleInputChange}\n          onKeyDown={handleButtonHeightChange}\n          value={inputValue}\n          placeholder={\n            isLoggedIn\n              ? props.intl.formatMessage({\n                  id: \"ID_COMMENT_TEXTAREA_PH\"\n                })\n              : props.intl.formatMessage({\n                  id: \"ID_COMMENT_TEXTAREA_LOGIN\"\n                })\n          }\n          disabled={!isLoggedIn}\n        />\n        <div className=\"CommentWriteForm__btnRow\">\n          <input\n            id=\"submitBtn\"\n            className={`CommentWriteForm__submitBtn submitBtn--${\n              isLoggedIn ? \"on\" : \"off\"\n            }`}\n            type=\"submit\"\n            onClick={handleAddComment}\n            value={props.intl.formatMessage({\n              id: \"ID_COMMENT_SUBMITBTN\"\n            })}\n            disabled={!isLoggedIn}\n          />\n        </div>\n      </form>\n    </div>\n  );\n});\n\nconst EditView = injectIntl(props => {\n  const {\n    handleSubmit,\n    handleInputChange,\n    inputValue,\n    targetUser\n  } = props;\n  return (\n    <form className=\"CommentWriteForm\">\n      {targetUser && (\n        <span className=\"CommentItem__targetUser\">{targetUser.name}</span>\n      )}\n      <textarea\n        className=\"CommentWriteForm__textarea\"\n        onChange={handleInputChange}\n        value={inputValue}\n        placeholder={props.intl.formatMessage({\n          id: \"ID_COMMENT_TEXTAREA_PH\"\n        })}\n      />\n      <div\n        className=\"CommentWriteForm__btnRow\"\n        style={{ marginBottom: \"30px\" }}\n      >\n        <input\n          className=\"CommentWriteForm__submitBtn\"\n          id=\"editBtn\"\n          type=\"submit\"\n          onClick={handleSubmit}\n          value={props.intl.formatMessage({ id: \"ID_COMMENT_EDIT_BUTTON\" })}\n        />\n      </div>\n    </form>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}