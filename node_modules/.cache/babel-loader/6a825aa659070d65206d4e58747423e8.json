{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\n\nvar AssetLibrary = /*#__PURE__*/function () {\n  // baseURL = \"assets\";\n  function AssetLibrary() {\n    var _this = this;\n\n    _classCallCheck(this, AssetLibrary);\n\n    this.baseURL = \"https://wizschool-assets.s3.ap-northeast-2.amazonaws.com\";\n    this.fonts = [{\n      id: \"Black And White Picture\",\n      name: \"ID_FONT_BNWP\"\n    }, {\n      id: \"Black Han Sans\",\n      name: \"ID_FONT_BHS\"\n    }, {\n      id: \"Cute Font\",\n      name: \"ID_FONT_CUTE\"\n    }, {\n      id: \"Do Hyeon\",\n      name: \"ID_FONT_DOHYEON\"\n    }, {\n      id: \"Dokdo\",\n      name: \"ID_FONT_DOKDO\"\n    }, {\n      id: \"East Sea Dokdo\",\n      name: \"ID_FONT_ESD\"\n    }, {\n      id: \"Gaegu\",\n      name: \"ID_FONT_GAEGU\"\n    }, {\n      id: \"Gamja Flower\",\n      name: \"ID_FONT_GF\"\n    }, {\n      id: \"Gothic A1\",\n      name: \"ID_FONT_GA\"\n    }, {\n      id: \"Gugi\",\n      name: \"ID_FONT_GUGI\"\n    }, {\n      id: \"Hi Melody\",\n      name: \"ID_FONT_HM\"\n    }, {\n      id: \"Jua\",\n      name: \"ID_FONT_JUA\"\n    }, {\n      id: \"Kirang Haerang\",\n      name: \"ID_FONT_KH\"\n    }, {\n      id: \"Nanum Brush Script\",\n      name: \"ID_FONT_NBS\"\n    }, {\n      id: \"Nanum Gothic\",\n      name: \"ID_FONT_NG\"\n    }, {\n      id: \"Nanum Myeongjo\",\n      name: \"ID_FONT_NM\"\n    }, {\n      id: \"Nanum Pen Script\",\n      name: \"ID_FONT_NPS\"\n    }, {\n      id: \"Noto Sans KR\",\n      name: \"ID_FONT_NSANSK\"\n    }, {\n      id: \"Noto Serif KR\",\n      name: \"ID_FONT_NSERIFK\"\n    }, {\n      id: \"Poor Story\",\n      name: \"ID_FONT_PS\"\n    }, {\n      id: \"Song Myung\",\n      name: \"ID_FONT_SM\"\n    }, {\n      id: \"Stylish\",\n      name: \"ID_FONT_STYLISH\"\n    }, {\n      id: \"Sunflower\",\n      name: \"ID_FONT_SUNFLOWER\"\n    }, {\n      id: \"Yeon Sung\",\n      name: \"ID_FONT_YEONSUNG\"\n    }];\n    this.categories = [];\n    this.sprites = {};\n    this.sounds = {};\n    this.categoryItems = {};\n    this.firstTemplateName = \"\";\n\n    this.convertSoundAsset = function (asset) {\n      asset.path = _this.baseURL + asset.path;\n      asset.id = asset.assetId;\n      return asset;\n    };\n\n    this.convertSpriteAsset = function (asset) {\n      if (asset.bodySize) {\n        asset.bodySize = JSON.parse(asset.bodySize);\n      }\n\n      if (asset.spriteAnimations) {\n        asset.spriteAnimations = JSON.parse(asset.spriteAnimations);\n      }\n\n      if (asset.spriteSize) {\n        asset.spriteSize = JSON.parse(asset.spriteSize);\n      }\n\n      asset.path = _this.baseURL + asset.path;\n      asset.thumb = _this.baseURL + asset.thumb;\n\n      if (asset.spritePath) {\n        asset.spritePath = _this.baseURL + asset.spritePath;\n      }\n\n      asset.id = asset.assetId;\n      return asset;\n    };\n\n    this.getAsset = function (id) {\n      return _this.sprites[id];\n    };\n\n    this.loadAsset = function (id, callback) {\n      if (!id) callback();\n\n      var asset = _this.getAsset(id);\n\n      if (asset) {\n        callback(asset);\n      } else {\n        request.assetsById({\n          spriteIds: [id]\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = json.sprites[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var sprite = _step.value;\n              _this.sprites[id] = _this.convertSpriteAsset(sprite);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          if (callback) callback(_this.getAsset(id));\n        });\n      }\n    };\n\n    this.getSoundAsset = function (id) {\n      return _this.sounds[id];\n    };\n\n    this.addAsset = function (asset) {\n      asset = _this.convertSpriteAsset(asset);\n      _this.sprites[asset.assetId] = asset;\n    };\n\n    this.getAssetByName = function (name) {\n      for (var id in _this.sprites) {\n        var sprite = _this.sprites[id];\n\n        if (sprite.defaultName === name) {\n          return sprite;\n        }\n      }\n    };\n\n    this.getSoundAssetByName = function (name) {\n      for (var id in _this.sounds) {\n        var sound = _this.sounds[id];\n\n        if (sound.defaultName === name) {\n          return sound;\n        }\n      }\n    };\n\n    //temp\n    for (var i in this.components) {\n      var component = this.components[i];\n      this.sprites[component.assetId] = component;\n    }\n\n    this.loadCategories();\n  }\n\n  _createClass(AssetLibrary, [{\n    key: \"getCategories\",\n    value: function getCategories(email) {\n      // const managers = [\n      //   \"selena@wizschool.io\",\n      //   \"gocks0922@gmail.com\",\n      //   \"chris@wizschool.io\",\n      //   \"het@wizschool.io\",\n      //   \"y3000y7@gmail.com\",\n      //   \"rei@wizschool.io\",\n      //   \"rei2@wizschool.io\",\n      //   \"noah@wizschool.io\",\n      //   \"sona@wizschool.io\",\n      //   \"martha@wizschool.io\",\n      //   \"zayden@wizschool.io\",\n      //   \"afterschool01@wizschool.io\",\n      //   \"4wizclass@wizschool.io\",\n      //   \"globalcontent@wizschool.io\",\n      //   \"crong@wizschool.io\",\n      //   \"chjsuac@wizschool.io\",\n      //   \"oobc@wizschool.io\",\n      //   \"cc@wizschool.io\"\n      // ];\n      // if (email && managers.indexOf(email) !== -1) {\n      //   return this.categories;\n      // } else {\n      //   return this.categories.filter(c => c.name !== \"illust\");\n      // }\n      return this.categories;\n    }\n  }, {\n    key: \"loadCategories\",\n    value: function loadCategories(callback) {\n      var _this2 = this;\n\n      request.getCategories().then(function (res) {\n        return res.json();\n      }).then(function (categories) {\n        _this2.categories = categories.filter(function (c) {\n          return c.name !== \"wizlive\" && c.name !== \"template\";\n        });\n        if (callback) callback();\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"loadAllSounds\",\n    value: function loadAllSounds(callback) {\n      var _this3 = this;\n\n      this.loadCategories(function () {\n        var soundCategories = _this3.categories.filter(function (c) {\n          return c.name === \"sfx\" || c.name === \"bgm\";\n        });\n\n        var i = 0;\n\n        var load = function load(name) {\n          _this3.loadAssetsByCategory(name, function () {\n            i++;\n\n            if (soundCategories.length > i) {\n              load(soundCategories[i].name);\n            } else {\n              callback();\n            }\n          });\n        };\n\n        load(soundCategories[i].name);\n      });\n    }\n  }, {\n    key: \"loadAssetsByCategory\",\n    value: function loadAssetsByCategory(category, callback) {\n      var _this4 = this;\n\n      if (this.categoryItems[category]) {\n        callback(this.categoryItems[category]);\n        return;\n      }\n\n      request.assetsByCategory({\n        categoryId: category\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (!_this4.categoryItems[category]) {\n          _this4.categoryItems[category] = [];\n        }\n\n        json.forEach(function (subItem) {\n          var assets = subItem.assets;\n          _this4.categoryItems[subItem.name] = [];\n\n          for (var i in assets) {\n            var asset = assets[i].asset;\n            var assetBundle = void 0;\n\n            if (asset.type === \"sound\") {\n              asset = _this4.convertSoundAsset(asset);\n              assetBundle = _this4.sounds;\n            } else {\n              asset = _this4.convertSpriteAsset(asset);\n              assetBundle = _this4.sprites;\n            }\n\n            _this4.categoryItems[subItem.name].push({\n              assetId: asset.assetId,\n              type: asset.type,\n              subtype: asset.subtype\n            });\n\n            if (!assetBundle[asset.assetId]) {\n              assetBundle[asset.assetId] = asset;\n            }\n\n            if (category === \"new\") {\n              assetBundle[asset.assetId].isNew = true;\n            }\n          }\n\n          _this4.categoryItems[category] = [].concat(_toConsumableArray(_this4.categoryItems[category]), _toConsumableArray(_this4.categoryItems[subItem.name]));\n        });\n\n        if (category === \"template\" || category === \"illust\") {\n          _this4.firstTemplateName = json[0].name;\n          _this4.categoryItems[category] = _this4.categoryItems[_this4.firstTemplateName];\n        }\n\n        callback(_this4.categoryItems[category]);\n      });\n    }\n  }, {\n    key: \"loadAssetsFromScene\",\n    value: function loadAssetsFromScene(state, callback) {\n      var _this5 = this;\n\n      var spriteAssetIds = [];\n\n      for (var i in state.sceneIds) {\n        var spriteIds = state.scenes[state.sceneIds[i]].spriteIds;\n        var sprites = state.scenes[state.sceneIds[i]].sprites;\n\n        for (var j in spriteIds) {\n          if (spriteAssetIds.indexOf(sprites[spriteIds[j]].assetId) === -1) {\n            spriteAssetIds.push(sprites[spriteIds[j]].assetId);\n          }\n        }\n      }\n\n      var params = {\n        spriteIds: spriteAssetIds,\n        soundIds: state.soundIds\n      };\n      request.assetsById(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var sprites = json.sprites;\n        var i = 0;\n        var asset = undefined;\n\n        for (i in sprites) {\n          asset = sprites[i];\n          asset = _this5.convertSpriteAsset(asset);\n          _this5.sprites[asset.assetId] = asset;\n        }\n\n        var sounds = json.sounds;\n\n        for (i in sounds) {\n          asset = sounds[i];\n          asset = _this5.convertSoundAsset(asset);\n          _this5.sounds[asset.assetId] = asset;\n        }\n\n        callback();\n      });\n    }\n  }, {\n    key: \"loadAssetsForGame\",\n    value: function () {\n      var _loadAssetsForGame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(state) {\n        var shouldLoad, data, spriteAssetIds, i, spriteIds, sprites, j, params, response, json, _sprites, asset, sounds;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                shouldLoad = false;\n                data = {\n                  sprites: {},\n                  sounds: {}\n                }; // make ids array except for text sprites\n\n                spriteAssetIds = [];\n                i = 0;\n\n                for (i in state.sceneIds) {\n                  spriteIds = state.scenes[state.sceneIds[i]].spriteIds;\n                  sprites = state.scenes[state.sceneIds[i]].sprites;\n\n                  for (j in spriteIds) {\n                    if (sprites[spriteIds[j]].type !== \"text\") {\n                      if (spriteAssetIds.indexOf(sprites[spriteIds[j]].assetId) === -1) {\n                        spriteAssetIds.push(sprites[spriteIds[j]].assetId);\n                      }\n                    }\n                  }\n                } // check if sprites loaded\n\n\n                _context.t0 = _regeneratorRuntime.keys(spriteAssetIds);\n\n              case 6:\n                if ((_context.t1 = _context.t0()).done) {\n                  _context.next = 16;\n                  break;\n                }\n\n                i = _context.t1.value;\n\n                if (!this.sprites[spriteAssetIds[i]]) {\n                  _context.next = 12;\n                  break;\n                }\n\n                data.sprites[spriteAssetIds[i]] = this.sprites[spriteAssetIds[i]];\n                _context.next = 14;\n                break;\n\n              case 12:\n                shouldLoad = true;\n                return _context.abrupt(\"break\", 16);\n\n              case 14:\n                _context.next = 6;\n                break;\n\n              case 16:\n                if (shouldLoad) {\n                  _context.next = 28;\n                  break;\n                }\n\n                _context.t2 = _regeneratorRuntime.keys(state.soundIds);\n\n              case 18:\n                if ((_context.t3 = _context.t2()).done) {\n                  _context.next = 28;\n                  break;\n                }\n\n                i = _context.t3.value;\n\n                if (!this.sounds[state.soundIds[i]]) {\n                  _context.next = 24;\n                  break;\n                }\n\n                data.sounds[state.soundIds[i]] = this.sounds[state.soundIds[i]];\n                _context.next = 26;\n                break;\n\n              case 24:\n                shouldLoad = true;\n                return _context.abrupt(\"break\", 28);\n\n              case 26:\n                _context.next = 18;\n                break;\n\n              case 28:\n                if (!shouldLoad) {\n                  _context.next = 43;\n                  break;\n                }\n\n                data = {\n                  sprites: {},\n                  sounds: {}\n                };\n                params = {\n                  spriteIds: spriteAssetIds,\n                  soundIds: state.soundIds\n                };\n                _context.next = 33;\n                return request.assetsById(params);\n\n              case 33:\n                response = _context.sent;\n                _context.next = 36;\n                return response.json();\n\n              case 36:\n                json = _context.sent;\n                _sprites = json.sprites;\n                i = 0;\n                asset = undefined;\n\n                for (i in _sprites) {\n                  asset = _sprites[i];\n                  asset = this.convertSpriteAsset(asset);\n                  data.sprites[asset.assetId] = asset;\n                }\n\n                sounds = json.sounds;\n\n                for (i in sounds) {\n                  asset = sounds[i];\n                  asset = this.convertSoundAsset(asset);\n                  data.sounds[asset.assetId] = asset;\n                }\n\n              case 43:\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  resolve(data);\n                }));\n\n              case 44:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadAssetsForGame(_x) {\n        return _loadAssetsForGame.apply(this, arguments);\n      }\n\n      return loadAssetsForGame;\n    }()\n  }, {\n    key: \"textboxThumb\",\n    get: function get() {\n      return this.baseURL + \"/sprite/sprite-text.svg\";\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var sprites = this.sprites,\n          sounds = this.sounds;\n      return {\n        sprites: sprites,\n        sounds: sounds\n      };\n    }\n  }, {\n    key: \"setAll\",\n    value: function setAll(assets) {\n      var sprites = assets.sprites,\n          sounds = assets.sounds;\n      this.sprites = _objectSpread({}, this.sprites, sprites);\n      this.sounds = _objectSpread({}, this.sounds, sounds);\n    }\n  }]);\n\n  return AssetLibrary;\n}();\n\nexport default new AssetLibrary();","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/utils/assetLibrary.js"],"names":["request","AssetLibrary","baseURL","fonts","id","name","categories","sprites","sounds","categoryItems","firstTemplateName","convertSoundAsset","asset","path","assetId","convertSpriteAsset","bodySize","JSON","parse","spriteAnimations","spriteSize","thumb","spritePath","getAsset","loadAsset","callback","assetsById","spriteIds","then","res","json","sprite","getSoundAsset","addAsset","getAssetByName","defaultName","getSoundAssetByName","sound","i","components","component","loadCategories","email","getCategories","filter","c","catch","err","console","error","soundCategories","load","loadAssetsByCategory","length","category","assetsByCategory","categoryId","forEach","subItem","assets","assetBundle","type","push","subtype","isNew","state","spriteAssetIds","sceneIds","scenes","j","indexOf","params","soundIds","undefined","shouldLoad","data","response","Promise","resolve"],"mappings":"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","sourcesContent":["import * as request from \"../../../Common/Util/HTTPRequest\";\n\nclass AssetLibrary {\n  baseURL = \"https://wizschool-assets.s3.ap-northeast-2.amazonaws.com\";\n  // baseURL = \"assets\";\n  fonts = [\n    { id: \"Black And White Picture\", name: \"ID_FONT_BNWP\" },\n    { id: \"Black Han Sans\", name: \"ID_FONT_BHS\" },\n    { id: \"Cute Font\", name: \"ID_FONT_CUTE\" },\n    { id: \"Do Hyeon\", name: \"ID_FONT_DOHYEON\" },\n    { id: \"Dokdo\", name: \"ID_FONT_DOKDO\" },\n    { id: \"East Sea Dokdo\", name: \"ID_FONT_ESD\" },\n    { id: \"Gaegu\", name: \"ID_FONT_GAEGU\" },\n    { id: \"Gamja Flower\", name: \"ID_FONT_GF\" },\n    { id: \"Gothic A1\", name: \"ID_FONT_GA\" },\n    { id: \"Gugi\", name: \"ID_FONT_GUGI\" },\n    { id: \"Hi Melody\", name: \"ID_FONT_HM\" },\n    { id: \"Jua\", name: \"ID_FONT_JUA\" },\n    { id: \"Kirang Haerang\", name: \"ID_FONT_KH\" },\n    { id: \"Nanum Brush Script\", name: \"ID_FONT_NBS\" },\n    { id: \"Nanum Gothic\", name: \"ID_FONT_NG\" },\n    { id: \"Nanum Myeongjo\", name: \"ID_FONT_NM\" },\n    { id: \"Nanum Pen Script\", name: \"ID_FONT_NPS\" },\n    { id: \"Noto Sans KR\", name: \"ID_FONT_NSANSK\" },\n    { id: \"Noto Serif KR\", name: \"ID_FONT_NSERIFK\" },\n    { id: \"Poor Story\", name: \"ID_FONT_PS\" },\n    { id: \"Song Myung\", name: \"ID_FONT_SM\" },\n    { id: \"Stylish\", name: \"ID_FONT_STYLISH\" },\n    { id: \"Sunflower\", name: \"ID_FONT_SUNFLOWER\" },\n    { id: \"Yeon Sung\", name: \"ID_FONT_YEONSUNG\" }\n  ];\n  categories = [];\n  sprites = {};\n  sounds = {};\n  categoryItems = {};\n  firstTemplateName = \"\";\n\n  constructor() {\n    //temp\n    for (var i in this.components) {\n      var component = this.components[i];\n      this.sprites[component.assetId] = component;\n    }\n    this.loadCategories();\n  }\n\n  getCategories(email) {\n    // const managers = [\n    //   \"selena@wizschool.io\",\n    //   \"gocks0922@gmail.com\",\n    //   \"chris@wizschool.io\",\n    //   \"het@wizschool.io\",\n    //   \"y3000y7@gmail.com\",\n    //   \"rei@wizschool.io\",\n    //   \"rei2@wizschool.io\",\n    //   \"noah@wizschool.io\",\n    //   \"sona@wizschool.io\",\n    //   \"martha@wizschool.io\",\n    //   \"zayden@wizschool.io\",\n    //   \"afterschool01@wizschool.io\",\n    //   \"4wizclass@wizschool.io\",\n    //   \"globalcontent@wizschool.io\",\n    //   \"crong@wizschool.io\",\n    //   \"chjsuac@wizschool.io\",\n    //   \"oobc@wizschool.io\",\n    //   \"cc@wizschool.io\"\n    // ];\n    // if (email && managers.indexOf(email) !== -1) {\n    //   return this.categories;\n    // } else {\n    //   return this.categories.filter(c => c.name !== \"illust\");\n    // }\n    return this.categories;\n  }\n\n  loadCategories(callback) {\n    request\n      .getCategories()\n      .then(res => res.json())\n      .then(categories => {\n        this.categories = categories.filter(\n          c => c.name !== \"wizlive\" && c.name !== \"template\"\n        );\n        if (callback) callback();\n      })\n      .catch(err => console.error(err));\n  }\n\n  loadAllSounds(callback) {\n    this.loadCategories(() => {\n      const soundCategories = this.categories.filter(\n        c => c.name === \"sfx\" || c.name === \"bgm\"\n      );\n      let i = 0;\n      const load = name => {\n        this.loadAssetsByCategory(name, () => {\n          i++;\n          if (soundCategories.length > i) {\n            load(soundCategories[i].name);\n          } else {\n            callback();\n          }\n        });\n      };\n      load(soundCategories[i].name);\n    });\n  }\n\n  loadAssetsByCategory(category, callback) {\n    if (this.categoryItems[category]) {\n      callback(this.categoryItems[category]);\n      return;\n    }\n\n    request\n      .assetsByCategory({ categoryId: category })\n      .then(res => res.json())\n      .then(json => {\n        if (!this.categoryItems[category]) {\n          this.categoryItems[category] = [];\n        }\n        json.forEach(subItem => {\n          const assets = subItem.assets;\n          this.categoryItems[subItem.name] = [];\n          for (var i in assets) {\n            let asset = assets[i].asset;\n            let assetBundle;\n\n            if (asset.type === \"sound\") {\n              asset = this.convertSoundAsset(asset);\n              assetBundle = this.sounds;\n            } else {\n              asset = this.convertSpriteAsset(asset);\n              assetBundle = this.sprites;\n            }\n\n            this.categoryItems[subItem.name].push({\n              assetId: asset.assetId,\n              type: asset.type,\n              subtype: asset.subtype\n            });\n\n            if (!assetBundle[asset.assetId]) {\n              assetBundle[asset.assetId] = asset;\n            }\n            if (category === \"new\") {\n              assetBundle[asset.assetId].isNew = true;\n            }\n          }\n\n          this.categoryItems[category] = [\n            ...this.categoryItems[category],\n            ...this.categoryItems[subItem.name]\n          ];\n        });\n\n        if (category === \"template\" || category === \"illust\") {\n          this.firstTemplateName = json[0].name;\n          this.categoryItems[category] = this.categoryItems[\n            this.firstTemplateName\n          ];\n        }\n\n        callback(this.categoryItems[category]);\n      });\n  }\n\n  loadAssetsFromScene(state, callback) {\n    const spriteAssetIds = [];\n    for (var i in state.sceneIds) {\n      const spriteIds = state.scenes[state.sceneIds[i]].spriteIds;\n      const sprites = state.scenes[state.sceneIds[i]].sprites;\n      for (var j in spriteIds) {\n        if (spriteAssetIds.indexOf(sprites[spriteIds[j]].assetId) === -1) {\n          spriteAssetIds.push(sprites[spriteIds[j]].assetId);\n        }\n      }\n    }\n\n    const params = {\n      spriteIds: spriteAssetIds,\n      soundIds: state.soundIds\n    };\n\n    request\n      .assetsById(params)\n      .then(res => res.json())\n      .then(json => {\n        const sprites = json.sprites;\n        let i = 0;\n        let asset = undefined;\n        for (i in sprites) {\n          asset = sprites[i];\n          asset = this.convertSpriteAsset(asset);\n          this.sprites[asset.assetId] = asset;\n        }\n\n        const sounds = json.sounds;\n        for (i in sounds) {\n          asset = sounds[i];\n          asset = this.convertSoundAsset(asset);\n          this.sounds[asset.assetId] = asset;\n        }\n        callback();\n      });\n  }\n\n  async loadAssetsForGame(state) {\n    let shouldLoad = false;\n    let data = { sprites: {}, sounds: {} };\n\n    // make ids array except for text sprites\n    const spriteAssetIds = [];\n    let i = 0;\n    for (i in state.sceneIds) {\n      const spriteIds = state.scenes[state.sceneIds[i]].spriteIds;\n      const sprites = state.scenes[state.sceneIds[i]].sprites;\n      for (var j in spriteIds) {\n        if (sprites[spriteIds[j]].type !== \"text\") {\n          if (spriteAssetIds.indexOf(sprites[spriteIds[j]].assetId) === -1) {\n            spriteAssetIds.push(sprites[spriteIds[j]].assetId);\n          }\n        }\n      }\n    }\n    // check if sprites loaded\n    for (i in spriteAssetIds) {\n      if (this.sprites[spriteAssetIds[i]]) {\n        data.sprites[spriteAssetIds[i]] = this.sprites[spriteAssetIds[i]];\n      } else {\n        shouldLoad = true;\n        break;\n      }\n    }\n    // check if sounds loaded\n    if (!shouldLoad) {\n      for (i in state.soundIds) {\n        if (this.sounds[state.soundIds[i]]) {\n          data.sounds[state.soundIds[i]] = this.sounds[state.soundIds[i]];\n        } else {\n          shouldLoad = true;\n          break;\n        }\n      }\n    }\n\n    if (shouldLoad) {\n      data = { sprites: {}, sounds: {} };\n      const params = {\n        spriteIds: spriteAssetIds,\n        soundIds: state.soundIds\n      };\n      const response = await request.assetsById(params);\n      const json = await response.json();\n      const sprites = json.sprites;\n      i = 0;\n      let asset = undefined;\n      for (i in sprites) {\n        asset = sprites[i];\n        asset = this.convertSpriteAsset(asset);\n        data.sprites[asset.assetId] = asset;\n      }\n\n      const sounds = json.sounds;\n      for (i in sounds) {\n        asset = sounds[i];\n        asset = this.convertSoundAsset(asset);\n        data.sounds[asset.assetId] = asset;\n      }\n    }\n\n    return new Promise(function(resolve) {\n      resolve(data);\n    });\n  }\n\n  convertSoundAsset = asset => {\n    asset.path = this.baseURL + asset.path;\n    asset.id = asset.assetId;\n    return asset;\n  };\n  convertSpriteAsset = asset => {\n    if (asset.bodySize) {\n      asset.bodySize = JSON.parse(asset.bodySize);\n    }\n    if (asset.spriteAnimations) {\n      asset.spriteAnimations = JSON.parse(asset.spriteAnimations);\n    }\n    if (asset.spriteSize) {\n      asset.spriteSize = JSON.parse(asset.spriteSize);\n    }\n\n    asset.path = this.baseURL + asset.path;\n    asset.thumb = this.baseURL + asset.thumb;\n    if (asset.spritePath) {\n      asset.spritePath = this.baseURL + asset.spritePath;\n    }\n\n    asset.id = asset.assetId;\n    return asset;\n  };\n\n  get textboxThumb() {\n    return this.baseURL + \"/sprite/sprite-text.svg\";\n  }\n\n  getAsset = id => {\n    return this.sprites[id];\n  };\n  loadAsset = (id, callback) => {\n    if (!id) callback();\n\n    const asset = this.getAsset(id);\n    if (asset) {\n      callback(asset);\n    } else {\n      request\n        .assetsById({ spriteIds: [id] })\n        .then(res => res.json())\n        .then(json => {\n          for (let sprite of json.sprites) {\n            this.sprites[id] = this.convertSpriteAsset(sprite);\n          }\n          if (callback) callback(this.getAsset(id));\n        });\n    }\n  };\n\n  getSoundAsset = id => {\n    return this.sounds[id];\n  };\n\n  addAsset = asset => {\n    asset = this.convertSpriteAsset(asset);\n    this.sprites[asset.assetId] = asset;\n  };\n\n  getAll() {\n    const { sprites, sounds } = this;\n    return { sprites, sounds };\n  }\n  setAll(assets) {\n    const { sprites, sounds } = assets;\n    this.sprites = { ...this.sprites, ...sprites };\n    this.sounds = { ...this.sounds, ...sounds };\n  }\n\n  getAssetByName = name => {\n    for (let id in this.sprites) {\n      let sprite = this.sprites[id];\n      if (sprite.defaultName === name) {\n        return sprite;\n      }\n    }\n  };\n\n  getSoundAssetByName = name => {\n    for (let id in this.sounds) {\n      let sound = this.sounds[id];\n      if (sound.defaultName === name) {\n        return sound;\n      }\n    }\n  };\n}\n\nexport default new AssetLibrary();\n"]},"metadata":{},"sourceType":"module"}