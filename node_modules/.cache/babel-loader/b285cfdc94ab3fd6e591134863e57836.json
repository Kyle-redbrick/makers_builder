{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/DreamReport/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../Util/HTTPRequest\";\nimport warningIcon from \"../../../Image/dreamclass/image-warning-alert.svg\";\nimport successIcon from \"../../../Image/dreamclass/image-confirmation-check.svg\";\nimport \"./index.scss\";\nvar STAGE = {\n  FORM: \"form\",\n  SUCCESS: \"success\"\n};\n\nvar DreamReport =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DreamReport, _Component);\n\n  function DreamReport(props) {\n    var _this;\n\n    _classCallCheck(this, DreamReport);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DreamReport).call(this, props));\n\n    _this.onChange = function (e) {\n      var _e$currentTarget = e.currentTarget,\n          id = _e$currentTarget.id,\n          value = _e$currentTarget.value;\n\n      _this.setState(_defineProperty({}, id, value));\n    };\n\n    _this.onClickReport = function () {\n      if (_this.isReportable) {\n        _this.report().then(function () {\n          _this.setState({\n            stage: STAGE.SUCCESS\n          });\n        });\n      }\n    };\n\n    _this.onClickCancel = function () {\n      if (_this.props.dismiss) {\n        _this.props.dismiss();\n      }\n    };\n\n    _this.onClickConfirm = function () {\n      if (_this.props.dismiss) {\n        _this.props.dismiss();\n      }\n    };\n\n    _this.state = {\n      stage: STAGE.FORM,\n      description: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(DreamReport, [{\n    key: \"report\",\n    value: function () {\n      var _report = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var params;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = {\n                  userId: this.props.userinfo.id,\n                  targetType: this.props.targetType,\n                  targetContentId: this.props.targetContentId,\n                  targetUserId: this.props.targetUserId,\n                  description: this.state.description\n                };\n                request.createDreamReport(params).then(function (res) {\n                  return res.json();\n                }).then(function (result) {\n                  if (!result.success) {\n                    throw result;\n                  }\n                }).catch(console.error);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function report() {\n        return _report.apply(this, arguments);\n      }\n\n      return report;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      switch (this.state.stage) {\n        case STAGE.FORM:\n        default:\n          return React.createElement(Form, {\n            description: this.state.description,\n            isReportable: this.isReportable,\n            onChange: this.onChange,\n            onClickReport: this.onClickReport,\n            onClickCancel: this.onClickCancel,\n            intl: this.props.intl,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          });\n\n        case STAGE.SUCCESS:\n          return React.createElement(Success, {\n            onClickConfirm: this.onClickConfirm,\n            intl: this.props.intl,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n      }\n    }\n  }, {\n    key: \"isReportable\",\n    get: function get() {\n      return !!this.state.description;\n    }\n  }]);\n\n  return DreamReport;\n}(Component);\n\nfunction Form(props) {\n  return React.createElement(\"div\", {\n    className: \"report report-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"report_icon\",\n    src: warningIcon,\n    alt: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"popup_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_DREAM_REPORT_TITLE\"\n  })), React.createElement(\"textarea\", {\n    id: \"description\",\n    value: props.description,\n    onChange: props.onChange,\n    placeholder: props.intl.formatMessage({\n      id: \"ID_DREAM_REPORT_PLACEHOLDER\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"popup_buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"popup_button\",\n    onClick: props.onClickReport,\n    disabled: !props.isReportable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_DREAM_REPORT_REPORT_BUTTON\"\n  })), React.createElement(\"button\", {\n    className: \"popup_button-cancel\",\n    onClick: props.onClickCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_DREAM_REPORT_CANCLE_BUTTON\"\n  }))));\n}\n\nfunction Success(props) {\n  return React.createElement(\"div\", {\n    className: \"report report-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"report_icon\",\n    src: successIcon,\n    alt: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"popup_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_DREAM_REPORT_CONFIRM_MSG\"\n  })), React.createElement(\"div\", {\n    className: \"popup_buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"popup_button\",\n    onClick: props.onClickConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_DREAM_REPORT_CONFIRM_BUTTON\"\n  }))));\n}\n\nexport default connect(function (state) {\n  return {\n    userinfo: state.userinfo\n  };\n})(injectIntl(DreamReport));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/DreamReport/index.js"],"names":["React","Component","connect","injectIntl","request","STAGE","FORM","SUCCESS","DreamReport","props","onChange","e","currentTarget","id","value","setState","onClickReport","isReportable","report","then","stage","onClickCancel","dismiss","onClickConfirm","state","description","params","userId","userinfo","targetType","targetContentId","targetUserId","createDreamReport","res","json","result","success","catch","console","error","intl","Form","warningIcon","formatMessage","Success","successIcon"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../Util/HTTPRequest\";\nimport warningIcon from \"../../../Image/dreamclass/image-warning-alert.svg\";\nimport successIcon from \"../../../Image/dreamclass/image-confirmation-check.svg\";\nimport \"./index.scss\";\n\nconst STAGE = {\n  FORM: \"form\",\n  SUCCESS: \"success\"\n}\n\nclass DreamReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stage: STAGE.FORM,\n      description: \"\"\n    };\n  }\n\n  onChange = e => {\n    const { id, value } = e.currentTarget;\n    this.setState({ [id]: value });\n  }\n  onClickReport = () => {\n    if(this.isReportable) {\n      this.report().then(() => {\n        this.setState({ stage: STAGE.SUCCESS });\n      });\n    }\n  }\n  onClickCancel = () => {\n    if(this.props.dismiss) {\n      this.props.dismiss();\n    }\n  }\n  onClickConfirm = () => {\n    if(this.props.dismiss) {\n      this.props.dismiss();\n    }\n  }\n\n  get isReportable() {\n    return !!this.state.description;\n  }\n\n  async report() {\n    const params = {\n      userId: this.props.userinfo.id,\n      targetType: this.props.targetType,\n      targetContentId: this.props.targetContentId,\n      targetUserId: this.props.targetUserId,\n      description: this.state.description\n    }\n    request\n      .createDreamReport(params)\n      .then(res => res.json())\n      .then(result => {\n        if(!result.success) {\n          throw result\n        }\n      })\n      .catch(console.error);\n  }\n\n  render() {\n    switch(this.state.stage) {\n      case STAGE.FORM:\n      default:\n        return (\n          <Form\n            description={this.state.description}\n            isReportable={this.isReportable}\n            onChange={this.onChange}\n            onClickReport={this.onClickReport}\n            onClickCancel={this.onClickCancel}\n            intl={this.props.intl}\n          />\n        );\n      case STAGE.SUCCESS:\n        return (\n          <Success\n            onClickConfirm={this.onClickConfirm}\n            intl={this.props.intl}\n          />\n        );\n    }\n  }\n}\n\nfunction Form(props) {\n  return (\n    <div className=\"report report-form\">\n    <img className=\"report_icon\" src={warningIcon} alt=\"warning\"/>\n      <div className=\"popup_title\">\n        {props.intl.formatMessage({ id: \"ID_DREAM_REPORT_TITLE\"})}\n      </div>\n      <textarea\n        id=\"description\"\n        value={props.description}\n        onChange={props.onChange}\n        placeholder={props.intl.formatMessage({ id: \"ID_DREAM_REPORT_PLACEHOLDER\"})}\n      />\n      <div className=\"popup_buttons\">\n        <button\n          className=\"popup_button\"\n          onClick={props.onClickReport}\n          disabled={!props.isReportable}\n        >\n          {props.intl.formatMessage({ id: \"ID_DREAM_REPORT_REPORT_BUTTON\"})}\n        </button>\n        <button\n          className=\"popup_button-cancel\"\n          onClick={props.onClickCancel}\n        >\n          {props.intl.formatMessage({ id: \"ID_DREAM_REPORT_CANCLE_BUTTON\"})}\n        </button>\n      </div>\n    </div>\n  )\n}\nfunction Success(props) {\n  return (\n    <div className=\"report report-success\">\n      <img className=\"report_icon\" src={successIcon} alt=\"success\"/>\n      <div className=\"popup_title\">\n        {props.intl.formatMessage({ id: \"ID_DREAM_REPORT_CONFIRM_MSG\"})}\n      </div>\n      <div className=\"popup_buttons\">\n        <button\n          className=\"popup_button\"\n          onClick={props.onClickConfirm}\n        >\n          {props.intl.formatMessage({ id: \"ID_DREAM_REPORT_CONFIRM_BUTTON\"})}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default connect(\n  state => ({ userinfo: state.userinfo }) \n)(injectIntl(DreamReport));\n"]},"metadata":{},"sourceType":"module"}