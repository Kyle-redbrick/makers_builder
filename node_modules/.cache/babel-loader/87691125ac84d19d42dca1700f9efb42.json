{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Gstar/ChallengeApply/Container.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport Terms from \"./Terms\";\nimport View from \"./View\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onScrollPublishedList = function (e) {\n      if (e.target.scrollTop >= e.target.scrollHeight - e.target.clientHeight - 60 && _this.state.publishedList.length < _this.state.publishedTotal && !_this.isLoadingPublishedList) {\n        _this.loadPublishedList({\n          offset: _this.state.publishedList.length,\n          limit: 10\n        });\n      }\n    };\n\n    _this.onClickPublishedAt = function (index) {\n      _this.setState({\n        selectedPublishedIndex: index\n      });\n    };\n\n    _this.onChangeField = function (name, value) {\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onClickAddTeamMember = function () {\n      var teamMemberIds = _this.state.teamMemberIds;\n\n      if (teamMemberIds.length < 3) {\n        _this.setState({\n          teamMemberIds: [].concat(_toConsumableArray(teamMemberIds), [\"\"])\n        });\n      }\n    };\n\n    _this.onChangeTeamMemberIdAt = function (index, value) {\n      var teamMemberIds = _toConsumableArray(_this.state.teamMemberIds);\n\n      teamMemberIds[index] = value;\n\n      _this.setState({\n        teamMemberIds: teamMemberIds\n      });\n    };\n\n    _this.onClickTermsLink = function (e) {\n      e.preventDefault();\n      showPopUp(React.createElement(Terms, {\n        onClickConfirm: function onClickConfirm() {\n          _this.setState({\n            agreesToApply: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }));\n    };\n\n    _this.onClickSubmit = function () {\n      if (_this.isSubmitEnabled) {\n        if (_this.isEditMode) {\n          _this.updateAppliance(_this.applianceId);\n        } else {\n          _this.submitAppliance();\n        }\n      }\n    };\n\n    _this.onClickComplete = function () {\n      _this.props.history.push(\"/challenge/projectlist\");\n    };\n\n    _this.state = {\n      isCompleted: false,\n      publishedList: [],\n      publishedTotal: 0,\n      selectedPublishedIndex: 0,\n      productTitle: \"\",\n      productDescription: \"\",\n      teamName: \"\",\n      teamDescription: \"\",\n      teamMemberIds: [\"\"],\n      applicantName: \"\",\n      applicantOrganization: \"\",\n      applicantEmail: \"\",\n      applicantPhone: \"\",\n      applicantBirth: moment().subtract(14, 'year'),\n      parentName: \"\",\n      parentPhone: \"\",\n      agentName: \"\",\n      agentPhone: \"\",\n      agentRelation: \"\",\n      agreesToApply: false\n    };\n    _this.publishedListRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.props.user.id) {\n                  _context.next = 5;\n                  break;\n                }\n\n                if (!this.isEditMode) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.loadAppliance(this.applianceId);\n\n              case 4:\n                this.loadPublishedList({\n                  offset: 0,\n                  limit: 10\n                });\n\n              case 5:\n                if (this.publishedListRef.current) {\n                  this.publishedListRef.current.addEventListener(\"scroll\", this.onScrollPublishedList);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.publishedListRef.current) {\n        this.publishedListRef.current.removeEventListener(\"scroll\", this.onScrollPublishedList);\n      }\n    }\n  }, {\n    key: \"loadPublishedList\",\n    value: function loadPublishedList(options) {\n      var _this2 = this;\n\n      this.isLoadingPublishedList = true;\n      request.getPublishedProjects({\n        email: this.props.user.email,\n        offset: options.offset,\n        limit: options.limit\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState(function (prevState) {\n          return {\n            publishedList: [].concat(prevState.publishedList, result.rows.filter(function (published) {\n              return _this2.applianceOrigin ? published.pId !== _this2.applianceOrigin.project.pId : true;\n            })),\n            publishedTotal: result.count\n          };\n        });\n      }).finally(function () {\n        _this2.isLoadingPublishedList = false;\n      });\n    }\n  }, {\n    key: \"loadAppliance\",\n    value: function () {\n      var _loadAppliance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return request.loadCreatorChallenge(id).then(function (res) {\n                  return res.json();\n                }).then(function (challenge) {\n                  _this3.applianceOrigin = challenge;\n\n                  _this3.setState({\n                    publishedList: [challenge.project],\n                    productTitle: challenge.productTitle,\n                    productDescription: challenge.productDescription,\n                    teamName: challenge.teamName,\n                    teamDescription: challenge.teamDescription,\n                    teamMemberIds: JSON.parse(challenge.teamMemberIds),\n                    applicantName: challenge.applicantName,\n                    applicantOrganization: challenge.applicantOrganization,\n                    applicantEmail: challenge.applicantEmail,\n                    applicantPhone: challenge.applicantPhone,\n                    applicantBirth: moment(challenge.applicantBirth),\n                    parentName: challenge.parentName,\n                    parentPhone: challenge.parentPhone,\n                    agentName: challenge.agentName,\n                    agentPhone: challenge.agentPhone,\n                    agentRelation: challenge.agentRelation,\n                    agreesToApply: true\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadAppliance(_x) {\n        return _loadAppliance.apply(this, arguments);\n      }\n\n      return loadAppliance;\n    }()\n  }, {\n    key: \"updateAppliance\",\n    value: function updateAppliance(id) {\n      var _this4 = this;\n\n      var changed = this.getChanged(this.applianceOrigin, this.appliance);\n      request.updateCreatorChallenge(id, changed).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        if (result.success) {\n          _this4.setState({\n            isCompleted: true\n          });\n        } else {\n          throw new Error(\"failed response\");\n        }\n      }).catch(function (err) {\n        console.error(err);\n\n        _this4.showError();\n      });\n    }\n  }, {\n    key: \"submitAppliance\",\n    value: function submitAppliance() {\n      var _this5 = this;\n\n      request.addCreatorChallenge(this.appliance).then(function (res) {\n        return res.json();\n      }).then(function (challenge) {\n        if (challenge.id) {\n          _this5.setState({\n            isCompleted: true\n          });\n        } else {\n          throw new Error(\"failed response\");\n        }\n      }).catch(function (err) {\n        console.error(err);\n\n        _this5.showError();\n      });\n    }\n  }, {\n    key: \"getInvalidFields\",\n    value: function getInvalidFields(appliance) {\n      var fields = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.requiredFields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var field = _step.value;\n          var value = appliance[field];\n\n          if (!value) {\n            fields.push(field);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return fields;\n    }\n  }, {\n    key: \"getChanged\",\n    value: function getChanged(from, to) {\n      var changed = {};\n\n      for (var key in to) {\n        if (to[key] !== from[key]) {\n          changed[key] = to[key];\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"showError\",\n    value: function showError() {\n      showPopUp(React.createElement(PopUp.OneButton, {\n        title: this.props.intl.formatMessage({\n          id: \"ID_CHALLENGE_APPLY_SERVER_ERROR_TITLE\"\n        }),\n        subtitle: this.props.intl.formatMessage({\n          id: \"ID_CHALLENGE_APPLY_SERVER_ERROR_SUBTITLE\"\n        }),\n        buttonName: this.props.intl.formatMessage({\n          id: \"ID_CONFIRM\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, Object.assign({}, this.state, {\n        publishedListRef: this.publishedListRef,\n        isEditMode: this.isEditMode,\n        isAgentRequired: this.isAgentRequired,\n        isSubmitEnabled: this.isSubmitEnabled,\n        onClickPublishedAt: this.onClickPublishedAt,\n        onChangeField: this.onChangeField,\n        onClickAddTeamMember: this.onClickAddTeamMember,\n        onChangeTeamMemberIdAt: this.onChangeTeamMemberIdAt,\n        onClickTermsLink: this.onClickTermsLink,\n        onClickSubmit: this.onClickSubmit,\n        onClickComplete: this.onClickComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"applianceId\",\n    get: function get() {\n      return this.props.match.params.id;\n    }\n  }, {\n    key: \"isEditMode\",\n    get: function get() {\n      return !!this.applianceId;\n    }\n  }, {\n    key: \"isAgentRequired\",\n    get: function get() {\n      var applicantAge = moment().diff(this.state.applicantBirth, \"Y\");\n      return applicantAge < 14;\n    }\n  }, {\n    key: \"isSubmitEnabled\",\n    get: function get() {\n      return this.state.agreesToApply && this.getInvalidFields(this.appliance).length <= 0;\n    }\n  }, {\n    key: \"requiredFields\",\n    get: function get() {\n      var fields = [\"productTitle\", \"productDescription\", \"teamName\", \"teamDescription\", \"applicantName\", \"applicantOrganization\", \"applicantEmail\", \"applicantPhone\", \"applicantBirth\", \"userId\", \"pId\"];\n\n      if (this.isAgentRequired) {\n        fields.push(\"agentName\", \"agentPhone\", \"agentRelation\");\n      }\n\n      return fields;\n    }\n  }, {\n    key: \"appliance\",\n    get: function get() {\n      return {\n        productTitle: this.state.productTitle,\n        productDescription: this.state.productDescription,\n        teamName: this.state.teamName,\n        teamDescription: this.state.teamDescription,\n        teamMemberIds: this.stringifiedTeamMemberIds,\n        applicantName: this.state.applicantName,\n        applicantOrganization: this.state.applicantOrganization,\n        applicantEmail: this.state.applicantEmail,\n        applicantPhone: this.state.applicantPhone,\n        applicantBirth: this.state.applicantBirth.format(\"YYYY-MM-DD\"),\n        parentName: this.state.parentName,\n        parentPhone: this.state.parentPhone,\n        agentName: this.state.agentName,\n        agentPhone: this.state.agentPhone,\n        agentRelation: this.state.agentRelation,\n        userId: this.props.user.id,\n        pId: this.selectedPublished ? this.selectedPublished.pId : null\n      };\n    }\n  }, {\n    key: \"stringifiedTeamMemberIds\",\n    get: function get() {\n      var filtered = this.state.teamMemberIds.filter(function (teamMemberId) {\n        return !!teamMemberId;\n      });\n      return JSON.stringify(filtered);\n    }\n  }, {\n    key: \"selectedPublished\",\n    get: function get() {\n      return this.state.publishedList[this.state.selectedPublishedIndex];\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    user: state.userinfo\n  };\n})(withRouter(injectIntl(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Gstar/ChallengeApply/Container.js"],"names":["React","Component","withRouter","injectIntl","connect","moment","request","PopUp","showPopUp","Terms","View","Container","props","onScrollPublishedList","e","target","scrollTop","scrollHeight","clientHeight","state","publishedList","length","publishedTotal","isLoadingPublishedList","loadPublishedList","offset","limit","onClickPublishedAt","index","setState","selectedPublishedIndex","onChangeField","name","value","onClickAddTeamMember","teamMemberIds","onChangeTeamMemberIdAt","onClickTermsLink","preventDefault","agreesToApply","onClickSubmit","isSubmitEnabled","isEditMode","updateAppliance","applianceId","submitAppliance","onClickComplete","history","push","isCompleted","productTitle","productDescription","teamName","teamDescription","applicantName","applicantOrganization","applicantEmail","applicantPhone","applicantBirth","subtract","parentName","parentPhone","agentName","agentPhone","agentRelation","publishedListRef","createRef","user","id","loadAppliance","current","addEventListener","removeEventListener","options","getPublishedProjects","email","then","res","json","result","prevState","concat","rows","filter","published","applianceOrigin","pId","project","count","finally","loadCreatorChallenge","challenge","JSON","parse","changed","getChanged","appliance","updateCreatorChallenge","success","Error","catch","err","console","error","showError","addCreatorChallenge","fields","requiredFields","field","from","to","key","intl","formatMessage","isAgentRequired","match","params","applicantAge","diff","getInvalidFields","stringifiedTeamMemberIds","format","userId","selectedPublished","filtered","teamMemberId","stringify","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\"\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport Terms from \"./Terms\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCompleted: false,\n      publishedList: [],\n      publishedTotal: 0,\n      selectedPublishedIndex: 0,\n      productTitle: \"\",\n      productDescription: \"\",\n      teamName: \"\",\n      teamDescription: \"\",\n      teamMemberIds: [\"\"],\n      applicantName: \"\",\n      applicantOrganization: \"\",\n      applicantEmail: \"\",\n      applicantPhone: \"\",\n      applicantBirth: moment().subtract(14, 'year'),\n      parentName: \"\",\n      parentPhone: \"\",\n      agentName: \"\",\n      agentPhone: \"\",\n      agentRelation: \"\",\n      agreesToApply: false\n    }\n    this.publishedListRef = React.createRef();\n  }\n  async componentDidMount() {\n    // challenge is over\n    // this.props.history.push(`/challenge/gstar/projectlist`);\n    // return;\n\n    if(this.props.user.id) {\n      if(this.isEditMode) {\n        await this.loadAppliance(this.applianceId);\n      }\n      this.loadPublishedList({ offset: 0, limit: 10 });\n    }\n    if(this.publishedListRef.current) {\n      this.publishedListRef.current.addEventListener(\"scroll\", this.onScrollPublishedList);\n    }\n  }\n  componentWillUnmount() {\n    if(this.publishedListRef.current) {\n      this.publishedListRef.current.removeEventListener(\"scroll\", this.onScrollPublishedList);\n    }\n  }\n  loadPublishedList(options) {\n    this.isLoadingPublishedList = true;\n    request\n      .getPublishedProjects({\n        email: this.props.user.email,\n        offset: options.offset,\n        limit: options.limit\n      })\n      .then(res => res.json())\n      .then(result => {\n        this.setState(prevState => ({\n          publishedList: [].concat(\n            prevState.publishedList,\n            result.rows.filter(\n              published => this.applianceOrigin \n                ? published.pId !== this.applianceOrigin.project.pId\n                : true\n            )\n          ),\n          publishedTotal: result.count\n        }));\n      })\n      .finally(() => {\n        this.isLoadingPublishedList = false;\n      })\n  }\n  async loadAppliance(id) {\n    await request\n      .loadCreatorChallenge(id)\n      .then(res => res.json())\n      .then(challenge => {\n        this.applianceOrigin = challenge;\n\n        this.setState({\n          publishedList: [challenge.project],\n          productTitle: challenge.productTitle,\n          productDescription: challenge.productDescription,\n          teamName: challenge.teamName,\n          teamDescription: challenge.teamDescription,\n          teamMemberIds: JSON.parse(challenge.teamMemberIds),\n          applicantName: challenge.applicantName,\n          applicantOrganization: challenge.applicantOrganization,\n          applicantEmail: challenge.applicantEmail,\n          applicantPhone: challenge.applicantPhone,\n          applicantBirth: moment(challenge.applicantBirth),\n          parentName: challenge.parentName,\n          parentPhone: challenge.parentPhone,\n          agentName: challenge.agentName,\n          agentPhone: challenge.agentPhone,\n          agentRelation: challenge.agentRelation,\n          agreesToApply: true\n        });\n      });\n  }\n\n  get applianceId() {\n    return this.props.match.params.id;\n  }\n  get isEditMode() {\n    return !!this.applianceId;\n  }\n  get isAgentRequired() {\n    const applicantAge = moment().diff(this.state.applicantBirth, \"Y\");\n    return applicantAge < 14;\n  }\n\n  onScrollPublishedList = e => {\n    if(\n      e.target.scrollTop >= e.target.scrollHeight - e.target.clientHeight - 60\n      && this.state.publishedList.length < this.state.publishedTotal\n      && !this.isLoadingPublishedList\n    ) {\n      this.loadPublishedList({ offset: this.state.publishedList.length, limit: 10 });\n    }\n  }\n  onClickPublishedAt = index => {\n    this.setState({ selectedPublishedIndex: index });\n  }\n  onChangeField = (name, value) => {\n    this.setState({ [name]: value });\n  }\n  onClickAddTeamMember = () => {\n    const teamMemberIds = this.state.teamMemberIds;\n    if(teamMemberIds.length < 3) {\n      this.setState({\n        teamMemberIds: [ ...teamMemberIds, \"\" ]\n      });\n    }\n  }\n  onChangeTeamMemberIdAt = (index, value) => {\n    const teamMemberIds = [ ...this.state.teamMemberIds ];\n    teamMemberIds[index] = value;\n    this.setState({ teamMemberIds });\n  }\n  onClickTermsLink = e => {\n    e.preventDefault();\n    showPopUp(\n      <Terms\n        onClickConfirm={() => {\n          this.setState({ agreesToApply: true });\n        }}\n      />\n    );\n  }\n  onClickSubmit = () => {\n    if(this.isSubmitEnabled) {\n      if(this.isEditMode) {\n        this.updateAppliance(this.applianceId);\n      } else {\n        this.submitAppliance();\n      }\n    }\n  }\n  onClickComplete = () => {\n    this.props.history.push(\"/challenge/projectlist\");\n  }\n  \n  updateAppliance(id) {\n    const changed = this.getChanged(this.applianceOrigin ,this.appliance);\n    request\n      .updateCreatorChallenge(id, changed)\n      .then(res => res.json())\n      .then(result => {\n        if(result.success) {\n          this.setState({ isCompleted: true });\n        } else {\n          throw new Error(\"failed response\");\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.showError();\n      })\n  }\n  submitAppliance() {\n    request\n      .addCreatorChallenge(this.appliance)\n      .then(res => res.json())\n      .then(challenge => {\n        if(challenge.id) {\n          this.setState({ isCompleted: true });\n        } else {\n          throw new Error(\"failed response\");\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        this.showError();\n      })\n  }\n\n  get isSubmitEnabled() {\n    return (\n      this.state.agreesToApply\n      && this.getInvalidFields(this.appliance).length <= 0\n    );\n  }\n  getInvalidFields(appliance) {\n    const fields = [];\n    for(let field of this.requiredFields){\n      const value = appliance[field];\n      if(!value) {\n        fields.push(field);\n      }\n    }\n    return fields;\n  }\n  get requiredFields() {\n    const fields = [\n      \"productTitle\",\n      \"productDescription\",\n      \"teamName\",\n      \"teamDescription\",\n      \"applicantName\",\n      \"applicantOrganization\",\n      \"applicantEmail\",\n      \"applicantPhone\",\n      \"applicantBirth\",\n      \"userId\",\n      \"pId\"\n    ];\n\n    if(this.isAgentRequired) {\n      fields.push(\n        \"agentName\",\n        \"agentPhone\",\n        \"agentRelation\",\n      )\n    }\n\n    return fields;\n  }\n  get appliance() {\n    return {\n      productTitle: this.state.productTitle,\n      productDescription: this.state.productDescription,\n      teamName: this.state.teamName,\n      teamDescription: this.state.teamDescription,\n      teamMemberIds: this.stringifiedTeamMemberIds,\n      applicantName: this.state.applicantName,\n      applicantOrganization: this.state.applicantOrganization,\n      applicantEmail: this.state.applicantEmail,\n      applicantPhone: this.state.applicantPhone,\n      applicantBirth: this.state.applicantBirth.format(\"YYYY-MM-DD\"),\n      parentName: this.state.parentName,\n      parentPhone: this.state.parentPhone,\n      agentName: this.state.agentName,\n      agentPhone: this.state.agentPhone,\n      agentRelation: this.state.agentRelation,\n      userId: this.props.user.id,\n      pId: this.selectedPublished ? this.selectedPublished.pId : null\n    }\n  }\n  get stringifiedTeamMemberIds() {\n    const filtered = this.state.teamMemberIds.filter(teamMemberId => !!teamMemberId);\n    return JSON.stringify(filtered);\n  }\n  get selectedPublished() {\n    return this.state.publishedList[this.state.selectedPublishedIndex];\n  }\n\n  getChanged(from, to) {\n    let changed = {};\n    for(let key in to) {\n      if(to[key] !== from[key]) {\n        changed[key] = to[key];\n      }\n    }\n    return changed;\n  }\n\n  showError() {\n    showPopUp(\n      <PopUp.OneButton\n        title={this.props.intl.formatMessage({ id: \"ID_CHALLENGE_APPLY_SERVER_ERROR_TITLE\" })}\n        subtitle={this.props.intl.formatMessage({ id: \"ID_CHALLENGE_APPLY_SERVER_ERROR_SUBTITLE\" })}\n        buttonName={this.props.intl.formatMessage({ id: \"ID_CONFIRM\" })}\n      />\n    )\n  }\n\n  render() {\n    return (\n      <View\n        {...this.state}\n        publishedListRef={this.publishedListRef}\n        isEditMode={this.isEditMode}\n        isAgentRequired={this.isAgentRequired}\n        isSubmitEnabled={this.isSubmitEnabled}\n        onClickPublishedAt={this.onClickPublishedAt}\n        onChangeField={this.onChangeField}\n        onClickAddTeamMember={this.onClickAddTeamMember}\n        onChangeTeamMemberIdAt={this.onChangeTeamMemberIdAt}\n        onClickTermsLink={this.onClickTermsLink}\n        onClickSubmit={this.onClickSubmit}\n        onClickComplete={this.onClickComplete}\n      />\n    );\n  }\n}\nexport default connect(\n  state => ({\n    user: state.userinfo\n  })\n)(withRouter(injectIntl(Container)));\n"]},"metadata":{},"sourceType":"module"}