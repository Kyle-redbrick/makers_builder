{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Mypage/Components/Publish/View.js\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport heartIcon from \"../../../../Image/heart.svg\";\nimport commentIcon from \"../../../../Image/comment.svg\";\nimport badgeJsShadow from \"../../../../Image/dreamclass/badge-js-shadow@2x.png\";\nimport badgePuzzleShadow from \"../../../../Image/dreamclass/badge-oobc-shadow@2x.png\";\nimport \"./index.scss\";\nexport default function View(props) {\n  var intl = props.intl,\n      isMyPage = props.isMyPage,\n      publisheds = props.publisheds,\n      onClickPublishedSetting = props.onClickPublishedSetting,\n      handleProjectLive = props.handleProjectLive;\n  return React.createElement(\"div\", {\n    className: \"Publish\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_MYPAGE_TABTAPE_PUBLISH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), publisheds.length > 0 ? React.createElement(\"div\", {\n    className: \"Publish_GridContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, publisheds.map(function (published, index) {\n    return React.createElement(PublishItem, {\n      key: index,\n      isMyPage: isMyPage,\n      published: published,\n      onClickPublishedSetting: onClickPublishedSetting,\n      intl: intl,\n      handleProjectLive: handleProjectLive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  })) : React.createElement(\"div\", {\n    className: \"noPublish\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_MYPAGE_PUBLISH_NOTHING\"\n  })));\n}\n\nvar PublishItem = function PublishItem(props) {\n  var intl = props.intl,\n      published = props.published,\n      onClickPublishedSetting = props.onClickPublishedSetting,\n      isMyPage = props.isMyPage,\n      handleProjectLive = props.handleProjectLive;\n  var isLive = published.live;\n\n  var badgeIcon = function badgeIcon(type) {\n    switch (type) {\n      case \"javascript\":\n        return badgeJsShadow;\n\n      case \"oobc\":\n        return badgePuzzleShadow;\n\n      default:\n        break;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Publish_GridItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, published.live ? React.createElement(Link, {\n    className: \"Publish_GridItem-wrap Publish_GridItem--clickable--on\",\n    to: \"?pId=\".concat(published.pId),\n    style: {\n      textDecoration: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"Publish_GridItem-img\",\n    src: published.icon,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: \"typeIcon\",\n    src: badgeIcon('oobc'),\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"Publish_GridItem-wrap Publish_GridItem--clickable--off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"Publish_GridItem-img\",\n    src: published.icon,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: \"typeIcon\",\n    src: badgeIcon('oobc'),\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), !isMyPage && React.createElement(\"div\", {\n    className: \"Publish_GridItem_SubInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Publish_GridItem_SubInfo_Item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: heartIcon,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Publish_GridItem_SubInfo_Item-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, published.likeCount)), React.createElement(\"div\", {\n    className: \"Publish_GridItem_SubInfo_Item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: commentIcon,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Publish_GridItem_SubInfo_Item-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, published.commentCount))), React.createElement(\"div\", {\n    className: \"Publish_GridItem-title\",\n    style: isMyPage ? null : {\n      marginTop: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, published.name), isMyPage && React.createElement(\"div\", {\n    className: \"Publish_GridItem_Detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Publish_GridItem_Wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Publish_GridItem_Wrap-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, moment(published.createdAt).format(\"YYYY.MM.DD\"))), React.createElement(\"div\", {\n    className: \"Publish_GridItem_Bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Publish_GridItem_Live_Wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Publish_GridItem_Live_Toggle \".concat(isLive ? \"On\" : \"Off\"),\n    onClick: function onClick() {\n      return handleProjectLive(published);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"Publish_GridItem_Live_Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, isLive ? intl.formatMessage({\n    id: \"ID_MYPAGE_PROJECT_LIVE\"\n  }) : intl.formatMessage({\n    id: \"ID_MYPAGE_PROJECT_NOLIVE\"\n  }))), React.createElement(\"div\", {\n    className: \"Publish_GridItem_Edit\",\n    onClick: function onClick() {\n      onClickPublishedSetting(published);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_PUBLISH_ITEM_EDIT\"\n  })))));\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Mypage/Components/Publish/View.js"],"names":["React","FormattedMessage","Link","moment","badgeJsShadow","badgePuzzleShadow","View","props","intl","isMyPage","publisheds","onClickPublishedSetting","handleProjectLive","length","map","published","index","formatMessage","id","PublishItem","isLive","live","badgeIcon","type","pId","textDecoration","icon","heartIcon","likeCount","commentIcon","commentCount","marginTop","name","createdAt","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,MAEhCC,IAFgC,GAO9BD,KAP8B,CAEhCC,IAFgC;AAAA,MAGhCC,QAHgC,GAO9BF,KAP8B,CAGhCE,QAHgC;AAAA,MAIhCC,UAJgC,GAO9BH,KAP8B,CAIhCG,UAJgC;AAAA,MAKhCC,uBALgC,GAO9BJ,KAP8B,CAKhCI,uBALgC;AAAA,MAMhCC,iBANgC,GAO9BL,KAP8B,CAMhCK,iBANgC;AASlC,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADF,EAEGF,UAAU,CAACG,MAAX,GAAoB,CAApB,GACC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,CAACI,GAAX,CAAe,UAACC,SAAD,EAAYC,KAAZ;AAAA,WACd,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,QAAQ,EAAEP,QAFZ;AAGE,MAAA,SAAS,EAAEM,SAHb;AAIE,MAAA,uBAAuB,EAAEJ,uBAJ3B;AAKE,MAAA,IAAI,EAAEH,IALR;AAME,MAAA,iBAAiB,EAAEI,iBANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CADH,CADD,GAcC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACS,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CADH,CAhBJ,CADF;AAuBD;;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAZ,KAAK,EAAI;AAAA,MAEzBC,IAFyB,GAOvBD,KAPuB,CAEzBC,IAFyB;AAAA,MAGzBO,SAHyB,GAOvBR,KAPuB,CAGzBQ,SAHyB;AAAA,MAIzBJ,uBAJyB,GAOvBJ,KAPuB,CAIzBI,uBAJyB;AAAA,MAKzBF,QALyB,GAOvBF,KAPuB,CAKzBE,QALyB;AAAA,MAMzBG,iBANyB,GAOvBL,KAPuB,CAMzBK,iBANyB;AAQ3B,MAAMQ,MAAM,GAAGL,SAAS,CAACM,IAAzB;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AAC1B,YAAOA,IAAP;AACE,WAAK,YAAL;AACE,eAAOnB,aAAP;;AACF,WAAK,MAAL;AACE,eAAOC,iBAAP;;AACF;AACE;AANJ;AAQD,GATD;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,SAAS,CAACM,IAAV,GACC,oBAAC,IAAD;AACE,IAAA,SAAS,yDADX;AAEE,IAAA,EAAE,iBAAUN,SAAS,CAACS,GAApB,CAFJ;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,GAAG,EAAEV,SAAS,CAACW,IAFjB;AAGE,IAAA,GAAG,EAAC,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEJ,SAAS,CAAC,MAAD,CAAxC;AAAkD,IAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADD,GAcC;AACE,IAAA,SAAS,0DADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,GAAG,EAAEP,SAAS,CAACW,IAFjB;AAGE,IAAA,GAAG,EAAC,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAQE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAEJ,SAAS,CAAC,MAAD,CAAxC;AAAkD,IAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAfJ,EA2BG,CAACb,QAAD,IACC;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEkB,SAAV;AAAqB,IAAA,GAAG,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,SAAS,CAACa,SADb,CAFF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,WAAV;AAAuB,IAAA,GAAG,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,SAAS,CAACe,YADb,CAFF,CAPF,CA5BJ,EA2CE;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,KAAK,EAAErB,QAAQ,GAAG,IAAH,GAAU;AAAEsB,MAAAA,SAAS,EAAE;AAAb,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGhB,SAAS,CAACiB,IAJb,CA3CF,EAiDGvB,QAAQ,IACP;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACY,SAAS,CAACkB,SAAX,CAAN,CAA4BC,MAA5B,CAAmC,YAAnC,CADH,CADF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,yCAAkCd,MAAM,GAAG,IAAH,GAAU,KAAlD,CADX;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMR,iBAAiB,CAACG,SAAD,CAAvB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,MAAM,GACLZ,IAAI,CAACS,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CADK,GAELV,IAAI,CAACS,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAHJ,CAPF,CADF,EAgBE;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,OAAO,EAAE,mBAAM;AAACP,MAAAA,uBAAuB,CAACI,SAAD,CAAvB;AAAoC,KAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGP,IAAI,CAACS,aAAL,CAAmB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAnB,CAJH,CAhBF,CAPF,CAlDJ,CADF;AAqFD,CAxGD","sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport heartIcon from \"../../../../Image/heart.svg\";\nimport commentIcon from \"../../../../Image/comment.svg\";\nimport badgeJsShadow from \"../../../../Image/dreamclass/badge-js-shadow@2x.png\";\nimport badgePuzzleShadow from \"../../../../Image/dreamclass/badge-oobc-shadow@2x.png\";\nimport \"./index.scss\";\n\nexport default function View(props) {\n  const {\n    intl,\n    isMyPage,\n    publisheds,\n    onClickPublishedSetting,\n    handleProjectLive\n  } = props;\n  \n  return (\n    <div className=\"Publish\">\n      <p className=\"title\"><FormattedMessage id=\"ID_MYPAGE_TABTAPE_PUBLISH\" /></p>\n      {publisheds.length > 0 ? (\n        <div className=\"Publish_GridContainer\">\n          {publisheds.map((published, index) => (\n            <PublishItem\n              key={index}\n              isMyPage={isMyPage}\n              published={published}\n              onClickPublishedSetting={onClickPublishedSetting}\n              intl={intl}\n              handleProjectLive={handleProjectLive}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"noPublish\">\n          {intl.formatMessage({ id: \"ID_MYPAGE_PUBLISH_NOTHING\" })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst PublishItem = props => {\n  const {\n    intl,\n    published,\n    onClickPublishedSetting,\n    isMyPage,\n    handleProjectLive\n  } = props;\n  const isLive = published.live;\n  const badgeIcon = (type) => {\n    switch(type) {\n      case \"javascript\":\n        return badgeJsShadow;\n      case \"oobc\":\n        return badgePuzzleShadow;\n      default:\n        break;\n    }\n  };\n  return (\n    <div className=\"Publish_GridItem\">\n      {published.live ? (\n        <Link\n          className={`Publish_GridItem-wrap Publish_GridItem--clickable--on`}\n          to={`?pId=${published.pId}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <img\n            className=\"Publish_GridItem-img\"\n            src={published.icon}\n            alt=\"img\"\n          />\n          <img className=\"typeIcon\" src={badgeIcon('oobc')} alt=\"\" />\n        </Link>\n      ) : (\n        <div\n          className={`Publish_GridItem-wrap Publish_GridItem--clickable--off`}\n        >\n          <img\n            className=\"Publish_GridItem-img\"\n            src={published.icon}\n            alt=\"img\"\n          />\n          <img className=\"typeIcon\" src={badgeIcon('oobc')} alt=\"\" />\n        </div>\n      )}\n\n      {!isMyPage && (\n        <div className=\"Publish_GridItem_SubInfo\">\n          <div className=\"Publish_GridItem_SubInfo_Item\">\n            <img src={heartIcon} alt=\"img\" />\n            <div className=\"Publish_GridItem_SubInfo_Item-text\">\n              {published.likeCount}\n            </div>\n          </div>\n          <div className=\"Publish_GridItem_SubInfo_Item\">\n            <img src={commentIcon} alt=\"img\" />\n            <div className=\"Publish_GridItem_SubInfo_Item-text\">\n              {published.commentCount}\n            </div>\n          </div>\n        </div>\n      )}\n      <div\n        className=\"Publish_GridItem-title\"\n        style={isMyPage ? null : { marginTop: \"15px\" }}\n      >\n        {published.name}\n      </div>\n      {isMyPage && (\n        <div className=\"Publish_GridItem_Detail\">\n          <div className=\"Publish_GridItem_Wrap\">\n            <div className=\"Publish_GridItem_Wrap-date\">\n              {moment(published.createdAt).format(\"YYYY.MM.DD\")}\n            </div>\n          </div>\n\n          <div className=\"Publish_GridItem_Bottom\">\n            <div className=\"Publish_GridItem_Live_Wrapper\">\n              <div\n                className={`Publish_GridItem_Live_Toggle ${isLive ? \"On\" : \"Off\"}`}\n                onClick={() => handleProjectLive(published)}\n              >\n                <span/>\n              </div>\n              <p className=\"Publish_GridItem_Live_Text\">\n                {isLive ?\n                  intl.formatMessage({ id: \"ID_MYPAGE_PROJECT_LIVE\" }) :\n                  intl.formatMessage({ id: \"ID_MYPAGE_PROJECT_NOLIVE\" })\n                }\n              </p>\n            </div>\n\n            <div \n              className=\"Publish_GridItem_Edit\"\n              onClick={() => {onClickPublishedSetting(published);}}\n            >\n              {intl.formatMessage({ id: \"ID_PUBLISH_ITEM_EDIT\" })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}