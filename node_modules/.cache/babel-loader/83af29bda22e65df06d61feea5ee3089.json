{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/FindPwResult/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../Util/HTTPRequest\";\nimport \"./index.scss\";\n\nvar FindPw = /*#__PURE__*/function (_Component) {\n  _inherits(FindPw, _Component);\n\n  var _super = _createSuper(FindPw);\n\n  function FindPw(props) {\n    var _this;\n\n    _classCallCheck(this, FindPw);\n\n    _this = _super.call(this, props);\n\n    _this.onClickResend = function () {\n      var _this$props = _this.props,\n          email = _this$props.email,\n          verifiedEmail = _this$props.verifiedEmail;\n      request.sendEmailResetPwd({\n        email: email,\n        verifiedEmail: verifiedEmail\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var success = json.success,\n            statusCode = json.statusCode;\n\n        if (success) {\n          _this.setState({\n            resend: true,\n            warning: \"\"\n          });\n        } else {\n          if (statusCode === 404) {\n            _this.setState({\n              resend: false,\n              warning: _this.props.intl.formatMessage({\n                id: \"ID_VALIDATE_EMAIL_NOT_EXIST\"\n              })\n            });\n          } else {\n            _this.setState({\n              resend: false,\n              warning: _this.props.intl.formatMessage({\n                id: \"ID_REPORT_POPUP_FAIL_MSG\"\n              })\n            });\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      resend: false,\n      warning: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(FindPw, [{\n    key: \"render\",\n    value: function render() {\n      var formatMessage = this.props.intl.formatMessage;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"findpw-result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"findpw-result__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, formatMessage({\n        id: \"ID_FORGOTPW_RESULT\"\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"findpw-result__desc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"ID_FIND_PW_RESULT_DESC\",\n        values: {\n          verifiedEmail: this.props.verifiedEmail\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"findpw-result__button\",\n        onClick: this.onClickResend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"findpw-result__button-send-mail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, formatMessage({\n        id: \"ID_FIND_PW_SEND_EMAIL_RETRY\"\n      })), this.state.resend ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"findpw-result__button-retry-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, formatMessage({\n        id: \"ID_FIND_PW_SEND_EMAIL_RETRY_DESC\"\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"findpw-result__button-retry-fail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, this.state.warning)));\n    }\n  }]);\n\n  return FindPw;\n}(Component);\n\nexport default injectIntl(FindPw);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/FindPwResult/index.js"],"names":["React","Component","FormattedMessage","injectIntl","request","FindPw","props","onClickResend","email","verifiedEmail","sendEmailResetPwd","then","res","json","success","statusCode","setState","resend","warning","intl","formatMessage","id","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { injectIntl } from \"react-intl\";\nimport * as request from \"../../Util/HTTPRequest\";\nimport \"./index.scss\";\n\nclass FindPw extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { resend : false, warning : \"\"  }\n  }\n\n  onClickResend = () => {\n    const { email, verifiedEmail } = this.props\n    request\n    .sendEmailResetPwd({ email: email , verifiedEmail: verifiedEmail })\n    .then(res => res.json())\n    .then(json => {\n      const {success , statusCode} = json\n      if(success) {\n        this.setState({resend : true, warning: \"\"})\n      } else {\n        if(statusCode === 404) {\n          this.setState({ resend: false, warning: this.props.intl.formatMessage({ id: \"ID_VALIDATE_EMAIL_NOT_EXIST\" }) });\n        } else {\n          this.setState({ resend: false, warning: this.props.intl.formatMessage({ id: \"ID_REPORT_POPUP_FAIL_MSG\" }) });\n        }\n      }\n    })\n  }\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    return (\n      <div className=\"findpw-result\">\n        <div className=\"findpw-result__title\">\n          {formatMessage({ id: \"ID_FORGOTPW_RESULT\" })}\n        </div>\n        <div className=\"findpw-result__desc\"> \n          <FormattedMessage id=\"ID_FIND_PW_RESULT_DESC\" values={{verifiedEmail: this.props.verifiedEmail}} />\n        </div>\n        <div className=\"findpw-result__button\" onClick={this.onClickResend}>\n          <button className=\"findpw-result__button-send-mail\">\n            {formatMessage({ id: \"ID_FIND_PW_SEND_EMAIL_RETRY\" })}\n          </button>\n          {\n            this.state.resend \n            ? <div className=\"findpw-result__button-retry-success\">{formatMessage({ id: \"ID_FIND_PW_SEND_EMAIL_RETRY_DESC\" })}</div>\n            : <div className=\"findpw-result__button-retry-fail\">{this.state.warning}</div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(FindPw);\n"]},"metadata":{},"sourceType":"module"}