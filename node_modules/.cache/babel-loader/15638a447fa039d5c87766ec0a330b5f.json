{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/WizAppDetail/Component/Game/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport \"./index.scss\";\nimport * as request from \"../../../../Util/HTTPRequest\";\nimport GameRanking from \"../../../GameRanking\";\nimport { connect } from \"react-redux\";\nimport { detectIE } from \"../../../../Util/detectBrowser\";\nimport { FormattedMessage } from \"react-intl\";\nimport chromeBtnImage from \"../../../../../Image/chrome-download.png\";\nimport FullBtnImage from \"../../../../../Image/dreamclass/play-full-screen-icon.svg\";\nimport MinimizeBtnImage from \"../../../../../Image/dreamclass/minimize-screen.svg\";\nimport { getGuestId } from \"../../../../../Common/Util/GuestIdUtil\";\n\nvar GameContainer = /*#__PURE__*/function (_Component) {\n  _inherits(GameContainer, _Component);\n\n  var _super = _createSuper(GameContainer);\n\n  function GameContainer(props) {\n    var _this;\n\n    _classCallCheck(this, GameContainer);\n\n    _this = _super.call(this, props);\n\n    _this.getProject = function () {// const pId = this.props.pId;\n      // request\n      //   .getPublishedProject({ pId })\n      //   .then(res => res.json())\n      //   .then(async json => {\n      //     if (json.url) {\n      //       this.setState({ gameURL: json.url });\n      //     }\n      //   });\n    };\n\n    _this.handleScreenClick = function (e) {\n      e.stopPropagation();\n\n      if (_this.iframeRef) {\n        _this.iframeRef.contentWindow.focus();\n\n        _this.setState({\n          iframeFocused: true\n        });\n      }\n    };\n\n    _this.handleWindowFocus = function () {\n      _this.setState({\n        iframeFocused: false\n      });\n    };\n\n    _this.gameEventHandler = function (event) {\n      if (event.data.source) {\n        if (event.data.source === \"wizlab\") {\n          if (event.data.type === \"gameEvent\") {\n            var _JSON$parse = JSON.parse(event.data.message),\n                type = _JSON$parse.type,\n                data = _JSON$parse.data;\n\n            switch (type) {\n              case \"showRanking\":\n                _this.handleRankingShow(false);\n\n                break;\n\n              case \"showRankingAscending\":\n                _this.handleRankingShow(true);\n\n                break;\n\n              case \"hideRanking\":\n                _this.handleRankingHide();\n\n                break;\n\n              case \"saveScore\":\n                _this.saveScore(data);\n\n                break;\n\n              case \"saveGameData\":\n                _this.saveGameData(data);\n\n                break;\n\n              case \"resetGameData\":\n                _this.resetGameData();\n\n                break;\n\n              case \"loadGameData\":\n                _this.loadGameData();\n\n                break;\n\n              default:\n            }\n          }\n        }\n      }\n    };\n\n    _this.sendMessageToIframe = function (data) {\n      document.getElementById(\"wizlab__Iframe\").contentWindow.postMessage({\n        message: JSON.stringify(data),\n        source: \"wizlab\",\n        type: \"gameData\"\n      }, \"*\");\n    };\n\n    _this.saveGameData = function (data) {\n      var params = _this.getGameDataDefaultParams();\n\n      params.data = data;\n      request.saveGameData(params).then(function () {\n        _this.sendMessageToIframe({\n          type: \"onSaveGameData\"\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.resetGameData = function () {\n      var params = _this.getGameDataDefaultParams();\n\n      params.data = \"{}\";\n      request.saveGameData(params).then(function () {\n        _this.sendMessageToIframe({\n          type: \"onResetGameData\"\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.loadGameData = function () {\n      var params = _this.getGameDataDefaultParams();\n\n      request.loadGameData(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this.sendMessageToIframe({\n          type: \"onLoadGameData\",\n          data: json.data\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.handleRankingShow = function (isAsc) {\n      _this.setState({\n        isRankingVisible: true,\n        isAsc: isAsc\n      }, function () {\n        _this.iframeRef.blur();\n\n        _this.screenRef.focus(); // console.log(\"after ranking show\", document.activeElement);\n\n      });\n    };\n\n    _this.handleRankingHide = function () {\n      _this.setState({\n        isRankingVisible: false\n      }, function () {\n        _this.iframeRef.contentWindow.focus(); // console.log(\"after ranking hide\", document.activeElement);\n\n      });\n    };\n\n    _this.saveScore = function (score) {\n      if (_this.saveTimer) {\n        clearTimeout(_this.saveTimer);\n      }\n\n      _this.saveTimer = setTimeout(function () {\n        var pId = _this.props.pId;\n        var params = {\n          pId: pId,\n          score: score\n        };\n        var rankingId;\n\n        if (_this.props.email) {\n          rankingId = _this.props.email;\n          params.email = rankingId;\n        } else {\n          rankingId = getGuestId();\n          params.guestId = rankingId;\n        }\n\n        request.saveScore(params).then(function (res) {\n          return res.json();\n        }).then(function (json) {// console.log(json)\n        }).catch(function (err) {\n          return console.error(err);\n        });\n      }, 100);\n    };\n\n    _this.handlePlayBtn = function () {\n      _this.setState(function (state) {\n        return {\n          isPlaying: !state.isPlaying\n        };\n      });\n    };\n\n    _this.handleFullBtn = function (e) {\n      e.stopPropagation();\n\n      _this.setState(function (state) {\n        return {\n          isFullScreen: !state.isFullScreen\n        };\n      });\n    };\n\n    _this.getScreenRatio = function () {\n      var screenMode = _this.props.screenMode;\n      var screenRatio = {};\n\n      switch (screenMode) {\n        case \"VERTICAL\":\n          screenRatio.w = 9;\n          screenRatio.h = 16;\n          break;\n\n        case \"HORIZONTAL\":\n        default:\n          screenRatio.w = 16;\n          screenRatio.h = 9;\n          break;\n      }\n\n      return screenRatio;\n    };\n\n    _this.onFullScreenResize = function () {\n      if (_this.iframeRef) {\n        _this.iframeRef.contentWindow.focus();\n      }\n\n      var _this$state = _this.state,\n          btnGroupHeight = _this$state.btnGroupHeight,\n          blankPadding = _this$state.blankPadding;\n\n      var screenRatio = _this.getScreenRatio();\n\n      var windowRatio = {};\n      windowRatio.w = window.innerWidth || document.body.clientWidth;\n      windowRatio.h = window.innerHeight || document.body.clientHeight;\n      windowRatio.h -= btnGroupHeight;\n      var compareResult = windowRatio.w / windowRatio.h > screenRatio.w / screenRatio.h;\n      var nextBlankPadding;\n      if (compareResult) nextBlankPadding = \"LR\";else nextBlankPadding = \"TB\";\n\n      if (blankPadding !== nextBlankPadding) {\n        _this.setState({\n          blankPadding: nextBlankPadding\n        });\n      }\n    };\n\n    _this.getGamePage = function () {\n      var gameURL = _this.state.gameURL;\n\n      if (gameURL) {\n        return React.createElement(\"iframe\", {\n          // sandbox=\"allow-scripts allow-same-origin\"\n          id: \"wizlab__Iframe\",\n          ref: _this.setIframeRef,\n          title: \"wizlab\",\n          src: gameURL,\n          scrolling: \"no\",\n          frameBorder: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"GameScreen--progress\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"GameScreen--progress__left rotate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"GameScreen--progress__right rotate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        })));\n      }\n    };\n\n    _this.setWizAppDetailZIndexTo = function (position) {\n      var wizAppDetailElement = document.getElementById(\"wizappDetail\");\n      if (wizAppDetailElement) wizAppDetailElement.style.zIndex = position === \"front\" ? 11 : 10;\n    };\n\n    _this.isIE = detectIE();\n    _this.screenRef = null;\n\n    _this.setScreenRef = function (elem) {\n      _this.screenRef = elem;\n    };\n\n    _this.iframeRef = null;\n\n    _this.setIframeRef = function (elem) {\n      _this.iframeRef = elem;\n    };\n\n    _this.state = {\n      iframeFocused: true,\n      isPlaying: false,\n      isFullScreen: false,\n      blankPadding: \"LR\",\n      btnGroupHeight: 38,\n      isRankingVisible: false,\n      isASC: false,\n      gameURL: props.project ? props.project.url : undefined\n    };\n    return _this;\n  }\n\n  _createClass(GameContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"focus\", this.handleWindowFocus);\n      window.addEventListener(\"message\", this.gameEventHandler, false);\n      this.getProject();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var isFullScreen = this.state.isFullScreen;\n\n      if (isFullScreen !== prevState.isFullScreen) {\n        if (isFullScreen) {\n          this.onFullScreenResize();\n          window.addEventListener(\"resize\", this.onFullScreenResize);\n        } else {\n          window.removeEventListener(\"resize\", this.onFullScreenResize);\n        }\n\n        var isMobile = window.innerWidth < 1080;\n\n        if (isMobile) {\n          this.setWizAppDetailZIndexTo(isFullScreen ? \"front\" : \"back\");\n        }\n      }\n\n      if (prevProps.pId !== this.props.pId) {\n        this.getProject();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"message\", this.gameEventHandler);\n      window.removeEventListener(\"focus\", this.handleWindowFocus);\n    }\n  }, {\n    key: \"getGameDataDefaultParams\",\n    value: function getGameDataDefaultParams() {\n      var params = {\n        pId: this.props.pId\n      };\n\n      if (this.props.email) {\n        params.email = this.props.email;\n      } else {\n        params.guestId = getGuestId();\n      }\n\n      return params;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          isFullScreen = _this$state2.isFullScreen,\n          blankPadding = _this$state2.blankPadding,\n          isRankingVisible = _this$state2.isRankingVisible,\n          iframeFocused = _this$state2.iframeFocused,\n          isAsc = _this$state2.isAsc;\n      var _this$props = this.props,\n          screenMode = _this$props.screenMode,\n          pId = _this$props.pId;\n      var fullToggle = isFullScreen ? \"FULL\" : \"NOFULL\";\n      var direction = screenMode === \"VERTICAL\" ? \"VERT\" : \"HORI\";\n      var rankingToggle = isRankingVisible ? \"on\" : \"off\";\n      return React.createElement(\"div\", {\n        className: \"DetailGameContainer DetailGameContainer--\".concat(fullToggle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, isFullScreen && React.createElement(\"div\", {\n        className: \"DetailGameContainer__overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"GameLayout GameLayout--\".concat(fullToggle, \"--\").concat(direction, \"--\").concat(blankPadding),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, this.isIE ? React.createElement(\"div\", {\n        className: \"BlockedNoti\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"BlockedNoti__inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"BlockedNoti__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ID_BROWSER_BLOCK_TEXT1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"BlockedNoti__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ID_BROWSER_BLOCK_TEXT2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      })), React.createElement(\"a\", {\n        href: \"https://www.google.com/chrome/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"BlockedNoti__chromeBtn\",\n        src: chromeBtnImage,\n        alt: \"download-chrome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      })))) : React.createElement(\"div\", {\n        className: \"GameScreen\",\n        ref: this.setScreenRef,\n        onClick: this.handleScreenClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, !iframeFocused && React.createElement(\"div\", {\n        className: \"GameScreen__block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), this.getGamePage(), React.createElement(\"div\", {\n        className: \"GameScreen__ranking--\".concat(rankingToggle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, isRankingVisible && React.createElement(GameRanking, {\n        isAsc: isAsc,\n        pId: pId,\n        handleRankingHide: this.handleRankingHide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"GameBtnGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"FullBtn\",\n        onClick: this.handleFullBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"FullBtn__img\",\n        src: isFullScreen ? MinimizeBtnImage : FullBtnImage,\n        alt: \"full-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return GameContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    email: state.userinfo.email\n  };\n}, {})(GameContainer);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/WizAppDetail/Component/Game/index.js"],"names":["React","Component","request","GameRanking","connect","detectIE","FormattedMessage","chromeBtnImage","getGuestId","GameContainer","props","getProject","handleScreenClick","e","stopPropagation","iframeRef","contentWindow","focus","setState","iframeFocused","handleWindowFocus","gameEventHandler","event","data","source","type","JSON","parse","message","handleRankingShow","handleRankingHide","saveScore","saveGameData","resetGameData","loadGameData","sendMessageToIframe","document","getElementById","postMessage","stringify","params","getGameDataDefaultParams","then","catch","err","console","error","res","json","isAsc","isRankingVisible","blur","screenRef","score","saveTimer","clearTimeout","setTimeout","pId","rankingId","email","guestId","handlePlayBtn","state","isPlaying","handleFullBtn","isFullScreen","getScreenRatio","screenMode","screenRatio","w","h","onFullScreenResize","btnGroupHeight","blankPadding","windowRatio","window","innerWidth","body","clientWidth","innerHeight","clientHeight","compareResult","nextBlankPadding","getGamePage","gameURL","setIframeRef","setWizAppDetailZIndexTo","position","wizAppDetailElement","style","zIndex","isIE","setScreenRef","elem","isASC","project","url","undefined","addEventListener","prevProps","prevState","removeEventListener","isMobile","fullToggle","direction","rankingToggle","MinimizeBtnImage","FullBtnImage","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.scss\";\nimport * as request from \"../../../../Util/HTTPRequest\";\nimport GameRanking from \"../../../GameRanking\";\nimport { connect } from \"react-redux\";\nimport { detectIE } from \"../../../../Util/detectBrowser\";\nimport { FormattedMessage } from \"react-intl\";\nimport chromeBtnImage from \"../../../../../Image/chrome-download.png\";\nimport FullBtnImage from \"../../../../../Image/dreamclass/play-full-screen-icon.svg\";\nimport MinimizeBtnImage from \"../../../../../Image/dreamclass/minimize-screen.svg\";\nimport { getGuestId } from \"../../../../../Common/Util/GuestIdUtil\";\n\nclass GameContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.isIE = detectIE();\n    this.screenRef = null;\n    this.setScreenRef = elem => {\n      this.screenRef = elem;\n    };\n    this.iframeRef = null;\n    this.setIframeRef = elem => {\n      this.iframeRef = elem;\n    };\n\n    this.state = {\n      iframeFocused: true,\n      isPlaying: false,\n      isFullScreen: false,\n      blankPadding: \"LR\",\n      btnGroupHeight: 38,\n      isRankingVisible: false,\n      isASC: false,\n      gameURL: props.project ? props.project.url : undefined\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"focus\", this.handleWindowFocus);\n    window.addEventListener(\"message\", this.gameEventHandler, false);\n    this.getProject();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let { isFullScreen } = this.state;\n    if (isFullScreen !== prevState.isFullScreen) {\n      if (isFullScreen) {\n        this.onFullScreenResize();\n        window.addEventListener(\"resize\", this.onFullScreenResize);\n      } else {\n        window.removeEventListener(\"resize\", this.onFullScreenResize);\n      }\n      const isMobile = window.innerWidth < 1080;\n      if (isMobile) {\n        this.setWizAppDetailZIndexTo(isFullScreen ? \"front\" : \"back\");\n      }\n    }\n    if (prevProps.pId !== this.props.pId) {\n      this.getProject();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"message\", this.gameEventHandler);\n    window.removeEventListener(\"focus\", this.handleWindowFocus);\n  }\n\n  getProject = () => {\n    // const pId = this.props.pId;\n    // request\n    //   .getPublishedProject({ pId })\n    //   .then(res => res.json())\n    //   .then(async json => {\n    //     if (json.url) {\n    //       this.setState({ gameURL: json.url });\n    //     }\n    //   });\n  };\n\n  handleScreenClick = e => {\n    e.stopPropagation();\n    if (this.iframeRef) {\n      this.iframeRef.contentWindow.focus();\n      this.setState({\n        iframeFocused: true\n      });\n    }\n  };\n  handleWindowFocus = () => {\n    this.setState({\n      iframeFocused: false\n    });\n  };\n\n  gameEventHandler = event => {\n    if (event.data.source) {\n      if (event.data.source === \"wizlab\") {\n        if (event.data.type === \"gameEvent\") {\n          const { type, data } = JSON.parse(event.data.message);\n          switch (type) {\n            case \"showRanking\":\n              this.handleRankingShow(false);\n              break;\n            case \"showRankingAscending\":\n              this.handleRankingShow(true);\n              break;\n            case \"hideRanking\":\n              this.handleRankingHide();\n              break;\n            case \"saveScore\":\n              this.saveScore(data);\n              break;\n            case \"saveGameData\":\n              this.saveGameData(data);\n              break;\n            case \"resetGameData\":\n              this.resetGameData();\n              break;\n            case \"loadGameData\":\n              this.loadGameData();\n              break;\n            default:\n          }\n        }\n      }\n    }\n  };\n\n  getGameDataDefaultParams() {\n    let params = { pId: this.props.pId };\n    if (this.props.email) {\n      params.email = this.props.email;\n    } else {\n      params.guestId = getGuestId();\n    }\n    return params;\n  }\n\n  sendMessageToIframe = data => {\n    document\n      .getElementById(\"wizlab__Iframe\")\n      .contentWindow.postMessage(\n        { message: JSON.stringify(data), source: \"wizlab\", type: \"gameData\" },\n        \"*\"\n      );\n  };\n\n  saveGameData = data => {\n    const params = this.getGameDataDefaultParams();\n    params.data = data;\n    request\n      .saveGameData(params)\n      .then(() => {\n        this.sendMessageToIframe({ type: \"onSaveGameData\" });\n      })\n      .catch(err => console.error(err));\n  };\n\n  resetGameData = () => {\n    const params = this.getGameDataDefaultParams();\n    params.data = \"{}\";\n    request\n      .saveGameData(params)\n      .then(() => {\n        this.sendMessageToIframe({ type: \"onResetGameData\" });\n      })\n      .catch(err => console.error(err));\n  };\n\n  loadGameData = () => {\n    const params = this.getGameDataDefaultParams();\n    request\n      .loadGameData(params)\n      .then(res => res.json())\n      .then(json => {\n        this.sendMessageToIframe({ type: \"onLoadGameData\", data: json.data });\n      })\n      .catch(err => console.error(err));\n  };\n\n  handleRankingShow = isAsc => {\n    this.setState({ isRankingVisible: true, isAsc: isAsc }, () => {\n      this.iframeRef.blur();\n      this.screenRef.focus();\n      // console.log(\"after ranking show\", document.activeElement);\n    });\n  };\n\n  handleRankingHide = () => {\n    this.setState({ isRankingVisible: false }, () => {\n      this.iframeRef.contentWindow.focus();\n      // console.log(\"after ranking hide\", document.activeElement);\n    });\n  };\n\n  saveScore = score => {\n    if (this.saveTimer) {\n      clearTimeout(this.saveTimer);\n    }\n\n    this.saveTimer = setTimeout(() => {\n      const { pId } = this.props;\n      let params = {\n        pId: pId,\n        score: score\n      };\n      let rankingId;\n      if (this.props.email) {\n        rankingId = this.props.email;\n        params.email = rankingId;\n      } else {\n        rankingId = getGuestId();\n        params.guestId = rankingId;\n      }\n\n      request\n        .saveScore(params)\n        .then(res => res.json())\n        .then(json => {\n          // console.log(json)\n        })\n        .catch(err => console.error(err));\n    }, 100);\n  };\n\n  handlePlayBtn = () => {\n    this.setState(state => ({\n      isPlaying: !state.isPlaying\n    }));\n  };\n\n  handleFullBtn = e => {\n    e.stopPropagation();\n    this.setState(state => ({\n      isFullScreen: !state.isFullScreen\n    }));\n  };\n\n  getScreenRatio = () => {\n    let { screenMode } = this.props;\n    let screenRatio = {};\n    switch (screenMode) {\n      case \"VERTICAL\":\n        screenRatio.w = 9;\n        screenRatio.h = 16;\n        break;\n      case \"HORIZONTAL\":\n      default:\n        screenRatio.w = 16;\n        screenRatio.h = 9;\n        break;\n    }\n    return screenRatio;\n  };\n\n  onFullScreenResize = () => {\n    if (this.iframeRef) {\n      this.iframeRef.contentWindow.focus();\n    }\n    const { btnGroupHeight, blankPadding } = this.state;\n    const screenRatio = this.getScreenRatio();\n    const windowRatio = {};\n    windowRatio.w = window.innerWidth || document.body.clientWidth;\n    windowRatio.h = window.innerHeight || document.body.clientHeight;\n    windowRatio.h -= btnGroupHeight;\n\n    const compareResult =\n      windowRatio.w / windowRatio.h > screenRatio.w / screenRatio.h;\n    let nextBlankPadding;\n    if (compareResult) nextBlankPadding = \"LR\";\n    else nextBlankPadding = \"TB\";\n    if (blankPadding !== nextBlankPadding) {\n      this.setState({ blankPadding: nextBlankPadding });\n    }\n  };\n\n  getGamePage = () => {\n    const { gameURL } = this.state;\n    if (gameURL) {\n      return (\n        <iframe\n          // sandbox=\"allow-scripts allow-same-origin\"\n          id=\"wizlab__Iframe\"\n          ref={this.setIframeRef}\n          title=\"wizlab\"\n          src={gameURL}\n          scrolling=\"no\"\n          frameBorder=\"0\"\n        />\n      );\n    } else {\n      return (\n        <div className=\"GameScreen--progress\">\n          <div className=\"GameScreen--progress__left rotate\">\n            <span />\n          </div>\n          <div className=\"GameScreen--progress__right rotate\">\n            <span />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  setWizAppDetailZIndexTo = position => {\n    const wizAppDetailElement = document.getElementById(\"wizappDetail\");\n    if (wizAppDetailElement)\n      wizAppDetailElement.style.zIndex = position === \"front\" ? 11 : 10;\n  };\n\n  render() {\n    const {\n      isFullScreen,\n      blankPadding,\n      isRankingVisible,\n      iframeFocused,\n      isAsc\n    } = this.state;\n    const { screenMode, pId } = this.props;\n    const fullToggle = isFullScreen ? \"FULL\" : \"NOFULL\";\n    const direction = screenMode === \"VERTICAL\" ? \"VERT\" : \"HORI\";\n    let rankingToggle = isRankingVisible ? \"on\" : \"off\";\n    return (\n      <div className={`DetailGameContainer DetailGameContainer--${fullToggle}`}>\n        {isFullScreen && <div className=\"DetailGameContainer__overlay\" />}\n        <div\n          className={`GameLayout GameLayout--${fullToggle}--${direction}--${blankPadding}`}\n        >\n          {this.isIE ? (\n            <div className=\"BlockedNoti\">\n              <div className=\"BlockedNoti__inner\">\n                <p className=\"BlockedNoti__text\">\n                  <FormattedMessage id=\"ID_BROWSER_BLOCK_TEXT1\" />\n                </p>\n                <p className=\"BlockedNoti__text\">\n                  <FormattedMessage id=\"ID_BROWSER_BLOCK_TEXT2\" />\n                </p>\n                <a\n                  href={\"https://www.google.com/chrome/\"}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    className=\"BlockedNoti__chromeBtn\"\n                    src={chromeBtnImage}\n                    alt=\"download-chrome\"\n                  />\n                </a>\n              </div>\n            </div>\n          ) : (\n            <div\n              className=\"GameScreen\"\n              ref={this.setScreenRef}\n              onClick={this.handleScreenClick}\n            >\n              {!iframeFocused && <div className=\"GameScreen__block\" />}\n              {this.getGamePage()}\n              <div className={`GameScreen__ranking--${rankingToggle}`}>\n                {isRankingVisible && (\n                  <GameRanking\n                    isAsc={isAsc}\n                    pId={pId}\n                    handleRankingHide={this.handleRankingHide}\n                  />\n                )}\n              </div>\n            </div>\n          )}\n\n          <div className=\"GameBtnGroup\">\n            <div className=\"FullBtn\" onClick={this.handleFullBtn}>\n              <img className=\"FullBtn__img\" src={isFullScreen ? MinimizeBtnImage : FullBtnImage} alt=\"full-btn\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default connect(\n  state => ({\n    email: state.userinfo.email\n  }),\n  {}\n)(GameContainer);\n"]},"metadata":{},"sourceType":"module"}