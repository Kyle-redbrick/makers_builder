{"ast":null,"code":"import _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/Project/Container.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { PAGETYPE } from \"../../../../Common/Util/Constant\";\nimport generatePID from \"../../../../Common/Util/PIDGenerator\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport View from \"./View\";\n\nfunction Container(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      templateProjects = _useState2[0],\n      setTemplateProjects = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myProjects = _useState4[0],\n      setMyProjects = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var projectsRef = useRef();\n  var PAGE_SIZE = 50;\n  useEffect(function () {\n    getMyProjects();\n\n    if (templateProjects.length === 0) {\n      getTemplateProjects();\n    }\n  }, [props.email, currentPage]);\n\n  var getMyProjects = function getMyProjects() {\n    if (!props.email) {\n      return;\n    }\n\n    var pageOffset = Math.ceil((currentPage - 1) * PAGE_SIZE);\n    var params = {\n      email: props.email,\n      offset: pageOffset,\n      limit: PAGE_SIZE,\n      type: \"js3d\"\n    };\n    request.getDevelopingProjectsByType(params).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      var rows = result.rows;\n      setMyProjects(currentPage === 1 ? rows : myProjects.concat(rows));\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n\n  var getTemplateProjects = function getTemplateProjects() {\n    request.getTemplateProjectsByType({\n      type: \"js3d\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setTemplateProjects(json);\n    }).catch(function (e) {\n      console.error(e);\n    });\n  };\n\n  var createNewProject = function createNewProject(template) {\n    var email = props.email,\n        history = props.history;\n\n    if (email) {\n      var pageURL = \"/\".concat(PAGETYPE.BUILDER3D, \"/\").concat(generatePID(email));\n\n      if (template) {\n        pageURL += \"/\".concat(template.id);\n      }\n\n      history.replace({\n        pathname: pageURL\n      });\n      window.location.reload();\n    } else {\n      var _pageURL = \"/\".concat(PAGETYPE.BUILDER3D, \"?t=\").concat(template.id);\n\n      history.replace({\n        pathname: _pageURL\n      });\n      window.location.reload();\n    }\n  };\n\n  var loadProject = function loadProject(pId) {\n    props.history.replace({\n      pathname: \"/\".concat(PAGETYPE.BUILDER3D, \"/\").concat(pId)\n    });\n    window.location.reload();\n  };\n\n  var handleOnScroll = function handleOnScroll() {\n    var container = projectsRef.current;\n\n    if (container.offsetHeight + container.scrollTop >= container.scrollHeight) {\n      loadMore();\n    }\n  };\n\n  var loadMore = function loadMore() {\n    setCurrentPage(currentPage + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(View, {\n    email: props.email,\n    templateProjects: templateProjects,\n    myProjects: myProjects,\n    loadProject: loadProject,\n    createNewProject: createNewProject,\n    handleOnScroll: handleOnScroll,\n    projectsRef: projectsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default connect(function (state) {\n  return {\n    email: state.userinfo.email,\n    userId: state.userinfo.id\n  };\n})(injectIntl(withRouter(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/Project/Container.js"],"names":["React","useState","useEffect","useRef","connect","injectIntl","withRouter","PAGETYPE","generatePID","request","View","Container","props","templateProjects","setTemplateProjects","myProjects","setMyProjects","currentPage","setCurrentPage","projectsRef","PAGE_SIZE","getMyProjects","length","getTemplateProjects","email","pageOffset","Math","ceil","params","offset","limit","type","getDevelopingProjectsByType","then","res","json","result","rows","concat","catch","err","console","error","getTemplateProjectsByType","e","createNewProject","template","history","pageURL","BUILDER3D","id","replace","pathname","window","location","reload","loadProject","pId","handleOnScroll","container","current","offsetHeight","scrollTop","scrollHeight","loadMore","state","userinfo","userId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { PAGETYPE } from \"../../../../Common/Util/Constant\";\nimport generatePID from \"../../../../Common/Util/PIDGenerator\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport View from \"./View\";\n\nfunction Container(props) {\n  const [templateProjects, setTemplateProjects] = useState([]);\n  const [myProjects, setMyProjects] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const projectsRef = useRef();\n\n  const PAGE_SIZE = 50;\n\n  useEffect(() => {\n    getMyProjects();\n    if (templateProjects.length === 0) {\n      getTemplateProjects();\n    }\n  }, [props.email, currentPage]);\n\n  const getMyProjects = () => {\n    if (!props.email) {\n      return;\n    }\n\n    let pageOffset = Math.ceil((currentPage - 1) * PAGE_SIZE);\n    let params = {\n      email: props.email,\n      offset: pageOffset,\n      limit: PAGE_SIZE,\n      type: \"js3d\"\n    };\n    request\n      .getDevelopingProjectsByType(params)\n      .then(res => res.json())\n      .then(result => {\n        const { rows } = result;\n        setMyProjects(currentPage === 1 ? rows : myProjects.concat(rows));\n      })\n      .catch(err => console.error(err));\n  };\n\n  const getTemplateProjects = () => {\n    request\n      .getTemplateProjectsByType({ type: \"js3d\" })\n      .then(res => res.json())\n      .then(json => {\n        setTemplateProjects(json);\n      })\n      .catch(e => {\n        console.error(e);\n      });\n  };\n\n  const createNewProject = template => {\n    const { email, history } = props;\n    if (email) {\n      let pageURL = `/${PAGETYPE.BUILDER3D}/${generatePID(email)}`;\n      if (template) {\n        pageURL += `/${template.id}`;\n      }\n\n      history.replace({\n        pathname: pageURL\n      });\n      window.location.reload();\n    } else {\n      let pageURL = `/${PAGETYPE.BUILDER3D}?t=${template.id}`;\n      history.replace({\n        pathname: pageURL\n      });\n      window.location.reload();\n    }\n  };\n\n  const loadProject = pId => {\n    props.history.replace({\n      pathname: `/${PAGETYPE.BUILDER3D}/${pId}`\n    });\n    window.location.reload();\n  };\n\n  const handleOnScroll = () => {\n    const container = projectsRef.current;\n    if (\n      container.offsetHeight + container.scrollTop >=\n      container.scrollHeight\n    ) {\n      loadMore();\n    }\n  };\n\n  const loadMore = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  return (\n    <View\n      email={props.email}\n      templateProjects={templateProjects}\n      myProjects={myProjects}\n      loadProject={loadProject}\n      createNewProject={createNewProject}\n      handleOnScroll={handleOnScroll}\n      projectsRef={projectsRef}\n    />\n  );\n}\n\nexport default connect(state => ({\n  email: state.userinfo.email,\n  userId: state.userinfo.id\n}))(injectIntl(withRouter(Container)));\n"]},"metadata":{},"sourceType":"module"}