{"ast":null,"code":"import _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ActionType } from \"../../../../Common/Util/Constant\";\nvar ADD_ROOM = ActionType.ADD_ROOM,\n    ADD_MSG = ActionType.ADD_MSG,\n    ADD_MSG_TO_QUEUE = ActionType.ADD_MSG_TO_QUEUE,\n    CLEAR_MSG_QUEUE = ActionType.CLEAR_MSG_QUEUE,\n    SET_SELECTED_ROOM = ActionType.SET_SELECTED_ROOM,\n    ADD_UNREAD_MSG_COUNT = ActionType.ADD_UNREAD_MSG_COUNT,\n    RESET_UNREAD_MSG_COUNT = ActionType.RESET_UNREAD_MSG_COUNT;\nexport var addRoom = function addRoom(roomId, roomName, roomIcon) {\n  return {\n    type: ADD_ROOM,\n    roomId: roomId,\n    roomName: roomName,\n    roomIcon: roomIcon\n  };\n};\nexport var setSelectedRoom = function setSelectedRoom(roomId) {\n  return {\n    type: SET_SELECTED_ROOM,\n    roomId: roomId\n  };\n};\nexport var addMsg = function addMsg(msg) {\n  return {\n    type: ADD_MSG,\n    msg: msg\n  };\n};\nexport var addMsgToQueue = function addMsgToQueue(msg) {\n  return {\n    type: ADD_MSG_TO_QUEUE,\n    msg: msg\n  };\n};\nexport var clearMsgQueue = function clearMsgQueue() {\n  return {\n    type: CLEAR_MSG_QUEUE\n  };\n};\nexport var addUnreadMsgCount = function addUnreadMsgCount(roomId) {\n  return {\n    type: ADD_UNREAD_MSG_COUNT,\n    roomId: roomId\n  };\n};\nexport var resetUnreadMsgCount = function resetUnreadMsgCount(roomId) {\n  return {\n    type: RESET_UNREAD_MSG_COUNT,\n    roomId: roomId\n  };\n};\nvar initialState = {\n  messages: [],\n  messageQueue: [],\n  rooms: {\n    all: {\n      name: \"전체\",\n      messages: [],\n      unReadMsgCount: 0\n    }\n  },\n  selectedRoomId: \"all\"\n};\n\nvar chat = function chat() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var room;\n\n  switch (action.type) {\n    case ADD_ROOM:\n      return _objectSpread({}, state, {\n        rooms: _objectSpread(_defineProperty({}, action.roomId, {\n          name: action.roomName,\n          messages: [],\n          unReadMsgCount: 0,\n          roomIcon: action.roomIcon\n        }), state.rooms)\n      });\n\n    case ADD_MSG:\n      room = _objectSpread({}, state.rooms[action.msg.roomId]);\n      room.messages.push(action.msg);\n      return _objectSpread({}, state, {\n        rooms: _objectSpread({}, state.rooms, _defineProperty({}, action.msg.roomId, room))\n      });\n\n    case ADD_MSG_TO_QUEUE:\n      return _objectSpread({}, state, {\n        messageQueue: [].concat(_toConsumableArray(state.messageQueue), [action.msg])\n      });\n\n    case CLEAR_MSG_QUEUE:\n      return _objectSpread({}, state, {\n        messageQueue: []\n      });\n\n    case SET_SELECTED_ROOM:\n      return _objectSpread({}, state, {\n        selectedRoomId: action.roomId\n      });\n\n    case ADD_UNREAD_MSG_COUNT:\n      room = _objectSpread({}, state.rooms[action.roomId]);\n      room.unReadMsgCount++;\n      return _objectSpread({}, state, {\n        rooms: _objectSpread({}, state.rooms, _defineProperty({}, action.roomId, room))\n      });\n\n    case RESET_UNREAD_MSG_COUNT:\n      room = _objectSpread({}, state.rooms[action.roomId]);\n      room.unReadMsgCount = 0;\n      return _objectSpread({}, state, {\n        rooms: _objectSpread({}, state.rooms, _defineProperty({}, action.roomId, room))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default chat;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Store/Reducer/chat.js"],"names":["ActionType","ADD_ROOM","ADD_MSG","ADD_MSG_TO_QUEUE","CLEAR_MSG_QUEUE","SET_SELECTED_ROOM","ADD_UNREAD_MSG_COUNT","RESET_UNREAD_MSG_COUNT","addRoom","roomId","roomName","roomIcon","type","setSelectedRoom","addMsg","msg","addMsgToQueue","clearMsgQueue","addUnreadMsgCount","resetUnreadMsgCount","initialState","messages","messageQueue","rooms","all","name","unReadMsgCount","selectedRoomId","chat","state","action","room","push"],"mappings":"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","sourcesContent":["import { ActionType } from \"../../../../Common/Util/Constant\";\nconst {\n  ADD_ROOM,\n  ADD_MSG,\n  ADD_MSG_TO_QUEUE,\n  CLEAR_MSG_QUEUE,\n  SET_SELECTED_ROOM,\n  ADD_UNREAD_MSG_COUNT,\n  RESET_UNREAD_MSG_COUNT\n} = ActionType;\n\nexport const addRoom = (roomId, roomName, roomIcon) => ({\n  type: ADD_ROOM,\n  roomId,\n  roomName,\n  roomIcon\n});\n\nexport const setSelectedRoom = roomId => ({\n  type: SET_SELECTED_ROOM,\n  roomId\n});\nexport const addMsg = msg => ({\n  type: ADD_MSG,\n  msg\n});\n\nexport const addMsgToQueue = msg => ({\n  type: ADD_MSG_TO_QUEUE,\n  msg\n});\n\nexport const clearMsgQueue = () => ({\n  type: CLEAR_MSG_QUEUE\n});\n\nexport const addUnreadMsgCount = roomId => ({\n  type: ADD_UNREAD_MSG_COUNT,\n  roomId\n});\n\nexport const resetUnreadMsgCount = roomId => ({\n  type: RESET_UNREAD_MSG_COUNT,\n  roomId\n});\n\nconst initialState = {\n  messages: [],\n  messageQueue: [],\n  rooms: {\n    all: { name: \"전체\", messages: [], unReadMsgCount: 0 }\n  },\n  selectedRoomId: \"all\"\n};\n\nconst chat = (state = initialState, action) => {\n  let room;\n  switch (action.type) {\n    case ADD_ROOM:\n      return {\n        ...state,\n        rooms: {\n          [action.roomId]: {\n            name: action.roomName,\n            messages: [],\n            unReadMsgCount: 0,\n            roomIcon: action.roomIcon\n          },\n          ...state.rooms\n        }\n      };\n    case ADD_MSG:\n      room = { ...state.rooms[action.msg.roomId] };\n      room.messages.push(action.msg);\n      return {\n        ...state,\n        rooms: {\n          ...state.rooms,\n          [action.msg.roomId]: room\n        }\n      };\n    case ADD_MSG_TO_QUEUE:\n      return { ...state, messageQueue: [...state.messageQueue, action.msg] };\n    case CLEAR_MSG_QUEUE:\n      return { ...state, messageQueue: [] };\n    case SET_SELECTED_ROOM:\n      return { ...state, selectedRoomId: action.roomId };\n    case ADD_UNREAD_MSG_COUNT:\n      room = { ...state.rooms[action.roomId] };\n      room.unReadMsgCount++;\n      return {\n        ...state,\n        rooms: {\n          ...state.rooms,\n          [action.roomId]: room\n        }\n      };\n    case RESET_UNREAD_MSG_COUNT:\n      room = { ...state.rooms[action.roomId] };\n      room.unReadMsgCount = 0;\n      return {\n        ...state,\n        rooms: {\n          ...state.rooms,\n          [action.roomId]: room\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default chat;\n"]},"metadata":{},"sourceType":"module"}