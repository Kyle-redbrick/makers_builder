{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/Comment/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as request from \"../../Util/HTTPRequest\"; // import { showReport } from \"../../Util/AlertManager\";\n\nimport View from \"./View\"; // import { showBingoPopup } from \"../../Component/PopUp/BingoPopup\";\n\nimport \"./index.scss\";\nimport { spamType } from \"../../Util/Constant\";\nimport checkBlockedUser from \"../../Util/CheckBlockedUser\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../PopUp\";\nimport DreamReport from \"../DreamReport\";\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n    _this.limit = 10;\n\n    _this.handleLoadMore = function (e) {\n      e.preventDefault();\n\n      _this.getMoreComments();\n    };\n\n    _this.handleInputFocus = function (type) {\n      _this.setState({\n        commentWriteOnType: type\n      });\n    };\n\n    _this.handleAddComment = function (e, type) {\n      e.preventDefault();\n      var isBlocked = checkBlockedUser(_this.props.userinfo);\n\n      if (isBlocked) {\n        return;\n      }\n\n      var _this$state = _this.state,\n          parentType = _this$state.parentType,\n          parentId = _this$state.parentId,\n          mainInputMessage = _this$state.mainInputMessage,\n          subInputMessage = _this$state.subInputMessage,\n          parentCommentId = _this$state.parentCommentId,\n          targetUser = _this$state.targetUser;\n      var formatMessage = _this.props.intl.formatMessage;\n      var email = _this.props.userinfo.email;\n      var params = {\n        parentType: parentType,\n        parentId: parentId,\n        email: email\n      };\n\n      if (type === \"main\") {\n        params.message = mainInputMessage;\n\n        if (!params.message || params.message.length < 2) {\n          return;\n        }\n\n        request.postComment(params).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            json.user = _this.props.userinfo;\n            json.replies = [];\n\n            _this.setState({\n              comments: [json].concat(_toConsumableArray(_this.state.comments)),\n              mainInputMessage: \"\"\n            }, function () {\n              _this.props.handleProjectCommentCount(_this.props.allCommentCount + 1);\n            });\n          } else {\n            if (json.spam) {\n              var title;\n\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              showPopUp(React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: title\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_SPAM_POPUP_CONFIRM\"\n                }),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 166\n                },\n                __self: this\n              }), {\n                darkmode: true,\n                dismissButton: false,\n                dismissOverlay: true\n              });\n            }\n          }\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      } else if (type === \"sub\") {\n        params.message = subInputMessage;\n        params.commentId = parentCommentId;\n\n        if (targetUser) {\n          params.targetEmail = targetUser.email;\n        }\n\n        if (!params.message || params.message.length < 2) {\n          return;\n        }\n\n        request.postReply(params).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            json.user = _this.props.userinfo;\n            json.targetUser = targetUser;\n\n            _this.setState({\n              comments: _this.state.comments.map(function (item) {\n                if (item.id === params.commentId) {\n                  return _objectSpread({}, item, {\n                    replies: [json].concat(_toConsumableArray(item.replies))\n                  });\n                }\n\n                return item;\n              }),\n              subInputTargetId: \"\",\n              subInputMessage: \"\",\n              parentCommentId: \"\",\n              targetUser: null\n            });\n          } else {\n            if (json.spam) {\n              var title;\n\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              showPopUp(React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: title\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_SPAM_POPUP_CONFIRM\"\n                }),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 228\n                },\n                __self: this\n              }), {\n                darkmode: true,\n                dismissButton: false,\n                dismissOverlay: true\n              });\n            }\n          }\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      }\n    };\n\n    _this.handleDeleteComment =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _ref2,\n          id,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, id = _ref2.id;\n              _context.prev = 1;\n              _context.next = 4;\n              return request.deleteComment({\n                id: id\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 4:\n              _this.setState(function (state) {\n                return {\n                  comments: state.comments.map(function (item) {\n                    if (item.id === id) {\n                      item.isDeleted = true;\n                      return item;\n                    } else {\n                      return item;\n                    }\n                  })\n                };\n              });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 7]]);\n    }));\n    _this.handleDeleteReply =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _ref4,\n          id,\n          commentId,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref4 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, id = _ref4.id, commentId = _ref4.commentId;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return request.deleteReply({\n                id: id\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 4:\n              _this.setState(function (state) {\n                return {\n                  comments: state.comments.map(function (item) {\n                    if (item.id === commentId) {\n                      return _objectSpread({}, item, {\n                        replies: item.replies.map(function (reply) {\n                          if (reply.id === id) {\n                            reply.isDeleted = true;\n                            return reply;\n                          } else {\n                            return reply;\n                          }\n                        })\n                      });\n                    } else {\n                      return item;\n                    }\n                  })\n                };\n              });\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[1, 7]]);\n    }));\n\n    _this.handleInputChange = function (e, type) {\n      if (type === \"main\") {\n        _this.setState({\n          mainInputMessage: e.target.value\n        });\n      } else if (type === \"sub\") {\n        _this.setState({\n          subInputMessage: e.target.value\n        });\n      } else if (type === \"edit\") {\n        _this.setState({\n          editInputMessage: e.target.value\n        });\n      }\n    };\n\n    _this.handleSetInputTarget = function (e, subInputTargetType, subInputTargetId, parentCommentId, targetUser) {\n      e.preventDefault();\n\n      _this.setState({\n        subInputTargetType: subInputTargetType,\n        subInputTargetId: subInputTargetId,\n        parentCommentId: parentCommentId,\n        targetUser: targetUser\n      });\n    };\n\n    _this.handleSetEditTarget = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          editTargetType = _ref5.editTargetType,\n          editTargetId = _ref5.editTargetId,\n          editInputMessage = _ref5.editInputMessage;\n\n      _this.setState({\n        editTargetType: editTargetType,\n        editTargetId: editTargetId,\n        editInputMessage: editInputMessage\n      });\n    };\n\n    _this.handleEditComment =\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var _this$state2, editInputMessage, editTargetId;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                _this$state2 = _this.state, editInputMessage = _this$state2.editInputMessage, editTargetId = _this$state2.editTargetId;\n\n                if (!(editInputMessage < 2)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return request.editComment({\n                  id: editTargetId,\n                  message: editInputMessage\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 7:\n                _this.setState(function (state) {\n                  return {\n                    editTargetType: \"\",\n                    editTargetId: null,\n                    editInputMessage: \"\",\n                    comments: state.comments.map(function (item) {\n                      if (item.id === editTargetId) {\n                        item.message = editInputMessage;\n                      }\n\n                      return item;\n                    })\n                  };\n                });\n\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](4);\n                console.error(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[4, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.handleEditReply = function (e) {\n      e.preventDefault();\n      var _this$state3 = _this.state,\n          editInputMessage = _this$state3.editInputMessage,\n          editTargetId = _this$state3.editTargetId;\n\n      if (editInputMessage < 2) {\n        return;\n      }\n\n      try {\n        request.editReply({\n          id: editTargetId,\n          message: editInputMessage\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this.setState(function (state) {\n            return {\n              editTargetType: \"\",\n              editTargetId: null,\n              editInputMessage: \"\",\n              comments: state.comments.map(function (item) {\n                if (item.replies.find(function (reply) {\n                  return reply.id === editTargetId;\n                })) {\n                  return _objectSpread({}, item, {\n                    replies: item.replies.map(function (reply) {\n                      if (reply.id === editTargetId) {\n                        reply.message = editInputMessage;\n                      }\n\n                      return reply;\n                    })\n                  });\n                } else {\n                  return item;\n                }\n              })\n            };\n          }, function () {// console.log(this.state);\n          });\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    _this.handleReportComment = function (comment) {\n      showPopUp(React.createElement(DreamReport, {\n        targetType: \"gameComment\",\n        targetContentId: comment.id,\n        targetUserId: comment.user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }), {\n        darkmode: true,\n        dismissButton: false\n      });\n    };\n\n    _this.handleReportReply = function (reply) {\n      showPopUp(React.createElement(DreamReport, {\n        targetType: \"gameReply\",\n        targetContentId: reply.id,\n        targetUserId: reply.user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }), {\n        darkmode: true,\n        dismissButton: false\n      });\n    };\n\n    _this.onClickFoldMore = function (commentId) {\n      _this.setState({\n        openedFolds: [].concat(_toConsumableArray(_this.state.openedFolds), [commentId])\n      });\n    };\n\n    _this.handleCommentsShow = function () {\n      _this.setState({\n        isCommentsShow: !_this.state.isCommentsShow\n      });\n    };\n\n    _this.state = {\n      comments: [],\n      parentType: props.parentType,\n      parentId: props.parentId,\n      mainInputMessage: \"\",\n      subInputMessage: \"\",\n      subInputTargetId: \"\",\n      subInputTargetType: \"\",\n      parentCommentId: \"\",\n      targetUser: null,\n      editTargetType: \"\",\n      editTargetId: null,\n      editInputMessage: \"\",\n      openedFolds: [],\n      commentHeight: \"\",\n      commentWriteOnType: ''\n    };\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        parentType: this.props.parentType,\n        parentId: this.props.parentId\n      }, function () {\n        _this2.fetchComments();\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (prevProps.parentId !== this.props.parentId) {\n        this.setState({\n          parentType: this.props.parentType,\n          parentId: this.props.parentId\n        }, function () {\n          _this3.fetchComments();\n        });\n      }\n    }\n  }, {\n    key: \"fetchComments\",\n    value: function fetchComments() {\n      var _this4 = this;\n\n      var _this$state4 = this.state,\n          parentType = _this$state4.parentType,\n          parentId = _this$state4.parentId,\n          comments = _this$state4.comments;\n      var limit = this.limit;\n      var offset = comments.length;\n      var params = {\n        parentType: parentType,\n        parentId: parentId,\n        limit: limit,\n        offset: offset\n      };\n      request.getComments(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this4.setState({\n          comments: json\n        });\n      }).catch(function (e) {\n        return console.error(e);\n      });\n    }\n  }, {\n    key: \"getMoreComments\",\n    value: function getMoreComments() {\n      var _this5 = this;\n\n      var _this$state5 = this.state,\n          parentType = _this$state5.parentType,\n          parentId = _this$state5.parentId,\n          comments = _this$state5.comments;\n      var limit = this.limit;\n      var offset = comments.length;\n      var params = {\n        parentType: parentType,\n        parentId: parentId,\n        limit: limit,\n        offset: offset\n      };\n      request.getComments(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this5.setState({\n          comments: [].concat(_toConsumableArray(_this5.state.comments), _toConsumableArray(json))\n        });\n      }).catch(function (e) {\n        return console.error(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          comments = _this$state6.comments,\n          subInputTargetId = _this$state6.subInputTargetId,\n          subInputTargetType = _this$state6.subInputTargetType,\n          mainInputMessage = _this$state6.mainInputMessage,\n          targetUser = _this$state6.targetUser,\n          openedFolds = _this$state6.openedFolds,\n          isCommentsShow = _this$state6.isCommentsShow,\n          commentWriteOnType = _this$state6.commentWriteOnType;\n      var hasMore = this.props.allCommentCount > comments.length;\n      return React.createElement(View, {\n        comments: comments,\n        allCommentCount: this.props.allCommentCount,\n        hasMore: hasMore,\n        handleLoadMore: this.handleLoadMore,\n        handleAddComment: this.handleAddComment,\n        handleInputChange: this.handleInputChange,\n        handleSetInputTarget: this.handleSetInputTarget,\n        mainInputMessage: mainInputMessage,\n        subInputTargetId: subInputTargetId,\n        subInputTargetType: subInputTargetType,\n        isLoggedIn: !!this.props.userinfo.email,\n        user: this.props.userinfo,\n        targetUser: targetUser,\n        handleDeleteComment: this.handleDeleteComment,\n        handleDeleteReply: this.handleDeleteReply,\n        userinfo: this.props.userinfo,\n        handleSetEditTarget: this.handleSetEditTarget,\n        editTargetType: this.state.editTargetType,\n        editTargetId: this.state.editTargetId,\n        editInputMessage: this.state.editInputMessage,\n        handleEditComment: this.handleEditComment,\n        handleEditReply: this.handleEditReply,\n        handleReportComment: this.handleReportComment,\n        handleReportReply: this.handleReportReply,\n        openedFolds: openedFolds,\n        onClickFoldMore: this.onClickFoldMore,\n        handleCommentsShow: this.handleCommentsShow,\n        isMobile: this.props.isMobile,\n        isCommentsShow: isCommentsShow,\n        handleButtonHeightChange: this.handleButtonHeightChange,\n        commentWriteOnType: commentWriteOnType,\n        handleInputFocus: this.handleInputFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    userinfo: state.userinfo\n  };\n}, {})(injectIntl(Comment));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/Comment/index.js"],"names":["React","Component","connect","request","View","spamType","checkBlockedUser","injectIntl","PopUp","showPopUp","DreamReport","Comment","props","limit","handleLoadMore","e","preventDefault","getMoreComments","handleInputFocus","type","setState","commentWriteOnType","handleAddComment","isBlocked","userinfo","state","parentType","parentId","mainInputMessage","subInputMessage","parentCommentId","targetUser","formatMessage","intl","email","params","message","length","postComment","then","res","json","success","user","replies","comments","handleProjectCommentCount","allCommentCount","spam","title","SPAM_BAD_WORD","SPAM_DUPLICATION","SPAM_TIME","id","darkmode","dismissButton","dismissOverlay","catch","console","error","commentId","targetEmail","postReply","map","item","subInputTargetId","handleDeleteComment","deleteComment","isDeleted","handleDeleteReply","deleteReply","reply","handleInputChange","target","value","editInputMessage","handleSetInputTarget","subInputTargetType","handleSetEditTarget","editTargetType","editTargetId","handleEditComment","editComment","handleEditReply","editReply","find","err","handleReportComment","comment","handleReportReply","onClickFoldMore","openedFolds","handleCommentsShow","isCommentsShow","commentHeight","fetchComments","prevProps","offset","getComments","hasMore","isMobile","handleButtonHeightChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as request from \"../../Util/HTTPRequest\";\n// import { showReport } from \"../../Util/AlertManager\";\nimport View from \"./View\";\n// import { showBingoPopup } from \"../../Component/PopUp/BingoPopup\";\nimport \"./index.scss\";\nimport { spamType } from \"../../Util/Constant\";\nimport checkBlockedUser from \"../../Util/CheckBlockedUser\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../PopUp\";\nimport DreamReport from \"../DreamReport\";\n\nclass Comment extends Component {\n  limit = 10;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      parentType: props.parentType,\n      parentId: props.parentId,\n      mainInputMessage: \"\",\n      subInputMessage: \"\",\n      subInputTargetId: \"\",\n      subInputTargetType: \"\",\n      parentCommentId: \"\",\n      targetUser: null,\n      editTargetType: \"\",\n      editTargetId: null,\n      editInputMessage: \"\",\n      openedFolds: [],\n      commentHeight: \"\",\n      commentWriteOnType: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        parentType: this.props.parentType,\n        parentId: this.props.parentId,\n      },\n      () => {\n        this.fetchComments();\n      }\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.parentId !== this.props.parentId) {\n      this.setState(\n        {\n          parentType: this.props.parentType,\n          parentId: this.props.parentId,\n        },\n        () => {\n          this.fetchComments();\n        }\n      );\n    }\n  }\n\n  fetchComments() {\n    const { parentType, parentId, comments } = this.state;\n    const limit = this.limit;\n    const offset = comments.length;\n    const params = {\n      parentType,\n      parentId,\n      limit,\n      offset,\n    };\n    request\n      .getComments(params)\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          comments: json,\n        });\n      })\n      .catch((e) => console.error(e));\n  }\n\n  getMoreComments() {\n    const { parentType, parentId, comments } = this.state;\n    const limit = this.limit;\n    const offset = comments.length;\n    const params = {\n      parentType,\n      parentId,\n      limit,\n      offset,\n    };\n    request\n      .getComments(params)\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          comments: [...this.state.comments, ...json],\n        });\n      })\n      .catch((e) => console.error(e));\n  }\n\n  handleLoadMore = (e) => {\n    e.preventDefault();\n    this.getMoreComments();\n  };\n\n  handleInputFocus = (type) => {\n    this.setState({ commentWriteOnType : type })\n  }\n\n  handleAddComment = (e, type) => {\n    e.preventDefault();\n\n    const isBlocked = checkBlockedUser(this.props.userinfo);\n    if (isBlocked) {\n      return;\n    }\n\n    const { parentType, parentId, mainInputMessage, subInputMessage, parentCommentId, targetUser } = this.state;\n    const { formatMessage } = this.props.intl;\n    const email = this.props.userinfo.email;\n    let params = { parentType, parentId, email };\n    if (type === \"main\") {\n      params.message = mainInputMessage;\n      if (!params.message || params.message.length < 2) {\n        return;\n      }\n      request\n        .postComment(params)\n        .then((res) => res.json())\n        .then((json) => {\n          if (json.success) {\n            json.user = this.props.userinfo;\n            json.replies = [];\n            this.setState(\n              {\n                comments: [json, ...this.state.comments],\n                mainInputMessage: \"\",\n              },\n              () => {\n                this.props.handleProjectCommentCount(this.props.allCommentCount + 1);\n              }\n            );\n          } else {\n            if (json.spam) {\n              let title;\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n                default:\n                  break;\n              }\n\n              showPopUp(\n                <PopUp.OneButton\n                  title={formatMessage({ id: title })}\n                  buttonName={formatMessage({\n                    id: \"ID_SPAM_POPUP_CONFIRM\",\n                  })}\n                />,\n                {\n                  darkmode: true,\n                  dismissButton: false,\n                  dismissOverlay: true,\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.error(e));\n    } else if (type === \"sub\") {\n      params.message = subInputMessage;\n      params.commentId = parentCommentId;\n      if (targetUser) {\n        params.targetEmail = targetUser.email;\n      }\n      if (!params.message || params.message.length < 2) {\n        return;\n      }\n      request\n        .postReply(params)\n        .then((res) => res.json())\n        .then((json) => {\n          if (json.success) {\n            json.user = this.props.userinfo;\n            json.targetUser = targetUser;\n            this.setState({\n              comments: this.state.comments.map((item) => {\n                if (item.id === params.commentId) {\n                  return { ...item, replies: [json, ...item.replies] };\n                }\n                return item;\n              }),\n              subInputTargetId: \"\",\n              subInputMessage: \"\",\n              parentCommentId: \"\",\n              targetUser: null,\n            });\n          } else {\n            if (json.spam) {\n              let title;\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n                default:\n                  break;\n              }\n\n              showPopUp(\n                <PopUp.OneButton\n                  title={formatMessage({ id: title })}\n                  buttonName={formatMessage({\n                    id: \"ID_SPAM_POPUP_CONFIRM\",\n                  })}\n                />,\n                {\n                  darkmode: true,\n                  dismissButton: false,\n                  dismissOverlay: true,\n                }\n              );\n            }\n          }\n        })\n        .catch((e) => console.error(e));\n    }\n  };\n\n  handleDeleteComment = async ({ id } = {}) => {\n    try {\n      await request.deleteComment({ id }).then((res) => res.json());\n      this.setState((state) => ({\n        comments: state.comments.map((item) => {\n          if (item.id === id) {\n            item.isDeleted = true;\n            return item;\n          } else {\n            return item;\n          }\n        }),\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleDeleteReply = async ({ id, commentId } = {}) => {\n    try {\n      await request.deleteReply({ id }).then((res) => res.json());\n      this.setState((state) => ({\n        comments: state.comments.map((item) => {\n          if (item.id === commentId) {\n            return {\n              ...item,\n              replies: item.replies.map((reply) => {\n                if (reply.id === id) {\n                  reply.isDeleted = true;\n                  return reply;\n                } else {\n                  return reply;\n                }\n              }),\n            };\n          } else {\n            return item;\n          }\n        }),\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleInputChange = (e, type) => {\n    if (type === \"main\") {\n      this.setState({ mainInputMessage: e.target.value });\n    } else if (type === \"sub\") {\n      this.setState({ subInputMessage: e.target.value });\n    } else if (type === \"edit\") {\n      this.setState({ editInputMessage: e.target.value });\n    }\n  };\n\n  handleSetInputTarget = (e, subInputTargetType, subInputTargetId, parentCommentId, targetUser) => {\n    e.preventDefault();\n    this.setState({\n      subInputTargetType,\n      subInputTargetId,\n      parentCommentId,\n      targetUser,\n    });\n  };\n\n  handleSetEditTarget = ({ editTargetType, editTargetId, editInputMessage } = {}) => {\n    this.setState({\n      editTargetType,\n      editTargetId,\n      editInputMessage,\n    });\n  };\n\n  handleEditComment = async (e) => {\n    e.preventDefault();\n    const { editInputMessage, editTargetId } = this.state;\n    if (editInputMessage < 2) {\n      return;\n    }\n    try {\n      await request.editComment({ id: editTargetId, message: editInputMessage }).then((res) => res.json());\n      this.setState((state) => ({\n        editTargetType: \"\",\n        editTargetId: null,\n        editInputMessage: \"\",\n        comments: state.comments.map((item) => {\n          if (item.id === editTargetId) {\n            item.message = editInputMessage;\n          }\n          return item;\n        }),\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleEditReply = (e) => {\n    e.preventDefault();\n    const { editInputMessage, editTargetId } = this.state;\n    if (editInputMessage < 2) {\n      return;\n    }\n    try {\n      request\n        .editReply({ id: editTargetId, message: editInputMessage })\n        .then((res) => res.json())\n        .then((json) => {\n          this.setState(\n            (state) => ({\n              editTargetType: \"\",\n              editTargetId: null,\n              editInputMessage: \"\",\n              comments: state.comments.map((item) => {\n                if (item.replies.find((reply) => reply.id === editTargetId)) {\n                  return {\n                    ...item,\n                    replies: item.replies.map((reply) => {\n                      if (reply.id === editTargetId) {\n                        reply.message = editInputMessage;\n                      }\n                      return reply;\n                    }),\n                  };\n                } else {\n                  return item;\n                }\n              }),\n            }),\n            () => {\n              // console.log(this.state);\n            }\n          );\n        });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleReportComment = comment => {\n    showPopUp(\n      <DreamReport\n        targetType=\"gameComment\"\n        targetContentId={comment.id}\n        targetUserId={comment.user.id}\n      />,\n      { darkmode: true, dismissButton: false }\n    );\n  }\n  handleReportReply = reply => {\n    showPopUp(\n      <DreamReport\n        targetType=\"gameReply\"\n        targetContentId={reply.id}\n        targetUserId={reply.user.id}\n      />,\n      { darkmode: true, dismissButton: false }\n    );\n  }\n\n  onClickFoldMore = (commentId) => {\n    this.setState({ openedFolds: [...this.state.openedFolds, commentId] });\n  };\n\n  handleCommentsShow = () => {\n    this.setState({ isCommentsShow: !this.state.isCommentsShow });\n  };\n\n  render() {\n    const {\n      comments,\n      subInputTargetId,\n      subInputTargetType,\n      mainInputMessage,\n      targetUser,\n      openedFolds,\n      isCommentsShow,\n      commentWriteOnType\n    } = this.state;\n    const hasMore = this.props.allCommentCount > comments.length;\n    return (\n      <View\n        comments={comments}\n        allCommentCount={this.props.allCommentCount}\n        hasMore={hasMore}\n        handleLoadMore={this.handleLoadMore}\n        handleAddComment={this.handleAddComment}\n        handleInputChange={this.handleInputChange}\n        handleSetInputTarget={this.handleSetInputTarget}\n        mainInputMessage={mainInputMessage}\n        subInputTargetId={subInputTargetId}\n        subInputTargetType={subInputTargetType}\n        isLoggedIn={!!this.props.userinfo.email}\n        user={this.props.userinfo}\n        targetUser={targetUser}\n        handleDeleteComment={this.handleDeleteComment}\n        handleDeleteReply={this.handleDeleteReply}\n        userinfo={this.props.userinfo}\n        handleSetEditTarget={this.handleSetEditTarget}\n        editTargetType={this.state.editTargetType}\n        editTargetId={this.state.editTargetId}\n        editInputMessage={this.state.editInputMessage}\n        handleEditComment={this.handleEditComment}\n        handleEditReply={this.handleEditReply}\n        handleReportComment={this.handleReportComment}\n        handleReportReply={this.handleReportReply}\n        openedFolds={openedFolds}\n        onClickFoldMore={this.onClickFoldMore}\n        handleCommentsShow={this.handleCommentsShow}\n        isMobile={this.props.isMobile}\n        isCommentsShow={isCommentsShow}\n        handleButtonHeightChange={this.handleButtonHeightChange}\n        commentWriteOnType={commentWriteOnType}\n        handleInputFocus={this.handleInputFocus}\n      />\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ userinfo: state.userinfo }),\n  {}\n)(injectIntl(Comment));\n"]},"metadata":{},"sourceType":"module"}