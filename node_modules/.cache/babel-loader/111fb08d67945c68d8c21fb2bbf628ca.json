{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Component/Preview/View.js\";\nimport React from \"react\";\nimport addImg from \"../../../../Image/builder/group-7-copy-5.svg\";\nimport addImg_darkmode from \"../../../../Image/builder/group-7-copy-5_darkmode.svg\";\nimport rotateImg from \"../../../../Image/builder/group.svg\";\nimport rotateImg_darkmode from \"../../../../Image/builder/group_darkmode.svg\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport PreviewCanvas from \"./Component/PreviewCanvas\";\nimport WorldSize from \"./Component/WorldSize\";\nimport { getColorTheme } from \"../../../Builder/utils/colorThemeUtil\";\nimport \"./index.scss\";\nexport default function (props) {\n  var handleChangeZIndex = props.handleChangeZIndex,\n      handleSelectTab = props.handleSelectTab,\n      selectedSceneId = props.selectedSceneId,\n      handleChangeScreenMode = props.handleChangeScreenMode,\n      setPreivewCanvasRef = props.setPreivewCanvasRef,\n      intl = props.intl,\n      fixed = props.fixed;\n  return React.createElement(\"div\", {\n    className: \"preview\",\n    onMouseDown: function onMouseDown() {\n      return handleChangeZIndex(\"preview\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, fixed || React.createElement(\"div\", {\n    className: \"preview_header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"preview_button preview_button-rotate\",\n    onClick: handleChangeScreenMode,\n    \"data-tip\": intl.formatMessage({\n      id: \"ID_TOOLTIP_SCREEN_ROTATE\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"rotateImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: getColorTheme() === \"darkMode\" ? rotateImg_darkmode : rotateImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"preview_header_title handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, selectedSceneId), React.createElement(WorldSize, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"preview_button preview_button-add\",\n    onClick: function onClick() {\n      return handleSelectTab(\"spriteBox\", \"Preview\");\n    },\n    \"data-tip\": intl.formatMessage({\n      id: \"ID_TOOLTIP_SPRITE_ADD\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"spriteAddImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: getColorTheme() === \"darkMode\" ? addImg_darkmode : addImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    id: \"preview_container\",\n    className: \"preview_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(PreviewCanvas, {\n    handleChangeZIndex: handleChangeZIndex,\n    setRef: setPreivewCanvasRef,\n    fixed: fixed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Component/Preview/View.js"],"names":["React","ButtonIndicator","PreviewCanvas","WorldSize","getColorTheme","props","handleChangeZIndex","handleSelectTab","selectedSceneId","handleChangeScreenMode","setPreivewCanvasRef","intl","fixed","formatMessage","id","rotateImg_darkmode","rotateImg","addImg_darkmode","addImg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAKA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,aAAT,QAA8B,uCAA9B;AACA,OAAO,cAAP;AAEA,eAAe,UAASC,KAAT,EAAgB;AAAA,MAE3BC,kBAF2B,GASzBD,KATyB,CAE3BC,kBAF2B;AAAA,MAG3BC,eAH2B,GASzBF,KATyB,CAG3BE,eAH2B;AAAA,MAI3BC,eAJ2B,GASzBH,KATyB,CAI3BG,eAJ2B;AAAA,MAK3BC,sBAL2B,GASzBJ,KATyB,CAK3BI,sBAL2B;AAAA,MAM3BC,mBAN2B,GASzBL,KATyB,CAM3BK,mBAN2B;AAAA,MAO3BC,IAP2B,GASzBN,KATyB,CAO3BM,IAP2B;AAAA,MAQ3BC,KAR2B,GASzBP,KATyB,CAQ3BO,KAR2B;AAW7B,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,WAAW,EAAE;AAAA,aAAMN,kBAAkB,CAAC,SAAD,CAAxB;AAAA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGM,KAAK,IACJ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,OAAO,EAAEH,sBAFX;AAGE,gBAAUE,IAAI,CAACE,aAAL,CAAmB;AAC3BC,MAAAA,EAAE,EAAE;AADuB,KAAnB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EACDV,aAAa,OAAO,UAApB,GACIW,kBADJ,GAEIC,SAJR;AAME,IAAA,GAAG,EAAC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,EAmBE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CR,eAA9C,CAnBF,EAoBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAqBE;AACE,IAAA,SAAS,EAAC,mCADZ;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMD,eAAe,CAAC,WAAD,EAAc,SAAd,CAArB;AAAA,KAFX;AAGE,gBAAUI,IAAI,CAACE,aAAL,CAAmB;AAC3BC,MAAAA,EAAE,EAAE;AADuB,KAAnB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEV,aAAa,OAAO,UAApB,GAAiCa,eAAjC,GAAmDC,MAD1D;AAEE,IAAA,GAAG,EAAC,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CArBF,CAHJ,EAyCE;AAAK,IAAA,EAAE,EAAC,mBAAR;AAA4B,IAAA,SAAS,EAAC,mBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,kBAAkB,EAAEZ,kBADtB;AAEE,IAAA,MAAM,EAAEI,mBAFV;AAGE,IAAA,KAAK,EAAEE,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzCF,CADF;AAmDD","sourcesContent":["import React from \"react\";\nimport addImg from \"../../../../Image/builder/group-7-copy-5.svg\";\nimport addImg_darkmode from \"../../../../Image/builder/group-7-copy-5_darkmode.svg\";\nimport rotateImg from \"../../../../Image/builder/group.svg\";\nimport rotateImg_darkmode from \"../../../../Image/builder/group_darkmode.svg\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport PreviewCanvas from \"./Component/PreviewCanvas\";\nimport WorldSize from \"./Component/WorldSize\";\nimport { getColorTheme } from \"../../../Builder/utils/colorThemeUtil\";\nimport \"./index.scss\";\n\nexport default function(props) {\n  const {\n    handleChangeZIndex,\n    handleSelectTab,\n    selectedSceneId,\n    handleChangeScreenMode,\n    setPreivewCanvasRef,\n    intl,\n    fixed\n  } = props;\n\n  return (\n    <div className=\"preview\" onMouseDown={() => handleChangeZIndex(\"preview\")}>\n      {/* title */}\n      {fixed || (\n        <div className=\"preview_header\">\n          <div\n            className=\"preview_button preview_button-rotate\"\n            onClick={handleChangeScreenMode}\n            data-tip={intl.formatMessage({\n              id: \"ID_TOOLTIP_SCREEN_ROTATE\"\n            })}\n          >\n            <ButtonIndicator buttonId=\"rotateImg\">\n              <img\n                src={\n                  getColorTheme() === \"darkMode\"\n                    ? rotateImg_darkmode\n                    : rotateImg\n                }\n                alt=\"img\"\n              />\n            </ButtonIndicator>\n          </div>\n          <div className=\"preview_header_title handle\">{selectedSceneId}</div>\n          <WorldSize />\n          <div\n            className=\"preview_button preview_button-add\"\n            onClick={() => handleSelectTab(\"spriteBox\", \"Preview\")}\n            data-tip={intl.formatMessage({\n              id: \"ID_TOOLTIP_SPRITE_ADD\"\n            })}\n          >\n            <ButtonIndicator buttonId=\"spriteAddImg\">\n              <img\n                src={getColorTheme() === \"darkMode\" ? addImg_darkmode : addImg}\n                alt=\"img\"\n              />\n            </ButtonIndicator>\n          </div>\n        </div>\n      )}\n      {/* content */}\n      <div id=\"preview_container\" className=\"preview_container\">\n        <PreviewCanvas\n          handleChangeZIndex={handleChangeZIndex}\n          setRef={setPreivewCanvasRef}\n          fixed={fixed}\n        />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}