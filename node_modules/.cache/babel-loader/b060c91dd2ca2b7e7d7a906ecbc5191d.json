{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ActionType } from \"../../../../Common/Util/Constant\";\nvar SET_PROJECT = ActionType.SET_PROJECT,\n    SET_TEMPLATE = ActionType.SET_TEMPLATE,\n    RESET_PROJECT = ActionType.RESET_PROJECT,\n    SET_IS_PLAYING = ActionType.SET_IS_PLAYING,\n    SET_SCREEN_MODE = ActionType.SET_SCREEN_MODE,\n    SET_GAME_VOLUME = ActionType.SET_GAME_VOLUME;\nexport var setIsPlaying = function setIsPlaying(isPlaying) {\n  return {\n    type: SET_IS_PLAYING,\n    isPlaying: isPlaying\n  };\n};\nexport var setScreenMode = function setScreenMode(screenMode) {\n  return {\n    type: SET_SCREEN_MODE,\n    screenMode: screenMode\n  };\n};\nexport var setGameVolume = function setGameVolume(volume) {\n  return {\n    type: SET_GAME_VOLUME,\n    volume: volume\n  };\n};\nvar initialState = {\n  isPlaying: false,\n  isFullScreen: false,\n  screenMode: \"HORIZONTAL\",\n  volume: localStorage.getItem(\"game_volume\") || 100\n};\n\nvar preview = function preview() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RESET_PROJECT:\n      return initialState;\n\n    case SET_PROJECT:\n    case SET_TEMPLATE:\n      var _preview = action.project.state && action.project.state.preview;\n\n      if (_preview) {\n        return _objectSpread({}, state, {\n          screenMode: _preview.screenMode\n        });\n      } else {\n        return state;\n      }\n\n    case SET_IS_PLAYING:\n      return _objectSpread({}, state, {\n        isPlaying: action.isPlaying\n      });\n\n    case SET_SCREEN_MODE:\n      return _objectSpread({}, state, {\n        screenMode: action.screenMode\n      });\n\n    case SET_GAME_VOLUME:\n      localStorage.setItem(\"game_volume\", action.volume);\n      return _objectSpread({}, state, {\n        volume: action.volume\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default preview;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Store/Reducer/preview.js"],"names":["ActionType","SET_PROJECT","SET_TEMPLATE","RESET_PROJECT","SET_IS_PLAYING","SET_SCREEN_MODE","SET_GAME_VOLUME","setIsPlaying","isPlaying","type","setScreenMode","screenMode","setGameVolume","volume","initialState","isFullScreen","localStorage","getItem","preview","state","action","project","setItem"],"mappings":";AAAA,SAASA,UAAT,QAA2B,kCAA3B;IAEEC,W,GAMED,U,CANFC,W;IACAC,Y,GAKEF,U,CALFE,Y;IACAC,a,GAIEH,U,CAJFG,a;IACAC,c,GAGEJ,U,CAHFI,c;IACAC,e,GAEEL,U,CAFFK,e;IACAC,e,GACEN,U,CADFM,e;AAGF,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,SAAS;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAEL,cADkC;AAExCI,IAAAA,SAAS,EAAEA;AAF6B,GAAL;AAAA,CAA9B;AAKP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,UAAU;AAAA,SAAK;AAC1CF,IAAAA,IAAI,EAAEJ,eADoC;AAE1CM,IAAAA,UAAU,EAAVA;AAF0C,GAAL;AAAA,CAAhC;AAKP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAAK;AACtCJ,IAAAA,IAAI,EAAEH,eADgC;AAEtCO,IAAAA,MAAM,EAANA;AAFsC,GAAL;AAAA,CAA5B;AAKP,IAAMC,YAAY,GAAG;AACnBN,EAAAA,SAAS,EAAE,KADQ;AAEnBO,EAAAA,YAAY,EAAE,KAFK;AAGnBJ,EAAAA,UAAU,EAAE,YAHO;AAInBE,EAAAA,MAAM,EAAEG,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC;AAJ5B,CAArB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAChD,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKN,aAAL;AACE,aAAOW,YAAP;;AACF,SAAKb,WAAL;AACA,SAAKC,YAAL;AACE,UAAMgB,QAAO,GAAGE,MAAM,CAACC,OAAP,CAAeF,KAAf,IAAwBC,MAAM,CAACC,OAAP,CAAeF,KAAf,CAAqBD,OAA7D;;AACA,UAAIA,QAAJ,EAAa;AACX,iCAAYC,KAAZ;AAAmBR,UAAAA,UAAU,EAAEO,QAAO,CAACP;AAAvC;AACD,OAFD,MAEO;AACL,eAAOQ,KAAP;AACD;;AACH,SAAKf,cAAL;AACE,+BACKe,KADL;AAEEX,QAAAA,SAAS,EAAEY,MAAM,CAACZ;AAFpB;;AAIF,SAAKH,eAAL;AACE,+BACKc,KADL;AAEER,QAAAA,UAAU,EAAES,MAAM,CAACT;AAFrB;;AAIF,SAAKL,eAAL;AACEU,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoCF,MAAM,CAACP,MAA3C;AACA,+BACKM,KADL;AAEEN,QAAAA,MAAM,EAAEO,MAAM,CAACP;AAFjB;;AAIF;AACE,aAAOM,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["import { ActionType } from \"../../../../Common/Util/Constant\";\nconst {\n  SET_PROJECT,\n  SET_TEMPLATE,\n  RESET_PROJECT,\n  SET_IS_PLAYING,\n  SET_SCREEN_MODE,\n  SET_GAME_VOLUME\n} = ActionType;\n\nexport const setIsPlaying = isPlaying => ({\n  type: SET_IS_PLAYING,\n  isPlaying: isPlaying\n});\n\nexport const setScreenMode = screenMode => ({\n  type: SET_SCREEN_MODE,\n  screenMode\n});\n\nexport const setGameVolume = volume => ({\n  type: SET_GAME_VOLUME,\n  volume\n});\n\nconst initialState = {\n  isPlaying: false,\n  isFullScreen: false,\n  screenMode: \"HORIZONTAL\",\n  volume: localStorage.getItem(\"game_volume\") || 100\n};\n\nconst preview = (state = initialState, action) => {\n  switch (action.type) {\n    case RESET_PROJECT:\n      return initialState;\n    case SET_PROJECT:\n    case SET_TEMPLATE:\n      const preview = action.project.state && action.project.state.preview;\n      if (preview) {\n        return { ...state, screenMode: preview.screenMode };\n      } else {\n        return state;\n      }\n    case SET_IS_PLAYING:\n      return {\n        ...state,\n        isPlaying: action.isPlaying\n      };\n    case SET_SCREEN_MODE:\n      return {\n        ...state,\n        screenMode: action.screenMode\n      };\n    case SET_GAME_VOLUME:\n      localStorage.setItem(\"game_volume\", action.volume);\n      return {\n        ...state,\n        volume: action.volume\n      };\n    default:\n      return state;\n  }\n};\n\nexport default preview;\n"]},"metadata":{},"sourceType":"module"}