{"ast":null,"code":"import _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Course/Sections/Categories.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(4, 270px);\\n  grid-column-gap: 30px;\\n  grid-row-gap: 40px;\\n\\n  @media screen and (max-width: 1169px) {\\n    width: 88.33vw;\\n    margin: 0 auto;\\n    grid-template-columns: repeat(2, 42.7vw);\\n    grid-column-gap: 10px;\\n    grid-row-gap: 30px;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-start;\\n\\n  @media screen and (max-width: 1169px) {\\n    width: 88.33vw;\\n    flex-wrap: wrap;\\n    margin: 20px auto 10px;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  max-width: 1170px;\\n  margin: 0 auto;\\n  padding-bottom: 160px;\\n  min-height: 700px;\\n\\n  @media screen and (max-width: 1169px){\\n    padding-bottom: 50px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState } from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport styled from \"@emotion/styled\";\nimport TitleLabel from \"../Components/TitleLabel\";\nimport Title from \"../Components/Title\";\nimport Category from \"../Components/Category\";\nimport CategorizedItem from \"../Components/CategorizedItem\";\nimport Container from \"../Components/Container\";\nvar Self = styled.div(_templateObject());\nvar CategoriesRow = styled.div(_templateObject2());\nvar Items = styled.div(_templateObject3());\n\nvar Categories = function Categories(_ref) {\n  var children = _ref.children,\n      _ref$courses = _ref.courses,\n      courses = _ref$courses === void 0 ? [] : _ref$courses,\n      items = _ref.items,\n      props = _objectWithoutProperties(_ref, [\"children\", \"courses\", \"items\"]);\n\n  var _useState = useState(\"all\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCategoryId = _useState2[0],\n      setSelectedCategoryId = _useState2[1];\n\n  var handleClickCategory = useCallback(function (categoryId) {\n    setSelectedCategoryId(categoryId);\n  }, [setSelectedCategoryId]);\n  var COURSES = [{\n    id: \"all\",\n    title: props.intl.formatMessage({\n      id: \"ID_ALL\"\n    })\n  }].concat(_toConsumableArray(courses));\n  return React.createElement(Self, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TitleLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_DREAM_CATEGORY_TITLE_LABEL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_DREAM_CATEGORY_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(CategoriesRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, COURSES.map(function (course) {\n    return React.createElement(Category, {\n      active: selectedCategoryId === course.id,\n      categoryId: course.id,\n      key: course.id,\n      onClick: handleClickCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, course.title);\n  })), React.createElement(Items, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, items.filter(function (item) {\n    if (selectedCategoryId === \"all\") {\n      return true;\n    }\n\n    return item.course.id === selectedCategoryId;\n  }).map(function (item) {\n    return React.createElement(CategorizedItem, {\n      key: item.id,\n      item: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    });\n  }))));\n};\n\nexport default injectIntl(Categories);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Course/Sections/Categories.js"],"names":["React","useCallback","useState","FormattedMessage","injectIntl","styled","TitleLabel","Title","Category","CategorizedItem","Container","Self","div","CategoriesRow","Items","Categories","children","courses","items","props","selectedCategoryId","setSelectedCategoryId","handleClickCategory","categoryId","COURSES","id","title","intl","formatMessage","map","course","filter","item"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport styled from \"@emotion/styled\";\nimport TitleLabel from \"../Components/TitleLabel\";\nimport Title from \"../Components/Title\";\nimport Category from \"../Components/Category\";\nimport CategorizedItem from \"../Components/CategorizedItem\";\nimport Container from \"../Components/Container\";\n\nconst Self = styled.div`\n  width: 100%;\n  max-width: 1170px;\n  margin: 0 auto;\n  padding-bottom: 160px;\n  min-height: 700px;\n\n  @media screen and (max-width: 1169px){\n    padding-bottom: 50px;\n  }\n`;\n\nconst CategoriesRow = styled.div`\n  display: flex;\n  justify-content: flex-start;\n\n  @media screen and (max-width: 1169px) {\n    width: 88.33vw;\n    flex-wrap: wrap;\n    margin: 20px auto 10px;\n  }\n`;\n\nconst Items = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 270px);\n  grid-column-gap: 30px;\n  grid-row-gap: 40px;\n\n  @media screen and (max-width: 1169px) {\n    width: 88.33vw;\n    margin: 0 auto;\n    grid-template-columns: repeat(2, 42.7vw);\n    grid-column-gap: 10px;\n    grid-row-gap: 30px;\n  }\n`;\n\nconst Categories = ({ children, courses = [], items, ...props }) => {\n  const [selectedCategoryId, setSelectedCategoryId] = useState(\"all\");\n\n  const handleClickCategory = useCallback(\n    (categoryId) => {\n      setSelectedCategoryId(categoryId);\n    },\n    [setSelectedCategoryId]\n  );\n\n  const COURSES = [\n    {\n      id: \"all\",\n      title: props.intl.formatMessage({ id: \"ID_ALL\" }),\n    },\n    ...courses,\n  ];\n\n  return (\n    <Self {...props}>\n      <Container>\n        <TitleLabel>\n          <FormattedMessage id=\"ID_DREAM_CATEGORY_TITLE_LABEL\" />\n        </TitleLabel>\n\n        <Title>\n          <FormattedMessage id=\"ID_DREAM_CATEGORY_TITLE\" />\n        </Title>\n\n        <CategoriesRow>\n          {COURSES.map((course) => (\n            <Category\n              active={selectedCategoryId === course.id}\n              categoryId={course.id}\n              key={course.id}\n              onClick={handleClickCategory}\n            >\n              {course.title}\n            </Category>\n          ))}\n        </CategoriesRow>\n\n        <Items>\n          {items\n            .filter((item) => {\n              if (selectedCategoryId === \"all\") {\n                return true;\n              }\n\n              return item.course.id === selectedCategoryId;\n            })\n            .map((item) => (\n              <CategorizedItem key={item.id} item={item} />\n            ))}\n        </Items>\n      </Container>\n    </Self>\n  );\n};\n\nexport default injectIntl(Categories);\n"]},"metadata":{},"sourceType":"module"}