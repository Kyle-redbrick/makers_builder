{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Play/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport * as previewActions from \"../../Store/Reducer/preview\";\nimport * as webrtcActions from \"../../Store/Reducer/webrtc\";\nimport View from \"./View\";\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container() {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.toggleFullScreen = function (event) {\n      var element = document.body;\n\n      if (event instanceof HTMLElement) {\n        element = event;\n      }\n\n      var isFullscreen = document.webkitIsFullScreen || document.mozFullScreen || false;\n\n      element.requestFullScreen = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || function () {\n        return false;\n      };\n\n      document.cancelFullScreen = document.cancelFullScreen || document.webkitCancelFullScreen || document.mozCancelFullScreen || function () {\n        return false;\n      };\n\n      isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n    };\n\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var toggleFullScreen = this.toggleFullScreen;\n      var _this$props = this.props,\n          setIsPlaying = _this$props.setIsPlaying,\n          intl = _this$props.intl,\n          setLog = _this$props.setLog,\n          email = _this$props.email,\n          currentUser = _this$props.currentUser,\n          pageType = _this$props.pageType;\n      return /*#__PURE__*/React.createElement(View, {\n        setIsPlaying: setIsPlaying,\n        setLog: setLog,\n        intl: intl,\n        toggleFullScreen: toggleFullScreen,\n        email: email,\n        currentUser: currentUser,\n        pageType: pageType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    email: state.userinfo.email,\n    currentUser: state.tabs.currentUser\n  };\n}, {\n  setIsPlaying: previewActions.setIsPlaying,\n  setLog: webrtcActions.setLog\n})(injectIntl(Container));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Play/Container.js"],"names":["React","Component","connect","injectIntl","previewActions","webrtcActions","View","Container","toggleFullScreen","event","element","document","body","HTMLElement","isFullscreen","webkitIsFullScreen","mozFullScreen","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","cancelFullScreen","webkitCancelFullScreen","mozCancelFullScreen","props","setIsPlaying","intl","setLog","email","currentUser","pageType","state","userinfo","tabs"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAO,KAAKC,cAAZ,MAAgC,6BAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,4BAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,S;;;;;;;;;;;;;;;;UACJC,gB,GAAmB,UAAAC,KAAK,EAAI;AAC1B,UAAIC,OAAO,GAAGC,QAAQ,CAACC,IAAvB;;AAEA,UAAIH,KAAK,YAAYI,WAArB,EAAkC;AAChCH,QAAAA,OAAO,GAAGD,KAAV;AACD;;AAED,UAAIK,YAAY,GACdH,QAAQ,CAACI,kBAAT,IAA+BJ,QAAQ,CAACK,aAAxC,IAAyD,KAD3D;;AAGAN,MAAAA,OAAO,CAACO,iBAAR,GACEP,OAAO,CAACO,iBAAR,IACAP,OAAO,CAACQ,uBADR,IAEAR,OAAO,CAACS,oBAFR,IAGA,YAAW;AACT,eAAO,KAAP;AACD,OANH;;AAOAR,MAAAA,QAAQ,CAACS,gBAAT,GACET,QAAQ,CAACS,gBAAT,IACAT,QAAQ,CAACU,sBADT,IAEAV,QAAQ,CAACW,mBAFT,IAGA,YAAW;AACT,eAAO,KAAP;AACD,OANH;;AAQAR,MAAAA,YAAY,GAAGH,QAAQ,CAACS,gBAAT,EAAH,GAAiCV,OAAO,CAACO,iBAAR,EAA7C;AACD,K;;;;;;;WAED,kBAAS;AAAA,UACCT,gBADD,GACsB,IADtB,CACCA,gBADD;AAAA,wBASH,KAAKe,KATF;AAAA,UAGLC,YAHK,eAGLA,YAHK;AAAA,UAILC,IAJK,eAILA,IAJK;AAAA,UAKLC,MALK,eAKLA,MALK;AAAA,UAMLC,KANK,eAMLA,KANK;AAAA,UAOLC,WAPK,eAOLA,WAPK;AAAA,UAQLC,QARK,eAQLA,QARK;AAUP,0BACE,oBAAC,IAAD;AACE,QAAA,YAAY,EAAEL,YADhB;AAEE,QAAA,MAAM,EAAEE,MAFV;AAGE,QAAA,IAAI,EAAED,IAHR;AAIE,QAAA,gBAAgB,EAAEjB,gBAJpB;AAKE,QAAA,KAAK,EAAEmB,KALT;AAME,QAAA,WAAW,EAAEC,WANf;AAOE,QAAA,QAAQ,EAAEC,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EAlDqB5B,S;;AAqDxB,eAAeC,OAAO,CACpB,UAAA4B,KAAK;AAAA,SAAK;AACRH,IAAAA,KAAK,EAAEG,KAAK,CAACC,QAAN,CAAeJ,KADd;AAERC,IAAAA,WAAW,EAAEE,KAAK,CAACE,IAAN,CAAWJ;AAFhB,GAAL;AAAA,CADe,EAKpB;AACEJ,EAAAA,YAAY,EAAEpB,cAAc,CAACoB,YAD/B;AAEEE,EAAAA,MAAM,EAAErB,aAAa,CAACqB;AAFxB,CALoB,CAAP,CASbvB,UAAU,CAACI,SAAD,CATG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport * as previewActions from \"../../Store/Reducer/preview\";\nimport * as webrtcActions from \"../../Store/Reducer/webrtc\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  toggleFullScreen = event => {\n    let element = document.body;\n\n    if (event instanceof HTMLElement) {\n      element = event;\n    }\n\n    let isFullscreen =\n      document.webkitIsFullScreen || document.mozFullScreen || false;\n\n    element.requestFullScreen =\n      element.requestFullScreen ||\n      element.webkitRequestFullScreen ||\n      element.mozRequestFullScreen ||\n      function() {\n        return false;\n      };\n    document.cancelFullScreen =\n      document.cancelFullScreen ||\n      document.webkitCancelFullScreen ||\n      document.mozCancelFullScreen ||\n      function() {\n        return false;\n      };\n\n    isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n  };\n\n  render() {\n    const { toggleFullScreen } = this;\n    const {\n      setIsPlaying,\n      intl,\n      setLog,\n      email,\n      currentUser,\n      pageType\n    } = this.props;\n    return (\n      <View\n        setIsPlaying={setIsPlaying}\n        setLog={setLog}\n        intl={intl}\n        toggleFullScreen={toggleFullScreen}\n        email={email}\n        currentUser={currentUser}\n        pageType={pageType}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    email: state.userinfo.email,\n    currentUser: state.tabs.currentUser\n  }),\n  {\n    setIsPlaying: previewActions.setIsPlaying,\n    setLog: webrtcActions.setLog\n  }\n)(injectIntl(Container));\n"]},"metadata":{},"sourceType":"module"}