{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/Comment/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as request from \"../../Util/HTTPRequest\"; // import { showReport } from \"../../Util/AlertManager\";\n\nimport View from \"./View\"; // import { showBingoPopup } from \"../../Component/PopUp/BingoPopup\";\n\nimport \"./index.scss\";\nimport { spamType } from \"../../Util/Constant\";\nimport checkBlockedUser from \"../../Util/CheckBlockedUser\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../PopUp\";\nimport Report from \"../report/index\";\nimport { filterBlindedComments, getBlindedCommentCount } from \"../../Util/Comments\";\n\nvar Comment = /*#__PURE__*/function (_Component) {\n  _inherits(Comment, _Component);\n\n  var _super = _createSuper(Comment);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _super.call(this, props);\n    _this.limit = 10;\n    _this.blindedCommentCount = 0;\n\n    _this.handleLoadMore = function (e) {\n      e.preventDefault();\n\n      _this.getMoreComments();\n    };\n\n    _this.handleAddComment = function (e, type) {\n      e.preventDefault();\n      var isBlocked = checkBlockedUser(_this.props.userinfo);\n\n      if (isBlocked) {\n        return;\n      }\n\n      var _this$state = _this.state,\n          parentType = _this$state.parentType,\n          parentId = _this$state.parentId,\n          mainInputMessage = _this$state.mainInputMessage,\n          subInputMessage = _this$state.subInputMessage,\n          parentCommentId = _this$state.parentCommentId,\n          targetUser = _this$state.targetUser;\n      var formatMessage = _this.props.intl.formatMessage;\n      var email = _this.props.userinfo.email;\n      var params = {\n        parentType: parentType,\n        parentId: parentId,\n        email: email\n      };\n\n      if (type === \"main\") {\n        params.message = mainInputMessage;\n\n        if (!params.message || params.message.length < 2) {\n          return;\n        }\n\n        request.postComment(params).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            json.user = _this.props.userinfo;\n            json.replies = [];\n\n            _this.setState({\n              comments: [json].concat(_toConsumableArray(_this.state.comments)),\n              mainInputMessage: \"\"\n            }, function () {\n              _this.props.handleProjectCommentCount(_this.props.allCommentCount + 1);\n            });\n          } else if (!json.success) {\n            var formatMessageTitile;\n\n            switch (json.spam) {\n              case \"duplication\":\n                formatMessageTitile = \"ID_POST_COMMENT_DUPLICATE\";\n                break;\n\n              default:\n                formatMessageTitile = \"ID_COMMENT_ONLY_USABLE_AFTER_VERIFY_EMAIL\";\n                break;\n            }\n\n            showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n              title: formatMessage({\n                id: formatMessageTitile\n              }),\n              buttonName: formatMessage({\n                id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n              }),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }\n            }), {\n              darkmode: true,\n              dismissButton: false,\n              dismissOverlay: true\n            });\n          } else {\n            if (json.spam) {\n              var title;\n\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: title\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_SPAM_POPUP_CONFIRM\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 17\n                }\n              }), {\n                darkmode: true,\n                dismissButton: false,\n                dismissOverlay: true\n              });\n            }\n          }\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      } else if (type === \"sub\") {\n        params.message = subInputMessage;\n        params.commentId = parentCommentId;\n\n        if (targetUser) {\n          params.targetEmail = targetUser.email;\n        }\n\n        if (!params.message || params.message.length < 2) {\n          return;\n        }\n\n        request.postReply(params).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            json.user = _this.props.userinfo;\n            json.targetUser = targetUser;\n\n            _this.setState({\n              comments: _this.state.comments.map(function (item) {\n                if (item.id === params.commentId) {\n                  return _objectSpread({}, item, {\n                    replies: [json].concat(_toConsumableArray(item.replies))\n                  });\n                }\n\n                return item;\n              }),\n              subInputTargetId: \"\",\n              subInputMessage: \"\",\n              parentCommentId: \"\",\n              targetUser: null\n            }); // if (json.bingoType) {\n            //   showBingoPopup(email, json.bingoType);\n            // }\n\n          } else if (!json.success) {\n            var formatMessageTitile;\n\n            switch (json.spam) {\n              case \"duplication\":\n                formatMessageTitile = \"ID_POST_COMMENT_DUPLICATE\";\n                break;\n\n              default:\n                formatMessageTitile = \"ID_COMMENT_ONLY_USABLE_AFTER_VERIFY_EMAIL\";\n                break;\n            }\n\n            showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n              title: formatMessage({\n                id: formatMessageTitile\n              }),\n              buttonName: formatMessage({\n                id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n              }),\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 15\n              }\n            }), {\n              darkmode: true,\n              dismissButton: false,\n              dismissOverlay: true\n            });\n          } else {\n            if (json.spam) {\n              var title;\n\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: title\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_SPAM_POPUP_CONFIRM\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 17\n                }\n              }), {\n                darkmode: true,\n                dismissButton: false,\n                dismissOverlay: true\n              });\n            }\n          }\n        }).catch(function (e) {\n          return console.error(e);\n        });\n      }\n    };\n\n    _this.handleDeleteComment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref2,\n          id,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, id = _ref2.id;\n              _context.prev = 1;\n              _context.next = 4;\n              return request.deleteComment({\n                id: id\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 4:\n              _this.setState(function (state) {\n                return {\n                  comments: state.comments.map(function (item) {\n                    if (item.id === id) {\n                      item.isDeleted = true;\n                      return item;\n                    } else {\n                      return item;\n                    }\n                  })\n                };\n              });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n    _this.handleDeleteReply = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _ref4,\n          id,\n          commentId,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref4 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, id = _ref4.id, commentId = _ref4.commentId;\n              _context2.prev = 1;\n              _context2.next = 4;\n              return request.deleteReply({\n                id: id\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 4:\n              _this.setState(function (state) {\n                return {\n                  comments: state.comments.map(function (item) {\n                    if (item.id === commentId) {\n                      return _objectSpread({}, item, {\n                        replies: item.replies.map(function (reply) {\n                          if (reply.id === id) {\n                            reply.isDeleted = true;\n                            return reply;\n                          } else {\n                            return reply;\n                          }\n                        })\n                      });\n                    } else {\n                      return item;\n                    }\n                  })\n                };\n              });\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 7]]);\n    }));\n\n    _this.handleInputChange = function (e, type) {\n      if (type === \"main\") {\n        _this.setState({\n          mainInputMessage: e.target.value\n        });\n      } else if (type === \"sub\") {\n        _this.setState({\n          subInputMessage: e.target.value\n        });\n      } else if (type === \"edit\") {\n        _this.setState({\n          editInputMessage: e.target.value\n        });\n      }\n    };\n\n    _this.handleSetInputTarget = function (e, subInputTargetType, subInputTargetId, parentCommentId, targetUser) {\n      e.preventDefault();\n\n      _this.setState({\n        subInputTargetType: subInputTargetType,\n        subInputTargetId: subInputTargetId,\n        parentCommentId: parentCommentId,\n        targetUser: targetUser\n      });\n    };\n\n    _this.handleSetEditTarget = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          editTargetType = _ref5.editTargetType,\n          editTargetId = _ref5.editTargetId,\n          editInputMessage = _ref5.editInputMessage;\n\n      _this.setState({\n        editTargetType: editTargetType,\n        editTargetId: editTargetId,\n        editInputMessage: editInputMessage\n      });\n    };\n\n    _this.handleEditComment = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var _this$state2, editInputMessage, editTargetId;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault();\n                _this$state2 = _this.state, editInputMessage = _this$state2.editInputMessage, editTargetId = _this$state2.editTargetId;\n\n                if (!(editInputMessage < 2)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return request.editComment({\n                  id: editTargetId,\n                  message: editInputMessage\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 7:\n                _this.setState(function (state) {\n                  return {\n                    editTargetType: \"\",\n                    editTargetId: null,\n                    editInputMessage: \"\",\n                    comments: state.comments.map(function (item) {\n                      if (item.id === editTargetId) {\n                        item.message = editInputMessage;\n                      }\n\n                      return item;\n                    })\n                  };\n                });\n\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](4);\n                console.error(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[4, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.handleEditReply = function (e) {\n      e.preventDefault();\n      var _this$state3 = _this.state,\n          editInputMessage = _this$state3.editInputMessage,\n          editTargetId = _this$state3.editTargetId;\n\n      if (editInputMessage < 2) {\n        return;\n      }\n\n      try {\n        request.editReply({\n          id: editTargetId,\n          message: editInputMessage\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          _this.setState(function (state) {\n            return {\n              editTargetType: \"\",\n              editTargetId: null,\n              editInputMessage: \"\",\n              comments: state.comments.map(function (item) {\n                if (item.replies.find(function (reply) {\n                  return reply.id === editTargetId;\n                })) {\n                  return _objectSpread({}, item, {\n                    replies: item.replies.map(function (reply) {\n                      if (reply.id === editTargetId) {\n                        reply.message = editInputMessage;\n                      }\n\n                      return reply;\n                    })\n                  });\n                } else {\n                  return item;\n                }\n              })\n            };\n          }, function () {// console.log(this.state);\n          });\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    _this.handleReport = function (commentId, replyId) {\n      showPopUp( /*#__PURE__*/React.createElement(Report, {\n        target: {\n          PublishedCommentId: commentId,\n          PublishedReplyId: replyId\n        },\n        email: _this.props.userinfo.email,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 7\n        }\n      }), {\n        darkmode: true\n      });\n    };\n\n    _this.onClickFoldMore = function (commentId) {\n      _this.setState({\n        openedFolds: [].concat(_toConsumableArray(_this.state.openedFolds), [commentId])\n      });\n    };\n\n    _this.handleCommentsShow = function () {\n      _this.setState({\n        isCommentsShow: !_this.state.isCommentsShow\n      });\n    };\n\n    _this.state = {\n      comments: [],\n      parentType: props.parentType,\n      parentId: props.parentId,\n      mainInputMessage: \"\",\n      subInputMessage: \"\",\n      subInputTargetId: \"\",\n      subInputTargetType: \"\",\n      parentCommentId: \"\",\n      targetUser: null,\n      editTargetType: \"\",\n      editTargetId: null,\n      editInputMessage: \"\",\n      openedFolds: [],\n      isCommentsShow: false,\n      commentHeight: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        parentType: this.props.parentType,\n        parentId: this.props.parentId\n      }, function () {\n        _this2.fetchComments();\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      if (prevProps.parentId !== this.props.parentId) {\n        this.setState({\n          parentType: this.props.parentType,\n          parentId: this.props.parentId\n        }, function () {\n          _this3.fetchComments();\n        });\n      }\n    }\n  }, {\n    key: \"fetchComments\",\n    value: function fetchComments() {\n      var _this4 = this;\n\n      var _this$state4 = this.state,\n          parentType = _this$state4.parentType,\n          parentId = _this$state4.parentId,\n          comments = _this$state4.comments;\n      var limit = this.limit;\n      var offset = comments.length;\n      var params = {\n        parentType: parentType,\n        parentId: parentId,\n        limit: limit,\n        offset: offset\n      };\n      request.getComments(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this4.blindedCommentCount += getBlindedCommentCount(json);\n\n        _this4.setState({\n          comments: filterBlindedComments(json)\n        });\n      }).catch(function (e) {\n        return console.error(e);\n      });\n    }\n  }, {\n    key: \"getMoreComments\",\n    value: function getMoreComments() {\n      var _this5 = this;\n\n      var _this$state5 = this.state,\n          parentType = _this$state5.parentType,\n          parentId = _this$state5.parentId,\n          comments = _this$state5.comments;\n      var limit = this.limit;\n      var offset = comments.length + this.blindedCommentCount;\n      var params = {\n        parentType: parentType,\n        parentId: parentId,\n        limit: limit,\n        offset: offset\n      };\n      request.getComments(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this5.blindedCommentCount += getBlindedCommentCount(json);\n\n        _this5.setState({\n          comments: [].concat(_toConsumableArray(_this5.state.comments), _toConsumableArray(filterBlindedComments(json)))\n        });\n      }).catch(function (e) {\n        return console.error(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state6 = this.state,\n          comments = _this$state6.comments,\n          subInputTargetId = _this$state6.subInputTargetId,\n          subInputTargetType = _this$state6.subInputTargetType,\n          mainInputMessage = _this$state6.mainInputMessage,\n          targetUser = _this$state6.targetUser,\n          openedFolds = _this$state6.openedFolds,\n          isCommentsShow = _this$state6.isCommentsShow;\n      var hasMore = this.props.allCommentCount - this.blindedCommentCount > comments.length;\n      return /*#__PURE__*/React.createElement(View, {\n        comments: comments,\n        allCommentCount: this.props.allCommentCount,\n        hasMore: hasMore,\n        handleLoadMore: this.handleLoadMore,\n        handleAddComment: this.handleAddComment,\n        handleInputChange: this.handleInputChange,\n        handleSetInputTarget: this.handleSetInputTarget,\n        mainInputMessage: mainInputMessage,\n        subInputTargetId: subInputTargetId,\n        subInputTargetType: subInputTargetType,\n        isLoggedIn: !!this.props.userinfo.email,\n        user: this.props.userinfo,\n        targetUser: targetUser,\n        handleDeleteComment: this.handleDeleteComment,\n        handleDeleteReply: this.handleDeleteReply,\n        userinfo: this.props.userinfo,\n        handleSetEditTarget: this.handleSetEditTarget,\n        editTargetType: this.state.editTargetType,\n        editTargetId: this.state.editTargetId,\n        editInputMessage: this.state.editInputMessage,\n        handleEditComment: this.handleEditComment,\n        handleEditReply: this.handleEditReply,\n        handleReport: this.handleReport,\n        openedFolds: openedFolds,\n        onClickFoldMore: this.onClickFoldMore,\n        handleCommentsShow: this.handleCommentsShow,\n        isMobile: this.props.isMobile,\n        isCommentsShow: isCommentsShow,\n        handleButtonHeightChange: this.handleButtonHeightChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    userinfo: state.userinfo\n  };\n}, {})(injectIntl(Comment));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/Comment/index.js"],"names":["React","Component","connect","request","View","spamType","checkBlockedUser","injectIntl","PopUp","showPopUp","Report","filterBlindedComments","getBlindedCommentCount","Comment","props","limit","blindedCommentCount","handleLoadMore","e","preventDefault","getMoreComments","handleAddComment","type","isBlocked","userinfo","state","parentType","parentId","mainInputMessage","subInputMessage","parentCommentId","targetUser","formatMessage","intl","email","params","message","length","postComment","then","res","json","success","user","replies","setState","comments","handleProjectCommentCount","allCommentCount","formatMessageTitile","spam","id","darkmode","dismissButton","dismissOverlay","title","SPAM_BAD_WORD","SPAM_DUPLICATION","SPAM_TIME","catch","console","error","commentId","targetEmail","postReply","map","item","subInputTargetId","handleDeleteComment","deleteComment","isDeleted","handleDeleteReply","deleteReply","reply","handleInputChange","target","value","editInputMessage","handleSetInputTarget","subInputTargetType","handleSetEditTarget","editTargetType","editTargetId","handleEditComment","editComment","handleEditReply","editReply","find","err","handleReport","replyId","PublishedCommentId","PublishedReplyId","onClickFoldMore","openedFolds","handleCommentsShow","isCommentsShow","commentHeight","fetchComments","prevProps","offset","getComments","hasMore","isMobile","handleButtonHeightChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as request from \"../../Util/HTTPRequest\";\n// import { showReport } from \"../../Util/AlertManager\";\nimport View from \"./View\";\n// import { showBingoPopup } from \"../../Component/PopUp/BingoPopup\";\nimport \"./index.scss\";\nimport { spamType } from \"../../Util/Constant\";\nimport checkBlockedUser from \"../../Util/CheckBlockedUser\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../PopUp\";\nimport Report from \"../report/index\";\nimport { filterBlindedComments, getBlindedCommentCount } from \"../../Util/Comments\";\n\nclass Comment extends Component {\n  limit = 10;\n  blindedCommentCount = 0;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      parentType: props.parentType,\n      parentId: props.parentId,\n      mainInputMessage: \"\",\n      subInputMessage: \"\",\n      subInputTargetId: \"\",\n      subInputTargetType: \"\",\n      parentCommentId: \"\",\n      targetUser: null,\n      editTargetType: \"\",\n      editTargetId: null,\n      editInputMessage: \"\",\n      openedFolds: [],\n      isCommentsShow: false,\n      commentHeight: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        parentType: this.props.parentType,\n        parentId: this.props.parentId\n      },\n      () => {\n        this.fetchComments();\n      }\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.parentId !== this.props.parentId) {\n      this.setState(\n        {\n          parentType: this.props.parentType,\n          parentId: this.props.parentId\n        },\n        () => {\n          this.fetchComments();\n        }\n      );\n    }\n  }\n\n  fetchComments() {\n    const { parentType, parentId, comments } = this.state;\n    const limit = this.limit;\n    const offset = comments.length;\n    const params = {\n      parentType,\n      parentId,\n      limit,\n      offset\n    };\n    request\n      .getComments(params)\n      .then(res => res.json())\n      .then(json => {\n        this.blindedCommentCount += getBlindedCommentCount(json);\n        this.setState({\n          comments: filterBlindedComments(json)\n        });\n      })\n      .catch(e => console.error(e));\n  }\n\n  getMoreComments() {\n    const { parentType, parentId, comments } = this.state;\n    const limit = this.limit;\n    const offset = comments.length + this.blindedCommentCount;\n    const params = {\n      parentType,\n      parentId,\n      limit,\n      offset\n    };\n    request\n      .getComments(params)\n      .then(res => res.json())\n      .then(json => {\n        this.blindedCommentCount += getBlindedCommentCount(json);\n        this.setState({\n          comments: [...this.state.comments, ...filterBlindedComments(json)]\n        });\n      })\n      .catch(e => console.error(e));\n  }\n\n  handleLoadMore = e => {\n    e.preventDefault();\n    this.getMoreComments();\n  };\n\n  handleAddComment = (e, type) => {\n    e.preventDefault();\n\n    const isBlocked = checkBlockedUser(this.props.userinfo);\n    if (isBlocked) {\n      return;\n    }\n\n    const {\n      parentType,\n      parentId,\n      mainInputMessage,\n      subInputMessage,\n      parentCommentId,\n      targetUser\n    } = this.state;\n    const { formatMessage } = this.props.intl;\n    const email = this.props.userinfo.email;\n    let params = { parentType, parentId, email };\n    if (type === \"main\") {\n      params.message = mainInputMessage;\n      if (!params.message || params.message.length < 2) {\n        return;\n      }\n      request\n        .postComment(params)\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            json.user = this.props.userinfo;\n            json.replies = [];\n            this.setState(\n              {\n                comments: [json, ...this.state.comments],\n                mainInputMessage: \"\"\n              },\n              () => {\n                this.props.handleProjectCommentCount(\n                  this.props.allCommentCount + 1\n                );\n              }\n            );\n          } else if(!json.success) {\n\n            let formatMessageTitile;\n            switch (json.spam) {\n              case \"duplication\":\n                formatMessageTitile = \"ID_POST_COMMENT_DUPLICATE\"\n                break;\n              default:\n                formatMessageTitile = \"ID_COMMENT_ONLY_USABLE_AFTER_VERIFY_EMAIL\"\n                break;\n            }\n\n            showPopUp(\n              <PopUp.OneButton\n                title={formatMessage({ id: formatMessageTitile })}\n                buttonName={formatMessage({\n                  id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n                })}\n              />,\n              {\n                darkmode: true,\n                dismissButton: false,\n                dismissOverlay: true\n              }\n            );\n          } else {\n            if (json.spam) {\n              let title;\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n                default:\n                  break;\n              }\n\n              showPopUp(\n                <PopUp.OneButton\n                  title={formatMessage({ id: title })}\n                  buttonName={formatMessage({\n                    id: \"ID_SPAM_POPUP_CONFIRM\"\n                  })}\n                />,\n                {\n                  darkmode: true,\n                  dismissButton: false,\n                  dismissOverlay: true\n                }\n              );\n            }\n          }\n        })\n        .catch(e => console.error(e));\n    } else if (type === \"sub\") {\n      params.message = subInputMessage;\n      params.commentId = parentCommentId;\n      if (targetUser) {\n        params.targetEmail = targetUser.email;\n      }\n      if (!params.message || params.message.length < 2) {\n        return;\n      }\n      request\n        .postReply(params)\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            json.user = this.props.userinfo;\n            json.targetUser = targetUser;\n            this.setState({\n              comments: this.state.comments.map(item => {\n                if (item.id === params.commentId) {\n                  return { ...item, replies: [json, ...item.replies] };\n                }\n                return item;\n              }),\n              subInputTargetId: \"\",\n              subInputMessage: \"\",\n              parentCommentId: \"\",\n              targetUser: null\n            });\n            // if (json.bingoType) {\n            //   showBingoPopup(email, json.bingoType);\n            // }\n          } else if(!json.success) {\n\n            let formatMessageTitile;\n            switch (json.spam) {\n              case \"duplication\":\n                formatMessageTitile = \"ID_POST_COMMENT_DUPLICATE\"\n                break;\n              default:\n                formatMessageTitile = \"ID_COMMENT_ONLY_USABLE_AFTER_VERIFY_EMAIL\"\n                break;\n            }\n\n            showPopUp(\n              <PopUp.OneButton\n                title={formatMessage({ id: formatMessageTitile })}\n                buttonName={formatMessage({\n                  id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n                })}\n              />,\n              {\n                darkmode: true,\n                dismissButton: false,\n                dismissOverlay: true\n              }\n            );\n          } else {\n            if (json.spam) {\n              let title;\n              switch (json.spam) {\n                case spamType.SPAM_BAD_WORD:\n                  title = \"ID_SPAM_POPUP_TITLE_BAD_WORD\";\n                  break;\n                case spamType.SPAM_DUPLICATION:\n                  title = \"ID_SPAM_POPUP_TITLE_DUPLICATION\";\n                  break;\n                case spamType.SPAM_TIME:\n                  title = \"ID_SPAM_POPUP_TITLE_TIME\";\n                  break;\n                default:\n                  break;\n              }\n\n              showPopUp(\n                <PopUp.OneButton\n                  title={formatMessage({ id: title })}\n                  buttonName={formatMessage({\n                    id: \"ID_SPAM_POPUP_CONFIRM\"\n                  })}\n                />,\n                {\n                  darkmode: true,\n                  dismissButton: false,\n                  dismissOverlay: true\n                }\n              );\n            }\n          }\n        })\n        .catch(e => console.error(e));\n    }\n  };\n\n  handleDeleteComment = async ({ id } = {}) => {\n    try {\n      await request.deleteComment({ id }).then(res => res.json());\n      this.setState(state => ({\n        comments: state.comments.map(item => {\n          if (item.id === id) {\n            item.isDeleted = true;\n            return item;\n          } else {\n            return item;\n          }\n        })\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleDeleteReply = async ({ id, commentId } = {}) => {\n    try {\n      await request.deleteReply({ id }).then(res => res.json());\n      this.setState(state => ({\n        comments: state.comments.map(item => {\n          if (item.id === commentId) {\n            return {\n              ...item,\n              replies: item.replies.map(reply => {\n                if (reply.id === id) {\n                  reply.isDeleted = true;\n                  return reply;\n                } else {\n                  return reply;\n                }\n              })\n            };\n          } else {\n            return item;\n          }\n        })\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleInputChange = (e, type) => {\n    if (type === \"main\") {\n      this.setState({ mainInputMessage: e.target.value });\n    } else if (type === \"sub\") {\n      this.setState({ subInputMessage: e.target.value });\n    } else if (type === \"edit\") {\n      this.setState({ editInputMessage: e.target.value });\n    }\n  };\n\n  handleSetInputTarget = (\n    e,\n    subInputTargetType,\n    subInputTargetId,\n    parentCommentId,\n    targetUser\n  ) => {\n    e.preventDefault();\n    this.setState({\n      subInputTargetType,\n      subInputTargetId,\n      parentCommentId,\n      targetUser\n    });\n  };\n\n  handleSetEditTarget = ({\n    editTargetType,\n    editTargetId,\n    editInputMessage\n  } = {}) => {\n    this.setState({\n      editTargetType,\n      editTargetId,\n      editInputMessage\n    });\n  };\n\n  handleEditComment = async e => {\n    e.preventDefault();\n    const { editInputMessage, editTargetId } = this.state;\n    if (editInputMessage < 2) {\n      return;\n    }\n    try {\n      await request\n        .editComment({ id: editTargetId, message: editInputMessage })\n        .then(res => res.json());\n      this.setState(state => ({\n        editTargetType: \"\",\n        editTargetId: null,\n        editInputMessage: \"\",\n        comments: state.comments.map(item => {\n          if (item.id === editTargetId) {\n            item.message = editInputMessage;\n          }\n          return item;\n        })\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleEditReply = e => {\n    e.preventDefault();\n    const { editInputMessage, editTargetId } = this.state;\n    if (editInputMessage < 2) {\n      return;\n    }\n    try {\n      request\n        .editReply({ id: editTargetId, message: editInputMessage })\n        .then(res => res.json())\n        .then(json => {\n          this.setState(\n            state => ({\n              editTargetType: \"\",\n              editTargetId: null,\n              editInputMessage: \"\",\n              comments: state.comments.map(item => {\n                if (item.replies.find(reply => reply.id === editTargetId)) {\n                  return {\n                    ...item,\n                    replies: item.replies.map(reply => {\n                      if (reply.id === editTargetId) {\n                        reply.message = editInputMessage;\n                      }\n                      return reply;\n                    })\n                  };\n                } else {\n                  return item;\n                }\n              })\n            }),\n            () => {\n              // console.log(this.state);\n            }\n          );\n        });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  handleReport = (commentId, replyId) => {\n    showPopUp(\n      <Report\n        target={{ PublishedCommentId: commentId, PublishedReplyId: replyId }}\n        email={this.props.userinfo.email}\n      />,\n      { darkmode: true }\n    );\n  };\n\n  onClickFoldMore = commentId => {\n    this.setState({ openedFolds: [...this.state.openedFolds, commentId] });\n  };\n\n  handleCommentsShow = () => {\n    this.setState({ isCommentsShow: !this.state.isCommentsShow });\n  };\n  render() {\n    const {\n      comments,\n      subInputTargetId,\n      subInputTargetType,\n      mainInputMessage,\n      targetUser,\n      openedFolds,\n      isCommentsShow\n    } = this.state;\n    const hasMore = (this.props.allCommentCount - this.blindedCommentCount) > comments.length;\n    return (\n      <View\n        comments={comments}\n        allCommentCount={this.props.allCommentCount}\n        hasMore={hasMore}\n        handleLoadMore={this.handleLoadMore}\n        handleAddComment={this.handleAddComment}\n        handleInputChange={this.handleInputChange}\n        handleSetInputTarget={this.handleSetInputTarget}\n        mainInputMessage={mainInputMessage}\n        subInputTargetId={subInputTargetId}\n        subInputTargetType={subInputTargetType}\n        isLoggedIn={!!this.props.userinfo.email}\n        user={this.props.userinfo}\n        targetUser={targetUser}\n        handleDeleteComment={this.handleDeleteComment}\n        handleDeleteReply={this.handleDeleteReply}\n        userinfo={this.props.userinfo}\n        handleSetEditTarget={this.handleSetEditTarget}\n        editTargetType={this.state.editTargetType}\n        editTargetId={this.state.editTargetId}\n        editInputMessage={this.state.editInputMessage}\n        handleEditComment={this.handleEditComment}\n        handleEditReply={this.handleEditReply}\n        handleReport={this.handleReport}\n        openedFolds={openedFolds}\n        onClickFoldMore={this.onClickFoldMore}\n        handleCommentsShow={this.handleCommentsShow}\n        isMobile={this.props.isMobile}\n        isCommentsShow={isCommentsShow}\n        handleButtonHeightChange={this.handleButtonHeightChange}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({ userinfo: state.userinfo }),\n  {}\n)(injectIntl(Comment));\n"]},"metadata":{},"sourceType":"module"}