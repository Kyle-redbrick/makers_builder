{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Event/View.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport Layout from \"../../Common/Component/Layout\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./index.scss\";\nexport default function View(props) {\n  var events = props.events;\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Page--Event\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Event_Inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Event_Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_EVENT_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"Event_ItemSec\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Event_ItemSec-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, events.map(function (event, index) {\n    return React.createElement(EventItem, {\n      event: event,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }), events.length === 0 && React.createElement(\"p\", {\n    className: \"noEventText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_EMPTY_EVENT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })))))));\n}\n\nvar EventItem = function EventItem(props) {\n  var event = props.event;\n  return React.createElement(Link, {\n    className: \"EventItem\",\n    to: \"/event/\".concat(event.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"EventItem_Img_Wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: event.thumbnail.toDreamclassS3URL(),\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"EventItem_Wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"EventItem_Wrap-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, event.title), React.createElement(\"div\", {\n    className: \"EventItem_Wrap_DateWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\".concat(moment(event.startAt).utcOffset(false).format(\"YYYY.MM.DD\"), \" ~ \").concat(moment(event.endAt).utcOffset(false).format(\"MM.DD\")))), React.createElement(\"div\", {\n    className: \"EventItem_Wrap-category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, event.category));\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Event/View.js"],"names":["React","moment","Layout","Link","FormattedMessage","View","props","events","map","event","index","length","EventItem","id","thumbnail","toDreamclassS3URL","title","startAt","utcOffset","format","endAt","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,MAC1BC,MAD0B,GACfD,KADe,CAC1BC,MAD0B;AAGlC,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,WACV,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAED,KAAlB;AAAyB,MAAA,GAAG,EAAEC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,EAIGH,MAAM,CAACI,MAAP,KAAkB,CAAlB,IACC;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CALJ,CADA,CAJF,CADF,CADF,CADF;AAqBD;;AAED,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAN,KAAK,EAAI;AAAA,MACjBG,KADiB,GACPH,KADO,CACjBG,KADiB;AAEzB,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,EAAE,mBAAYA,KAAK,CAACI,EAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACK,SAAN,CAAgBC,iBAAhB,EAAV;AAA+C,IAAA,GAAG,EAAC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCN,KAAK,CAACO,KAA7C,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACMf,MAAM,CAACQ,KAAK,CAACQ,OAAP,CAAN,CAAsBC,SAAtB,CAAgC,KAAhC,EAAuCC,MAAvC,CAA8C,YAA9C,CADN,gBACuElB,MAAM,CAACQ,KAAK,CAACW,KAAP,CAAN,CAAoBF,SAApB,CAA8B,KAA9B,EAAqCC,MAArC,CAA4C,OAA5C,CADvE,EAFF,CAJF,EAUE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CV,KAAK,CAACY,QAAhD,CAVF,CADF;AAcD,CAhBD","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport Layout from \"../../Common/Component/Layout\";\nimport { Link } from \"react-router-dom\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./index.scss\";\n\nexport default function View(props) {\n  const { events } = props;\n\n  return (\n    <Layout>\n      <div className=\"Page--Event\">\n        <div className=\"Event_Inner\">\n          <div className=\"Event_Title\">\n            <FormattedMessage id=\"ID_EVENT_TITLE\" />\n          </div>\n          <section className=\"Event_ItemSec\">\n          <div className=\"Event_ItemSec-item\">\n            {events.map((event, index) => (\n              <EventItem event={event} key={index} />\n            ))}\n            {events.length === 0 && (\n              <p className=\"noEventText\"><FormattedMessage id=\"ID_EMPTY_EVENT\" /></p>\n            )}\n          </div>\n          </section>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nconst EventItem = props => {\n  const { event } = props;\n  return (\n    <Link className=\"EventItem\" to={`/event/${event.id}`}>\n      <div className=\"EventItem_Img_Wrapper\">\n        <img src={event.thumbnail.toDreamclassS3URL()} alt=\"img\" />\n      </div>\n      <div className=\"EventItem_Wrap\">\n        <div className=\"EventItem_Wrap-title\">{event.title}</div>\n        <div className=\"EventItem_Wrap_DateWrap\">\n          {`${moment(event.startAt).utcOffset(false).format(\"YYYY.MM.DD\")} ~ ${moment(event.endAt).utcOffset(false).format(\"MM.DD\")}`}\n        </div>\n      </div>\n      <div className=\"EventItem_Wrap-category\">{event.category}</div>\n    </Link>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}