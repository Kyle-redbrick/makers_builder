{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/ResetPassword/View.js\";\nimport React from 'react';\nimport { injectIntl } from \"react-intl\";\nimport Field from \"../../Common/Component/Field\";\nimport \"./index.scss\";\n\nfunction View(props) {\n  var intl = props.intl,\n      allValid = props.allValid,\n      onChangeField = props.onChangeField,\n      onClickChange = props.onClickChange,\n      onClickFind = props.onClickFind,\n      password = props.password,\n      passwordRe = props.passwordRe,\n      isPasswordLengthValid = props.isPasswordLengthValid,\n      isPasswordCombValid = props.isPasswordCombValid,\n      passwordReWarning = props.passwordReWarning,\n      showWarning = props.showWarning,\n      failed = props.failed;\n  if (failed) return /*#__PURE__*/React.createElement(FailView, {\n    intl: intl,\n    onClickFind: onClickFind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, intl.formatMessage({\n    id: \"ID_RESET_PW_TITLE\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field.SecureText, {\n    id: \"password\",\n    value: password,\n    onChange: onChangeField,\n    title: intl.formatMessage({\n      id: \"ID_MY_ACCOUNT_PW_NEW\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"ID_SIGNIN_PW_PLACEHOLDER\"\n    }),\n    secureToggleOption: true,\n    informations: [{\n      text: intl.formatMessage({\n        id: \"ID_SIGNUP_PW_INFO_LENGTH\"\n      }),\n      valid: password.length ? isPasswordLengthValid : undefined\n    }, {\n      text: intl.formatMessage({\n        id: \"ID_SIGNUP_PW_INFO_MIX\"\n      }),\n      valid: password.length ? isPasswordCombValid : undefined\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Field.SecureText, {\n    id: \"passwordRe\",\n    value: passwordRe,\n    onChange: onChangeField,\n    title: intl.formatMessage({\n      id: \"ID_MY_ACCOUNT_PW_RE\"\n    }),\n    placeholder: intl.formatMessage({\n      id: \"ID_SIGNIN_PW_PLACEHOLDER\"\n    }),\n    secureToggleOption: true,\n    warning: showWarning ? passwordReWarning : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"enable--\".concat(allValid),\n    onClick: onClickChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, intl.formatMessage({\n    id: \"ID_RESET_PW_BUTTON\"\n  }))));\n}\n\nfunction FailView(_ref) {\n  var intl = _ref.intl,\n      onClickFind = _ref.onClickFind;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: \"ID_RESET_PW_FAIL_TITLE\"\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"reset-password__desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: \"ID_RESET_PW_FAIL_DESC\"\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClickFind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, intl.formatMessage({\n    id: \"ID_FORGOTPW\"\n  })));\n}\n\nexport default injectIntl(View);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/ResetPassword/View.js"],"names":["React","injectIntl","Field","View","props","intl","allValid","onChangeField","onClickChange","onClickFind","password","passwordRe","isPasswordLengthValid","isPasswordCombValid","passwordReWarning","showWarning","failed","formatMessage","id","text","valid","length","undefined","FailView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { injectIntl } from \"react-intl\";\nimport Field from \"../../Common/Component/Field\";\nimport \"./index.scss\";\n\nfunction View(props) {\n  const {\n    intl,\n    allValid,\n    onChangeField,\n    onClickChange,\n    onClickFind,\n    password,\n    passwordRe,\n    isPasswordLengthValid,\n    isPasswordCombValid,\n    passwordReWarning,\n    showWarning,\n    failed\n  } = props;\n\n  if (failed) return <FailView intl={intl} onClickFind={onClickFind} />\n\n  return (\n    <div className=\"reset-password\">\n      <div className=\"reset-password__container\">\n        <h1>\n          {intl.formatMessage({id: \"ID_RESET_PW_TITLE\"})}\n        </h1>\n        <div className=\"reset-password__form\">\n          <Field.SecureText\n            id=\"password\"\n            value={password}\n            onChange={onChangeField}\n            title={intl.formatMessage({id: \"ID_MY_ACCOUNT_PW_NEW\"})}\n            placeholder={intl.formatMessage({id: \"ID_SIGNIN_PW_PLACEHOLDER\"})}\n            secureToggleOption={true}\n            informations={[\n              {\n                text: intl.formatMessage({ id: \"ID_SIGNUP_PW_INFO_LENGTH\"}),\n                valid: password.length ? isPasswordLengthValid : undefined\n              },\n              {\n                text: intl.formatMessage({ id: \"ID_SIGNUP_PW_INFO_MIX\"}),\n                valid: password.length ? isPasswordCombValid : undefined\n              }\n            ]}\n          />\n          <Field.SecureText\n            id=\"passwordRe\"\n            value={passwordRe}\n            onChange={onChangeField}\n            title={intl.formatMessage({id: \"ID_MY_ACCOUNT_PW_RE\"})}\n            placeholder={intl.formatMessage({id: \"ID_SIGNIN_PW_PLACEHOLDER\"})}\n            secureToggleOption={true}\n            warning={showWarning ? passwordReWarning : undefined}\n          />\n        </div>\n        <button className={`enable--${allValid}`} onClick={onClickChange}>\n          {intl.formatMessage({id: \"ID_RESET_PW_BUTTON\"})}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction FailView({ intl, onClickFind }) {\n  return (\n    <div className=\"reset-password\">\n      <h1>\n        {intl.formatMessage({id: \"ID_RESET_PW_FAIL_TITLE\"})}\n      </h1>\n      <p className=\"reset-password__desc\">\n        {intl.formatMessage({id: \"ID_RESET_PW_FAIL_DESC\"})}\n      </p>\n      <button onClick={onClickFind}>\n        {intl.formatMessage({id: \"ID_FORGOTPW\"})}\n      </button>\n    </div>\n  );\n}\n\nexport default injectIntl(View);\n"]},"metadata":{},"sourceType":"module"}