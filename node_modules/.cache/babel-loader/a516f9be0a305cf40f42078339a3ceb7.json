{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/SpriteBox/Component/DrawingEditor/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SketchPicker } from \"react-color\";\nimport DrawingCanvas from \"./DrawingCanvas\";\nimport onClickOutside from \"react-onclickoutside\";\nimport ReactTooltip from \"react-tooltip\";\nimport { injectIntl } from \"react-intl\";\nimport * as socketActions from \"../../../../Store/Reducer/socket\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\"; // import LoadingPopup from \"../../../Common/LoadingPopup\";\n\nimport PopUp, { showPopUp } from \"../../../../../../Common/Component/PopUp\";\nimport { SpriteType } from \"../../../../../../Common/Util/Constant\";\nimport * as request from \"../../../../../../Common/Util/HTTPRequest\";\nimport closeImg from \"../../../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport { getColorTheme } from \"../../../../utils/colorThemeUtil\";\nimport imageCompression from \"browser-image-compression\";\nimport \"./index.scss\";\n\nvar DrawingEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DrawingEditor, _Component);\n\n  function DrawingEditor(props) {\n    var _this;\n\n    _classCallCheck(this, DrawingEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DrawingEditor).call(this, props));\n    _this.state = {\n      canvasHeight: 0,\n      isColorPickerOn: false,\n      brushWidth: 10,\n      selectedColor: \"rgba(0,0,0,1)\",\n      selectedToolBtn: \"pen\",\n      drawingBlob: undefined,\n      isUploading: false\n    };\n    _this.drawingCanvas = undefined;\n    _this.presetColors = [\"#20a1ec\", \"#ffd185\", \"#77d354\", \"#ffba5c\", \"#23d8af\", \"#f96063\", \"#916cc5\", \"#3e4852\", \"#969fa9\", \"#ffffff\"];\n\n    _this.resizeView = function () {\n      var className = \"DrawingEditor__CanvasHolder\";\n      var width = document.getElementsByClassName(className)[0].clientWidth - 300;\n      var height = width * 9 / 16;\n\n      _this.drawingCanvas.setCanvasSize(width, height);\n\n      _this.setState({\n        canvasHeight: height\n      });\n    };\n\n    _this.onColorChanged = function (color) {\n      var _color$rgb = color.rgb,\n          r = _color$rgb.r,\n          g = _color$rgb.g,\n          b = _color$rgb.b,\n          a = _color$rgb.a;\n      var newColor = \"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",\").concat(a, \")\");\n\n      _this.drawingCanvas.setColor(newColor);\n\n      _this.setState({\n        selectedColor: newColor // isColorPickerOn: false\n\n      });\n    };\n\n    _this.handleFillBtn = function (e) {\n      _this.setState({\n        isColorPickerOn: !_this.state.isColorPickerOn\n      });\n    };\n\n    _this.handleColorDDClickOutside = function (e) {\n      if (/FillBtn/.test(e.target.className)) return;\n      if (_this.state.isColorPickerOn) _this.handleFillBtn(e);\n    };\n\n    _this.handleBrushSizeChanged = function (e) {\n      if (!isNaN(e.target.value)) {\n        _this.drawingCanvas.setBrushWidth(Number(e.target.value));\n\n        _this.setState({\n          brushWidth: Number(e.target.value)\n        });\n      }\n    };\n\n    _this.addImageFromMobile = function (url) {\n      _this.drawingCanvas.addImageFromURL(url);\n    };\n\n    _this.handleImportFileSelected = function (e) {\n      var file = e.target.files[0];\n      var fr = new FileReader();\n\n      fr.onload = function () {\n        _this.drawingCanvas.addImageFromURL(fr.result);\n      };\n\n      fr.readAsDataURL(file);\n    };\n\n    _this.onHistoryStatusChanged = function (canUndo, canRedo) {// console.log(`canUndo :${canUndo}, canRedo :${canRedo}`);\n    };\n\n    _this.handleToolSelected = function (tool) {\n      switch (tool) {\n        case \"image\":\n          _this.fileInput.current.click();\n\n          break;\n\n        case \"clear\":\n          _this.drawingCanvas.clearAll();\n\n          break;\n\n        case \"export\":\n          _this.drawingCanvas.toBlob(function (blobUrl, blob) {\n            window.open(blobUrl, \"_blank\");\n          });\n\n          break;\n\n        case \"mobileImage\":\n          _this.props.setRequestImage(true);\n\n          break;\n\n        case \"undo\":\n          _this.drawingCanvas.undo();\n\n          break;\n\n        case \"redo\":\n          _this.drawingCanvas.redo();\n\n          break;\n\n        case \"delete\":\n          _this.drawingCanvas.delete();\n\n          break;\n\n        case \"forward\":\n          _this.drawingCanvas.forward();\n\n          break;\n\n        case \"backward\":\n          _this.drawingCanvas.backward();\n\n          break;\n\n        case \"front\":\n          _this.drawingCanvas.front();\n\n          break;\n\n        case \"back\":\n          _this.drawingCanvas.back();\n\n          break;\n\n        case \"paste\":\n          _this.drawingCanvas.paste();\n\n          break;\n\n        default:\n          _this.drawingCanvas.selectTool(tool);\n\n          break;\n      }\n    };\n\n    _this.ceaseMobileImage = function (e) {\n      e.preventDefault();\n\n      _this.props.setRequestImage(false);\n    };\n\n    _this.handleApply = function () {\n      if (_this.state.isUploading) {\n        return;\n      }\n\n      _this.setState({\n        isUploading: true\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var blob, imageFile, options, compressedFile, selectedSceneId, data, url, response, json, info, res, asset;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                blob = _this.state.drawingBlob;\n\n                if (!(!blob || !blob.size || !blob.type)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                showPopUp(React.createElement(PopUp.OneButton, {\n                  title: \"\\uBE48 \\uC774\\uBBF8\\uC9C0\\uB294 \\uC800\\uC7A5\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\",\n                  buttonName: \"\\uD655\\uC778\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 194\n                  },\n                  __self: this\n                }));\n\n                _this.setState({\n                  isUploading: false\n                });\n\n                return _context.abrupt(\"return\");\n\n              case 5:\n                /** */\n                imageFile = blob; // console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\n                // console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n\n                options = {\n                  maxSizeMB: 0.5,\n                  maxWidthOrHeight: 1280,\n                  useWebWorker: true\n                };\n                _context.prev = 7;\n                _context.next = 10;\n                return imageCompression(imageFile, options);\n\n              case 10:\n                compressedFile = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](7);\n                console.log(_context.t0);\n\n              case 16:\n                /** */\n                selectedSceneId = _this.props.selectedSceneId;\n                _this.tempSpriteIds = [];\n                data = new FormData();\n                data.append(\"file\", compressedFile);\n                url = undefined;\n                _context.next = 23;\n                return request.uploadAsset(data);\n\n              case 23:\n                response = _context.sent;\n                _context.next = 26;\n                return response.json();\n\n              case 26:\n                json = _context.sent;\n                url = json.url;\n                info = _this.setCustomSpriteInfo(url, \"custom\");\n                info.name = _this.props.countUpSameName(\"custom\", _this.props.spriteIds);\n                _context.next = 32;\n                return request.addAsset(info.asset);\n\n              case 32:\n                res = _context.sent;\n                _context.next = 35;\n                return res.json();\n\n              case 35:\n                asset = _context.sent;\n                delete info[\"asset\"];\n\n                _this.props.AssetLibrary.addAsset(asset);\n\n                _this.props.addSprites(selectedSceneId, [info]);\n\n                _this.props.dismiss();\n\n              case 40:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 13]]);\n      })));\n    };\n\n    _this.onDrawingChanged = function (blobUrl, blob) {\n      _this.setState({\n        drawingBlob: blob\n      });\n    };\n\n    _this.setCustomSpriteInfo = function (url, name) {\n      url = url.split(\"/\");\n      url = url[url.length - 1];\n      url = url.split(\".\")[0];\n      var assetId = url;\n      var type = SpriteType.CUSTOM;\n      url = \"/custom/\" + url + \".png\";\n      var asset = {\n        assetId: assetId,\n        type: type,\n        defaultName: name,\n        path: url,\n        thumb: url\n      };\n      return {\n        name: name,\n        assetId: assetId,\n        type: type,\n        asset: asset\n      };\n    };\n\n    _this.fileInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(DrawingEditor, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.props.email) {\n        if (this.props.responseImage !== nextProps.responseImage) {\n          if (nextProps.responseImage !== undefined) {\n            this.addImageFromMobile(nextProps.responseImage);\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawingCanvas = new DrawingCanvas(\"drawingCanvas\", this.onHistoryStatusChanged, this.onDrawingChanged);\n      window.addEventListener(\"resize\", this.resizeView);\n      this.resizeView();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.resizeView);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          canvasHeight = _this$state.canvasHeight,\n          selectedColor = _this$state.selectedColor,\n          isColorPickerOn = _this$state.isColorPickerOn,\n          selectedToolBtn = _this$state.selectedToolBtn,\n          isUploading = _this$state.isUploading;\n      var handleApply = this.handleApply;\n\n      var ManageBtn = function ManageBtn() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            name = _ref2.name,\n            tip = _ref2.tip;\n\n        var colorTheme = getColorTheme();\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          \"data-tip\": tip,\n          className: \"ManageBtn ManageBtn--\".concat(name, \" \").concat(colorTheme),\n          onClick: function onClick() {\n            return _this2.handleToolSelected(name);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }), React.createElement(ReactTooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }));\n      };\n\n      var LayerBtn = function LayerBtn() {\n        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            name = _ref3.name,\n            text = _ref3.text,\n            tip = _ref3.tip;\n\n        var colorTheme = getColorTheme();\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          \"data-tip\": tip,\n          className: \"LayerBtn LayerBtn--\".concat(name),\n          onClick: function onClick() {\n            return _this2.handleToolSelected(name);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"LayerBtn__icon LayerBtn__icon--\".concat(name, \" \").concat(colorTheme),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"LayerBtn__text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, text)), React.createElement(ReactTooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }));\n      };\n\n      var ToolBtn = function ToolBtn() {\n        var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            name = _ref4.name,\n            selectedToolBtn = _ref4.selectedToolBtn,\n            tip = _ref4.tip;\n\n        var toggle = name === selectedToolBtn ? \"on\" : \"off\";\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, React.createElement(ReactTooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          \"data-tip\": tip,\n          className: \"ToolBtn ToolBtn--\".concat(name, \"--\").concat(toggle),\n          onClick: function onClick() {\n            _this2.setState({\n              selectedToolBtn: name\n            }, function () {\n              _this2.handleToolSelected(name);\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }));\n      };\n\n      var FileBtn = function FileBtn() {\n        var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            name = _ref5.name,\n            text = _ref5.text;\n\n        return React.createElement(\"div\", {\n          className: \"FileBtn FileBtn--\".concat(name),\n          onClick: function onClick() {\n            return _this2.handleToolSelected(name);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"FileBtn__icon FileBtn__icon--\".concat(name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"FileBtn__text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, text));\n      };\n\n      var ColorDropDown = onClickOutside(function (props) {\n        var color = props.color,\n            presetColors = props.presetColors,\n            onChangeComplete = props.onChangeComplete;\n        return React.createElement(\"div\", {\n          className: \"ColorDD\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, React.createElement(SketchPicker, {\n          color: color,\n          presetColors: presetColors,\n          onChangeComplete: onChangeComplete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }));\n      });\n      var formatMessage = this.props.intl.formatMessage; // const { requestImage } = this.props;\n\n      var colorTheme = getColorTheme();\n      return React.createElement(\"div\", {\n        className: \"DrawingEditor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DrawingEditorTitleLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DrawingEditorTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Paint\"), React.createElement(\"div\", {\n        className: \"DrawingEditorClose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        onClick: this.props.dismiss,\n        src: colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DrawingEditorTopTools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DrawingEditorTopToolsLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(LayerBtn, {\n        name: \"paste\",\n        text: \"Paste\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_PASTE\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), React.createElement(LayerBtn, {\n        name: \"forward\",\n        text: \"forward\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_FORWARD\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }), React.createElement(LayerBtn, {\n        name: \"backward\",\n        text: \"Backward\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_BACKWARD\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }), React.createElement(LayerBtn, {\n        name: \"front\",\n        text: \"Front\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_FRONT\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }), React.createElement(LayerBtn, {\n        name: \"back\",\n        text: \"Back\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_BACK\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DrawingEditorTopToolsRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(ManageBtn, {\n        name: \"undo\",\n        text: \"undo\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_UNDO\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }), React.createElement(ManageBtn, {\n        name: \"redo\",\n        text: \"redo\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_REDO\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }), React.createElement(ManageBtn, {\n        name: \"delete\",\n        text: \"delete\",\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_DELETE\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DrawingEditorContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DrawingEditorLeftTools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(ToolBtn, {\n        name: \"select\",\n        selectedToolBtn: selectedToolBtn,\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_SELECT\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }), React.createElement(ToolBtn, {\n        name: \"pen\",\n        selectedToolBtn: selectedToolBtn,\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_BRUSH\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }), React.createElement(ToolBtn, {\n        name: \"text\",\n        selectedToolBtn: selectedToolBtn,\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_TEXT\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }), React.createElement(ToolBtn, {\n        name: \"line\",\n        selectedToolBtn: selectedToolBtn,\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_LINE\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }), React.createElement(ToolBtn, {\n        name: \"circle\",\n        selectedToolBtn: selectedToolBtn,\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_CIRCLE\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }), React.createElement(ToolBtn, {\n        name: \"rectangle\",\n        selectedToolBtn: selectedToolBtn,\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_RECT\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }), React.createElement(ToolBtn, {\n        name: \"triangle\",\n        selectedToolBtn: selectedToolBtn,\n        tip: formatMessage({\n          id: \"ID_STORAGE_DRAWING_TIP_TRIANGLE\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"DrawingEditorFill\",\n        onClick: this.handleFillBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"DrawingEditor__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Fill\"), React.createElement(\"p\", {\n        className: \"FillBtn\",\n        style: {\n          color: selectedColor,\n          backgroundColor: selectedColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), isColorPickerOn && React.createElement(ColorDropDown, {\n        handleClickOutside: this.handleColorDDClickOutside,\n        color: selectedColor,\n        presetColors: this.presetColors,\n        onChangeComplete: this.onColorChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DrawingEditorBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: canvasHeight\n        },\n        className: \"DrawingEditor__CanvasHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"drawingCanvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"DrawingEditorBottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.fileInput,\n        style: {\n          display: \"none\"\n        },\n        type: \"file\",\n        className: \"form-control\",\n        accept: \"image/*\",\n        onChange: this.handleImportFileSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }), React.createElement(FileBtn, {\n        name: \"image\",\n        text: this.props.intl.formatMessage({\n          id: \"ID_WIZLAB_DRAWING_LOAD\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }), React.createElement(FileBtn, {\n        name: \"export\",\n        text: this.props.intl.formatMessage({\n          id: \"ID_WIZLAB_DRAWING_SAVE\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }), !isUploading ? React.createElement(\"button\", {\n        className: \"applyBtn\",\n        onClick: handleApply,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"\\uC801\\uC6A9\\uD558\\uAE30\") : React.createElement(\"button\", {\n        className: \"applyBtn off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"\\uC801\\uC6A9\\uC911\\uC785\\uB2C8\\uB2E4.\")));\n    }\n  }]);\n\n  return DrawingEditor;\n}(Component); // const ToolButton = props => {\n//   return (\n//     <button\n//       className=\"DrawingEditor__tool\"\n//       onClick={e => props.onSelected(props.name)}\n//     >\n//       {props.name}\n//     </button>\n//   );\n// };\n\n\nexport default connect(function (state) {\n  return {\n    email: state.userinfo.email,\n    requestImage: state.socket.requestImage,\n    responseImage: state.socket.responseImage,\n    selectedSceneId: state.interaction.selected.scene,\n    spriteIds: state.scene.scenes[state.interaction.selected.scene].spriteIds\n  };\n}, {\n  setRequestImage: socketActions.setRequestImage,\n  addSprites: sceneActions.addSprites\n})(injectIntl(DrawingEditor));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/SpriteBox/Component/DrawingEditor/index.js"],"names":["React","Component","connect","SketchPicker","DrawingCanvas","onClickOutside","ReactTooltip","injectIntl","socketActions","sceneActions","PopUp","showPopUp","SpriteType","request","getColorTheme","imageCompression","DrawingEditor","props","state","canvasHeight","isColorPickerOn","brushWidth","selectedColor","selectedToolBtn","drawingBlob","undefined","isUploading","drawingCanvas","presetColors","resizeView","className","width","document","getElementsByClassName","clientWidth","height","setCanvasSize","setState","onColorChanged","color","rgb","r","g","b","a","newColor","setColor","handleFillBtn","e","handleColorDDClickOutside","test","target","handleBrushSizeChanged","isNaN","value","setBrushWidth","Number","addImageFromMobile","url","addImageFromURL","handleImportFileSelected","file","files","fr","FileReader","onload","result","readAsDataURL","onHistoryStatusChanged","canUndo","canRedo","handleToolSelected","tool","fileInput","current","click","clearAll","toBlob","blobUrl","blob","window","open","setRequestImage","undo","redo","delete","forward","backward","front","back","paste","selectTool","ceaseMobileImage","preventDefault","handleApply","size","type","imageFile","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","console","log","selectedSceneId","tempSpriteIds","data","FormData","append","uploadAsset","response","json","info","setCustomSpriteInfo","name","countUpSameName","spriteIds","addAsset","asset","res","AssetLibrary","addSprites","dismiss","onDrawingChanged","split","length","assetId","CUSTOM","defaultName","path","thumb","createRef","nextProps","nextState","email","responseImage","addEventListener","removeEventListener","ManageBtn","tip","colorTheme","LayerBtn","text","ToolBtn","toggle","FileBtn","ColorDropDown","onChangeComplete","formatMessage","intl","closeImg_darkmode","closeImg","id","backgroundColor","display","userinfo","requestImage","socket","interaction","selected","scene","scenes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SketchPicker } from \"react-color\";\nimport DrawingCanvas from \"./DrawingCanvas\";\nimport onClickOutside from \"react-onclickoutside\";\nimport ReactTooltip from \"react-tooltip\";\nimport { injectIntl } from \"react-intl\";\nimport * as socketActions from \"../../../../Store/Reducer/socket\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\";\n// import LoadingPopup from \"../../../Common/LoadingPopup\";\nimport PopUp, { showPopUp } from \"../../../../../../Common/Component/PopUp\";\nimport { SpriteType } from \"../../../../../../Common/Util/Constant\";\nimport * as request from \"../../../../../../Common/Util/HTTPRequest\";\nimport closeImg from \"../../../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport { getColorTheme } from \"../../../../utils/colorThemeUtil\";\nimport imageCompression from \"browser-image-compression\";\nimport \"./index.scss\";\n\nclass DrawingEditor extends Component {\n  state = {\n    canvasHeight: 0,\n    isColorPickerOn: false,\n    brushWidth: 10,\n    selectedColor: \"rgba(0,0,0,1)\",\n    selectedToolBtn: \"pen\",\n    drawingBlob: undefined,\n    isUploading: false\n  };\n  drawingCanvas = undefined;\n  presetColors = [\n    \"#20a1ec\",\n    \"#ffd185\",\n    \"#77d354\",\n    \"#ffba5c\",\n    \"#23d8af\",\n    \"#f96063\",\n    \"#916cc5\",\n    \"#3e4852\",\n    \"#969fa9\",\n    \"#ffffff\"\n  ];\n\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.email) {\n      if (this.props.responseImage !== nextProps.responseImage) {\n        if (nextProps.responseImage !== undefined) {\n          this.addImageFromMobile(nextProps.responseImage);\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  componentDidMount() {\n    this.drawingCanvas = new DrawingCanvas(\n      \"drawingCanvas\",\n      this.onHistoryStatusChanged,\n      this.onDrawingChanged\n    );\n    window.addEventListener(\"resize\", this.resizeView);\n    this.resizeView();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeView);\n  }\n\n  resizeView = () => {\n    const className = \"DrawingEditor__CanvasHolder\";\n    const width =\n      document.getElementsByClassName(className)[0].clientWidth - 300;\n    const height = (width * 9) / 16;\n    this.drawingCanvas.setCanvasSize(width, height);\n    this.setState({ canvasHeight: height });\n  };\n\n  onColorChanged = color => {\n    const { r, g, b, a } = color.rgb;\n    let newColor = `rgba(${r},${g},${b},${a})`;\n    this.drawingCanvas.setColor(newColor);\n    this.setState({\n      selectedColor: newColor\n      // isColorPickerOn: false\n    });\n  };\n\n  handleFillBtn = e => {\n    this.setState({\n      isColorPickerOn: !this.state.isColorPickerOn\n    });\n  };\n\n  handleColorDDClickOutside = e => {\n    if (/FillBtn/.test(e.target.className)) return;\n    if (this.state.isColorPickerOn) this.handleFillBtn(e);\n  };\n\n  handleBrushSizeChanged = e => {\n    if (!isNaN(e.target.value)) {\n      this.drawingCanvas.setBrushWidth(Number(e.target.value));\n      this.setState({ brushWidth: Number(e.target.value) });\n    }\n  };\n\n  addImageFromMobile = url => {\n    this.drawingCanvas.addImageFromURL(url);\n  };\n\n  handleImportFileSelected = e => {\n    const file = e.target.files[0];\n    const fr = new FileReader();\n    fr.onload = () => {\n      this.drawingCanvas.addImageFromURL(fr.result);\n    };\n    fr.readAsDataURL(file);\n  };\n\n  onHistoryStatusChanged = (canUndo, canRedo) => {\n    // console.log(`canUndo :${canUndo}, canRedo :${canRedo}`);\n  };\n\n  handleToolSelected = tool => {\n    switch (tool) {\n      case \"image\":\n        this.fileInput.current.click();\n        break;\n      case \"clear\":\n        this.drawingCanvas.clearAll();\n        break;\n      case \"export\":\n        this.drawingCanvas.toBlob((blobUrl, blob) => {\n          window.open(blobUrl, \"_blank\");\n        });\n        break;\n      case \"mobileImage\":\n        this.props.setRequestImage(true);\n        break;\n      case \"undo\":\n        this.drawingCanvas.undo();\n        break;\n      case \"redo\":\n        this.drawingCanvas.redo();\n        break;\n      case \"delete\":\n        this.drawingCanvas.delete();\n        break;\n      case \"forward\":\n        this.drawingCanvas.forward();\n        break;\n      case \"backward\":\n        this.drawingCanvas.backward();\n        break;\n      case \"front\":\n        this.drawingCanvas.front();\n        break;\n      case \"back\":\n        this.drawingCanvas.back();\n        break;\n      case \"paste\":\n        this.drawingCanvas.paste();\n        break;\n\n      default:\n        this.drawingCanvas.selectTool(tool);\n        break;\n    }\n  };\n\n  ceaseMobileImage = e => {\n    e.preventDefault();\n    this.props.setRequestImage(false);\n  };\n\n  handleApply = () => {\n    if (this.state.isUploading) {\n      return;\n    }\n\n    this.setState(\n      {\n        isUploading: true\n      },\n      async () => {\n        const blob = this.state.drawingBlob;\n        if (!blob || !blob.size || !blob.type) {\n          showPopUp(\n            <PopUp.OneButton\n              title=\"빈 이미지는 저장할 수 없습니다.\"\n              buttonName=\"확인\"\n            />\n          );\n          this.setState({ isUploading: false });\n          return;\n        }\n\n        /** */\n        const imageFile = blob;\n        // console.log(\"originalFile instanceof Blob\", imageFile instanceof Blob); // true\n        // console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n\n        const options = {\n          maxSizeMB: 0.5,\n          maxWidthOrHeight: 1280,\n          useWebWorker: true\n        };\n\n        let compressedFile;\n        try {\n          compressedFile = await imageCompression(imageFile, options);\n          // console.log(\n          //   \"compressedFile instanceof Blob\",\n          //   compressedFile instanceof Blob\n          // ); // true\n          // console.log(\n          //   `compressedFile size ${compressedFile.size / 1024 / 1024} MB`\n          // ); // smaller than maxSizeMB\n        } catch (error) {\n          console.log(error);\n        }\n\n        /** */\n\n        const { selectedSceneId } = this.props;\n        this.tempSpriteIds = [];\n\n        let data = new FormData();\n        data.append(\"file\", compressedFile);\n\n        let url = undefined;\n\n        const response = await request.uploadAsset(data);\n        const json = await response.json();\n        url = json.url;\n\n        let info = this.setCustomSpriteInfo(url, \"custom\");\n        info.name = this.props.countUpSameName(\"custom\", this.props.spriteIds);\n        const res = await request.addAsset(info.asset);\n        const asset = await res.json();\n\n        delete info[\"asset\"];\n        this.props.AssetLibrary.addAsset(asset);\n        this.props.addSprites(selectedSceneId, [info]);\n        this.props.dismiss();\n      }\n    );\n  };\n  onDrawingChanged = (blobUrl, blob) => {\n    this.setState({ drawingBlob: blob });\n  };\n\n  setCustomSpriteInfo = (url, name) => {\n    url = url.split(\"/\");\n    url = url[url.length - 1];\n    url = url.split(\".\")[0];\n    const assetId = url;\n    const type = SpriteType.CUSTOM;\n    url = \"/custom/\" + url + \".png\";\n\n    const asset = {\n      assetId,\n      type,\n      defaultName: name,\n      path: url,\n      thumb: url\n    };\n    return { name, assetId, type, asset };\n  };\n\n  render() {\n    const {\n      canvasHeight,\n      selectedColor,\n      // brushWidth,\n      isColorPickerOn,\n      selectedToolBtn,\n      isUploading\n    } = this.state;\n    const { handleApply } = this;\n    const ManageBtn = ({ name, tip } = {}) => {\n      const colorTheme = getColorTheme();\n\n      return (\n        <React.Fragment>\n          <p\n            data-tip={tip}\n            className={`ManageBtn ManageBtn--${name} ${colorTheme}`}\n            onClick={() => this.handleToolSelected(name)}\n          />\n          <ReactTooltip />\n        </React.Fragment>\n      );\n    };\n\n    const LayerBtn = ({ name, text, tip } = {}) => {\n      const colorTheme = getColorTheme();\n      return (\n        <React.Fragment>\n          <div\n            data-tip={tip}\n            className={`LayerBtn LayerBtn--${name}`}\n            onClick={() => this.handleToolSelected(name)}\n          >\n            <p\n              className={`LayerBtn__icon LayerBtn__icon--${name} ${colorTheme}`}\n            />\n            <p className={`LayerBtn__text`}>{text}</p>\n          </div>\n          <ReactTooltip />\n        </React.Fragment>\n      );\n    };\n\n    const ToolBtn = ({ name, selectedToolBtn, tip } = {}) => {\n      let toggle = name === selectedToolBtn ? \"on\" : \"off\";\n      return (\n        <React.Fragment>\n          <ReactTooltip />\n          <p\n            data-tip={tip}\n            className={`ToolBtn ToolBtn--${name}--${toggle}`}\n            onClick={() => {\n              this.setState({ selectedToolBtn: name }, () => {\n                this.handleToolSelected(name);\n              });\n            }}\n          />\n        </React.Fragment>\n      );\n    };\n\n    const FileBtn = ({ name, text } = {}) => {\n      return (\n        <div\n          className={`FileBtn FileBtn--${name}`}\n          onClick={() => this.handleToolSelected(name)}\n        >\n          <p className={`FileBtn__icon FileBtn__icon--${name}`} />\n          <p className={`FileBtn__text`}>{text}</p>\n        </div>\n      );\n    };\n\n    const ColorDropDown = onClickOutside(props => {\n      const { color, presetColors, onChangeComplete } = props;\n      return (\n        <div className={`ColorDD`}>\n          <SketchPicker\n            color={color}\n            presetColors={presetColors}\n            onChangeComplete={onChangeComplete}\n          />\n        </div>\n      );\n    });\n\n    const { formatMessage } = this.props.intl;\n    // const { requestImage } = this.props;\n    const colorTheme = getColorTheme();\n    return (\n      <div className=\"DrawingEditor\">\n        <div className=\"DrawingEditorTitleLine\">\n          <div className=\"DrawingEditorTitle\">Paint</div>\n          <div className=\"DrawingEditorClose\">\n            <img\n              onClick={this.props.dismiss}\n              src={colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg}\n              alt=\"img\"\n            />\n          </div>\n        </div>\n        {/* {requestImage && (\n          // <LoadingPopup\n          //   message={\"사진을 가져오는 중입니다...\"}\n          //   handleClose={this.ceaseMobileImage}\n          // />\n          <div>사진을 가져오는 중입니다...</div>\n        )} */}\n        <div className=\"DrawingEditorTopTools\">\n          <div className=\"DrawingEditorTopToolsLeft\">\n            <LayerBtn\n              name=\"paste\"\n              text=\"Paste\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_PASTE\" })}\n            />\n            <LayerBtn\n              name=\"forward\"\n              text=\"forward\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_FORWARD\" })}\n            />\n            <LayerBtn\n              name=\"backward\"\n              text=\"Backward\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_BACKWARD\" })}\n            />\n            <LayerBtn\n              name=\"front\"\n              text=\"Front\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_FRONT\" })}\n            />\n            <LayerBtn\n              name=\"back\"\n              text=\"Back\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_BACK\" })}\n            />\n          </div>\n          <div className=\"DrawingEditorTopToolsRight\">\n            <ManageBtn\n              name=\"undo\"\n              text=\"undo\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_UNDO\" })}\n            />\n            <ManageBtn\n              name=\"redo\"\n              text=\"redo\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_REDO\" })}\n            />\n            <ManageBtn\n              name=\"delete\"\n              text=\"delete\"\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_DELETE\" })}\n            />\n          </div>\n        </div>\n        <div className=\"DrawingEditorContent\">\n          <div className=\"DrawingEditorLeftTools\">\n            <ToolBtn\n              name=\"select\"\n              selectedToolBtn={selectedToolBtn}\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_SELECT\" })}\n            />\n            {/** temp as pen */}\n            <ToolBtn\n              name=\"pen\"\n              selectedToolBtn={selectedToolBtn}\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_BRUSH\" })}\n            />\n            <ToolBtn\n              name=\"text\"\n              selectedToolBtn={selectedToolBtn}\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_TEXT\" })}\n            />\n            <ToolBtn\n              name=\"line\"\n              selectedToolBtn={selectedToolBtn}\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_LINE\" })}\n            />\n            <ToolBtn\n              name=\"circle\"\n              selectedToolBtn={selectedToolBtn}\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_CIRCLE\" })}\n            />\n            <ToolBtn\n              name=\"rectangle\"\n              selectedToolBtn={selectedToolBtn}\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_RECT\" })}\n            />\n            <ToolBtn\n              name=\"triangle\"\n              selectedToolBtn={selectedToolBtn}\n              tip={formatMessage({ id: \"ID_STORAGE_DRAWING_TIP_TRIANGLE\" })}\n            />\n\n            <div className=\"DrawingEditorFill\" onClick={this.handleFillBtn}>\n              <p className=\"DrawingEditor__label\">Fill</p>\n              <p\n                className=\"FillBtn\"\n                style={{\n                  color: selectedColor,\n                  backgroundColor: selectedColor\n                }}\n              />\n              {isColorPickerOn && (\n                <ColorDropDown\n                  handleClickOutside={this.handleColorDDClickOutside}\n                  color={selectedColor}\n                  presetColors={this.presetColors}\n                  onChangeComplete={this.onColorChanged}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"DrawingEditorBoard\">\n            <div\n              style={{ height: canvasHeight }}\n              className=\"DrawingEditor__CanvasHolder\"\n            >\n              <canvas id=\"drawingCanvas\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"DrawingEditorBottom\">\n          <input\n            ref={this.fileInput}\n            style={{ display: \"none\" }}\n            type=\"file\"\n            className=\"form-control\"\n            accept=\"image/*\"\n            onChange={this.handleImportFileSelected}\n          />\n          <FileBtn\n            name=\"image\"\n            text={this.props.intl.formatMessage({\n              id: \"ID_WIZLAB_DRAWING_LOAD\"\n            })}\n          />\n          <FileBtn\n            name=\"export\"\n            text={this.props.intl.formatMessage({\n              id: \"ID_WIZLAB_DRAWING_SAVE\"\n            })}\n          />\n          {/* {this.props.email && (\n            <FileBtn\n              name=\"mobileImage\"\n              text={this.props.intl.formatMessage({\n                id: \"ID_WIZLAB_DRAWING_MOBILE\"\n              })}\n            />\n          )} */}\n          {!isUploading ? (\n            <button className=\"applyBtn\" onClick={handleApply}>\n              적용하기\n            </button>\n          ) : (\n            <button className=\"applyBtn off\">적용중입니다.</button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n// const ToolButton = props => {\n//   return (\n//     <button\n//       className=\"DrawingEditor__tool\"\n//       onClick={e => props.onSelected(props.name)}\n//     >\n//       {props.name}\n//     </button>\n//   );\n// };\n\nexport default connect(\n  state => ({\n    email: state.userinfo.email,\n    requestImage: state.socket.requestImage,\n    responseImage: state.socket.responseImage,\n    selectedSceneId: state.interaction.selected.scene,\n    spriteIds: state.scene.scenes[state.interaction.selected.scene].spriteIds\n  }),\n  {\n    setRequestImage: socketActions.setRequestImage,\n    addSprites: sceneActions.addSprites\n  }\n)(injectIntl(DrawingEditor));\n"]},"metadata":{},"sourceType":"module"}