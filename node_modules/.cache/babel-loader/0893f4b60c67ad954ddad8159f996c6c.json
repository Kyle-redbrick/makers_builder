{"ast":null,"code":"import _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/Preview/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport View from \"./View\";\nimport * as BABYLON from \"babylonjs\"; // eslint-disable-line no-unused-vars\n\nimport * as BABYLONGUI from \"babylonjs-gui\"; // eslint-disable-line no-unused-vars\n\nimport \"babylonjs-loaders\"; // eslint-disable-line no-unused-vars\n\nvar BabylonGame = window.BabylonGame; // eslint-disable-line no-unused-vars\n\nvar BabylonScene = window.BabylonScene; // eslint-disable-line no-unused-vars\n\nvar BabylonGameObject = window.BabylonGameObject; // eslint-disable-line no-unused-vars\n\nvar _window$BabylonConsta = window.BabylonConstant,\n    GAMEMODE = _window$BabylonConsta.GAMEMODE,\n    GAMEOBJECT = _window$BabylonConsta.GAMEOBJECT,\n    PROPERTY_ID = _window$BabylonConsta.PROPERTY_ID; // eslint-disable-line no-unused-vars\n\nvar Preview = /*#__PURE__*/function (_Component) {\n  _inherits(Preview, _Component);\n\n  var _super = _createSuper(Preview);\n\n  function Preview(props) {\n    var _this;\n\n    _classCallCheck(this, Preview);\n\n    _this = _super.call(this, props);\n\n    _this.onPreviewChangeGameObjectProperty = function (payload) {\n      _this.props.updateGameObjectProperty(payload.sceneId, payload.id, payload.propertyId, payload.value);\n\n      _this.updateProjectThumbnail();\n    };\n\n    _this.onPreviewSelectGameObject = function (payload) {\n      var sceneId = payload.sceneId,\n          gameObjectId = payload.gameObjectId;\n\n      _this.props.selectGameObject(sceneId, gameObjectId);\n    };\n\n    _this.onEditorCameraTransformChange = function (payload) {\n      var sceneId = payload.sceneId,\n          position = payload.position,\n          target = payload.target;\n\n      _this.props.setEditorCameraTransform(sceneId, position, target);\n\n      _this.updateProjectThumbnail();\n    };\n\n    var canvasId = props.canvasId,\n        mode = props.mode;\n    _this.canvasId = canvasId || \"previewCanvas\";\n    _this.mode = mode || GAMEMODE.EDIT;\n    _this.preview = null;\n    return _this;\n  }\n\n  _createClass(Preview, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentScene = this.props.currentScene;\n      this.initPreview(currentScene);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.currentSceneId !== this.props.currentSceneId) {\n        this.onChangeCurrentScene(prevProps.currentScene);\n      } else {\n        if (prevProps.currentGameObjectId !== this.props.currentGameObjectId) {\n          this.onChangeCurrentGameObject();\n\n          if (this.mode === GAMEMODE.PREVIEW) {\n            this.onChangeCurrentCamera();\n          }\n        }\n\n        this.checkGameObjectChanges(prevProps);\n      }\n\n      if (prevProps.currentGizmoType !== this.props.currentGizmoType) {\n        this.onChangeCurrentGizmoType();\n      }\n    }\n  }, {\n    key: \"onChangeCurrentScene\",\n    value: function onChangeCurrentScene() {\n      var currentScene = this.props.currentScene;\n\n      if (this.preview) {\n        if (currentScene) {\n          this.preview.updateSceneData(currentScene.id, currentScene);\n          this.preview.changeScene(currentScene.id);\n        } else {\n          this.clearPreviewScene();\n        }\n      } else {\n        this.initPreview(currentScene);\n      }\n    }\n  }, {\n    key: \"onChangeCurrentGameObject\",\n    value: function onChangeCurrentGameObject() {\n      if (!this.preview) {\n        return;\n      }\n\n      var currentGameObject = this.props.currentGameObject;\n      var currentBabylonScene = this.preview.currentScene;\n\n      if (currentGameObject) {\n        currentBabylonScene.selectGameObjectWithId(currentGameObject.id);\n      } else {\n        currentBabylonScene.selectGameObject(null);\n      }\n\n      this.updateProjectThumbnail();\n    }\n  }, {\n    key: \"checkGameObjectChanges\",\n    value: function checkGameObjectChanges(prevProps) {\n      var prevGameObjectIds = prevProps.currentGameObjectIds;\n      var currentGameObjectIds = this.props.currentGameObjectIds;\n\n      if (prevGameObjectIds.length > currentGameObjectIds.length) {\n        var removedIds = prevGameObjectIds.filter(function (id) {\n          return !currentGameObjectIds.includes(id);\n        });\n        this.onRemoveGameObjects(removedIds);\n      }\n\n      var added = [];\n\n      for (var i in currentGameObjectIds) {\n        var currentGameObjectId = currentGameObjectIds[i];\n\n        if (prevGameObjectIds.includes(currentGameObjectId)) {\n          var prevGameObject = prevProps.currentGameObjects[currentGameObjectId];\n          var currentGameObject = this.props.currentGameObjects[currentGameObjectId];\n          this.checkGameObjectPropertyChanges(prevGameObject, currentGameObject);\n        } else {\n          added.push(currentGameObjectId);\n        }\n      }\n\n      if (added.length > 0) {\n        this.onAddGameObjects(added);\n      }\n    }\n  }, {\n    key: \"checkGameObjectPropertyChanges\",\n    value: function checkGameObjectPropertyChanges(prevGameObject, currentGameObject) {\n      var _this2 = this;\n\n      var propertyIds = Object.values(PROPERTY_ID);\n      propertyIds.forEach(function (propertyId) {\n        if (JSON.stringify(prevGameObject[propertyId]) !== JSON.stringify(currentGameObject[propertyId])) {\n          _this2.onChangeGameObjectProperty(currentGameObject, propertyId);\n        }\n      });\n    }\n  }, {\n    key: \"onChangeGameObjectProperty\",\n    value: function onChangeGameObjectProperty(gameObj, propertyId) {\n      var currentBabylonScene = this.preview.currentScene;\n      var babylonGameObj = currentBabylonScene.getGameObject(gameObj.id);\n      var property = gameObj[propertyId];\n      babylonGameObj.setProperty(propertyId, property);\n    }\n  }, {\n    key: \"onAddGameObjects\",\n    value: function onAddGameObjects(gameObjIds) {\n      var _this3 = this;\n\n      if (gameObjIds.length === 0) return;\n      if (!this.preview || !this.preview.currentScene) return;\n      var _this$props = this.props,\n          currentGameObjects = _this$props.currentGameObjects,\n          selectGameObject = _this$props.selectGameObject;\n      var added = [];\n      gameObjIds.forEach(function (gameObjId) {\n        var gameObjectData = currentGameObjects[gameObjId];\n        var babylonGameObj = BabylonGameObject.create({\n          scene: _this3.preview.currentScene,\n          data: gameObjectData,\n          oncreate: function oncreate(babylonGameObj) {\n            _this3.preview.currentScene.addGameObject(babylonGameObj);\n\n            added.push(babylonGameObj);\n\n            if (added.length === gameObjIds.length) {\n              added.forEach(function (gameObj) {\n                gameObj.onAllGameObjectsAdded();\n              });\n              selectGameObject(_this3.preview.currentScene.id, gameObjIds[0]);\n            }\n          }\n        });\n\n        if (!babylonGameObj) {\n          _this3.preview.currentScene.loadAssetsManager();\n        }\n      });\n      this.updateProjectThumbnail();\n    }\n  }, {\n    key: \"onRemoveGameObjects\",\n    value: function onRemoveGameObjects(gameObjIds) {\n      var _this4 = this;\n\n      if (!this.preview || !gameObjIds) return;\n      gameObjIds.forEach(function (gameObjId) {\n        _this4.preview.currentScene.removeGameObject(gameObjId);\n      });\n      this.updateProjectThumbnail();\n    }\n  }, {\n    key: \"onChangeCurrentGizmoType\",\n    value: function onChangeCurrentGizmoType() {\n      var currentGizmoType = this.props.currentGizmoType;\n\n      if (this.preview) {\n        this.preview.setCurrentGizmoType(currentGizmoType);\n      }\n    }\n  }, {\n    key: \"onChangeCurrentCamera\",\n    value: function onChangeCurrentCamera() {\n      if (!this.preview) {\n        return;\n      }\n\n      var currentGameObject = this.props.currentGameObject;\n\n      if (currentGameObject && currentGameObject.type === GAMEOBJECT.CAMERA) {\n        var currentBabylonScene = this.preview.currentScene;\n        var currentBabylonCamera = currentBabylonScene.getGameObject(currentGameObject.id);\n        currentBabylonScene.scene.activeCamera = currentBabylonCamera.gameObject;\n      }\n    }\n  }, {\n    key: \"initPreview\",\n    value: function initPreview(scene) {\n      if (!scene) return;\n      var previewCanvas = document.getElementById(this.canvasId);\n      var previewConfig = {\n        scenes: _defineProperty({}, scene.id, scene),\n        mode: this.mode\n      };\n      var preview = BabylonGame.create(previewCanvas, previewConfig);\n      this.preview = preview;\n\n      if (this.mode === GAMEMODE.EDIT) {\n        this.props.setBabylonPreview(preview);\n      }\n\n      preview.on(\"gameObjectPropertyChange\", this.onPreviewChangeGameObjectProperty);\n      preview.on(\"gameObjectSelect\", this.onPreviewSelectGameObject);\n      preview.on(\"editorCameraTransformChange\", this.onEditorCameraTransformChange);\n      this.preview.updateSceneData(scene.id, scene);\n      this.preview.runScene(scene.id);\n    }\n  }, {\n    key: \"clearPreviewScene\",\n    value: function clearPreviewScene() {\n      this.preview.removeCurrentScene();\n    }\n  }, {\n    key: \"updateProjectThumbnail\",\n    value: function updateProjectThumbnail() {\n      var _this5 = this;\n\n      if (this.mode !== GAMEMODE.EDIT) {\n        return;\n      }\n\n      this.setProjectThumbnailUpdateTimer(function () {\n        _this5.createProjectThumnailFor(_this5.props.currentSceneId, function (sceneId, thumbnail) {\n          if (_this5.props.email) {\n            _this5.updateDevelopingProjectIcon(thumbnail);\n          }\n\n          _this5.props.setGameThumbnail(thumbnail);\n\n          _this5.props.setSceneThumbnail(sceneId, thumbnail);\n        });\n      });\n    }\n  }, {\n    key: \"setProjectThumbnailUpdateTimer\",\n    value: function setProjectThumbnailUpdateTimer(ontimeout) {\n      this.clearProjectThumbnailUpdateTimer();\n      this.projectThumbnailUpdateTimer = setTimeout(ontimeout, 1000);\n    }\n  }, {\n    key: \"clearProjectThumbnailUpdateTimer\",\n    value: function clearProjectThumbnailUpdateTimer() {\n      if (this.projectThumbnailUpdateTimer) {\n        clearTimeout(this.projectThumbnailUpdateTimer);\n        this.projectThumbnailUpdateTimer = undefined;\n      }\n    }\n  }, {\n    key: \"createProjectThumnailFor\",\n    value: function createProjectThumnailFor(sceneId, oncreate) {\n      var previewCanvas = document.getElementById(this.canvasId);\n\n      if (!previewCanvas) {\n        return;\n      }\n\n      previewCanvas.toBlob(function (blob) {\n        var data = new FormData();\n        data.append(\"file\", blob);\n        request.upload(data).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          return json.url;\n        }).then(function (thumbnail) {\n          if (oncreate) {\n            oncreate(sceneId, thumbnail);\n          }\n        }).catch(function (err) {\n          console.error(err);\n        });\n      });\n    }\n  }, {\n    key: \"updateDevelopingProjectIcon\",\n    value: function updateDevelopingProjectIcon(icon) {\n      var project = this.props.project;\n      var pId = project.pId,\n          useCustomIcon = project.useCustomIcon;\n\n      if (!useCustomIcon) {\n        var params = {\n          pId: pId,\n          icon: icon\n        };\n        request.postDevelopingProject(params);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentScene = this.props.currentScene;\n      return React.createElement(View, {\n        canvasId: this.canvasId,\n        isPlaceholderHidden: !!currentScene || this.mode !== GAMEMODE.EDIT,\n        isPreviewHidden: !currentScene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Preview;\n}(Component);\n\nexport default connect(function (state) {\n  var project = state.project,\n      game = state.game,\n      interaction = state.interaction,\n      userinfo = state.userinfo;\n  var scenes = game.scenes;\n  var currentSceneId = interaction.currentSceneId,\n      currentGizmoType = interaction.currentGizmoType;\n  var email = userinfo ? userinfo.email : null;\n  var currentScene = currentSceneId && scenes[currentSceneId];\n  var currentGameObjectIds = currentScene ? currentScene.gameObjectIds : [];\n  var currentGameObjects = currentScene ? currentScene.gameObjects : {};\n  var currentGameObjectId = interaction.currentGameObjectIds[currentSceneId];\n  var currentGameObject = currentGameObjects[currentGameObjectId];\n  return {\n    project: project,\n    email: email,\n    currentScene: currentScene,\n    currentSceneId: currentSceneId,\n    currentGizmoType: currentGizmoType,\n    currentGameObjectIds: currentGameObjectIds,\n    currentGameObjects: currentGameObjects,\n    currentGameObjectId: currentGameObjectId,\n    currentGameObject: currentGameObject\n  };\n}, {\n  updateGameObjectProperty: gameActions.updateGameObjectProperty,\n  setEditorCameraTransform: gameActions.setEditorCameraTransform,\n  setGameThumbnail: gameActions.setGameThumbnail,\n  setSceneThumbnail: gameActions.setSceneThumbnail,\n  setBabylonPreview: builderActions.setBabylonPreview,\n  selectGameObject: interactionActions.selectGameObject\n})(Preview);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/Preview/Container.js"],"names":["React","Component","connect","request","gameActions","builderActions","interactionActions","View","BABYLON","BABYLONGUI","BabylonGame","window","BabylonScene","BabylonGameObject","BabylonConstant","GAMEMODE","GAMEOBJECT","PROPERTY_ID","Preview","props","onPreviewChangeGameObjectProperty","payload","updateGameObjectProperty","sceneId","id","propertyId","value","updateProjectThumbnail","onPreviewSelectGameObject","gameObjectId","selectGameObject","onEditorCameraTransformChange","position","target","setEditorCameraTransform","canvasId","mode","EDIT","preview","currentScene","initPreview","prevProps","currentSceneId","onChangeCurrentScene","currentGameObjectId","onChangeCurrentGameObject","PREVIEW","onChangeCurrentCamera","checkGameObjectChanges","currentGizmoType","onChangeCurrentGizmoType","updateSceneData","changeScene","clearPreviewScene","currentGameObject","currentBabylonScene","selectGameObjectWithId","prevGameObjectIds","currentGameObjectIds","length","removedIds","filter","includes","onRemoveGameObjects","added","i","prevGameObject","currentGameObjects","checkGameObjectPropertyChanges","push","onAddGameObjects","propertyIds","Object","values","forEach","JSON","stringify","onChangeGameObjectProperty","gameObj","babylonGameObj","getGameObject","property","setProperty","gameObjIds","gameObjId","gameObjectData","create","scene","data","oncreate","addGameObject","onAllGameObjectsAdded","loadAssetsManager","removeGameObject","setCurrentGizmoType","type","CAMERA","currentBabylonCamera","activeCamera","gameObject","previewCanvas","document","getElementById","previewConfig","scenes","setBabylonPreview","on","runScene","removeCurrentScene","setProjectThumbnailUpdateTimer","createProjectThumnailFor","thumbnail","email","updateDevelopingProjectIcon","setGameThumbnail","setSceneThumbnail","ontimeout","clearProjectThumbnailUpdateTimer","projectThumbnailUpdateTimer","setTimeout","clearTimeout","undefined","toBlob","blob","FormData","append","upload","then","res","json","url","catch","err","console","error","icon","project","pId","useCustomIcon","params","postDevelopingProject","state","game","interaction","userinfo","gameObjectIds","gameObjects"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport View from \"./View\";\n\nimport * as BABYLON from \"babylonjs\"; // eslint-disable-line no-unused-vars\nimport * as BABYLONGUI from \"babylonjs-gui\"; // eslint-disable-line no-unused-vars\nimport \"babylonjs-loaders\"; // eslint-disable-line no-unused-vars\nconst BabylonGame = window.BabylonGame; // eslint-disable-line no-unused-vars\nconst BabylonScene = window.BabylonScene; // eslint-disable-line no-unused-vars\nconst BabylonGameObject = window.BabylonGameObject; // eslint-disable-line no-unused-vars\nconst { GAMEMODE, GAMEOBJECT, PROPERTY_ID } = window.BabylonConstant; // eslint-disable-line no-unused-vars\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props);\n    const { canvasId, mode } = props;\n    this.canvasId = canvasId || \"previewCanvas\";\n    this.mode = mode || GAMEMODE.EDIT;\n    this.preview = null;\n  }\n  componentDidMount() {\n    const { currentScene } = this.props;\n    this.initPreview(currentScene);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentSceneId !== this.props.currentSceneId) {\n      this.onChangeCurrentScene(prevProps.currentScene);\n    } else {\n      if (prevProps.currentGameObjectId !== this.props.currentGameObjectId) {\n        this.onChangeCurrentGameObject();\n        if (this.mode === GAMEMODE.PREVIEW) {\n          this.onChangeCurrentCamera();\n        }\n      }\n      this.checkGameObjectChanges(prevProps);\n    }\n    if (prevProps.currentGizmoType !== this.props.currentGizmoType) {\n      this.onChangeCurrentGizmoType();\n    }\n  }\n  onChangeCurrentScene() {\n    const { currentScene } = this.props;\n    if (this.preview) {\n      if (currentScene) {\n        this.preview.updateSceneData(currentScene.id, currentScene);\n        this.preview.changeScene(currentScene.id);\n      } else {\n        this.clearPreviewScene();\n      }\n    } else {\n      this.initPreview(currentScene);\n    }\n  }\n  onChangeCurrentGameObject() {\n    if (!this.preview) {\n      return;\n    }\n\n    const { currentGameObject } = this.props;\n    const currentBabylonScene = this.preview.currentScene;\n    if (currentGameObject) {\n      currentBabylonScene.selectGameObjectWithId(currentGameObject.id);\n    } else {\n      currentBabylonScene.selectGameObject(null);\n    }\n    this.updateProjectThumbnail();\n  }\n  checkGameObjectChanges(prevProps) {\n    const prevGameObjectIds = prevProps.currentGameObjectIds;\n    const { currentGameObjectIds } = this.props;\n    if (prevGameObjectIds.length > currentGameObjectIds.length) {\n      const removedIds = prevGameObjectIds.filter(\n        id => !currentGameObjectIds.includes(id)\n      );\n      this.onRemoveGameObjects(removedIds);\n    }\n    const added = [];\n    for (let i in currentGameObjectIds) {\n      const currentGameObjectId = currentGameObjectIds[i];\n      if (prevGameObjectIds.includes(currentGameObjectId)) {\n        const prevGameObject =\n          prevProps.currentGameObjects[currentGameObjectId];\n        const currentGameObject = this.props.currentGameObjects[\n          currentGameObjectId\n        ];\n        this.checkGameObjectPropertyChanges(prevGameObject, currentGameObject);\n      } else {\n        added.push(currentGameObjectId);\n      }\n    }\n    if (added.length > 0) {\n      this.onAddGameObjects(added);\n    }\n  }\n  checkGameObjectPropertyChanges(prevGameObject, currentGameObject) {\n    const propertyIds = Object.values(PROPERTY_ID);\n    propertyIds.forEach(propertyId => {\n      if (\n        JSON.stringify(prevGameObject[propertyId]) !==\n        JSON.stringify(currentGameObject[propertyId])\n      ) {\n        this.onChangeGameObjectProperty(currentGameObject, propertyId);\n      }\n    });\n  }\n  onChangeGameObjectProperty(gameObj, propertyId) {\n    const currentBabylonScene = this.preview.currentScene;\n    const babylonGameObj = currentBabylonScene.getGameObject(gameObj.id);\n    const property = gameObj[propertyId];\n    babylonGameObj.setProperty(propertyId, property);\n  }\n  onAddGameObjects(gameObjIds) {\n    if (gameObjIds.length === 0) return;\n    if (!this.preview || !this.preview.currentScene) return;\n\n    const { currentGameObjects, selectGameObject } = this.props;\n    const added = [];\n    gameObjIds.forEach(gameObjId => {\n      const gameObjectData = currentGameObjects[gameObjId];\n      const babylonGameObj = BabylonGameObject.create({\n        scene: this.preview.currentScene,\n        data: gameObjectData,\n        oncreate: babylonGameObj => {\n          this.preview.currentScene.addGameObject(babylonGameObj);\n          added.push(babylonGameObj);\n\n          if (added.length === gameObjIds.length) {\n            added.forEach(gameObj => {\n              gameObj.onAllGameObjectsAdded();\n            });\n            selectGameObject(this.preview.currentScene.id, gameObjIds[0]);\n          }\n        }\n      });\n      if (!babylonGameObj) {\n        this.preview.currentScene.loadAssetsManager();\n      }\n    });\n    this.updateProjectThumbnail();\n  }\n  onRemoveGameObjects(gameObjIds) {\n    if (!this.preview || !gameObjIds) return;\n    gameObjIds.forEach(gameObjId => {\n      this.preview.currentScene.removeGameObject(gameObjId);\n    });\n    this.updateProjectThumbnail();\n  }\n  onChangeCurrentGizmoType() {\n    const { currentGizmoType } = this.props;\n    if (this.preview) {\n      this.preview.setCurrentGizmoType(currentGizmoType);\n    }\n  }\n  onChangeCurrentCamera() {\n    if (!this.preview) {\n      return;\n    }\n\n    const { currentGameObject } = this.props;\n    if (currentGameObject && currentGameObject.type === GAMEOBJECT.CAMERA) {\n      const currentBabylonScene = this.preview.currentScene;\n      const currentBabylonCamera = currentBabylonScene.getGameObject(\n        currentGameObject.id\n      );\n      currentBabylonScene.scene.activeCamera = currentBabylonCamera.gameObject;\n    }\n  }\n\n  initPreview(scene) {\n    if (!scene) return;\n\n    const previewCanvas = document.getElementById(this.canvasId);\n    const previewConfig = {\n      scenes: { [scene.id]: scene },\n      mode: this.mode\n    };\n    const preview = BabylonGame.create(previewCanvas, previewConfig);\n    this.preview = preview;\n\n    if (this.mode === GAMEMODE.EDIT) {\n      this.props.setBabylonPreview(preview);\n    }\n\n    preview.on(\n      \"gameObjectPropertyChange\",\n      this.onPreviewChangeGameObjectProperty\n    );\n    preview.on(\"gameObjectSelect\", this.onPreviewSelectGameObject);\n    preview.on(\n      \"editorCameraTransformChange\",\n      this.onEditorCameraTransformChange\n    );\n\n    this.preview.updateSceneData(scene.id, scene);\n    this.preview.runScene(scene.id);\n  }\n  clearPreviewScene() {\n    this.preview.removeCurrentScene();\n  }\n\n  onPreviewChangeGameObjectProperty = payload => {\n    this.props.updateGameObjectProperty(\n      payload.sceneId,\n      payload.id,\n      payload.propertyId,\n      payload.value\n    );\n    this.updateProjectThumbnail();\n  };\n  onPreviewSelectGameObject = payload => {\n    const { sceneId, gameObjectId } = payload;\n    this.props.selectGameObject(sceneId, gameObjectId);\n  };\n  onEditorCameraTransformChange = payload => {\n    const { sceneId, position, target } = payload;\n    this.props.setEditorCameraTransform(sceneId, position, target);\n    this.updateProjectThumbnail();\n  };\n\n  updateProjectThumbnail() {\n    if (this.mode !== GAMEMODE.EDIT) {\n      return;\n    }\n\n    this.setProjectThumbnailUpdateTimer(() => {\n      this.createProjectThumnailFor(\n        this.props.currentSceneId,\n        (sceneId, thumbnail) => {\n          if (this.props.email) {\n            this.updateDevelopingProjectIcon(thumbnail);\n          }\n          this.props.setGameThumbnail(thumbnail);\n          this.props.setSceneThumbnail(sceneId, thumbnail);\n        }\n      );\n    });\n  }\n  setProjectThumbnailUpdateTimer(ontimeout) {\n    this.clearProjectThumbnailUpdateTimer();\n    this.projectThumbnailUpdateTimer = setTimeout(ontimeout, 1000);\n  }\n  clearProjectThumbnailUpdateTimer() {\n    if (this.projectThumbnailUpdateTimer) {\n      clearTimeout(this.projectThumbnailUpdateTimer);\n      this.projectThumbnailUpdateTimer = undefined;\n    }\n  }\n  createProjectThumnailFor(sceneId, oncreate) {\n    const previewCanvas = document.getElementById(this.canvasId);\n    if (!previewCanvas) {\n      return;\n    }\n\n    previewCanvas.toBlob(blob => {\n      const data = new FormData();\n      data.append(\"file\", blob);\n      request\n        .upload(data)\n        .then(res => res.json())\n        .then(json => json.url)\n        .then(thumbnail => {\n          if (oncreate) {\n            oncreate(sceneId, thumbnail);\n          }\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    });\n  }\n  updateDevelopingProjectIcon(icon) {\n    const { project } = this.props;\n    const { pId, useCustomIcon } = project;\n    if (!useCustomIcon) {\n      const params = { pId, icon };\n      request.postDevelopingProject(params);\n    }\n  }\n\n  render() {\n    const { currentScene } = this.props;\n    return (\n      <View\n        canvasId={this.canvasId}\n        isPlaceholderHidden={!!currentScene || this.mode !== GAMEMODE.EDIT}\n        isPreviewHidden={!currentScene}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    const { project, game, interaction, userinfo } = state;\n    const { scenes } = game;\n    const { currentSceneId, currentGizmoType } = interaction;\n    const email = userinfo ? userinfo.email : null;\n    const currentScene = currentSceneId && scenes[currentSceneId];\n    const currentGameObjectIds = currentScene ? currentScene.gameObjectIds : [];\n    const currentGameObjects = currentScene ? currentScene.gameObjects : {};\n    const currentGameObjectId =\n      interaction.currentGameObjectIds[currentSceneId];\n    const currentGameObject = currentGameObjects[currentGameObjectId];\n    return {\n      project,\n      email,\n      currentScene,\n      currentSceneId,\n      currentGizmoType,\n      currentGameObjectIds,\n      currentGameObjects,\n      currentGameObjectId,\n      currentGameObject\n    };\n  },\n  {\n    updateGameObjectProperty: gameActions.updateGameObjectProperty,\n    setEditorCameraTransform: gameActions.setEditorCameraTransform,\n    setGameThumbnail: gameActions.setGameThumbnail,\n    setSceneThumbnail: gameActions.setSceneThumbnail,\n    setBabylonPreview: builderActions.setBabylonPreview,\n    selectGameObject: interactionActions.selectGameObject\n  }\n)(Preview);\n"]},"metadata":{},"sourceType":"module"}