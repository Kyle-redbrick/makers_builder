{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/ObjectBox/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport { createDefaultGameObjId, createDefaultGameObjName } from \"../../Util/NameApis\";\nimport AssetLibrary from \"../../Util/AssetLibrary\";\nimport { ASSET_CATEGORY } from \"../../Util/Constant\";\nimport RndWrapper from \"../RndProvider/RndWrapper\";\nimport View from \"./View\";\nexport var Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onClickCategory = function (category) {\n      _this.setCurrentCategory(category);\n    };\n\n    _this.onClickAsset = function (asset) {\n      var _this$props = _this.props,\n          currentSceneId = _this$props.currentSceneId,\n          currentScene = _this$props.currentScene,\n          addGameObject = _this$props.addGameObject;\n\n      var newGameObj = _this.convertToGameObject(asset);\n\n      if (newGameObj.type === \"camera\") {\n        newGameObj.isActiveCamera = !_this.getActiveCameraOfScene(currentScene);\n      }\n\n      addGameObject(currentSceneId, newGameObj);\n    };\n\n    _this.onClickClose = function () {\n      _this.props.setIsObjectBoxOn(false);\n    };\n\n    _this.state = {\n      currentAssets: [],\n      currentCategory: undefined,\n      currentSubCategory: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCurrentCategory(ASSET_CATEGORY.MESH);\n    }\n  }, {\n    key: \"setCurrentCategory\",\n    value: function setCurrentCategory(category, subCategory) {\n      var _this2 = this;\n\n      AssetLibrary.loadAssetsFor(category, function (assets) {\n        _this2.setState({\n          currentAssets: assets,\n          currentCategory: category,\n          currentSubCategory: subCategory\n        });\n      });\n    }\n  }, {\n    key: \"convertToGameObject\",\n    value: function convertToGameObject(asset) {\n      var gameObject = JSON.parse(JSON.stringify(asset)); // delete gameObject.thumbPath;\n\n      delete gameObject.description;\n      delete gameObject.animationNames;\n      var currentScene = this.props.currentScene;\n      var gameObjectIds = currentScene.gameObjectIds;\n      var gameObjectId = createDefaultGameObjId(gameObjectIds, asset.type);\n      gameObject.id = gameObjectId;\n      var gameObjectNames = gameObjectIds.map(function (gameObjectId) {\n        return currentScene.gameObjects[gameObjectId].name;\n      });\n      var gameObjectName = createDefaultGameObjName(gameObjectNames, asset.name);\n      gameObject.name = gameObjectName;\n      return gameObject;\n    }\n  }, {\n    key: \"getActiveCameraOfScene\",\n    value: function getActiveCameraOfScene(scene) {\n      for (var gameObjId in scene.gameObjects) {\n        var gameObj = scene.gameObjects[gameObjId];\n\n        if (gameObj.isActiveCamera) {\n          return gameObj;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getRndWrapperConfig\",\n    value: function getRndWrapperConfig() {\n      var objectList = document.getElementById(\"objectList\");\n      var defaultWidth = 650;\n      var defaultHeight = 450;\n      var defaultX = objectList ? objectList.clientWidth + 12 : 36;\n      var defaultY = objectList ? objectList.getBoundingClientRect().top : 36;\n      var minWidth = 420;\n      var minHeight = 420;\n      var maxWidth = 600;\n      var maxHeight = 600;\n      return {\n        defaultX: defaultX,\n        defaultY: defaultY,\n        defaultWidth: defaultWidth,\n        defaultHeight: defaultHeight,\n        minWidth: minWidth,\n        minHeight: minHeight,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currentAssets = _this$state.currentAssets,\n          currentCategory = _this$state.currentCategory,\n          currentSubCategory = _this$state.currentSubCategory;\n      var _this$props2 = this.props,\n          rndId = _this$props2.rndId,\n          rndOrder = _this$props2.rndOrder,\n          bringRndToTop = _this$props2.bringRndToTop,\n          isObjectBoxOn = _this$props2.isObjectBoxOn;\n      return isObjectBoxOn ? React.createElement(RndWrapper, Object.assign({\n        rndId: rndId,\n        rndOrder: rndOrder,\n        bringRndToTop: bringRndToTop\n      }, this.getRndWrapperConfig(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(View, {\n        currentAssets: currentAssets,\n        currentCategory: currentCategory,\n        currentSubCategory: currentSubCategory,\n        onClickCategory: this.onClickCategory,\n        onClickAsset: this.onClickAsset,\n        onClickClose: this.onClickClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })) : React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return Container;\n}(Component);\nexport default connect(function (state) {\n  var isObjectBoxOn = state.builder.isObjectBoxOn;\n  var scenes = state.game.scenes;\n  var currentSceneId = state.interaction.currentSceneId;\n  var currentScene = scenes[currentSceneId];\n  return {\n    isObjectBoxOn: isObjectBoxOn,\n    scenes: scenes,\n    currentSceneId: currentSceneId,\n    currentScene: currentScene\n  };\n}, {\n  addGameObject: gameActions.addGameObject,\n  setIsObjectBoxOn: builderActions.setIsObjectBoxOn,\n  selectGameObject: interactionActions.selectGameObject\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/ObjectBox/Container.js"],"names":["React","Component","connect","gameActions","builderActions","interactionActions","createDefaultGameObjId","createDefaultGameObjName","AssetLibrary","ASSET_CATEGORY","RndWrapper","View","Container","props","onClickCategory","category","setCurrentCategory","onClickAsset","asset","currentSceneId","currentScene","addGameObject","newGameObj","convertToGameObject","type","isActiveCamera","getActiveCameraOfScene","onClickClose","setIsObjectBoxOn","state","currentAssets","currentCategory","undefined","currentSubCategory","MESH","subCategory","loadAssetsFor","assets","setState","gameObject","JSON","parse","stringify","description","animationNames","gameObjectIds","gameObjectId","id","gameObjectNames","map","gameObjects","name","gameObjectName","scene","gameObjId","gameObj","objectList","document","getElementById","defaultWidth","defaultHeight","defaultX","clientWidth","defaultY","getBoundingClientRect","top","minWidth","minHeight","maxWidth","maxHeight","rndId","rndOrder","bringRndToTop","isObjectBoxOn","getRndWrapperConfig","builder","scenes","game","interaction","selectGameObject"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport {\n  createDefaultGameObjId,\n  createDefaultGameObjName\n} from \"../../Util/NameApis\";\nimport AssetLibrary from \"../../Util/AssetLibrary\";\nimport { ASSET_CATEGORY } from \"../../Util/Constant\";\nimport RndWrapper from \"../RndProvider/RndWrapper\";\nimport View from \"./View\";\n\nexport class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentAssets: [],\n      currentCategory: undefined,\n      currentSubCategory: undefined\n    };\n  }\n  componentDidMount() {\n    this.setCurrentCategory(ASSET_CATEGORY.MESH);\n  }\n\n  onClickCategory = category => {\n    this.setCurrentCategory(category);\n  };\n  setCurrentCategory(category, subCategory) {\n    AssetLibrary.loadAssetsFor(category, assets => {\n      this.setState({\n        currentAssets: assets,\n        currentCategory: category,\n        currentSubCategory: subCategory\n      });\n    });\n  }\n\n  onClickAsset = asset => {\n    const { currentSceneId, currentScene, addGameObject } = this.props;\n    const newGameObj = this.convertToGameObject(asset);\n\n    if (newGameObj.type === \"camera\") {\n      newGameObj.isActiveCamera = !this.getActiveCameraOfScene(currentScene);\n    }\n\n    addGameObject(currentSceneId, newGameObj);\n  };\n  convertToGameObject(asset) {\n    const gameObject = JSON.parse(JSON.stringify(asset));\n    // delete gameObject.thumbPath;\n    delete gameObject.description;\n    delete gameObject.animationNames;\n\n    const { currentScene } = this.props;\n    const gameObjectIds = currentScene.gameObjectIds;\n    const gameObjectId = createDefaultGameObjId(gameObjectIds, asset.type);\n    gameObject.id = gameObjectId;\n\n    const gameObjectNames = gameObjectIds.map(\n      gameObjectId => currentScene.gameObjects[gameObjectId].name\n    );\n    const gameObjectName = createDefaultGameObjName(\n      gameObjectNames,\n      asset.name\n    );\n    gameObject.name = gameObjectName;\n\n    return gameObject;\n  }\n  getActiveCameraOfScene(scene) {\n    for (let gameObjId in scene.gameObjects) {\n      const gameObj = scene.gameObjects[gameObjId];\n      if (gameObj.isActiveCamera) {\n        return gameObj;\n      }\n    }\n    return null;\n  }\n\n  onClickClose = () => {\n    this.props.setIsObjectBoxOn(false);\n  };\n\n  getRndWrapperConfig() {\n    const objectList = document.getElementById(\"objectList\");\n    const defaultWidth = 650;\n    const defaultHeight = 450;\n    const defaultX = objectList ? objectList.clientWidth + 12 : 36;\n    const defaultY = objectList ? objectList.getBoundingClientRect().top : 36;\n    const minWidth = 420;\n    const minHeight = 420;\n    const maxWidth = 600;\n    const maxHeight = 600;\n    return {\n      defaultX,\n      defaultY,\n      defaultWidth,\n      defaultHeight,\n      minWidth,\n      minHeight,\n      maxWidth,\n      maxHeight\n    };\n  }\n\n  render() {\n    const { currentAssets, currentCategory, currentSubCategory } = this.state;\n    const { rndId, rndOrder, bringRndToTop, isObjectBoxOn } = this.props;\n\n    return isObjectBoxOn ? (\n      <RndWrapper\n        rndId={rndId}\n        rndOrder={rndOrder}\n        bringRndToTop={bringRndToTop}\n        {...this.getRndWrapperConfig()}\n      >\n        <View\n          currentAssets={currentAssets}\n          currentCategory={currentCategory}\n          currentSubCategory={currentSubCategory}\n          onClickCategory={this.onClickCategory}\n          onClickAsset={this.onClickAsset}\n          onClickClose={this.onClickClose}\n        />\n      </RndWrapper>\n    ) : (\n      <></>\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    const { isObjectBoxOn } = state.builder;\n    const { scenes } = state.game;\n    const { currentSceneId } = state.interaction;\n    const currentScene = scenes[currentSceneId];\n    return { isObjectBoxOn, scenes, currentSceneId, currentScene };\n  },\n  {\n    addGameObject: gameActions.addGameObject,\n    setIsObjectBoxOn: builderActions.setIsObjectBoxOn,\n    selectGameObject: interactionActions.selectGameObject\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}