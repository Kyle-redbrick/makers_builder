{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sound/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport onClickOutside from \"react-onclickoutside\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as sceneActions from \"../../Store/Reducer/scene\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport { injectIntl } from \"react-intl\";\nimport View from \"./View\";\nimport * as TrackingUtil from \"../../../../Common/Util/TrackingUtil\";\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleClickOutside = function () {\n      var jukebox = _this.props.jukebox;\n\n      if (jukebox.isPlaying) {\n        _this.props.stopSound();\n\n        _this.setState({\n          selectedItemId: undefined\n        });\n      }\n    };\n\n    _this.handleItemSelect = function (id) {\n      if (_this.state.selectedItemId === id) {\n        var jukebox = _this.props.jukebox;\n\n        if (jukebox.isPlaying) {\n          _this.props.stopSound();\n        } else {\n          _this.setState({\n            selectedItemId: undefined\n          }); // const item = AssetLibrary.getSoundAsset(id);\n          // this.props.playSound({\n          //   id: item.id,\n          //   path: item.path,\n          //   type: item.type\n          // });\n\n        }\n      } else {\n        TrackingUtil.sendGAEvent({\n          category: \"Builder\",\n          action: \"ClickSprite\",\n          label: \"Sound\"\n        });\n\n        _this.setState({\n          selectedItemId: id\n        }, function () {\n          var item = AssetLibrary.getSoundAsset(id);\n\n          _this.props.playSound({\n            id: item.id,\n            path: item.path,\n            type: item.type\n          });\n        });\n      }\n    };\n\n    _this.handleItemRemove = function (id) {\n      if (_this.state.selectedItemId === id) {\n        _this.props.stopSound();\n\n        _this.setState({\n          selectedItemId: undefined\n        });\n      }\n\n      _this.props.removeSound(id);\n    };\n\n    _this.handleOpenSoundPopup = function () {\n      _this.props.stopSound();\n\n      _this.setState({\n        selectedItemId: undefined\n      });\n\n      _this.props.handleSelectTab(\"soundBox\");\n    };\n\n    _this.state = {\n      selectedItemId: null\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          soundIds = _this$props.soundIds,\n          jukebox = _this$props.jukebox,\n          intl = _this$props.intl;\n      var selectedItemId = this.state.selectedItemId;\n      var handleOpenSoundPopup = this.handleOpenSoundPopup,\n          handleItemSelect = this.handleItemSelect,\n          handleItemRemove = this.handleItemRemove;\n      return React.createElement(View, {\n        soundIds: soundIds,\n        handleOpenSoundPopup: handleOpenSoundPopup,\n        selectedItemId: selectedItemId,\n        handleItemSelect: handleItemSelect,\n        handleItemRemove: handleItemRemove,\n        jukebox: jukebox,\n        intl: intl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    jukebox: state.interaction.jukebox,\n    selectedObject: state.interaction.selected.objects[state.interaction.selected.scene],\n    sprites: state.scene.scenes[state.interaction.selected.scene].sprites,\n    soundIds: state.scene.soundIds\n  };\n}, {\n  playSound: interactionActions.playSound,\n  stopSound: interactionActions.stopSound,\n  removeSound: sceneActions.removeSound\n})(injectIntl(onClickOutside(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sound/Container.js"],"names":["React","Component","connect","onClickOutside","interactionActions","sceneActions","AssetLibrary","injectIntl","View","TrackingUtil","Container","props","handleClickOutside","jukebox","isPlaying","stopSound","setState","selectedItemId","undefined","handleItemSelect","id","state","sendGAEvent","category","action","label","item","getSoundAsset","playSound","path","type","handleItemRemove","removeSound","handleOpenSoundPopup","handleSelectTab","soundIds","intl","interaction","selectedObject","selected","objects","scene","sprites","scenes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport onClickOutside from \"react-onclickoutside\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as sceneActions from \"../../Store/Reducer/scene\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport { injectIntl } from \"react-intl\";\nimport View from \"./View\";\nimport * as TrackingUtil from \"../../../../Common/Util/TrackingUtil\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItemId: null\n    };\n  }\n\n  handleClickOutside = () => {\n    const { jukebox } = this.props;\n    if (jukebox.isPlaying) {\n      this.props.stopSound();\n      this.setState({\n        selectedItemId: undefined\n      });\n    }\n  };\n\n  handleItemSelect = id => {\n    if (this.state.selectedItemId === id) {\n      const { jukebox } = this.props;\n      if (jukebox.isPlaying) {\n        this.props.stopSound();\n      } else {\n        this.setState({\n          selectedItemId: undefined\n        });\n        // const item = AssetLibrary.getSoundAsset(id);\n        // this.props.playSound({\n        //   id: item.id,\n        //   path: item.path,\n        //   type: item.type\n        // });\n      }\n    } else {\n      TrackingUtil.sendGAEvent({\n        category: \"Builder\",\n        action: `ClickSprite`,\n        label: \"Sound\"\n      });\n      this.setState(\n        {\n          selectedItemId: id\n        },\n        () => {\n          const item = AssetLibrary.getSoundAsset(id);\n          this.props.playSound({\n            id: item.id,\n            path: item.path,\n            type: item.type\n          });\n        }\n      );\n    }\n  };\n\n  handleItemRemove = id => {\n    if (this.state.selectedItemId === id) {\n      this.props.stopSound();\n      this.setState({ selectedItemId: undefined });\n    }\n    this.props.removeSound(id);\n  };\n\n  handleOpenSoundPopup = () => {\n    this.props.stopSound();\n    this.setState({ selectedItemId: undefined });\n    this.props.handleSelectTab(\"soundBox\");\n  };\n\n  render() {\n    const { soundIds, jukebox, intl } = this.props;\n    const { selectedItemId } = this.state;\n    const { handleOpenSoundPopup, handleItemSelect, handleItemRemove } = this;\n\n    return (\n      <View\n        soundIds={soundIds}\n        handleOpenSoundPopup={handleOpenSoundPopup}\n        selectedItemId={selectedItemId}\n        handleItemSelect={handleItemSelect}\n        handleItemRemove={handleItemRemove}\n        jukebox={jukebox}\n        intl={intl}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    jukebox: state.interaction.jukebox,\n    selectedObject:\n      state.interaction.selected.objects[state.interaction.selected.scene],\n    sprites: state.scene.scenes[state.interaction.selected.scene].sprites,\n    soundIds: state.scene.soundIds\n  }),\n  {\n    playSound: interactionActions.playSound,\n    stopSound: interactionActions.stopSound,\n    removeSound: sceneActions.removeSound\n  }\n)(injectIntl(onClickOutside(Container)));\n"]},"metadata":{},"sourceType":"module"}