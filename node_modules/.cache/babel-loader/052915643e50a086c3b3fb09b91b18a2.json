{"ast":null,"code":"import _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiLiveMonitor/Container.js\";\nimport React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport { URL } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport RndWrapper from \"../../utils/RndWrapper\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { RtcTokenBuilder, RtcRole } from \"agora-access-token\";\nimport { socketUtil } from \"../Socket/Container\";\nimport View from \"./View\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onExitLecture = function () {\n      socketUtil.socket.on(\"lectureExit\", function (data) {\n        if (!_this.props.isTutor) {\n          _this.unpublish();\n\n          _this.setState({\n            isEnd: true\n          });\n\n          _this.showFeedbackAlert();\n        }\n      });\n    };\n\n    _this.agoraSetUp = function () {\n      // create local client\n      _this.agoraClient = AgoraRTC.createClient({\n        mode: \"rtc\",\n        codec: \"vp8\"\n      }); // since this is a monitor, there is no need for videoTrack & audioTrack\n      // initialize agora option\n\n      _this.agoraOptions = {\n        appid: \"60dcb9c3c74b44b6b0b85aad121d4b3b\",\n        appCertificate: \"fa4e9a552b6c47e3a434f136539cd7d4\",\n        channel: _this.multiRoom,\n        uid: _this.props.email,\n        token: \"\" // build token\n\n      };\n      _this.agoraOptions.token = RtcTokenBuilder.buildTokenWithUid(_this.agoraOptions.appid, _this.agoraOptions.appCertificate, _this.agoraOptions.channel, _this.agoraOptions.uid, RtcRole.PUBLISHER, 0);\n\n      _this.agoraJoin();\n    };\n\n    _this.agoraJoin =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // connect when video & audio in the channel is published    \n              _this.agoraClient.on(\"connection-state-change\", _this.handleUserState);\n\n              _this.agoraClient.on(\"user-joined\", function (user) {\n                return _this.addConnectedUser(_this.splitUid(user));\n              });\n\n              _this.agoraClient.on(\"user-published\", _this.handleUserPublished);\n\n              _this.agoraClient.on(\"user-unpublished\", _this.handleUserUnpublished); // join the channel\n\n\n              _context.next = 6;\n              return _this.agoraClient.join(_this.agoraOptions.appid, _this.agoraOptions.channel, _this.agoraOptions.token, _this.agoraOptions.uid);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleUserState = function (currentState, revState, reason) {\n      if (currentState === 'CONNECTED') {\n        _this.setState({\n          roomStatus: \"ready\"\n        });\n      }\n    };\n\n    _this.handleUserPublished =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(user, mediaType) {\n        var currentRoom;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                currentRoom = _this.state.currentRoom;\n                _context2.next = 3;\n                return _this.agoraClient.subscribe(user, mediaType);\n\n              case 3:\n                if (mediaType === 'video') {\n                  _this.playRemoteVideo(user);\n                } else {\n                  user.audioTrack.play();\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.addConnectedUser = function (_ref3) {\n      var email = _ref3.email,\n          pId = _ref3.pId,\n          _ref3$name = _ref3.name,\n          name = _ref3$name === void 0 ? _this.findUsername(email) : _ref3$name;\n\n      if (_this.props.connectedUsers.some(function (user) {\n        return user.email === email;\n      })) {\n        return;\n      }\n\n      if (email === _this.props.tutorEmail) {\n        _this.props.setTutor({\n          email: email,\n          pId: pId,\n          name: name\n        });\n      } else {\n        _this.props.setStudents({\n          email: email,\n          pId: pId,\n          name: name\n        });\n      }\n    };\n\n    _this.splitUid = function (user) {\n      var _user$uid$split = user.uid.split(\":\"),\n          _user$uid$split2 = _slicedToArray(_user$uid$split, 2),\n          email = _user$uid$split2[0],\n          pId = _user$uid$split2[1];\n\n      return {\n        email: email,\n        pId: pId\n      };\n    };\n\n    _this.findUsername = function (email) {\n      var _this$state$attendees = _this.state.attendees.find(function (user) {\n        return user.email === email;\n      }),\n          name = _this$state$attendees.name;\n\n      return name;\n    };\n\n    _this.handleUserUnpublished = function (user) {};\n\n    _this.unpublish = function () {\n      _this.agoraClient.unpublish();\n\n      _this.agoraClient.remoteUsers.forEach(function (user) {\n        return _this.agoraClient.unsubscribe(user);\n      });\n    };\n\n    _this.refreshVideos = function () {\n      _this.setState({\n        roomStatus: \"connected\"\n      });\n    };\n\n    _this.handleVoiceToggleButton = function (email) {\n      if (email !== _this.props.email) return;\n\n      _this.setState({\n        audioEnabled: !_this.state.audioEnabled\n      }, function () {\n        _this.sfutest.send({\n          message: {\n            request: \"configure\",\n            audio: _this.state.audioEnabled\n          }\n        });\n      });\n    };\n\n    _this.handleExitBtn = function () {\n      _this.showExitConfirmAlert();\n    };\n\n    _this.showExitConfirmAlert = function () {\n      var callback = function callback() {\n        request.setCompleteReservation({\n          reservationId: _this.props.reservationId\n        }); // // this.sendData(this.DATA_TYPE_EXIT, null);\n        // socketUtil.sendSocketEvent(\"lectureExit\", {\n        //   roomId: this.props.roomId\n        // });\n\n        _this.unpublish();\n\n        _this.setState({\n          isEnd: true\n        });\n\n        _this.showExitAlert();\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_CONFIRM\",\n        confirmButtonNameId: \"ID_WIZLIVE_EXIT\",\n        cancelButtonNameId: \"ID_WIZLIVE_CANCEL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }));\n    };\n\n    _this.showExitAlert = function () {\n      var callback = function callback() {\n        var _this$props = _this.props,\n            studentEmail = _this$props.studentEmail,\n            reservationId = _this$props.reservationId;\n        var url = \"\".concat(URL.WIZLIVE, \"/tutor/feedback/\").concat(studentEmail, \"/\").concat(reservationId, \"/false\");\n        window.open(url, \"_blank\");\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_COMPLETE\",\n        subtitleId: \"ID_WIZLIVE_FEEDBACK_REQUEST\",\n        confirmButtonNameId: \"ID_WIZLIVE_FEEDBACK_GO\",\n        cancelButtonNameId: \"ID_WIZLIVE_FEEDBACK_NEXTTIME\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleFreeTrialSurvey = function (isOn) {\n      _this.setState({\n        isShowSurveyPopup: isOn\n      });\n    };\n\n    _this.showFeedbackAlert = function () {\n      _this.handleFreeTrialSurvey(true);\n    };\n\n    _this.showFeedbackResultAlert = function (success) {\n      var title = success ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\" : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n      var subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n      showPopUp(React.createElement(Popup.OneButton, {\n        intl: _this.props.intl,\n        titleId: title,\n        subtitleId: subtitle,\n        buttonNameId: \"ID_WIZLIVE_COMFIRM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }));\n    };\n\n    _this.sfutest = null;\n    _this.myid = null;\n    _this.mypvtid = null;\n    _this.feeds = [];\n    _this.mystream = null;\n    _this.tutorVideo = undefined;\n    _this.localVideo = undefined;\n    _this.studentVideos = [];\n    _this.remoteVideos = [];\n    _this.email = _this.opaqueId;\n    _this.tutorName = \"\";\n    _this.localStreamEmail = _this.props.isTutor ? _this.props.tutorEmail : _this.props.email;\n    _this.attendees = [];\n    _this.multiRoom = _this.props.roomId.toString();\n    _this.tutorVideoRef = createRef();\n    _this.student1VideoRef = createRef();\n    _this.student2VideoRef = createRef();\n    _this.student3VideoRef = createRef();\n    _this.student4VideoRef = createRef();\n    _this.state = {\n      attendees: [],\n      students: [],\n      tutor: [],\n      audioEnabled: true,\n      isShowSurveyPopup: false,\n      isEnd: false,\n      roomStatus: \"connecting\"\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"getReservationStudents\",\n    value: function () {\n      var _getReservationStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(callback) {\n        var attendees, tutor;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return request.getReservationStudents(this.props.roomId).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                attendees = _context3.sent;\n\n                if (attendees.length) {\n                  this.setState({\n                    attendees: attendees.map(function (attendee) {\n                      return _objectSpread({}, attendee, {\n                        audioEnabled: true\n                      });\n                    })\n                  });\n                  tutor = attendees[attendees.length - 1];\n                  this.tutorName = tutor.name;\n                }\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function getReservationStudents(_x3) {\n        return _getReservationStudents.apply(this, arguments);\n      }\n\n      return getReservationStudents;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getReservationStudents(); // this.addConnectedUser({ email: this.props.email, pId: this.props.pId, name: this.props.name });\n\n      this.agoraSetUp();\n      this.onExitLecture();\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(email) {\n      return this.state.attendees.findIndex(function (user) {\n        return user.email === email;\n      });\n    }\n  }, {\n    key: \"playRemoteVideo\",\n    value: function playRemoteVideo(user) {\n      var _this$splitUid = this.splitUid(user),\n          email = _this$splitUid.email;\n\n      if (email === this.props.tutorEmail) {\n        user.videoTrack.play(this.videoRefs[this.videoRefs.length - 1].current);\n      } else {\n        user.videoTrack.play(this.videoRefs[this.findIndex(email)].current);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isTutor = _this$props2.isTutor,\n          handleChangeZIndex = _this$props2.handleChangeZIndex,\n          zIndex = _this$props2.zIndex,\n          email = _this$props2.email,\n          tutorEmail = _this$props2.tutorEmail;\n      var _this$state = this.state,\n          students = _this$state.students,\n          audioEnabled = _this$state.audioEnabled,\n          attendees = _this$state.attendees,\n          roomStatus = _this$state.roomStatus;\n      var tutorName = this.tutorName,\n          feeds = this.feeds,\n          handleVoiceToggleButton = this.handleVoiceToggleButton,\n          handleExitBtn = this.handleExitBtn,\n          refreshVideos = this.refreshVideos;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(RndWrapper, {\n        id: \"live\",\n        style: {\n          zIndex: zIndex\n        },\n        defaultWidth: 300,\n        defaultHeight: 300 * 9 / 16 * 2 + 35,\n        defaultX: document.body.clientWidth - 365,\n        defaultY: 0,\n        minWidth: 300,\n        minHeight: 300 * 9 / 16 * 2 + 35,\n        lockAspectRatio: 16 / 9 / 2,\n        lockAspectRatioExtraHeight: 35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(View, {\n        tutorName: tutorName,\n        students: students,\n        isTutor: isTutor,\n        handleChangeZIndex: handleChangeZIndex,\n        feeds: feeds,\n        attendees: attendees,\n        email: email,\n        handleVoiceToggleButton: handleVoiceToggleButton,\n        audioEnabled: audioEnabled,\n        tutorEmail: tutorEmail,\n        handleExitBtn: handleExitBtn,\n        refreshVideos: refreshVideos,\n        videoRefs: this.videoRefs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      })), roomStatus !== \"connected\" && React.createElement(\"div\", {\n        className: \"roomStatusPopup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, roomStatus === \"connecting\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"\\uC811\\uC18D \\uC911\\uC785\\uB2C8\\uB2E4..\"), React.createElement(\"div\", {\n        className: \"roomStatusPopupProgress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      })), roomStatus === \"ready\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"\\uC811\\uC18D \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"), React.createElement(\"div\", {\n        className: \"roomStatusPopupBtn\",\n        onClick: refreshVideos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791\\uD558\\uAE30\")))));\n    }\n  }, {\n    key: \"videoRefs\",\n    get: function get() {\n      return [this.student1VideoRef, this.student2VideoRef, this.student3VideoRef, this.student4VideoRef, this.tutorVideoRef];\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    connectedUsers: [].concat(_toConsumableArray(state.tabs.students), _toConsumableArray(state.tabs.tutor))\n  };\n}, {\n  setStudents: tabActions.setStudents,\n  setTutor: tabActions.setTutor\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiLiveMonitor/Container.js"],"names":["React","Component","createRef","connect","Popup","showPopUp","URL","request","tabActions","RndWrapper","AgoraRTC","RtcTokenBuilder","RtcRole","socketUtil","View","Container","props","onExitLecture","socket","on","data","isTutor","unpublish","setState","isEnd","showFeedbackAlert","agoraSetUp","agoraClient","createClient","mode","codec","agoraOptions","appid","appCertificate","channel","multiRoom","uid","email","token","buildTokenWithUid","PUBLISHER","agoraJoin","handleUserState","user","addConnectedUser","splitUid","handleUserPublished","handleUserUnpublished","join","currentState","revState","reason","roomStatus","mediaType","currentRoom","state","subscribe","playRemoteVideo","audioTrack","play","pId","name","findUsername","connectedUsers","some","tutorEmail","setTutor","setStudents","split","attendees","find","remoteUsers","forEach","unsubscribe","refreshVideos","handleVoiceToggleButton","audioEnabled","sfutest","send","message","audio","handleExitBtn","showExitConfirmAlert","callback","setCompleteReservation","reservationId","showExitAlert","intl","studentEmail","url","WIZLIVE","window","open","handleFreeTrialSurvey","isOn","isShowSurveyPopup","showFeedbackResultAlert","success","title","subtitle","myid","mypvtid","feeds","mystream","tutorVideo","undefined","localVideo","studentVideos","remoteVideos","opaqueId","tutorName","localStreamEmail","roomId","toString","tutorVideoRef","student1VideoRef","student2VideoRef","student3VideoRef","student4VideoRef","students","tutor","getReservationStudents","then","res","json","length","map","attendee","console","error","findIndex","videoTrack","videoRefs","current","handleChangeZIndex","zIndex","document","body","clientWidth","tabs"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport { URL } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport RndWrapper from \"../../utils/RndWrapper\";\nimport AgoraRTC from \"agora-rtc-sdk-ng\";\nimport { RtcTokenBuilder, RtcRole } from \"agora-access-token\";\n\nimport { socketUtil } from \"../Socket/Container\";\nimport View from \"./View\";\n\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.sfutest = null;\n    this.myid = null;\n    this.mypvtid = null;\n    this.feeds = [];\n    this.mystream = null;\n    this.tutorVideo = undefined;\n    this.localVideo = undefined;\n    this.studentVideos = [];\n    this.remoteVideos = [];\n    this.email = this.opaqueId;\n    this.tutorName = \"\";\n    this.localStreamEmail = this.props.isTutor\n      ? this.props.tutorEmail\n      : this.props.email;\n    this.attendees = [];\n\n\n    this.multiRoom = this.props.roomId.toString();\n    this.tutorVideoRef = createRef();\n    this.student1VideoRef = createRef();\n    this.student2VideoRef = createRef();\n    this.student3VideoRef = createRef();\n    this.student4VideoRef = createRef();\n\n\n\n    this.state = {\n      attendees: [],\n      students: [],\n      tutor: [],\n      audioEnabled: true,\n      isShowSurveyPopup: false,\n      isEnd: false,\n      roomStatus: \"connecting\"\n    };\n  }\n\n  get videoRefs() {\n    return [this.student1VideoRef, this.student2VideoRef, this.student3VideoRef, this.student4VideoRef, this.tutorVideoRef];\n  }\n\n\n  async getReservationStudents(callback) {\n    try {\n      const attendees = await request\n        .getReservationStudents(this.props.roomId)\n        .then(res => res.json());\n\n      if (attendees.length) {\n        this.setState({\n          attendees: attendees.map(attendee => ({\n            ...attendee,\n            audioEnabled: true\n          }))\n        });\n\n        const tutor = attendees[attendees.length - 1];\n        this.tutorName = tutor.name;\n        \n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n\n\n\n  componentDidMount() {\n\n    this.getReservationStudents();\n\n    // this.addConnectedUser({ email: this.props.email, pId: this.props.pId, name: this.props.name });\n\n    this.agoraSetUp();\n\n    this.onExitLecture();\n  }\n\n  onExitLecture = () => {\n    socketUtil.socket.on(\"lectureExit\", data => {\n      if (!this.props.isTutor) {\n        this.unpublish();\n        this.setState({ isEnd: true });\n        this.showFeedbackAlert();\n      }\n    });\n  }\n\n  // Agora Setup\n  agoraSetUp = () => {\n    // create local client\n    this.agoraClient = AgoraRTC.createClient({mode: \"rtc\", codec: \"vp8\"});\n    // since this is a monitor, there is no need for videoTrack & audioTrack\n\n\n\n     // initialize agora option\n    this.agoraOptions = {\n      appid: \"60dcb9c3c74b44b6b0b85aad121d4b3b\",\n      appCertificate: \"fa4e9a552b6c47e3a434f136539cd7d4\",\n      channel: this.multiRoom,\n      uid: this.props.email,\n      token: \"\"\n    }\n\n\n\n    // build token\n    this.agoraOptions.token = RtcTokenBuilder.buildTokenWithUid(\n      this.agoraOptions.appid,\n      this.agoraOptions.appCertificate,\n      this.agoraOptions.channel,\n      this.agoraOptions.uid,\n      RtcRole.PUBLISHER,\n      0\n    );\n\n    this.agoraJoin();\n  }\n\n\n  agoraJoin = async () => {\n\n    // connect when video & audio in the channel is published    \n    this.agoraClient.on(\"connection-state-change\", this.handleUserState);\n    this.agoraClient.on(\"user-joined\", user => this.addConnectedUser(this.splitUid(user)));\n    this.agoraClient.on(\"user-published\", this.handleUserPublished);\n    this.agoraClient.on(\"user-unpublished\", this.handleUserUnpublished);\n\n    // join the channel\n    await this.agoraClient.join(\n      this.agoraOptions.appid,\n      this.agoraOptions.channel, \n      this.agoraOptions.token,\n      this.agoraOptions.uid\n    );\n\n\n  }\n\n  handleUserState = (currentState, revState, reason) => {\n    if(currentState === 'CONNECTED') {\n      this.setState({ roomStatus: \"ready\"});\n    }\n  }\n\n  handleUserPublished = async (user, mediaType) => {\n\n    const { currentRoom } = this.state;\n\n    await this.agoraClient.subscribe(user, mediaType);\n\n    if (mediaType === 'video') {\n      this.playRemoteVideo(user);\n    } else {\n      user.audioTrack.play();\n    }\n  }\n\n  \n  findIndex(email) {\n    return this.state.attendees.findIndex(user => user.email === email);\n  }\n\n  addConnectedUser = ({ email, pId, name = this.findUsername(email) }) => {\n    if (this.props.connectedUsers.some(user => user.email === email)) {\n      return;\n    }\n\n    if (email === this.props.tutorEmail) {\n      this.props.setTutor({ email, pId, name });\n    } else {\n      this.props.setStudents({ email, pId, name });\n    }\n  }\n\n  splitUid = user => {\n    const [email, pId] = user.uid.split(\":\");\n    return { email, pId };\n  }\n\n  findUsername = email => {\n    const { name } = this.state.attendees.find(user => user.email === email);\n\n    return name;\n  }\n\n\n  playRemoteVideo(user) {\n    const { email } = this.splitUid(user);\n    if (email === this.props.tutorEmail) {\n      user.videoTrack.play(this.videoRefs[this.videoRefs.length - 1].current);\n    } else {\n      user.videoTrack.play(this.videoRefs[this.findIndex(email)].current);\n    }\n  }\n\n  handleUserUnpublished = user => {\n  }\n\n  unpublish = () => {\n    this.agoraClient.unpublish();\n    this.agoraClient.remoteUsers.forEach(user => this.agoraClient.unsubscribe(user));\n  };\n\n\n  refreshVideos = () => {\n    this.setState({ roomStatus: \"connected\" });\n  };\n\n  handleVoiceToggleButton = email => {\n    if (email !== this.props.email) return;\n\n    this.setState({ audioEnabled: !this.state.audioEnabled }, () => {\n      this.sfutest.send({\n        message: { request: \"configure\", audio: this.state.audioEnabled }\n      });\n    });\n  };\n\n  handleExitBtn = () => {\n    this.showExitConfirmAlert();\n  };\n\n  showExitConfirmAlert = () => {\n    const callback = () => {\n      request.setCompleteReservation({\n        reservationId: this.props.reservationId\n      });\n      // // this.sendData(this.DATA_TYPE_EXIT, null);\n      // socketUtil.sendSocketEvent(\"lectureExit\", {\n      //   roomId: this.props.roomId\n      // });\n\n      this.unpublish();\n      this.setState({ isEnd: true });\n      this.showExitAlert();\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_CONFIRM\"\n        confirmButtonNameId=\"ID_WIZLIVE_EXIT\"\n        cancelButtonNameId=\"ID_WIZLIVE_CANCEL\"\n      />\n    );\n  };\n\n  showExitAlert = () => {\n    const callback = () => {\n      const { studentEmail, reservationId } = this.props;\n      const url = `${\n        URL.WIZLIVE\n      }/tutor/feedback/${studentEmail}/${reservationId}/false`;\n      window.open(url, \"_blank\");\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_COMPLETE\"\n        subtitleId=\"ID_WIZLIVE_FEEDBACK_REQUEST\"\n        confirmButtonNameId=\"ID_WIZLIVE_FEEDBACK_GO\"\n        cancelButtonNameId=\"ID_WIZLIVE_FEEDBACK_NEXTTIME\"\n      />\n    );\n  };\n\n  handleFreeTrialSurvey = isOn => {\n    this.setState({ isShowSurveyPopup: isOn });\n  };\n\n  showFeedbackAlert = () => {\n    this.handleFreeTrialSurvey(true);\n  };\n\n  showFeedbackResultAlert = success => {\n    let title = success\n      ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\"\n      : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n    let subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n    showPopUp(\n      <Popup.OneButton\n        intl={this.props.intl}\n        titleId={title}\n        subtitleId={subtitle}\n        buttonNameId=\"ID_WIZLIVE_COMFIRM\"\n      />\n    );\n  };\n\n  render() {\n    const {\n      isTutor,\n      handleChangeZIndex,\n      zIndex,\n      email,\n      tutorEmail\n    } = this.props;\n    const {\n      students,\n      audioEnabled,\n      attendees,\n      roomStatus\n    } = this.state;\n    const {\n      tutorName,\n      feeds,\n      handleVoiceToggleButton,\n      handleExitBtn,\n      refreshVideos\n    } = this;\n\n    return (\n      <React.Fragment>\n        <RndWrapper\n          id=\"live\"\n          style={{ zIndex }}\n          defaultWidth={300}\n          defaultHeight={((300 * 9) / 16) * 2 + 35}\n          defaultX={document.body.clientWidth - 365}\n          defaultY={0}\n          minWidth={300}\n          minHeight={((300 * 9) / 16) * 2 + 35}\n          lockAspectRatio={16 / 9 / 2}\n          lockAspectRatioExtraHeight={35}\n        >\n          <View\n            tutorName={tutorName}\n            students={students}\n            isTutor={isTutor}\n            handleChangeZIndex={handleChangeZIndex}\n            feeds={feeds}\n            attendees={attendees}\n            email={email}\n            handleVoiceToggleButton={handleVoiceToggleButton}\n            audioEnabled={audioEnabled}\n            tutorEmail={tutorEmail}\n            handleExitBtn={handleExitBtn}\n            refreshVideos={refreshVideos}\n            videoRefs={this.videoRefs}\n          />\n        </RndWrapper>\n        {roomStatus !== \"connected\" && (\n          <div className=\"roomStatusPopup\">\n            <div className=\"roomStatusPopupContent\">\n              {roomStatus === \"connecting\" && (\n                <React.Fragment>\n                  <div className=\"roomStatusPopupMessage\">접속 중입니다..</div>\n                  <div className=\"roomStatusPopupProgress\" />\n                </React.Fragment>\n              )}\n              {roomStatus === \"ready\" && (\n                <React.Fragment>\n                  <div className=\"roomStatusPopupMessage\">접속 되었습니다.</div>\n                  <div className=\"roomStatusPopupBtn\" onClick={refreshVideos}>\n                    시작하기\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    connectedUsers: [...state.tabs.students, ...state.tabs.tutor]\n  }),\n  {\n    setStudents: tabActions.setStudents,\n    setTutor: tabActions.setTutor\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}