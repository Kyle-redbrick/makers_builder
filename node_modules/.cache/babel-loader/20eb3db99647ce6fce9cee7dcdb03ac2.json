{"ast":null,"code":"import _get from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _checkers;\n\nimport OOBC from \"../../../../../Common/Component/OOBCEditor/OOBC\";\nimport { isCodeExist } from \"../../../../../Common/Util/codeComparable\";\nexport var TYPE = {\n  IS_PLAYING: \"isPlaying\",\n  DID_PLAY_ONCE: \"didPlayOnce\",\n  DID_GAME_EVENT_OCCUR: \"didGameEventOccur\",\n  CODE_EXIST: \"codeExist\",\n  OOBC_LINE_EXIST: \"oobcLineExist\",\n  SPRITE_EXIST: \"spriteExist\",\n  SPRITE_ORDER: \"spriteOrder\",\n  SPRITE_SELECTED: \"spriteSelected\",\n  SCENE_ORDER: \"sceneOrder\",\n  SCENE_SELECTED: \"sceneSelected\"\n};\nexport var getSamplePayloadOf = function getSamplePayloadOf(type) {\n  switch (type) {\n    case TYPE.DID_GAME_EVENT_OCCUR:\n      return {\n        api: \"\",\n        sceneId: \"sceneId\",\n        spriteId: \"spriteId\"\n      };\n\n    case TYPE.CODE_EXIST:\n      return {\n        sceneId: \"sceneId\",\n        spriteId: \"spriteId\",\n        code: \"code\"\n      };\n\n    case TYPE.OOBC_LINE_EXIST:\n      return {\n        sceneId: \"sceneId\",\n        spriteId: \"spriteId\",\n        line: \"line\"\n      };\n\n    case TYPE.SPRITE_EXIST:\n      return {\n        sceneId: \"sceneId\",\n        spriteId: \"spriteId\"\n      };\n\n    case TYPE.SPRITE_ORDER:\n      return {\n        sceneId: \"sceneId\",\n        spriteId: \"spriteId\",\n        order: 1\n      };\n\n    case TYPE.SPRITE_SELECTED:\n      return {\n        sceneId: \"sceneId\",\n        spriteId: \"spriteId\"\n      };\n\n    case TYPE.SCENE_ORDER:\n      return {\n        sceneId: \"sceneId\",\n        order: 1\n      };\n\n    case TYPE.SCENE_SELECTED:\n      return {\n        sceneId: \"sceneId\"\n      };\n\n    default:\n      return null;\n  }\n};\nexport var checkers = (_checkers = {}, _defineProperty(_checkers, TYPE.IS_PLAYING, function (state, condition) {\n  return state.preview.isPlaying;\n}), _defineProperty(_checkers, TYPE.DID_PLAY_ONCE, function (state, condition) {\n  return state.preview.isPlaying;\n}), _defineProperty(_checkers, TYPE.DID_GAME_EVENT_OCCUR, function (state, condition) {\n  if (!state.preview.isPlaying) {\n    return false;\n  }\n\n  var gameEvent = state.game.lastEvent;\n\n  if (!gameEvent) {\n    return false;\n  }\n\n  for (var key in condition.payload) {\n    var value = condition.payload[key];\n\n    if (value !== gameEvent[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}), _defineProperty(_checkers, TYPE.CODE_EXIST, function (state, condition) {\n  var _ref = condition.payload || {},\n      sceneId = _ref.sceneId,\n      spriteId = _ref.spriteId,\n      code = _ref.code;\n\n  var scene = state.scene.scenes[sceneId];\n  var sprite = scene && scene.sprites[spriteId];\n\n  if (!sprite) {\n    return false;\n  }\n\n  return isCodeExist(code, sprite.code);\n}), _defineProperty(_checkers, TYPE.OOBC_LINE_EXIST, function (state, condition) {\n  var _ref2 = condition.payload || {},\n      sceneId = _ref2.sceneId,\n      spriteId = _ref2.spriteId,\n      line = _ref2.line,\n      number = _ref2.number,\n      depth = _ref2.depth;\n\n  var scene = state.scene.scenes[sceneId];\n  var sprite = scene && scene.sprites[spriteId];\n\n  if (!sprite) {\n    return false;\n  }\n\n  var context, targetLine;\n\n  try {\n    var contextJSON = JSON.parse(sprite.code);\n    context = OOBC.Context.fromJSON(contextJSON);\n    var lineJSON = JSON.parse(line);\n    targetLine = OOBC.Line.fromJSON(lineJSON);\n  } catch (err) {\n    console.warn(\"condition checker(oobcLineExist):: fail to parse\");\n    return false;\n  }\n\n  var lines = context.getDisplayLines();\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = lines[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _line = _step.value;\n\n      if (depth && depth !== _line.getDepth()) {\n        continue;\n      }\n\n      if (number && number !== _line.lineNum()) {\n        continue;\n      }\n\n      if (targetLine.isEqual(_line)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n}), _defineProperty(_checkers, TYPE.SPRITE_EXIST, function (state, condition) {\n  var _ref3 = condition.payload || {},\n      sceneId = _ref3.sceneId,\n      spriteId = _ref3.spriteId;\n\n  var scenes = state.scene.scenes;\n\n  if (sceneId) {\n    var scene = scenes[sceneId];\n    return scene && scene.spriteIds.includes(spriteId);\n  } else {\n    for (var _sceneId in scenes) {\n      var _scene = scenes[_sceneId];\n\n      if (_scene.spriteIds.includes(spriteId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}), _defineProperty(_checkers, TYPE.SPRITE_ORDER, function (state, condition) {\n  var _ref4 = condition.payload || {},\n      sceneId = _ref4.sceneId,\n      spriteId = _ref4.spriteId,\n      order = _ref4.order;\n\n  var scenes = state.scene.scenes;\n  var scene = scenes[sceneId];\n\n  if (!scene) {\n    return false;\n  }\n\n  if (scene.isHiddenLockSprites) {\n    var unlockedSpriteIds = scene.spriteIds.filter(function (spriteId) {\n      return !scene.sprites[spriteId].locked;\n    });\n    return order === unlockedSpriteIds.indexOf(spriteId) + 1;\n  } else {\n    return order === scene.spriteIds.indexOf(spriteId) + 1;\n  }\n}), _defineProperty(_checkers, TYPE.SPRITE_SELECTED, function (state, condition) {\n  var _ref5 = condition.payload || {},\n      spriteId = _ref5.spriteId;\n\n  var selectedSceneId = state.interaction.selected.scene;\n  var selectedSpriteInfo = state.interaction.selected.objects[selectedSceneId];\n  var selectedSpriteId = selectedSpriteInfo && selectedSpriteInfo.name;\n  return spriteId === selectedSpriteId;\n}), _defineProperty(_checkers, TYPE.SCENE_ORDER, function (state, condition) {\n  var _ref6 = condition.payload || {},\n      sceneId = _ref6.sceneId,\n      order = _ref6.order;\n\n  var sceneIds = state.scene.sceneIds;\n  return order === sceneIds.indexOf(sceneId) + 1;\n}), _defineProperty(_checkers, TYPE.SCENE_SELECTED, function (state, condition) {\n  var _ref7 = condition.payload || {},\n      sceneId = _ref7.sceneId;\n\n  var selectedSceneId = state.interaction.selected.scene;\n  return sceneId === selectedSceneId;\n}), _checkers);\nexport var sampleConditions = [{\n  type: TYPE.IS_PLAYING\n}, // {\n//   type: TYPE.DID_GAME_EVENT_OCCUR,\n//   payload: {\n//     sceneId: \"scene1\",\n//     spriteId: \"school_girl\",\n//     api: \"playAnimation\",\n//     name: \"side\"\n//   }\n// },\n// {\n//   type: TYPE.DID_GAME_EVENT_OCCUR,\n//   payload: {\n//     sceneId: \"scene1\",\n//     spriteId: \"tile_bg\",\n//     api: \"playSound\",\n//     name: \"misterious_night\"\n//   }\n// },\n{\n  type: TYPE.DID_GAME_EVENT_OCCUR,\n  payload: {\n    sceneId: \"scene1\",\n    spriteId: \"target_a\",\n    api: \"setVelocityFromDegree\"\n  }\n}, // {\n//   type: TYPE.SPRITE_EXIST,\n//   payload: {\n//     sceneId: \"scene1\",\n//     spriteId: \"school_girl\"\n//   }\n// },\n// {\n//   type: TYPE.SPRITE_ORDER,\n//   payload: {\n//     sceneId: \"scene1\",\n//     spriteId: \"school_girl\",\n//     order: 4\n//   }\n// },\n// {\n//   type: TYPE.SPRITE_SELECTED,\n//   payload: {\n//     spriteId: \"school_girl\"\n//   }\n// },\n// {\n//   type: TYPE.SCENE_ORDER,\n//   payload: {\n//     sceneId: \"scene1\",\n//     order: 1\n//   }\n// },\n// {\n//   type: TYPE.SCENE_SELECTED,\n//   payload: {\n//     sceneId: \"scene1\"\n//   }\n// },\n// {\n//   type: TYPE.CODE_EXIST,\n//   payload: {\n//     sceneId: \"scene1\",\n//     spriteId: \"sol_a\",\n//     code: `playAnimation(\"front_fly_idle\", true);setGravityY(1500);`\n//   }\n// },\n{\n  type: TYPE.OOBC_LINE_EXIST,\n  payload: {\n    sceneId: \"scene1\",\n    spriteId: \"joystick_c_yellow\",\n    line: \"{\\\"block\\\":{\\\"constructor\\\":\\\"Joystick\\\",\\\"grammar\\\":\\\"subject\\\",\\\"data\\\":\\\"joystick_c_yellow\\\",\\\"children\\\":[{\\\"constructor\\\":\\\"Action\\\",\\\"grammar\\\":\\\"verb\\\",\\\"data\\\":\\\"bind\\\",\\\"children\\\":[{\\\"constructor\\\":\\\"Sprite\\\",\\\"grammar\\\":\\\"objective\\\",\\\"data\\\":\\\"target_a\\\"},{\\\"constructor\\\":\\\"NumberBlock\\\",\\\"grammar\\\":\\\"objective\\\",\\\"data\\\":300}]}]},\\\"folded\\\":false,\\\"disabled\\\":false}\" // number: 0,\n    // depth: 0\n\n  }\n}];\n\nvar Condition =\n/*#__PURE__*/\nfunction () {\n  function Condition(props) {\n    _classCallCheck(this, Condition);\n\n    this.type = props.type;\n    this.payload = props.payload;\n    this.isClear = false;\n  }\n\n  _createClass(Condition, [{\n    key: \"check\",\n    value: function check(state) {\n      var checker = checkers[this.type];\n\n      if (checker) {\n        this.isClear = checker(state, this); // console.log(\"checked\", this);\n\n        return this.isClear;\n      } else {\n        console.warn(\"invalid condition type\");\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose(options) {\n      this.isClear = false;\n    }\n  }, {\n    key: \"isCodeType\",\n    get: function get() {\n      return this.type === TYPE.CODE_EXIST || this.type === TYPE.OOBC_LINE_EXIST;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(options) {\n      if (!options) {\n        return null;\n      }\n\n      switch (options.type) {\n        case TYPE.DID_GAME_EVENT_OCCUR:\n          return new GameCondition(options);\n\n        case TYPE.DID_PLAY_ONCE:\n          return new UndisposableCondition(options);\n\n        default:\n          return new DisposableCondition(options);\n      }\n    }\n  }]);\n\n  return Condition;\n}();\n\nvar DisposableCondition =\n/*#__PURE__*/\nfunction (_Condition) {\n  _inherits(DisposableCondition, _Condition);\n\n  function DisposableCondition() {\n    _classCallCheck(this, DisposableCondition);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DisposableCondition).apply(this, arguments));\n  }\n\n  return DisposableCondition;\n}(Condition);\n\nvar UndisposableCondition =\n/*#__PURE__*/\nfunction (_Condition2) {\n  _inherits(UndisposableCondition, _Condition2);\n\n  function UndisposableCondition() {\n    _classCallCheck(this, UndisposableCondition);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UndisposableCondition).apply(this, arguments));\n  }\n\n  _createClass(UndisposableCondition, [{\n    key: \"check\",\n    value: function check(state) {\n      if (this.isClear) {\n        return true;\n      } else {\n        return _get(_getPrototypeOf(UndisposableCondition.prototype), \"check\", this).call(this, state);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose(options) {// ignore dispose\n    }\n  }]);\n\n  return UndisposableCondition;\n}(Condition);\n\nvar GameCondition =\n/*#__PURE__*/\nfunction (_Condition3) {\n  _inherits(GameCondition, _Condition3);\n\n  function GameCondition() {\n    _classCallCheck(this, GameCondition);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GameCondition).apply(this, arguments));\n  }\n\n  _createClass(GameCondition, [{\n    key: \"check\",\n    value: function check(state) {\n      if (this.isClear) {\n        return true;\n      } else {\n        return _get(_getPrototypeOf(GameCondition.prototype), \"check\", this).call(this, state);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose(options) {\n      if (options && !options.isPlaying) {\n        _get(_getPrototypeOf(GameCondition.prototype), \"dispose\", this).call(this);\n      }\n    }\n  }]);\n\n  return GameCondition;\n}(Condition);\n\nexport default Condition;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/DreamBuilder/ConditionChecker/condition.js"],"names":["OOBC","isCodeExist","TYPE","IS_PLAYING","DID_PLAY_ONCE","DID_GAME_EVENT_OCCUR","CODE_EXIST","OOBC_LINE_EXIST","SPRITE_EXIST","SPRITE_ORDER","SPRITE_SELECTED","SCENE_ORDER","SCENE_SELECTED","getSamplePayloadOf","type","api","sceneId","spriteId","code","line","order","checkers","state","condition","preview","isPlaying","gameEvent","game","lastEvent","key","payload","value","scene","scenes","sprite","sprites","number","depth","context","targetLine","contextJSON","JSON","parse","Context","fromJSON","lineJSON","Line","err","console","warn","lines","getDisplayLines","getDepth","lineNum","isEqual","spriteIds","includes","_sceneId","isHiddenLockSprites","unlockedSpriteIds","filter","locked","indexOf","selectedSceneId","interaction","selected","selectedSpriteInfo","objects","selectedSpriteId","name","sceneIds","sampleConditions","Condition","props","isClear","checker","options","GameCondition","UndisposableCondition","DisposableCondition"],"mappings":"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","sourcesContent":["import OOBC from \"../../../../../Common/Component/OOBCEditor/OOBC\";\nimport { isCodeExist } from \"../../../../../Common/Util/codeComparable\"\n\nexport const TYPE = {\n  IS_PLAYING: \"isPlaying\",\n  DID_PLAY_ONCE: \"didPlayOnce\",\n  DID_GAME_EVENT_OCCUR: \"didGameEventOccur\",\n  CODE_EXIST: \"codeExist\",\n  OOBC_LINE_EXIST: \"oobcLineExist\",\n  SPRITE_EXIST: \"spriteExist\",\n  SPRITE_ORDER: \"spriteOrder\",\n  SPRITE_SELECTED: \"spriteSelected\",\n  SCENE_ORDER: \"sceneOrder\",\n  SCENE_SELECTED: \"sceneSelected\"\n}\n\nexport const getSamplePayloadOf = type => {\n  switch(type) {\n    case TYPE.DID_GAME_EVENT_OCCUR:\n      return { api: \"\", sceneId: \"sceneId\", spriteId: \"spriteId\" };\n    case TYPE.CODE_EXIST:\n      return { sceneId: \"sceneId\", spriteId: \"spriteId\", code: \"code\" };\n    case TYPE.OOBC_LINE_EXIST:\n      return { sceneId: \"sceneId\", spriteId: \"spriteId\", line: \"line\" };\n    case TYPE.SPRITE_EXIST:\n      return { sceneId: \"sceneId\", spriteId: \"spriteId\" };\n    case TYPE.SPRITE_ORDER:\n      return { sceneId: \"sceneId\", spriteId: \"spriteId\", order: 1 };\n    case TYPE.SPRITE_SELECTED:\n      return { sceneId: \"sceneId\", spriteId: \"spriteId\" };\n    case TYPE.SCENE_ORDER:\n      return { sceneId: \"sceneId\", order: 1 };\n    case TYPE.SCENE_SELECTED:\n      return { sceneId: \"sceneId\" };\n    default:\n      return null;\n  }\n}\n\nexport const checkers = {\n  [TYPE.IS_PLAYING]: (state, condition) => {\n    return state.preview.isPlaying;\n  },\n  [TYPE.DID_PLAY_ONCE]: (state, condition) => {\n    return state.preview.isPlaying;\n  },\n  [TYPE.DID_GAME_EVENT_OCCUR]: (state, condition) => {\n    if(!state.preview.isPlaying) {\n      return false;\n    }\n\n    const gameEvent = state.game.lastEvent;\n    if(!gameEvent) {\n      return false;\n    }\n\n    for(let key in condition.payload) {\n      const value = condition.payload[key]\n      if(value !== gameEvent[key]) {\n        return false;\n      }\n    }\n    return true;\n  },\n  [TYPE.CODE_EXIST]: (state, condition) => {\n    const { sceneId, spriteId, code } = condition.payload || {}\n    const scene = state.scene.scenes[sceneId];\n    const sprite = scene && scene.sprites[spriteId];\n    if(!sprite) {\n      return false;\n    }\n\n    return isCodeExist(code, sprite.code);\n  },\n  [TYPE.OOBC_LINE_EXIST]: (state, condition) => {\n    const { sceneId, spriteId, line, number, depth } = condition.payload || {}\n    const scene = state.scene.scenes[sceneId];\n    const sprite = scene && scene.sprites[spriteId];\n    if(!sprite) {\n      return false;\n    }\n\n    let context, targetLine;\n    try {\n      const contextJSON = JSON.parse(sprite.code);\n      context = OOBC.Context.fromJSON(contextJSON);\n      const lineJSON =  JSON.parse(line)\n      targetLine = OOBC.Line.fromJSON(lineJSON);\n    } catch(err) {\n      console.warn(\"condition checker(oobcLineExist):: fail to parse\");\n      return false;\n    }\n\n    const lines = context.getDisplayLines();\n    for(let line of lines) {\n      if(depth && depth !== line.getDepth()) {\n        continue;\n      }\n      if(number && number !== line.lineNum()) {\n        continue;\n      }\n      if(targetLine.isEqual(line)) {\n        return true;\n      }\n    }\n    return false;\n  },\n  [TYPE.SPRITE_EXIST]: (state, condition) => {\n    const { sceneId, spriteId } = condition.payload || {};\n    const scenes = state.scene.scenes;\n    if(sceneId) {\n      const scene = scenes[sceneId];\n      return scene && scene.spriteIds.includes(spriteId);\n    } else {\n      for(let _sceneId in scenes) {\n        const scene = scenes[_sceneId];\n        if(scene.spriteIds.includes(spriteId)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  [TYPE.SPRITE_ORDER]: (state, condition) => {\n    const { sceneId, spriteId, order } = condition.payload || {};\n    const scenes = state.scene.scenes;\n    const scene = scenes[sceneId];\n    if(!scene) {\n      return false;\n    }\n\n    if(scene.isHiddenLockSprites) {\n      const unlockedSpriteIds = scene.spriteIds.filter(\n        spriteId => !scene.sprites[spriteId].locked\n      );\n      return order === (unlockedSpriteIds.indexOf(spriteId) + 1);\n    } else {\n      return order === (scene.spriteIds.indexOf(spriteId) + 1);\n    }\n  },\n  [TYPE.SPRITE_SELECTED]: (state, condition) => {\n    const { spriteId } = condition.payload || {};\n    const selectedSceneId = state.interaction.selected.scene;\n    const selectedSpriteInfo = state.interaction.selected.objects[selectedSceneId];\n    const selectedSpriteId = selectedSpriteInfo && selectedSpriteInfo.name;\n    return spriteId === selectedSpriteId;\n  },\n  [TYPE.SCENE_ORDER]: (state, condition) => {\n    const { sceneId, order } = condition.payload || {};\n    const sceneIds = state.scene.sceneIds;\n    return order === (sceneIds.indexOf(sceneId) + 1);\n  },\n  [TYPE.SCENE_SELECTED]: (state, condition) => {\n    const { sceneId } = condition.payload || {};\n    const selectedSceneId = state.interaction.selected.scene;\n    return sceneId === selectedSceneId;\n  }\n}\n\nexport const sampleConditions = [\n  { type: TYPE.IS_PLAYING },\n  // {\n  //   type: TYPE.DID_GAME_EVENT_OCCUR,\n  //   payload: {\n  //     sceneId: \"scene1\",\n  //     spriteId: \"school_girl\",\n  //     api: \"playAnimation\",\n  //     name: \"side\"\n  //   }\n  // },\n  // {\n  //   type: TYPE.DID_GAME_EVENT_OCCUR,\n  //   payload: {\n  //     sceneId: \"scene1\",\n  //     spriteId: \"tile_bg\",\n  //     api: \"playSound\",\n  //     name: \"misterious_night\"\n  //   }\n  // },\n  {\n    type: TYPE.DID_GAME_EVENT_OCCUR,\n    payload: {\n      sceneId: \"scene1\",\n      spriteId: \"target_a\",\n      api: \"setVelocityFromDegree\"\n    }\n  },\n  // {\n  //   type: TYPE.SPRITE_EXIST,\n  //   payload: {\n  //     sceneId: \"scene1\",\n  //     spriteId: \"school_girl\"\n  //   }\n  // },\n  // {\n  //   type: TYPE.SPRITE_ORDER,\n  //   payload: {\n  //     sceneId: \"scene1\",\n  //     spriteId: \"school_girl\",\n  //     order: 4\n  //   }\n  // },\n  // {\n  //   type: TYPE.SPRITE_SELECTED,\n  //   payload: {\n  //     spriteId: \"school_girl\"\n  //   }\n  // },\n  // {\n  //   type: TYPE.SCENE_ORDER,\n  //   payload: {\n  //     sceneId: \"scene1\",\n  //     order: 1\n  //   }\n  // },\n  // {\n  //   type: TYPE.SCENE_SELECTED,\n  //   payload: {\n  //     sceneId: \"scene1\"\n  //   }\n  // },\n  // {\n  //   type: TYPE.CODE_EXIST,\n  //   payload: {\n  //     sceneId: \"scene1\",\n  //     spriteId: \"sol_a\",\n  //     code: `playAnimation(\"front_fly_idle\", true);setGravityY(1500);`\n  //   }\n  // },\n  {\n    type: TYPE.OOBC_LINE_EXIST,\n    payload: {\n      sceneId: \"scene1\",\n      spriteId: \"joystick_c_yellow\",\n      line: `{\"block\":{\"constructor\":\"Joystick\",\"grammar\":\"subject\",\"data\":\"joystick_c_yellow\",\"children\":[{\"constructor\":\"Action\",\"grammar\":\"verb\",\"data\":\"bind\",\"children\":[{\"constructor\":\"Sprite\",\"grammar\":\"objective\",\"data\":\"target_a\"},{\"constructor\":\"NumberBlock\",\"grammar\":\"objective\",\"data\":300}]}]},\"folded\":false,\"disabled\":false}`\n      // number: 0,\n      // depth: 0\n    }\n  }\n]\n\nclass Condition {\n  constructor(props) {\n    this.type = props.type;\n    this.payload = props.payload;\n    this.isClear = false;\n  }\n  static create(options) {\n    if(!options) {\n      return null;\n    }\n    \n    switch(options.type) {\n      case TYPE.DID_GAME_EVENT_OCCUR:\n        return new GameCondition(options)\n      case TYPE.DID_PLAY_ONCE: \n        return new UndisposableCondition(options)\n      default:\n        return new DisposableCondition(options)\n    }\n  }\n\n  check(state) {\n    const checker = checkers[this.type]\n    if(checker) {\n      this.isClear = checker(state, this);\n      // console.log(\"checked\", this);\n      return this.isClear;\n    } else {\n      console.warn(\"invalid condition type\");\n    }\n  }\n  dispose(options) {\n    this.isClear = false;\n  }\n\n  get isCodeType() {\n    return (\n      this.type === TYPE.CODE_EXIST ||\n      this.type === TYPE.OOBC_LINE_EXIST\n    );\n  }\n}\nclass DisposableCondition extends Condition {\n\n}\nclass UndisposableCondition extends Condition {\n\n  check(state) {\n    if(this.isClear) {\n      return true;\n    } else {\n      return super.check(state);\n    }\n  }\n  dispose(options) {\n    // ignore dispose\n  }\n}\nclass GameCondition extends Condition {\n\n  check(state) {\n    if(this.isClear) {\n      return true;\n    } else {\n      return super.check(state);\n    }\n  }\n  dispose(options) {\n    if(options && !options.isPlaying) {\n      super.dispose();\n    }\n  }\n}\n\nexport default Condition;\n"]},"metadata":{},"sourceType":"module"}