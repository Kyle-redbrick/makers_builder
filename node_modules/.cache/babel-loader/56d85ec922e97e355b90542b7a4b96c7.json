{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiSocket/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // import io from \"socket.io-client\";\n// import { URL } from \"../../../../Common/Util/Constant\";\n\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport { socketUtil } from \"../Socket/Container\";\nexport var setMyProject = function setMyProject(props) {\n  try {\n    var scene = props.scene,\n        interaction = props.interaction,\n        preview = props.preview;\n    var state = JSON.stringify({\n      scene: scene,\n      interaction: _objectSpread({}, interaction, {\n        isPublished: undefined\n      }),\n      preview: _objectSpread({}, preview, {\n        isPlaying: false\n      })\n    });\n    localStorage.setItem(\"wizProject\", state);\n  } catch (err) {\n    console.err(err);\n  }\n};\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n    _this.EVENT_CONNECT = \"connect\";\n    _this.EVENT_MULTI_STATE = \"multiState\";\n    _this.EVENT_JOIN = \"join\";\n    _this.EVENT_LEAVE = \"leave\";\n    _this.EVENT_HIGHLIGHT = \"highlight\";\n    _this.EVENT_JOIN_ROOM = \"joinRoom\";\n\n    _this.setupSocket = function () {\n      // const options = {}; //options reference : https://socket.io/docs/client-api/#new-Manager-url-options\n      _this.socket = socketUtil.socket;\n\n      _this.socket.emit(_this.EVENT_JOIN_ROOM, {\n        roomId: _this.props.roomId\n      }); // global room\n\n\n      _this.setSocketListener();\n    };\n\n    _this.setSocketListener = function () {\n      // this.socket.on(this.EVENT_CONNECT, () => {\n      //   if (!this.props.currentUser) return;\n      //   if (this.props.currentUser.email !== this.props.email) {\n      //     this.socket.emit(this.EVENT_JOIN, {\n      //       email: this.props.currentUser.email\n      //     });\n      //   }\n      // });\n      // sync all data\n      _this.socket.on(_this.EVENT_MULTI_STATE, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n          var project, assets;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (_this.props.currentUser) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  if (!(_this.props.currentUser.email !== _this.props.email)) {\n                    _context.next = 10;\n                    break;\n                  }\n\n                  project = {};\n                  project.state = JSON.parse(data.state);\n                  _context.next = 7;\n                  return AssetLibrary.loadAssetsForGame(project.state.scene);\n\n                case 7:\n                  assets = _context.sent;\n                  AssetLibrary.setAll(assets);\n\n                  _this.props.setProject(project);\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()); //  튜터가 버튼 표시\n\n\n      _this.socket.on(_this.EVENT_HIGHLIGHT, function (data) {\n        // 타이머 리셋\n        if (_this.timer) {\n          clearTimeout(_this.timer);\n        }\n\n        _this.props.setBtnHighlight(data.highlightBtnId);\n\n        _this.timer = setTimeout(function () {\n          _this.props.setBtnHighlight();\n        }, 200);\n      });\n    };\n\n    _this.getDevelopingProject = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pId) {\n        var param, data, project, assets;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                param = {\n                  pId: pId\n                };\n                _context2.next = 4;\n                return request.getDevelopingProject(param).then(function (res) {\n                  return res.json();\n                });\n\n              case 4:\n                data = _context2.sent;\n\n                if (!data.state) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                // console.log(\n                //   3333,\n                //   `---- get ${this.props.currentUser.email}'s project state with pId: ${\n                //     this.props.currentUser[\"pId\"]\n                //   } `\n                // );\n                project = {};\n                project.state = JSON.parse(data.state);\n                _context2.next = 10;\n                return AssetLibrary.loadAssetsForGame(project.state.scene);\n\n              case 10:\n                assets = _context2.sent;\n                AssetLibrary.setAll(assets);\n\n                _this.props.setProject(project);\n\n              case 13:\n                _context2.next = 18;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(_context2.t0);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 15]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.getMyProject = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var state, project, assets;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              state = localStorage.getItem(\"wizProject\");\n              project = {};\n              project.state = JSON.parse(state);\n              _context3.next = 6;\n              return AssetLibrary.loadAssetsForGame(project.state.scene);\n\n            case 6:\n              assets = _context3.sent;\n              AssetLibrary.setAll(assets);\n\n              _this.props.setProject(project);\n\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n    _this.currentUser = null;\n    _this.timer = null;\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupSocket();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!this.props.currentUser) return; // current user 상태가 변경 됐을 때\n\n      if (prevProps.currentUser.email !== this.props.currentUser.email) {\n        // current user가 나인 경우 (other -> me)\n        if (this.props.currentUser.email === this.props.email) {\n          // console.log(\n          //   3333,\n          //   \" ---- Tab Click Event, get project: \" + this.props.currentUser.pId\n          // );\n          console.log(3333, \" ---- leaving channel : \" + prevProps.currentUser.email);\n          this.socket.emit(this.EVENT_LEAVE, {\n            email: prevProps.currentUser.email\n          }); // console.log(\n          //   3333,\n          //   \" ---- get my project from localStorage : \" +\n          //     this.props.currentUser.email\n          // );\n\n          this.getMyProject();\n          console.log(3333, \" ---- join channel : \" + this.props.currentUser.email);\n          this.socket.emit(this.EVENT_JOIN, {\n            email: this.props.currentUser.email\n          }); // current user가 내가 아닌 경우\n        } else if (this.props.currentUser.email !== this.props.email) {\n          // 기존 current user가 내가 아닌 경우 (other -> other)\n          if (prevProps.currentUser.email !== this.props.email) {\n            this.socket.emit(this.EVENT_LEAVE, {\n              email: prevProps.currentUser.email\n            });\n            this.getDevelopingProject(this.props.currentUser.pId);\n            this.socket.emit(this.EVENT_JOIN, {\n              email: this.props.currentUser.email\n            }); // 기존 current user가 나인 경우 (me -> other)\n          } else if (prevProps.currentUser.email === this.props.email) {\n            this.getDevelopingProject(this.props.currentUser.pId);\n            this.socket.emit(this.EVENT_JOIN, {\n              email: this.props.currentUser.email\n            });\n          }\n        }\n      }\n\n      if (prevProps.highlightBtnId !== this.props.highlightBtnId) {\n        if (this.props.isTutor) {\n          !prevProps.highlightBtnId && this.socket.emit(this.EVENT_HIGHLIGHT, {\n            highlightBtnId: this.props.highlightBtnId,\n            roomId: this.props.roomId\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.socket.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: // updateProjectState = () => {\n    //   const { scene, interaction, preview } = this.props;\n    //   const state = JSON.stringify({\n    //     scene,\n    //     interaction: { ...interaction, isPublished: undefined },\n    //     preview: { ...preview, isPlaying: false }\n    //   });\n    //   const data = {\n    //     pId: this.props.currentUser.pId,\n    //     state,\n    //     email: this.props.currentUser.email\n    //   };\n    //   // console.log(\n    //   //   3333,\n    //   //   `sending state ${data.pId} from ${this.props.currentUser.email}`\n    //   // );\n    //   this.socket.emit(this.EVENT_MULTI_STATE, data);\n    // };\n    function render() {\n      return React.createElement(\"div\", {\n        style: {\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  var _state$scene = state.scene,\n      history = _state$scene.history,\n      historyIndex = _state$scene.historyIndex,\n      _scene = _objectWithoutProperties(_state$scene, [\"history\", \"historyIndex\"]);\n\n  return {\n    email: state.userinfo.email,\n    selectedSceneId: state.interaction.selected.scene,\n    selectedObject: state.interaction.selected.objects[state.interaction.selected.scene],\n    pId: state.project.pId,\n    scene: _scene,\n    interaction: _objectSpread({}, state.interaction, {\n      jukebox: {\n        isPlaying: false\n      },\n      addSoundsTimeStamp: undefined\n    }),\n    preview: state.preview,\n    currentUser: state.tabs.currentUser,\n    highlightBtnId: state.interaction.highlightBtnId\n  };\n}, {\n  setStudents: tabActions.setStudents,\n  setTutor: tabActions.setTutor,\n  setProject: projectActions.setProject,\n  setBtnHighlight: interactionActions.setBtnHighlight\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiSocket/Container.js"],"names":["React","Component","connect","AssetLibrary","request","projectActions","tabActions","interactionActions","socketUtil","setMyProject","props","scene","interaction","preview","state","JSON","stringify","isPublished","undefined","isPlaying","localStorage","setItem","err","console","Container","EVENT_CONNECT","EVENT_MULTI_STATE","EVENT_JOIN","EVENT_LEAVE","EVENT_HIGHLIGHT","EVENT_JOIN_ROOM","setupSocket","socket","emit","roomId","setSocketListener","on","data","currentUser","email","project","parse","loadAssetsForGame","assets","setAll","setProject","timer","clearTimeout","setBtnHighlight","highlightBtnId","setTimeout","getDevelopingProject","pId","param","then","res","json","error","getMyProject","getItem","prevProps","log","isTutor","disconnect","display","history","historyIndex","_scene","userinfo","selectedSceneId","selected","selectedObject","objects","jukebox","addSoundsTimeStamp","tabs","setStudents","setTutor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import io from \"socket.io-client\";\n// import { URL } from \"../../../../Common/Util/Constant\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport { socketUtil } from \"../Socket/Container\";\n\nexport const setMyProject = props => {\n  try {\n    const { scene, interaction, preview } = props;\n\n    const state = JSON.stringify({\n      scene,\n      interaction: { ...interaction, isPublished: undefined },\n      preview: { ...preview, isPlaying: false }\n    });\n    localStorage.setItem(\"wizProject\", state);\n  } catch (err) {\n    console.err(err);\n  }\n};\n\nclass Container extends Component {\n  EVENT_CONNECT = \"connect\";\n  EVENT_MULTI_STATE = \"multiState\";\n  EVENT_JOIN = \"join\";\n  EVENT_LEAVE = \"leave\";\n  EVENT_HIGHLIGHT = \"highlight\";\n  EVENT_JOIN_ROOM = \"joinRoom\";\n\n  constructor(props) {\n    super(props);\n    this.currentUser = null;\n    this.timer = null;\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.currentUser) return;\n    // current user 상태가 변경 됐을 때\n    if (prevProps.currentUser.email !== this.props.currentUser.email) {\n      // current user가 나인 경우 (other -> me)\n      if (this.props.currentUser.email === this.props.email) {\n        // console.log(\n        //   3333,\n        //   \" ---- Tab Click Event, get project: \" + this.props.currentUser.pId\n        // );\n\n        console.log(\n          3333,\n          \" ---- leaving channel : \" + prevProps.currentUser.email\n        );\n        this.socket.emit(this.EVENT_LEAVE, {\n          email: prevProps.currentUser.email\n        });\n\n        // console.log(\n        //   3333,\n        //   \" ---- get my project from localStorage : \" +\n        //     this.props.currentUser.email\n        // );\n        this.getMyProject();\n\n        console.log(\n          3333,\n          \" ---- join channel : \" + this.props.currentUser.email\n        );\n        this.socket.emit(this.EVENT_JOIN, {\n          email: this.props.currentUser.email\n        });\n        // current user가 내가 아닌 경우\n      } else if (this.props.currentUser.email !== this.props.email) {\n        // 기존 current user가 내가 아닌 경우 (other -> other)\n        if (prevProps.currentUser.email !== this.props.email) {\n          this.socket.emit(this.EVENT_LEAVE, {\n            email: prevProps.currentUser.email\n          });\n\n          this.getDevelopingProject(this.props.currentUser.pId);\n\n          this.socket.emit(this.EVENT_JOIN, {\n            email: this.props.currentUser.email\n          });\n          // 기존 current user가 나인 경우 (me -> other)\n        } else if (prevProps.currentUser.email === this.props.email) {\n          this.getDevelopingProject(this.props.currentUser.pId);\n\n          this.socket.emit(this.EVENT_JOIN, {\n            email: this.props.currentUser.email\n          });\n        }\n      }\n    }\n    if (prevProps.highlightBtnId !== this.props.highlightBtnId) {\n      if (this.props.isTutor) {\n        !prevProps.highlightBtnId &&\n          this.socket.emit(this.EVENT_HIGHLIGHT, {\n            highlightBtnId: this.props.highlightBtnId,\n            roomId: this.props.roomId\n          });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.disconnect();\n  }\n\n  setupSocket = () => {\n    // const options = {}; //options reference : https://socket.io/docs/client-api/#new-Manager-url-options\n    this.socket = socketUtil.socket;\n    this.socket.emit(this.EVENT_JOIN_ROOM, { roomId: this.props.roomId }); // global room\n\n    this.setSocketListener();\n  };\n\n  setSocketListener = () => {\n    // this.socket.on(this.EVENT_CONNECT, () => {\n    //   if (!this.props.currentUser) return;\n\n    //   if (this.props.currentUser.email !== this.props.email) {\n    //     this.socket.emit(this.EVENT_JOIN, {\n    //       email: this.props.currentUser.email\n    //     });\n    //   }\n    // });\n\n    // sync all data\n    this.socket.on(this.EVENT_MULTI_STATE, async data => {\n      if (!this.props.currentUser) return;\n      if (this.props.currentUser.email !== this.props.email) {\n        const project = {};\n        project.state = JSON.parse(data.state);\n        const assets = await AssetLibrary.loadAssetsForGame(\n          project.state.scene\n        );\n        AssetLibrary.setAll(assets);\n        this.props.setProject(project);\n      }\n    });\n    //  튜터가 버튼 표시\n    this.socket.on(this.EVENT_HIGHLIGHT, data => {\n      // 타이머 리셋\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n      this.props.setBtnHighlight(data.highlightBtnId);\n      \n      this.timer = setTimeout(() => {\n        this.props.setBtnHighlight();\n      }, 200);\n    });\n  };\n\n  getDevelopingProject = async pId => {\n    try {\n      const param = { pId };\n\n      const data = await request\n        .getDevelopingProject(param)\n        .then(res => res.json());\n\n      if (data.state) {\n        // console.log(\n        //   3333,\n        //   `---- get ${this.props.currentUser.email}'s project state with pId: ${\n        //     this.props.currentUser[\"pId\"]\n        //   } `\n        // );\n        const project = {};\n        project.state = JSON.parse(data.state);\n        const assets = await AssetLibrary.loadAssetsForGame(\n          project.state.scene\n        );\n        AssetLibrary.setAll(assets);\n        this.props.setProject(project);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // setMyProject = () => {\n  //   try {\n  //     const { scene, interaction, preview } = this.props;\n\n  //     const state = JSON.stringify({\n  //       scene,\n  //       interaction: { ...interaction, isPublished: undefined },\n  //       preview: { ...preview, isPlaying: false }\n  //     });\n  //     localStorage.setItem(\"wizProject\", state);\n  //   } catch (err) {\n  //     console.err(err);\n  //   }\n  // };\n\n  getMyProject = async () => {\n    try {\n      const state = localStorage.getItem(\"wizProject\");\n\n      const project = {};\n      project.state = JSON.parse(state);\n      const assets = await AssetLibrary.loadAssetsForGame(project.state.scene);\n      AssetLibrary.setAll(assets);\n      this.props.setProject(project);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // updateProjectState = () => {\n  //   const { scene, interaction, preview } = this.props;\n\n  //   const state = JSON.stringify({\n  //     scene,\n  //     interaction: { ...interaction, isPublished: undefined },\n  //     preview: { ...preview, isPlaying: false }\n  //   });\n\n  //   const data = {\n  //     pId: this.props.currentUser.pId,\n  //     state,\n  //     email: this.props.currentUser.email\n  //   };\n  //   // console.log(\n  //   //   3333,\n  //   //   `sending state ${data.pId} from ${this.props.currentUser.email}`\n  //   // );\n  //   this.socket.emit(this.EVENT_MULTI_STATE, data);\n  // };\n\n  render() {\n    return <div style={{ display: \"none\" }} />;\n  }\n}\n\nexport default connect(\n  state => {\n    const { history, historyIndex, ..._scene } = state.scene;\n\n    return {\n      email: state.userinfo.email,\n      selectedSceneId: state.interaction.selected.scene,\n      selectedObject:\n        state.interaction.selected.objects[state.interaction.selected.scene],\n      pId: state.project.pId,\n      scene: _scene,\n      interaction: {\n        ...state.interaction,\n        jukebox: {\n          isPlaying: false\n        },\n        addSoundsTimeStamp: undefined\n      },\n      preview: state.preview,\n      currentUser: state.tabs.currentUser,\n      highlightBtnId: state.interaction.highlightBtnId\n    };\n  },\n  {\n    setStudents: tabActions.setStudents,\n    setTutor: tabActions.setTutor,\n    setProject: projectActions.setProject,\n    setBtnHighlight: interactionActions.setBtnHighlight\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}