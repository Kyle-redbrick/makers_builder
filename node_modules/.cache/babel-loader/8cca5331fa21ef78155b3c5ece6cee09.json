{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ActionType } from \"../../../../Common/Util/Constant\";\n\nvar webtrcMiddleware = function webtrcMiddleware(_ref) {\n  var getState = _ref.getState,\n      dispatch = _ref.dispatch;\n  return function (next) {\n    return function (action) {\n      var returnValue = next(action);\n      var nextState = getState();\n\n      switch (action.type) {\n        case ActionType.ADD_SCENE:\n        case ActionType.COPY_SCENE:\n        case ActionType.REMOVE_SCENE:\n        case ActionType.REORDER_SCENE:\n        case ActionType.SELECT_SCENE:\n        case ActionType.SELECT_SPRITE:\n        case ActionType.ADD_SPRITES:\n        case ActionType.REMOVE_SPRITE:\n        case ActionType.REMOVE_ALL_SPRITE:\n        case ActionType.REORDER_SPRITE:\n        case ActionType.SET_EDITOR_MODE:\n        case ActionType.SET_SPRITE_CODE:\n        case ActionType.SET_SPRITE_BLOCKXML:\n        case ActionType.SET_SPRITE_PREVIEW:\n        case ActionType.ADD_SOUNDS:\n        case ActionType.REMOVE_SOUND:\n        case ActionType.SET_IS_PLAYING:\n        case ActionType.SET_SCREEN_MODE:\n        case ActionType.LOCK_SPRITE:\n        case ActionType.SET_TEMPLATE:\n          var project = _objectSpread({}, nextState.project);\n\n          project.state = {\n            scene: nextState.scene,\n            preview: {\n              screenMode: nextState.preview.screenMode\n            },\n            interaction: {\n              selected: nextState.interaction.selected\n            }\n          };\n          delete project[\"timeStamp\"];\n          delete project[\"createdAt\"];\n          delete project[\"updatedAt\"];\n          delete project[\"isDeleted\"];\n          delete project[\"icon\"];\n          delete project[\"isFromTemplate\"];\n          delete project[\"screenshotURL\"];\n          delete project[\"user\"];\n          delete project[\"email\"];\n          delete project[\"name\"];\n          delete project[\"pId\"];\n          delete project[\"basicClass\"];\n          delete project[\"url\"];\n          delete project[\"video\"];\n          if (project.scene) delete project.scene[\"timeStamp\"];\n          dispatch({\n            type: ActionType.WEBRTC_SET_PROJECT,\n            project: project\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      return returnValue;\n    };\n  };\n};\n\nexport default webtrcMiddleware;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Store/Middleware/webrtcMiddleware.js"],"names":["ActionType","webtrcMiddleware","getState","dispatch","next","action","returnValue","nextState","type","ADD_SCENE","COPY_SCENE","REMOVE_SCENE","REORDER_SCENE","SELECT_SCENE","SELECT_SPRITE","ADD_SPRITES","REMOVE_SPRITE","REMOVE_ALL_SPRITE","REORDER_SPRITE","SET_EDITOR_MODE","SET_SPRITE_CODE","SET_SPRITE_BLOCKXML","SET_SPRITE_PREVIEW","ADD_SOUNDS","REMOVE_SOUND","SET_IS_PLAYING","SET_SCREEN_MODE","LOCK_SPRITE","SET_TEMPLATE","project","state","scene","preview","screenMode","interaction","selected","WEBRTC_SET_PROJECT"],"mappings":";AAAA,SAASA,UAAT,QAA2B,kCAA3B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACrE,UAAMC,WAAW,GAAGF,IAAI,CAACC,MAAD,CAAxB;AACA,UAAME,SAAS,GAAGL,QAAQ,EAA1B;;AAEA,cAAQG,MAAM,CAACG,IAAf;AACE,aAAKR,UAAU,CAACS,SAAhB;AACA,aAAKT,UAAU,CAACU,UAAhB;AACA,aAAKV,UAAU,CAACW,YAAhB;AACA,aAAKX,UAAU,CAACY,aAAhB;AACA,aAAKZ,UAAU,CAACa,YAAhB;AACA,aAAKb,UAAU,CAACc,aAAhB;AACA,aAAKd,UAAU,CAACe,WAAhB;AACA,aAAKf,UAAU,CAACgB,aAAhB;AACA,aAAKhB,UAAU,CAACiB,iBAAhB;AACA,aAAKjB,UAAU,CAACkB,cAAhB;AACA,aAAKlB,UAAU,CAACmB,eAAhB;AACA,aAAKnB,UAAU,CAACoB,eAAhB;AACA,aAAKpB,UAAU,CAACqB,mBAAhB;AACA,aAAKrB,UAAU,CAACsB,kBAAhB;AACA,aAAKtB,UAAU,CAACuB,UAAhB;AACA,aAAKvB,UAAU,CAACwB,YAAhB;AACA,aAAKxB,UAAU,CAACyB,cAAhB;AACA,aAAKzB,UAAU,CAAC0B,eAAhB;AACA,aAAK1B,UAAU,CAAC2B,WAAhB;AACA,aAAK3B,UAAU,CAAC4B,YAAhB;AACE,cAAIC,OAAO,qBAAQtB,SAAS,CAACsB,OAAlB,CAAX;;AACAA,UAAAA,OAAO,CAACC,KAAR,GAAgB;AACdC,YAAAA,KAAK,EAAExB,SAAS,CAACwB,KADH;AAEdC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,UAAU,EAAE1B,SAAS,CAACyB,OAAV,CAAkBC;AAAhC,aAFK;AAGdC,YAAAA,WAAW,EAAE;AAAEC,cAAAA,QAAQ,EAAE5B,SAAS,CAAC2B,WAAV,CAAsBC;AAAlC;AAHC,WAAhB;AAKA,iBAAON,OAAO,CAAC,WAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,WAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,WAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,WAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,MAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,gBAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,eAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,MAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,OAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,MAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,KAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,YAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,KAAD,CAAd;AACA,iBAAOA,OAAO,CAAC,OAAD,CAAd;AAEA,cAAIA,OAAO,CAACE,KAAZ,EAAmB,OAAOF,OAAO,CAACE,KAAR,CAAc,WAAd,CAAP;AACnB5B,UAAAA,QAAQ,CAAC;AACPK,YAAAA,IAAI,EAAER,UAAU,CAACoC,kBADV;AAEPP,YAAAA,OAAO,EAAEA;AAFF,WAAD,CAAR;AAIA;;AACF;AACE;AAjDJ;;AAoDA,aAAOvB,WAAP;AACD,KAzDwD;AAAA,GAAhC;AAAA,CAAzB;;AA0DA,eAAeL,gBAAf","sourcesContent":["import { ActionType } from \"../../../../Common/Util/Constant\";\n\nconst webtrcMiddleware = ({ getState, dispatch }) => next => action => {\n  const returnValue = next(action);\n  const nextState = getState();\n\n  switch (action.type) {\n    case ActionType.ADD_SCENE:\n    case ActionType.COPY_SCENE:\n    case ActionType.REMOVE_SCENE:\n    case ActionType.REORDER_SCENE:\n    case ActionType.SELECT_SCENE:\n    case ActionType.SELECT_SPRITE:\n    case ActionType.ADD_SPRITES:\n    case ActionType.REMOVE_SPRITE:\n    case ActionType.REMOVE_ALL_SPRITE:\n    case ActionType.REORDER_SPRITE:\n    case ActionType.SET_EDITOR_MODE:\n    case ActionType.SET_SPRITE_CODE:\n    case ActionType.SET_SPRITE_BLOCKXML:\n    case ActionType.SET_SPRITE_PREVIEW:\n    case ActionType.ADD_SOUNDS:\n    case ActionType.REMOVE_SOUND:\n    case ActionType.SET_IS_PLAYING:\n    case ActionType.SET_SCREEN_MODE:\n    case ActionType.LOCK_SPRITE:\n    case ActionType.SET_TEMPLATE:\n      let project = { ...nextState.project };\n      project.state = {\n        scene: nextState.scene,\n        preview: { screenMode: nextState.preview.screenMode },\n        interaction: { selected: nextState.interaction.selected }\n      };\n      delete project[\"timeStamp\"];\n      delete project[\"createdAt\"];\n      delete project[\"updatedAt\"];\n      delete project[\"isDeleted\"];\n      delete project[\"icon\"];\n      delete project[\"isFromTemplate\"];\n      delete project[\"screenshotURL\"];\n      delete project[\"user\"];\n      delete project[\"email\"];\n      delete project[\"name\"];\n      delete project[\"pId\"];\n      delete project[\"basicClass\"];\n      delete project[\"url\"];\n      delete project[\"video\"];\n\n      if (project.scene) delete project.scene[\"timeStamp\"];\n      dispatch({\n        type: ActionType.WEBRTC_SET_PROJECT,\n        project: project\n      });\n      break;\n    default:\n      break;\n  }\n\n  return returnValue;\n};\nexport default webtrcMiddleware;\n"]},"metadata":{},"sourceType":"module"}