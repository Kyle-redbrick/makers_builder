{"ast":null,"code":"import { VCTYPE } from \"../../../../../../../Common/Util/Constant\";\nimport { OCP_IMAGES } from \"../../../../../../../Common/Util/Constant\";\nimport endImg from \"../images/end.png\";\nexport var data = {\n  image: OCP_IMAGES.advanced.level3.cover,\n  title: \"고급 3. 배터리 연결하기\",\n  state: null,\n  level: 3,\n  currentStageNum: 0,\n  stages: [{\n    type: VCTYPE.STEP.IMAGE,\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }],\n    imgSrc: OCP_IMAGES.advanced.level3.story\n  }, // mission 1\n  {\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: OCP_IMAGES.advanced.level3.mission1,\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }]\n  }, {\n    title: \"미션1 - 코딩\",\n    type: VCTYPE.STEP.CODE,\n    imgSrc: OCP_IMAGES.advanced.level3.description1,\n    conditions: [{\n      type: VCTYPE.CONDITION.CODE_AST,\n      sceneId: \"scene1\",\n      spriteId: \"robot_g\",\n      code: {\n        type: \"Program\",\n        body: [{\n          type: \"VariableDeclaration\",\n          declarations: [{\n            type: \"VariableDeclarator\",\n            id: {\n              type: \"Identifier\",\n              name: \"isBatteryOn\"\n            },\n            init: {\n              type: \"Literal\",\n              value: false\n            }\n          }],\n          kind: \"var\"\n        }],\n        sourceType: \"module\"\n      }\n    }],\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"모두 입력했다면 > 버튼을 눌러 다음 미션으로 넘어가세요\"\n    }],\n    hint: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.hint1\n    }],\n    answer: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.answer1\n    }]\n  }, {\n    title: \"미션2\",\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: OCP_IMAGES.advanced.level3.mission2,\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }]\n  }, {\n    title: \"미션2 - 코딩\",\n    type: VCTYPE.STEP.CODE,\n    imgSrc: OCP_IMAGES.advanced.level3.description2,\n    conditions: [{\n      type: VCTYPE.CONDITION.CODE_AST,\n      sceneId: \"scene1\",\n      spriteId: \"robot_g\",\n      code: {\n        type: \"Program\",\n        body: [{\n          type: \"VariableDeclaration\",\n          declarations: [{\n            type: \"VariableDeclarator\",\n            id: {\n              type: \"Identifier\",\n              name: \"isBatteryOn\"\n            },\n            init: {\n              type: \"Literal\",\n              value: false\n            }\n          }],\n          kind: \"var\"\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onOverlap\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"battery_c\"\n            }, {\n              type: \"FunctionExpression\",\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"say\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      isLoose: true\n                    }, {\n                      type: \"Literal\",\n                      isLoose: true\n                    }]\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"playAnimation\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"idle\"\n                    }, {\n                      type: \"Literal\",\n                      isLoose: true\n                    }]\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"AssignmentExpression\",\n                    operator: \"=\",\n                    left: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    right: {\n                      type: \"Literal\",\n                      value: true\n                    }\n                  }\n                }]\n              }\n            }]\n          }\n        }],\n        sourceType: \"module\"\n      }\n    }, {\n      type: VCTYPE.CONDITION.PLAY_ONCE\n    }, {\n      type: VCTYPE.CONDITION.GAME_EVENT,\n      event: {\n        api: \"playAnimation\",\n        sceneId: \"scene1\",\n        spriteId: \"robot_g\",\n        name: \"idle\"\n      }\n    }],\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"실행 버튼을 누르고 배터리를 로봇으로 드래그했을 때, 로봇의 모양이 바뀌고 말풍선이 뜨는지 확인해 보세요\"\n    }],\n    hint: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.hint2\n    }],\n    answer: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.answer2\n    }]\n  }, {\n    title: \"미션3\",\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: OCP_IMAGES.advanced.level3.mission3,\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }]\n  }, {\n    title: \"미션3 - 코딩\",\n    type: VCTYPE.STEP.CODE,\n    imgSrc: OCP_IMAGES.advanced.level3.description3,\n    conditions: [{\n      type: VCTYPE.CONDITION.CODE_AST,\n      sceneId: \"scene1\",\n      spriteId: \"robot_g\",\n      code: {\n        type: \"Program\",\n        body: [{\n          type: \"VariableDeclaration\",\n          declarations: [{\n            type: \"VariableDeclarator\",\n            id: {\n              type: \"Identifier\",\n              name: \"isBatteryOn\"\n            },\n            init: {\n              type: \"Literal\",\n              value: false\n            }\n          }],\n          kind: \"var\"\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onOverlap\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"battery_c\"\n            }, {\n              type: \"FunctionExpression\",\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"say\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      isLoose: true\n                    }, {\n                      type: \"Literal\",\n                      isLoose: true\n                    }]\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"playAnimation\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"idle\"\n                    }, {\n                      type: \"Literal\",\n                      isLoose: true\n                    }]\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"AssignmentExpression\",\n                    operator: \"=\",\n                    left: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    right: {\n                      type: \"Literal\",\n                      value: true\n                    }\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"setDraggable\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: true\n                    }]\n                  }\n                }]\n              }\n            }]\n          }\n        }],\n        sourceType: \"module\"\n      }\n    }, {\n      type: VCTYPE.CONDITION.PLAY_ONCE\n    }, {\n      type: VCTYPE.CONDITION.GAME_EVENT,\n      event: {\n        api: \"setDraggable\",\n        sceneId: \"scene1\",\n        spriteId: \"robot_g\",\n        enabled: true\n      }\n    }],\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"실행 버튼을 누르고 전원이 들어온 로봇을 마우스로 드래그하면 움직이는지 확인해 보세요\"\n    }],\n    hint: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.hint3\n    }],\n    answer: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.answer3\n    }]\n  }, {\n    title: \"미션4\",\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: OCP_IMAGES.advanced.level3.mission4,\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }]\n  }, {\n    title: \"미션4 - 코딩\",\n    type: VCTYPE.STEP.CODE,\n    imgSrc: OCP_IMAGES.advanced.level3.description4,\n    conditions: [{\n      type: VCTYPE.CONDITION.CODE_AST,\n      sceneId: \"scene1\",\n      spriteId: \"robot_g\",\n      code: {\n        type: \"Program\",\n        body: [{\n          type: \"VariableDeclaration\",\n          declarations: [{\n            type: \"VariableDeclarator\",\n            id: {\n              type: \"Identifier\",\n              name: \"isBatteryOn\"\n            },\n            init: {\n              type: \"Literal\",\n              value: false\n            }\n          }],\n          kind: \"var\"\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onOverlap\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"battery_c\"\n            }, {\n              type: \"FunctionExpression\",\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"say\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      isLoose: true\n                    }, {\n                      type: \"Literal\",\n                      isLoose: true\n                    }]\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"playAnimation\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"idle\"\n                    }, {\n                      type: \"Literal\",\n                      isLoose: true\n                    }]\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"AssignmentExpression\",\n                    operator: \"=\",\n                    left: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    right: {\n                      type: \"Literal\",\n                      value: true\n                    }\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"setDraggable\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: true\n                    }]\n                  }\n                }]\n              }\n            }]\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onClick\"\n            },\n            arguments: [{\n              type: \"FunctionExpression\",\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"IfStatement\",\n                  test: {\n                    type: \"BinaryExpression\",\n                    left: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    operator: \"==\",\n                    right: {\n                      type: \"Literal\",\n                      value: true\n                    }\n                  },\n                  consequent: {\n                    type: \"BlockStatement\",\n                    body: [{\n                      type: \"ExpressionStatement\",\n                      expression: {\n                        type: \"CallExpression\",\n                        callee: {\n                          type: \"Identifier\",\n                          name: \"say\"\n                        },\n                        arguments: [{\n                          type: \"Literal\",\n                          isLoose: true\n                        }, {\n                          type: \"Literal\",\n                          isLoose: true\n                        }]\n                      }\n                    }]\n                  },\n                  alternate: {\n                    type: \"BlockStatement\",\n                    body: [{\n                      type: \"ExpressionStatement\",\n                      expression: {\n                        type: \"CallExpression\",\n                        callee: {\n                          type: \"Identifier\",\n                          name: \"say\"\n                        },\n                        arguments: [{\n                          type: \"Literal\",\n                          isLoose: true\n                        }, {\n                          type: \"Literal\",\n                          isLoose: true\n                        }]\n                      }\n                    }]\n                  }\n                }]\n              }\n            }]\n          }\n        }],\n        sourceType: \"module\"\n      }\n    }, {\n      type: VCTYPE.CONDITION.PLAY_ONCE\n    }, {\n      type: VCTYPE.CONDITION.GAME_EVENT,\n      event: {\n        api: \"onClick\",\n        sceneId: \"scene1\",\n        spriteId: \"robot_g\"\n      }\n    }],\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"실행 버튼을 누르고 배터리를 연결한 로봇을 클릭해 보세요. 연결하기 전의 로봇과 말풍선의 내용이 다른지 확인해 보세요\"\n    }],\n    hint: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.hint4\n    }],\n    answer: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: OCP_IMAGES.advanced.level3.answer4\n    }]\n  }, {\n    title: \"엔딩\",\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: endImg,\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"수업을 모두 마쳤어!\\n대단한걸?\\n다음 수업에서 또 보자!\"\n    }]\n  }]\n};\nexport var state = {\n  scene: {\n    scenes: {\n      scene1: {\n        sceneName: \"scene1\",\n        sprites: {\n          room_d: {\n            type: \"background\",\n            assetId: \"room_d\",\n            code: \"\",\n            locked: true,\n            preview: {\n              name: \"room_d\",\n              type: \"background\",\n              angle: 0,\n              left: -199,\n              top: 0,\n              scaleX: 1,\n              scaleY: 1,\n              width: 1678,\n              height: 720,\n              opacity: 1\n            }\n          },\n          door_f: {\n            type: \"sprite\",\n            assetId: \"door_f\",\n            code: 'onClick(function(){\\n    say(\"문이 잠겨있다.\",1)\\n})\\n\\n\\n',\n            locked: true,\n            preview: {\n              name: \"door_f\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 658.6666666666667,\n              top: 335.73033707865164,\n              scaleX: 1,\n              scaleY: 1,\n              width: 508,\n              height: 374,\n              opacity: 1\n            }\n          },\n          monitor_a: {\n            type: \"sprite\",\n            assetId: \"monitor_a\",\n            code: 'onClick(function(){\\n    playAnimation(\"on\",true) \\n    say(\"모니터가 켜졌다.\",1)\\n})\\n',\n            locked: true,\n            preview: {\n              name: \"monitor_a\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 1101.8677144728226,\n              top: 436.9893940984984,\n              scaleX: 1,\n              scaleY: 1,\n              width: 162,\n              height: 190,\n              opacity: 1\n            }\n          },\n          door_g: {\n            type: \"sprite\",\n            assetId: \"door_g\",\n            code: 'onClick(function(){\\n    say(\"아래에 무언가가 있지만 손이 닿지 않는다\",1)\\n})',\n            locked: true,\n            preview: {\n              name: \"door_g\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 638.3235101506222,\n              top: 631.6822429906542,\n              scaleX: 1,\n              scaleY: 1,\n              width: 403,\n              height: 154,\n              opacity: 1\n            }\n          },\n          battery_c: {\n            type: \"sprite\",\n            assetId: \"battery_c\",\n            code: \"onSignal(\\\"getBattery\\\",function(){\\n    moveTo(824,300)\\n    setDraggable(true)\\n})\",\n            locked: true,\n            preview: {\n              name: \"battery_c\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 824.2033919052078,\n              top: 500,\n              scaleX: 0.367557529226919,\n              scaleY: 0.367557529226919,\n              width: 112,\n              height: 112,\n              opacity: 1\n            }\n          },\n          machine_e: {\n            type: \"sprite\",\n            assetId: \"machine_e\",\n            code: \"onClick(function(){\\n    say(\\\"\\uBC30\\uD130\\uB9AC\\uB97C \\uCC3E\\uC558\\uB2E4!\\\",1)\\n    sendSignal(\\\"getBattery\\\")\\n})\",\n            locked: true,\n            preview: {\n              name: \"machine_e\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 827.8900410008687,\n              top: 488.02526277222415,\n              scaleX: 0.9018741664482807,\n              scaleY: 0.9018741664482807,\n              width: 100,\n              height: 175,\n              opacity: 1\n            }\n          },\n          robot_g: {\n            type: \"sprite\",\n            assetId: \"robot_g_v3\",\n            code: \"\",\n            preview: {\n              name: \"robot_g\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 316.70713951384,\n              top: 442.56615663108494,\n              scaleX: 0.6,\n              scaleY: 0.6,\n              width: 196,\n              height: 266,\n              opacity: 1,\n              scale: \"60\"\n            }\n          }\n        },\n        spriteIds: [\"room_d\", \"door_f\", \"monitor_a\", \"door_g\", \"battery_c\", \"machine_e\", \"robot_g\"],\n        preview: \"https://wizschool-images.s3.ap-northeast-2.amazonaws.com/c1dbbdcb86066fa9024637edc6c10fbd.jpg\"\n      }\n    },\n    sceneIds: [\"scene1\"],\n    soundIds: [],\n    timeStamp: 1590977183459,\n    editorMode: \"javascript-wiz\"\n  },\n  interaction: {\n    selected: {\n      objects: {\n        scene1: {\n          name: \"robot_g\",\n          type: \"sprite\"\n        }\n      },\n      api: \"ID_PHYSICS\",\n      method: null,\n      scene: \"scene1\"\n    },\n    jukebox: {\n      isPlaying: false\n    }\n  },\n  preview: {\n    isPlaying: false,\n    isFullScreen: false,\n    screenMode: \"HORIZONTAL\",\n    volume: 100\n  }\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/OCP2/template/escape/advanced/3.js"],"names":["VCTYPE","OCP_IMAGES","endImg","data","image","advanced","level3","cover","title","state","level","currentStageNum","stages","type","STEP","IMAGE","ego","EGO","TEXT","imgSrc","story","mission1","CODE","description1","conditions","CONDITION","CODE_AST","sceneId","spriteId","code","body","declarations","id","name","init","value","kind","sourceType","hint","hint1","answer","answer1","mission2","description2","expression","callee","arguments","params","isLoose","operator","left","right","PLAY_ONCE","GAME_EVENT","event","api","hint2","answer2","mission3","description3","enabled","hint3","answer3","mission4","description4","test","consequent","alternate","hint4","answer4","scene","scenes","scene1","sceneName","sprites","room_d","assetId","locked","preview","angle","top","scaleX","scaleY","width","height","opacity","door_f","subtype","monitor_a","door_g","battery_c","machine_e","robot_g","scale","spriteIds","sceneIds","soundIds","timeStamp","editorMode","interaction","selected","objects","method","jukebox","isPlaying","isFullScreen","screenMode","volume"],"mappings":"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","sourcesContent":["import { VCTYPE } from \"../../../../../../../Common/Util/Constant\";\nimport { OCP_IMAGES } from \"../../../../../../../Common/Util/Constant\";\nimport endImg from \"../images/end.png\";\n\nexport const data = {\n  image: OCP_IMAGES.advanced.level3.cover,\n  title: \"고급 3. 배터리 연결하기\",\n  state: null,\n  level: 3,\n  currentStageNum: 0,\n  stages: [\n    {\n      type: VCTYPE.STEP.IMAGE,\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ],\n      imgSrc: OCP_IMAGES.advanced.level3.story\n    },\n    // mission 1\n    {\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: OCP_IMAGES.advanced.level3.mission1,\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ]\n    },\n    {\n      title: \"미션1 - 코딩\",\n      type: VCTYPE.STEP.CODE,\n      imgSrc: OCP_IMAGES.advanced.level3.description1,\n      conditions: [\n        {\n          type: VCTYPE.CONDITION.CODE_AST,\n          sceneId: \"scene1\",\n          spriteId: \"robot_g\",\n          code: {\n            type: \"Program\",\n            body: [\n              {\n                type: \"VariableDeclaration\",\n                declarations: [\n                  {\n                    type: \"VariableDeclarator\",\n                    id: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    init: {\n                      type: \"Literal\",\n                      value: false\n                    }\n                  }\n                ],\n                kind: \"var\"\n              }\n            ],\n            sourceType: \"module\"\n          }\n        }\n      ],\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"모두 입력했다면 > 버튼을 눌러 다음 미션으로 넘어가세요\"\n        }\n      ],\n      hint: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.hint1\n        }\n      ],\n      answer: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.answer1\n        }\n      ]\n    },\n    {\n      title: \"미션2\",\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: OCP_IMAGES.advanced.level3.mission2,\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ]\n    },\n    {\n      title: \"미션2 - 코딩\",\n      type: VCTYPE.STEP.CODE,\n      imgSrc: OCP_IMAGES.advanced.level3.description2,\n      conditions: [\n        {\n          type: VCTYPE.CONDITION.CODE_AST,\n          sceneId: \"scene1\",\n          spriteId: \"robot_g\",\n          code: {\n            type: \"Program\",\n            body: [\n              {\n                type: \"VariableDeclaration\",\n                declarations: [\n                  {\n                    type: \"VariableDeclarator\",\n                    id: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    init: {\n                      type: \"Literal\",\n                      value: false\n                    }\n                  }\n                ],\n                kind: \"var\"\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onOverlap\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"battery_c\"\n                    },\n                    {\n                      type: \"FunctionExpression\",\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"say\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                },\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                }\n                              ]\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"playAnimation\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"idle\"\n                                },\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                }\n                              ]\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"AssignmentExpression\",\n                              operator: \"=\",\n                              left: {\n                                type: \"Identifier\",\n                                name: \"isBatteryOn\"\n                              },\n                              right: {\n                                type: \"Literal\",\n                                value: true\n                              }\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              }\n            ],\n            sourceType: \"module\"\n          }\n        },\n        { type: VCTYPE.CONDITION.PLAY_ONCE },\n        {\n          type: VCTYPE.CONDITION.GAME_EVENT,\n          event: {\n            api: \"playAnimation\",\n            sceneId: \"scene1\",\n            spriteId: \"robot_g\",\n            name: \"idle\"\n          }\n        }\n      ],\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data:\n            \"실행 버튼을 누르고 배터리를 로봇으로 드래그했을 때, 로봇의 모양이 바뀌고 말풍선이 뜨는지 확인해 보세요\"\n        }\n      ],\n      hint: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.hint2\n        }\n      ],\n      answer: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.answer2\n        }\n      ]\n    },\n    {\n      title: \"미션3\",\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: OCP_IMAGES.advanced.level3.mission3,\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ]\n    },\n    {\n      title: \"미션3 - 코딩\",\n      type: VCTYPE.STEP.CODE,\n      imgSrc: OCP_IMAGES.advanced.level3.description3,\n      conditions: [\n        {\n          type: VCTYPE.CONDITION.CODE_AST,\n          sceneId: \"scene1\",\n          spriteId: \"robot_g\",\n          code: {\n            type: \"Program\",\n            body: [\n              {\n                type: \"VariableDeclaration\",\n                declarations: [\n                  {\n                    type: \"VariableDeclarator\",\n                    id: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    init: {\n                      type: \"Literal\",\n                      value: false\n                    }\n                  }\n                ],\n                kind: \"var\"\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onOverlap\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"battery_c\"\n                    },\n                    {\n                      type: \"FunctionExpression\",\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"say\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                },\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                }\n                              ]\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"playAnimation\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"idle\"\n                                },\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                }\n                              ]\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"AssignmentExpression\",\n                              operator: \"=\",\n                              left: {\n                                type: \"Identifier\",\n                                name: \"isBatteryOn\"\n                              },\n                              right: {\n                                type: \"Literal\",\n                                value: true\n                              }\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"setDraggable\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: true\n                                }\n                              ]\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              }\n            ],\n            sourceType: \"module\"\n          }\n        },\n        { type: VCTYPE.CONDITION.PLAY_ONCE },\n        {\n          type: VCTYPE.CONDITION.GAME_EVENT,\n          event: {\n            api: \"setDraggable\",\n            sceneId: \"scene1\",\n            spriteId: \"robot_g\",\n            enabled: true\n          }\n        }\n      ],\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data:\n            \"실행 버튼을 누르고 전원이 들어온 로봇을 마우스로 드래그하면 움직이는지 확인해 보세요\"\n        }\n      ],\n      hint: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.hint3\n        }\n      ],\n      answer: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.answer3\n        }\n      ]\n    },\n    {\n      title: \"미션4\",\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: OCP_IMAGES.advanced.level3.mission4,\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ]\n    },\n    {\n      title: \"미션4 - 코딩\",\n      type: VCTYPE.STEP.CODE,\n      imgSrc: OCP_IMAGES.advanced.level3.description4,\n      conditions: [\n        {\n          type: VCTYPE.CONDITION.CODE_AST,\n          sceneId: \"scene1\",\n          spriteId: \"robot_g\",\n          code: {\n            type: \"Program\",\n            body: [\n              {\n                type: \"VariableDeclaration\",\n                declarations: [\n                  {\n                    type: \"VariableDeclarator\",\n                    id: {\n                      type: \"Identifier\",\n                      name: \"isBatteryOn\"\n                    },\n                    init: {\n                      type: \"Literal\",\n                      value: false\n                    }\n                  }\n                ],\n                kind: \"var\"\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onOverlap\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"battery_c\"\n                    },\n                    {\n                      type: \"FunctionExpression\",\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"say\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                },\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                }\n                              ]\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"playAnimation\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"idle\"\n                                },\n                                {\n                                  type: \"Literal\",\n                                  isLoose: true\n                                }\n                              ]\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"AssignmentExpression\",\n                              operator: \"=\",\n                              left: {\n                                type: \"Identifier\",\n                                name: \"isBatteryOn\"\n                              },\n                              right: {\n                                type: \"Literal\",\n                                value: true\n                              }\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"setDraggable\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: true\n                                }\n                              ]\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onClick\"\n                  },\n                  arguments: [\n                    {\n                      type: \"FunctionExpression\",\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"IfStatement\",\n                            test: {\n                              type: \"BinaryExpression\",\n                              left: {\n                                type: \"Identifier\",\n                                name: \"isBatteryOn\"\n                              },\n                              operator: \"==\",\n                              right: {\n                                type: \"Literal\",\n                                value: true\n                              }\n                            },\n                            consequent: {\n                              type: \"BlockStatement\",\n                              body: [\n                                {\n                                  type: \"ExpressionStatement\",\n                                  expression: {\n                                    type: \"CallExpression\",\n                                    callee: {\n                                      type: \"Identifier\",\n                                      name: \"say\"\n                                    },\n                                    arguments: [\n                                      {\n                                        type: \"Literal\",\n                                        isLoose: true\n                                      },\n                                      {\n                                        type: \"Literal\",\n                                        isLoose: true\n                                      }\n                                    ]\n                                  }\n                                }\n                              ]\n                            },\n                            alternate: {\n                              type: \"BlockStatement\",\n                              body: [\n                                {\n                                  type: \"ExpressionStatement\",\n                                  expression: {\n                                    type: \"CallExpression\",\n                                    callee: {\n                                      type: \"Identifier\",\n                                      name: \"say\"\n                                    },\n                                    arguments: [\n                                      {\n                                        type: \"Literal\",\n                                        isLoose: true\n                                      },\n                                      {\n                                        type: \"Literal\",\n                                        isLoose: true\n                                      }\n                                    ]\n                                  }\n                                }\n                              ]\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ]\n                }\n              }\n            ],\n            sourceType: \"module\"\n          }\n        },\n        { type: VCTYPE.CONDITION.PLAY_ONCE },\n        {\n          type: VCTYPE.CONDITION.GAME_EVENT,\n          event: {\n            api: \"onClick\",\n            sceneId: \"scene1\",\n            spriteId: \"robot_g\"\n          }\n        }\n      ],\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data:\n            \"실행 버튼을 누르고 배터리를 연결한 로봇을 클릭해 보세요. 연결하기 전의 로봇과 말풍선의 내용이 다른지 확인해 보세요\"\n        }\n      ],\n      hint: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.hint4\n        }\n      ],\n      answer: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: OCP_IMAGES.advanced.level3.answer4\n        }\n      ]\n    },\n    {\n      title: \"엔딩\",\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: endImg,\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"수업을 모두 마쳤어!\\n대단한걸?\\n다음 수업에서 또 보자!\"\n        }\n      ]\n    }\n  ]\n};\n\nexport const state = {\n  scene: {\n    scenes: {\n      scene1: {\n        sceneName: \"scene1\",\n        sprites: {\n          room_d: {\n            type: \"background\",\n            assetId: \"room_d\",\n            code: \"\",\n            locked: true,\n            preview: {\n              name: \"room_d\",\n              type: \"background\",\n              angle: 0,\n              left: -199,\n              top: 0,\n              scaleX: 1,\n              scaleY: 1,\n              width: 1678,\n              height: 720,\n              opacity: 1\n            }\n          },\n          door_f: {\n            type: \"sprite\",\n            assetId: \"door_f\",\n            code: 'onClick(function(){\\n    say(\"문이 잠겨있다.\",1)\\n})\\n\\n\\n',\n            locked: true,\n            preview: {\n              name: \"door_f\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 658.6666666666667,\n              top: 335.73033707865164,\n              scaleX: 1,\n              scaleY: 1,\n              width: 508,\n              height: 374,\n              opacity: 1\n            }\n          },\n          monitor_a: {\n            type: \"sprite\",\n            assetId: \"monitor_a\",\n            code:\n              'onClick(function(){\\n    playAnimation(\"on\",true) \\n    say(\"모니터가 켜졌다.\",1)\\n})\\n',\n            locked: true,\n            preview: {\n              name: \"monitor_a\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 1101.8677144728226,\n              top: 436.9893940984984,\n              scaleX: 1,\n              scaleY: 1,\n              width: 162,\n              height: 190,\n              opacity: 1\n            }\n          },\n          door_g: {\n            type: \"sprite\",\n            assetId: \"door_g\",\n            code:\n              'onClick(function(){\\n    say(\"아래에 무언가가 있지만 손이 닿지 않는다\",1)\\n})',\n            locked: true,\n            preview: {\n              name: \"door_g\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 638.3235101506222,\n              top: 631.6822429906542,\n              scaleX: 1,\n              scaleY: 1,\n              width: 403,\n              height: 154,\n              opacity: 1\n            }\n          },\n          battery_c: {\n            type: \"sprite\",\n            assetId: \"battery_c\",\n            code: `onSignal(\"getBattery\",function(){\\n    moveTo(824,300)\\n    setDraggable(true)\\n})`,\n            locked: true,\n            preview: {\n              name: \"battery_c\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 824.2033919052078,\n              top: 500,\n              scaleX: 0.367557529226919,\n              scaleY: 0.367557529226919,\n              width: 112,\n              height: 112,\n              opacity: 1\n            }\n          },\n          machine_e: {\n            type: \"sprite\",\n            assetId: \"machine_e\",\n            code: `onClick(function(){\\n    say(\"배터리를 찾았다!\",1)\\n    sendSignal(\"getBattery\")\\n})`,\n            locked: true,\n            preview: {\n              name: \"machine_e\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 827.8900410008687,\n              top: 488.02526277222415,\n              scaleX: 0.9018741664482807,\n              scaleY: 0.9018741664482807,\n              width: 100,\n              height: 175,\n              opacity: 1\n            }\n          },\n          robot_g: {\n            type: \"sprite\",\n            assetId: \"robot_g_v3\",\n            code: \"\",\n            preview: {\n              name: \"robot_g\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 316.70713951384,\n              top: 442.56615663108494,\n              scaleX: 0.6,\n              scaleY: 0.6,\n              width: 196,\n              height: 266,\n              opacity: 1,\n              scale: \"60\"\n            }\n          }\n        },\n        spriteIds: [\n          \"room_d\",\n          \"door_f\",\n          \"monitor_a\",\n          \"door_g\",\n          \"battery_c\",\n          \"machine_e\",\n          \"robot_g\"\n        ],\n        preview:\n          \"https://wizschool-images.s3.ap-northeast-2.amazonaws.com/c1dbbdcb86066fa9024637edc6c10fbd.jpg\"\n      }\n    },\n    sceneIds: [\"scene1\"],\n    soundIds: [],\n    timeStamp: 1590977183459,\n    editorMode: \"javascript-wiz\"\n  },\n  interaction: {\n    selected: {\n      objects: {\n        scene1: { name: \"robot_g\", type: \"sprite\" }\n      },\n      api: \"ID_PHYSICS\",\n      method: null,\n      scene: \"scene1\"\n    },\n    jukebox: { isPlaying: false }\n  },\n  preview: {\n    isPlaying: false,\n    isFullScreen: false,\n    screenMode: \"HORIZONTAL\",\n    volume: 100\n  }\n};\n"]},"metadata":{},"sourceType":"module"}