{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/QRPopup/PhoneDropDown.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport onClickOutside from \"react-onclickoutside\";\nimport I18NCountries from \"i18n-iso-countries\";\nimport { iso2ToDial } from \"../../Util/CountryCode\";\nI18NCountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\nI18NCountries.registerLocale(require(\"i18n-iso-countries/langs/ko.json\"));\nI18NCountries.registerLocale(require(\"i18n-iso-countries/langs/zh.json\"));\n\nvar PhoneDropDown = /*#__PURE__*/function (_Component) {\n  _inherits(PhoneDropDown, _Component);\n\n  var _super = _createSuper(PhoneDropDown);\n\n  function PhoneDropDown(props) {\n    var _this;\n\n    _classCallCheck(this, PhoneDropDown);\n\n    _this = _super.call(this, props);\n\n    _this.handleClickOutside = function (e) {\n      _this.setState({\n        isListOpened: false\n      });\n    };\n\n    _this.handleItemClick = function (item) {\n      _this.props.handleSelectItem(\"+\".concat(item.dialCode));\n\n      _this.setState({\n        selectedItem: item,\n        isListOpened: false\n      });\n    };\n\n    _this.handleToggleList = function () {\n      _this.setState(function (state) {\n        return {\n          isListOpened: !state.isListOpened\n        };\n      }, _this.focusSelectedRef);\n    };\n\n    _this.selectedRef = null;\n\n    _this.setSelectedRef = function (element) {\n      _this.selectedRef = element;\n    };\n\n    _this.focusSelectedRef = function () {\n      if (_this.selectedRef) {\n        _this.selectedRef.scrollIntoView({\n          block: \"center\",\n          behavior: \"auto\"\n        });\n      }\n    };\n\n    _this.lang = \"ko\";\n    _this.list = Object.keys(iso2ToDial).map(function (country) {\n      return {\n        name: I18NCountries.getName(country, _this.lang),\n        dialCode: iso2ToDial[country]\n      };\n    }).sort(function (a, b) {\n      return a.name.localeCompare(b.name);\n    });\n    _this.state = {\n      isListOpened: false,\n      selectedItem: _this.list.find(function (item) {\n        return \"+\".concat(item.dialCode) === _this.props.countryCode;\n      })\n    };\n    return _this;\n  }\n\n  _createClass(PhoneDropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var phoneNum = this.props.phoneNum;\n      var _this$state = this.state,\n          isListOpened = _this$state.isListOpened,\n          selectedItem = _this$state.selectedItem;\n      var listToggle = isListOpened ? \"on\" : \"off\";\n      return React.createElement(\"div\", {\n        className: \"PhoneDD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PhoneDD__header PhoneDD__header__\".concat(listToggle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PhoneDD__countryRow\",\n        onClick: this.handleToggleList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PhoneDD__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"+\".concat(selectedItem.dialCode)), React.createElement(\"div\", {\n        className: \"PhoneDD__arrow PhoneDD__arrow--\".concat(listToggle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        className: \"PhoneDD__input\",\n        type: \"text\",\n        name: \"phoneNum\",\n        value: phoneNum,\n        autoComplete: \"tel\",\n        onChange: function onChange(e) {\n          if (_this2.props.handleInputChange) {\n            _this2.props.handleInputChange(e);\n          }\n        },\n        placeholder: \"000-0000-0000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), isListOpened && React.createElement(\"div\", {\n        className: \"PhoneDD__body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PhoneDD__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.list.map(function (item, index) {\n        var isSelected = selectedItem.dialCode === item.dialCode;\n        var itemToggle = isSelected ? \"on\" : \"off\";\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"PhoneDD__item PhoneDD__item--\".concat(itemToggle),\n          onClick: function onClick() {\n            return _this2.handleItemClick(item);\n          },\n          ref: isSelected ? _this2.setSelectedRef : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"\".concat(item.name, \" (+\").concat(item.dialCode, \")\"));\n      }))));\n    }\n  }]);\n\n  return PhoneDropDown;\n}(Component);\n\nexport default injectIntl(onClickOutside(PhoneDropDown));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Common/Component/QRPopup/PhoneDropDown.js"],"names":["React","Component","injectIntl","onClickOutside","I18NCountries","iso2ToDial","registerLocale","require","PhoneDropDown","props","handleClickOutside","e","setState","isListOpened","handleItemClick","item","handleSelectItem","dialCode","selectedItem","handleToggleList","state","focusSelectedRef","selectedRef","setSelectedRef","element","scrollIntoView","block","behavior","lang","list","Object","keys","map","country","name","getName","sort","a","b","localeCompare","find","countryCode","phoneNum","listToggle","handleInputChange","index","isSelected","itemToggle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\n\nimport onClickOutside from \"react-onclickoutside\";\nimport I18NCountries from \"i18n-iso-countries\";\nimport { iso2ToDial } from \"../../Util/CountryCode\";\nI18NCountries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\nI18NCountries.registerLocale(require(\"i18n-iso-countries/langs/ko.json\"));\nI18NCountries.registerLocale(require(\"i18n-iso-countries/langs/zh.json\"));\n\nclass PhoneDropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.selectedRef = null;\n\n    this.setSelectedRef = element => {\n      this.selectedRef = element;\n    };\n\n    this.focusSelectedRef = () => {\n      if (this.selectedRef) {\n        this.selectedRef.scrollIntoView({\n          block: \"center\",\n          behavior: \"auto\"\n        });\n      }\n    };\n    this.lang = \"ko\";\n    this.list = Object.keys(iso2ToDial)\n      .map(country => {\n        return {\n          name: I18NCountries.getName(country, this.lang),\n          dialCode: iso2ToDial[country]\n        };\n      })\n      .sort((a, b) => a.name.localeCompare(b.name));\n\n    this.state = {\n      isListOpened: false,\n      selectedItem: this.list.find(\n        item => `+${item.dialCode}` === this.props.countryCode\n      )\n    };\n  }\n\n  handleClickOutside = e => {\n    this.setState({\n      isListOpened: false\n    });\n  };\n\n  handleItemClick = item => {\n    this.props.handleSelectItem(`+${item.dialCode}`);\n    this.setState({ selectedItem: item, isListOpened: false });\n  };\n\n  handleToggleList = () => {\n    this.setState(state => {\n      return { isListOpened: !state.isListOpened };\n    }, this.focusSelectedRef);\n  };\n\n  render() {\n    let { phoneNum } = this.props;\n    let { isListOpened, selectedItem } = this.state;\n    let listToggle = isListOpened ? \"on\" : \"off\";\n    return (\n      <div className=\"PhoneDD\">\n        <div className={`PhoneDD__header PhoneDD__header__${listToggle}`}>\n          <div className=\"PhoneDD__countryRow\" onClick={this.handleToggleList}>\n            <div className=\"PhoneDD__title\">{`+${selectedItem.dialCode}`}</div>\n            <div className={`PhoneDD__arrow PhoneDD__arrow--${listToggle}`} />\n          </div>\n          <input\n            className=\"PhoneDD__input\"\n            type=\"text\"\n            name=\"phoneNum\"\n            value={phoneNum}\n            autoComplete=\"tel\"\n            onChange={e => {\n              if (this.props.handleInputChange) {\n                this.props.handleInputChange(e);\n              }\n            }}\n            placeholder=\"000-0000-0000\"\n          />\n        </div>\n        {isListOpened && (\n          <div className=\"PhoneDD__body\">\n            <div className=\"PhoneDD__list\">\n              {this.list.map((item, index) => {\n                let isSelected = selectedItem.dialCode === item.dialCode;\n                let itemToggle = isSelected ? \"on\" : \"off\";\n                return (\n                  <div\n                    key={index}\n                    className={`PhoneDD__item PhoneDD__item--${itemToggle}`}\n                    onClick={() => this.handleItemClick(item)}\n                    ref={isSelected ? this.setSelectedRef : null}\n                  >\n                    {`${item.name} (+${item.dialCode})`}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(onClickOutside(PhoneDropDown));\n"]},"metadata":{},"sourceType":"module"}