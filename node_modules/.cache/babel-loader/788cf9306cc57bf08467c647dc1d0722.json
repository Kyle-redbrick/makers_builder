{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/API/View.js\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport APILibrary from \"../../utils/apiLibrary\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport searchImg from \"../../../../Image/builder/group-search.svg\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../ButtonIndicator\";\n\nvar getTip = function getTip(name) {\n  var language = localStorage.getItem(\"wizLang\");\n  var api = APILibrary.getAPI(name);\n\n  if (!api || !api.tip) {\n    return null;\n  }\n\n  var tip = api.tip;\n\n  if (!getApiDescription(tip.description, language)) {\n    return null;\n  }\n\n  function getApiDescription(description, language) {\n    if (description === undefined) {\n      return \"\";\n    } else {\n      return description[language];\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"APITip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APITipDesc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, getApiDescription(tip.description, language)), tip.params && tip.params.map(function (param, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"APITipParam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"APITipParamTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, param.name), React.createElement(\"div\", {\n      className: \"APITipParamDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, getApiDescription(param.description, language)));\n  }), tip.description && React.createElement(\"div\", {\n    className: \"APITipDesc2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, getApiDescription(tip.description2, language)), api.snippet && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APITipSnippet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_API_DESCRIPTION_EXAMPLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"pre\", {\n    className: \"APITipSnippetCode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, api.snippet)));\n};\n\nexport default function (props) {\n  var selectedCategory = props.selectedCategory,\n      selectedAPI = props.selectedAPI,\n      handleSelectCategory = props.handleSelectCategory,\n      handleSelectAPI = props.handleSelectAPI,\n      handleSelectTab = props.handleSelectTab,\n      handleChangeZIndex = props.handleChangeZIndex,\n      apiList = props.apiList,\n      apiItems = props.apiItems,\n      formatMessage = props.formatMessage,\n      handleOnChange = props.handleOnChange,\n      searchValue = props.searchValue;\n  var colorTheme = getColorTheme();\n  return React.createElement(\"div\", {\n    className: \"API\",\n    onMouseDown: function onMouseDown() {\n      return handleChangeZIndex(\"api\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APITitleLine handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APITitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"API\"), React.createElement(\"div\", {\n    className: \"APIClose\",\n    onClick: function onClick() {\n      return handleSelectTab(\"api\");\n    },\n    onTouchEnd: function onTouchEnd() {\n      return handleSelectTab(\"api\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"APISearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleOnChange,\n    type: \"text\",\n    placeholder: \"Search\",\n    value: searchValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: searchImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"APIContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APICategories\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, apiList.map(function (api, index) {\n    return React.createElement(ButtonIndicator, {\n      buttonId: api.name,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: index,\n      onClick: function onClick() {\n        return handleSelectCategory(api.name);\n      },\n      className: \"APICategory \".concat(selectedCategory === api.name && \"APICategoryActive\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, formatMessage({\n      id: api.name\n    })));\n  })), React.createElement(\"div\", {\n    className: \"APIItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, apiItems.map(function (api, index) {\n    var isSelected = api.name === selectedAPI;\n    return React.createElement(ButtonIndicator, {\n      buttonId: api.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: function onClick() {\n        return handleSelectAPI(api.name);\n      },\n      className: \"APIItem\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"APIItemName \".concat(isSelected && \"APIItemNameActive\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, api.name), isSelected && getTip(api.name)));\n  }))));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/API/View.js"],"names":["React","FormattedMessage","APILibrary","getColorTheme","ButtonIndicator","getTip","name","language","localStorage","getItem","api","getAPI","tip","getApiDescription","description","undefined","params","map","param","index","description2","snippet","props","selectedCategory","selectedAPI","handleSelectCategory","handleSelectAPI","handleSelectTab","handleChangeZIndex","apiList","apiItems","formatMessage","handleOnChange","searchValue","colorTheme","closeImg_darkmode","closeImg","searchImg","id","isSelected"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport APILibrary from \"../../utils/apiLibrary\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport searchImg from \"../../../../Image/builder/group-search.svg\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../ButtonIndicator\";\n\nconst getTip = name => {\n  const language = localStorage.getItem(\"wizLang\");\n\n  const api = APILibrary.getAPI(name);\n  if (!api || !api.tip) {\n    return null;\n  }\n  const tip = api.tip;\n\n  if (!getApiDescription(tip.description, language)) {\n    return null;\n  }\n\n  function getApiDescription(description, language) {\n    if (description === undefined) {\n      return \"\";\n    } else {\n      return description[language];\n    }\n  }\n\n  return (\n    <div className=\"APITip\">\n      <div className=\"APITipDesc\">\n        {getApiDescription(tip.description, language)}\n      </div>\n      {tip.params &&\n        tip.params.map((param, index) => {\n          return (\n            <div key={index} className=\"APITipParam\">\n              <div className=\"APITipParamTitle\">{param.name}</div>\n              <div className=\"APITipParamDesc\">\n                {getApiDescription(param.description, language)}\n              </div>\n            </div>\n          );\n        })}\n      {tip.description && (\n        <div className=\"APITipDesc2\">\n          {getApiDescription(tip.description2, language)}\n        </div>\n      )}\n      {api.snippet && (\n        <div>\n          <div className=\"APITipSnippet\">\n            <FormattedMessage id=\"ID_API_DESCRIPTION_EXAMPLE\" />\n          </div>\n          <pre className=\"APITipSnippetCode\">{api.snippet}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default function(props) {\n  const {\n    selectedCategory,\n    selectedAPI,\n    handleSelectCategory,\n    handleSelectAPI,\n    handleSelectTab,\n    handleChangeZIndex,\n    apiList,\n    apiItems,\n    formatMessage,\n    handleOnChange,\n    searchValue\n  } = props;\n  const colorTheme = getColorTheme();\n\n  return (\n    <div className=\"API\" onMouseDown={() => handleChangeZIndex(\"api\")}>\n      <div className=\"APITitleLine handle\">\n        <div className=\"APITitle\">API</div>\n        <div className=\"APIClose\" onClick={() => handleSelectTab(\"api\")} onTouchEnd={() => handleSelectTab(\"api\")}>\n          <img\n            src={colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg}\n            alt=\"img\"\n          />\n        </div>\n      </div>\n      <div className=\"APISearch\">\n        <input\n          onChange={handleOnChange}\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchValue}\n        />\n        <img src={searchImg} alt=\"img\" />\n      </div>\n      <div className=\"APIContent\">\n        <div className=\"APICategories\">\n          {apiList.map((api, index) => {\n            return (\n              <ButtonIndicator buttonId={api.name} key={index}>\n                <div\n                  key={index}\n                  onClick={() => handleSelectCategory(api.name)}\n                  className={`APICategory ${selectedCategory === api.name &&\n                    \"APICategoryActive\"}`}\n                >\n                  {formatMessage({ id: api.name })}\n                </div>\n              </ButtonIndicator>\n            );\n          })}\n        </div>\n        <div className=\"APIItems\">\n          {apiItems.map((api, index) => {\n            const isSelected = api.name === selectedAPI;\n            return (\n              <ButtonIndicator buttonId={api.name}>\n                <div\n                  onClick={() => handleSelectAPI(api.name)}\n                  className=\"APIItem\"\n                  key={index}\n                >\n                  <div\n                    className={`APIItemName ${isSelected &&\n                      \"APIItemNameActive\"}`}\n                  >\n                    {api.name}\n                  </div>\n                  {isSelected && getTip(api.name)}\n                </div>\n              </ButtonIndicator>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}