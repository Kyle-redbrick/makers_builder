{"ast":null,"code":"import _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Python/Components/PopupComponents/SettingPopup/index.js\";\nimport React, { useState } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport \"./index.scss\";\nimport PopUp, { showPopUp } from \"../../../../../Common/Component/PopUp\";\nimport closeBtn from \"../../../../../Image/newPython/python-popup-close-btn@2x.png\";\nimport bgSoundOnIcon from \"../../../../../Image/newPython/setting-ic-sound-on@2x.png\";\nimport bgSoundOffIcon from \"../../../../../Image/newPython/setting-ic-sound-off@2x.png\";\nimport effectSoundOnIcon from \"../../../../../Image/newPython/setting-icon-bgm-on@2x.png\";\nimport effectSoundOffIcon from \"../../../../../Image/newPython/setting-icon-bgm-off@2x.png\";\nimport soundToggleIcon from \"../../../../../Image/newPython/btn-sound-toggle@2x.png\";\nimport { playSettingEffect } from \"../../../Util/PlaySound\";\n\nfunction PythonSetting(props) {\n  var dismiss = props.dismiss,\n      onClickRestartBtn = props.onClickRestartBtn,\n      isPlayBGM = props.isPlayBGM,\n      isPlayEffect = props.isPlayEffect,\n      onSaveSettings = props.onSaveSettings,\n      intl = props.intl;\n\n  var _useState = useState(isPlayBGM),\n      _useState2 = _slicedToArray(_useState, 2),\n      isNewPlayBGM = _useState2[0],\n      setIsNewPlayBGM = _useState2[1];\n\n  var _useState3 = useState(isPlayEffect),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isNewPlayEffect = _useState4[0],\n      setIsNewPlayEffect = _useState4[1];\n\n  var handleResetBtn = function handleResetBtn(onClickRestartBtn) {\n    showPopUp(React.createElement(PopUp.PythonAlert, {\n      textMessage: intl.formatMessage({\n        id: \"ID_PYTHON_SETTING_RESET_TITLE\"\n      }),\n      cancleBtnText: intl.formatMessage({\n        id: \"ID_PYTHON_SETTING_RESET_CANCEL_BTN\"\n      }),\n      confirmBtnText: intl.formatMessage({\n        id: \"ID_PYTHON_SETTING_RESET_CONFIRM_BTN\"\n      }),\n      againAction: onClickRestartBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), {\n      defaultPadding: false,\n      pythonPopup: true,\n      dismissButton: false\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"pythonSettingPopup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popupHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_PYTHON_SETTING_TITLE\"\n  })), React.createElement(\"img\", {\n    className: \"popupCloseBtn\",\n    onClick: dismiss,\n    src: closeBtn,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"popupBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"soundBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bgSoundLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"bgSoundIcon\",\n    src: true ? bgSoundOnIcon : bgSoundOffIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"soundType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_PYTHON_SETTING_BACKGROUNT_SOUND\"\n  })), React.createElement(\"div\", {\n    className: isNewPlayBGM ? \"soundToggleBtnWrapper on\" : \"soundToggleBtnWrapper\",\n    onClick: function onClick() {\n      playSettingEffect();\n      setIsNewPlayBGM(!isNewPlayBGM);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: soundToggleIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"soundState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, isNewPlayBGM ? \"ON\" : \"OFF\"))), React.createElement(\"div\", {\n    className: \"effectSoundLine\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"effectSoundIcon\",\n    src: true ? effectSoundOnIcon : effectSoundOffIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"soundType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_PYTHON_SETTING_EFFECT_SOUND\"\n  })), React.createElement(\"div\", {\n    className: isNewPlayEffect ? \"soundToggleBtnWrapper on\" : \"soundToggleBtnWrapper\",\n    onClick: function onClick() {\n      playSettingEffect();\n      setIsNewPlayEffect(!isNewPlayEffect);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: soundToggleIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"soundState\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, isNewPlayEffect ? \"ON\" : \"OFF\")))), React.createElement(\"div\", {\n    className: \"settingBtnWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"resetBtn\",\n    onClick: function onClick() {\n      return handleResetBtn(onClickRestartBtn);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_PYTHON_SETTING_RESET_BTN\"\n  }))), React.createElement(\"div\", {\n    className: \"popupBtnWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"cancleBtn\",\n    onClick: dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_PYTHON_CANCEL_BTN\"\n  })), React.createElement(\"button\", {\n    className: \"confirmBtn\",\n    onClick: function onClick() {\n      onSaveSettings({\n        playBGM: isNewPlayBGM,\n        playEffect: isNewPlayEffect\n      });\n      dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_PYTHON_CONFIRM_BTN\"\n  })))));\n}\n\nexport default injectIntl(PythonSetting);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Python/Components/PopupComponents/SettingPopup/index.js"],"names":["React","useState","injectIntl","PopUp","showPopUp","closeBtn","bgSoundOnIcon","bgSoundOffIcon","effectSoundOnIcon","effectSoundOffIcon","soundToggleIcon","playSettingEffect","PythonSetting","props","dismiss","onClickRestartBtn","isPlayBGM","isPlayEffect","onSaveSettings","intl","isNewPlayBGM","setIsNewPlayBGM","isNewPlayEffect","setIsNewPlayEffect","handleResetBtn","formatMessage","id","defaultPadding","pythonPopup","dismissButton","playBGM","playEffect"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport \"./index.scss\";\nimport PopUp, { showPopUp } from \"../../../../../Common/Component/PopUp\";\n\nimport closeBtn from \"../../../../../Image/newPython/python-popup-close-btn@2x.png\";\nimport bgSoundOnIcon from \"../../../../../Image/newPython/setting-ic-sound-on@2x.png\";\nimport bgSoundOffIcon from \"../../../../../Image/newPython/setting-ic-sound-off@2x.png\";\nimport effectSoundOnIcon from \"../../../../../Image/newPython/setting-icon-bgm-on@2x.png\";\nimport effectSoundOffIcon from \"../../../../../Image/newPython/setting-icon-bgm-off@2x.png\";\nimport soundToggleIcon from \"../../../../../Image/newPython/btn-sound-toggle@2x.png\";\n\nimport { playSettingEffect } from \"../../../Util/PlaySound\"\n\n\nfunction PythonSetting(props) {\n  const { dismiss, onClickRestartBtn, isPlayBGM, isPlayEffect, onSaveSettings, intl } = props;\n  const [isNewPlayBGM, setIsNewPlayBGM] = useState(isPlayBGM);\n  const [isNewPlayEffect, setIsNewPlayEffect] = useState(isPlayEffect);\n\n  const handleResetBtn = onClickRestartBtn => {\n    showPopUp(\n        <PopUp.PythonAlert\n          textMessage={intl.formatMessage({ id: \"ID_PYTHON_SETTING_RESET_TITLE\" })}\n          cancleBtnText={intl.formatMessage({ id: \"ID_PYTHON_SETTING_RESET_CANCEL_BTN\" })}\n          confirmBtnText={intl.formatMessage({ id: \"ID_PYTHON_SETTING_RESET_CONFIRM_BTN\" })}\n          againAction={onClickRestartBtn}\n        />,\n        {\n          defaultPadding: false,\n          pythonPopup: true,\n          dismissButton: false\n        }\n    );\n  };\n\n  return (\n    <div className=\"pythonSettingPopup\">\n      <div className=\"popupHeader\">\n        <p className=\"title\">\n          {intl.formatMessage({ id: \"ID_PYTHON_SETTING_TITLE\" })}\n        </p>\n        <img\n          className=\"popupCloseBtn\"\n          onClick={dismiss}\n          src={closeBtn}\n          alt=\"\"\n        />\n      </div>\n\n      <div className=\"popupBody\">\n        <div className=\"soundBox\">\n          <div className=\"bgSoundLine\">\n            <img\n              className=\"bgSoundIcon\"\n              src={true ? bgSoundOnIcon : bgSoundOffIcon}\n              alt=\"\"\n            />\n            <p className=\"soundType\">\n              {intl.formatMessage({ id: \"ID_PYTHON_SETTING_BACKGROUNT_SOUND\" })}\n            </p>\n            <div \n              className={isNewPlayBGM ? \"soundToggleBtnWrapper on\" : \"soundToggleBtnWrapper\"} \n              onClick={()=>{playSettingEffect(); setIsNewPlayBGM(!isNewPlayBGM)}}\n            >\n              <img src={soundToggleIcon} alt=\"\" />\n              <span className=\"soundState\" >{isNewPlayBGM ? \"ON\" : \"OFF\"}</span>\n            </div>\n          </div>\n          <div className=\"effectSoundLine\">\n            <img\n              className=\"effectSoundIcon\"\n              src={true ? effectSoundOnIcon : effectSoundOffIcon}\n              alt=\"\"\n            />\n            <p className=\"soundType\">{intl.formatMessage({ id: \"ID_PYTHON_SETTING_EFFECT_SOUND\" })}</p>\n            <div \n              className={isNewPlayEffect ? \"soundToggleBtnWrapper on\" : \"soundToggleBtnWrapper\"} \n              onClick={()=>{playSettingEffect(); setIsNewPlayEffect(!isNewPlayEffect)}}\n            >\n              <img src={soundToggleIcon} alt=\"\" />\n              <span className=\"soundState\">{isNewPlayEffect ? \"ON\" : \"OFF\" }</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"settingBtnWrapper\">\n          <button\n            className=\"resetBtn\"\n            onClick={() => handleResetBtn(onClickRestartBtn)}\n          >\n            {intl.formatMessage({ id: \"ID_PYTHON_SETTING_RESET_BTN\" })}\n          </button>\n          {/* <button className=\"tutorialBtn\">튜토리얼 다시보기</button> */}\n        </div>\n\n        <div className=\"popupBtnWrapper\">\n          <button className=\"cancleBtn\" onClick={dismiss}>\n            {intl.formatMessage({ id: \"ID_PYTHON_CANCEL_BTN\" })}\n          </button>\n          <button \n            className=\"confirmBtn\" \n            onClick={()=>{\n              onSaveSettings({playBGM:isNewPlayBGM , playEffect:isNewPlayEffect}); dismiss();\n            }}\n          >\n            {intl.formatMessage({ id: \"ID_PYTHON_CONFIRM_BTN\" })}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default injectIntl(PythonSetting);"]},"metadata":{},"sourceType":"module"}