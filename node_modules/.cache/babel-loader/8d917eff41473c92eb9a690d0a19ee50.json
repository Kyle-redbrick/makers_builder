{"ast":null,"code":"import _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/MSTutor/VideoPlayer.js\";\nimport React, { useCallback, useRef, useState } from \"react\";\nexport default function VideoPlayer(_ref) {\n  var type = _ref.type,\n      URL = _ref.URL,\n      thumbnail = _ref.thumbnail,\n      videoSrc = _ref.videoSrc;\n  var videoRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      playing = _useState2[0],\n      setPlaying = _useState2[1];\n\n  var playVideo = useCallback(function () {\n    videoRef.current.play();\n    setPlaying(true);\n  }, [videoRef]);\n  return React.createElement(\"div\", {\n    className: type === \"main\" ? \"ms-tutor__info__main-video\" : \"ms-tutor__info__lecture__video-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    poster: URL + thumbnail,\n    controls: playing ? true : false,\n    controlsList: \"nodownload\",\n    ref: videoRef,\n    onPlay: function onPlay() {\n      return setPlaying(true);\n    },\n    onEnded: function onEnded() {\n      videoRef.current.load();\n      setPlaying(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: URL + videoSrc,\n    type: \"video/mp4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"\".concat(playing ? \"\" : \"ms-tutor__info__video__play-btn\"),\n    onClick: playVideo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/MSTutor/VideoPlayer.js"],"names":["React","useCallback","useRef","useState","VideoPlayer","type","URL","thumbnail","videoSrc","videoRef","playing","setPlaying","playVideo","current","play","load"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAoD,OAApD;AAEA,eAAe,SAASC,WAAT,OAAyD;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAA5BC,GAA4B,QAA5BA,GAA4B;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACtE,MAAMC,QAAQ,GAAGP,MAAM,EAAvB;;AADsE,kBAExCC,QAAQ,CAAC,KAAD,CAFgC;AAAA;AAAA,MAE/DO,OAF+D;AAAA,MAEtDC,UAFsD;;AAItE,MAAMC,SAAS,GAAGX,WAAW,CAAC,YAAM;AAClCQ,IAAAA,QAAQ,CAACI,OAAT,CAAiBC,IAAjB;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAH4B,EAG1B,CAACF,QAAD,CAH0B,CAA7B;AAKA,SACE;AAAK,IAAA,SAAS,EAAEJ,IAAI,KAAK,MAAT,GAAkB,4BAAlB,GAAiD,qCAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,MAAM,EAAEC,GAAG,GAACC,SADd;AAEE,IAAA,QAAQ,EAAEG,OAAO,GAAG,IAAH,GAAU,KAF7B;AAGE,IAAA,YAAY,EAAC,YAHf;AAIE,IAAA,GAAG,EAAED,QAJP;AAKE,IAAA,MAAM,EAAE;AAAA,aAAKE,UAAU,CAAC,IAAD,CAAf;AAAA,KALV;AAME,IAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,QAAQ,CAACI,OAAT,CAAiBE,IAAjB;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAQ,IAAA,GAAG,EAAEL,GAAG,GAACE,QAAjB;AAA2B,IAAA,IAAI,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,EAcE;AACE,IAAA,SAAS,YAAKE,OAAO,GAAG,EAAH,GAAQ,iCAApB,CADX;AAEE,IAAA,OAAO,EAAEE,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAqBD","sourcesContent":["import React, { useCallback, useRef, useState} from \"react\";\n\nexport default function VideoPlayer({ type, URL, thumbnail, videoSrc }) {\n  const videoRef = useRef();\n  const [playing, setPlaying] = useState(false);\n\n  const playVideo = useCallback(() => {\n    videoRef.current.play();\n    setPlaying(true);\n  }, [videoRef]);\n\n  return (\n    <div className={type === \"main\" ? \"ms-tutor__info__main-video\" : \"ms-tutor__info__lecture__video-wrap\"}>\n      <video \n        poster={URL+thumbnail}\n        controls={playing ? true : false}\n        controlsList=\"nodownload\"\n        ref={videoRef}\n        onPlay={()=> setPlaying(true)}\n        onEnded={() => {\n          videoRef.current.load();\n          setPlaying(false);\n        }}\n      >\n        <source src={URL+videoSrc} type=\"video/mp4\"/>\n      </video>\n      <div \n        className={`${playing ? \"\" : \"ms-tutor__info__video__play-btn\"}`}\n        onClick={playVideo}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}