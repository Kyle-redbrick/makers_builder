{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sprite/Component/SpriteItem/index.js\";\nimport React, { Component } from \"react\";\nimport DndWrapper from \"../../../../utils/dndWrapper\";\nimport AssetLibrary from \"../../../../utils/assetLibrary\";\nimport { SpriteType } from \"../../../../../../Common/Util/Constant\";\nimport removeImg from \"../../../../../../Image/builder/group-5.svg\";\nimport lockImg from \"../../../../../../Image/builder/lock-14.svg\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../../../ButtonIndicator\";\n\nvar SpriteItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpriteItem, _Component);\n\n  function SpriteItem() {\n    _classCallCheck(this, SpriteItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SpriteItem).apply(this, arguments));\n  }\n\n  _createClass(SpriteItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleRemoveSprite = _this$props.handleRemoveSprite,\n          handleSelectSprite = _this$props.handleSelectSprite,\n          spriteName = _this$props.spriteName,\n          type = _this$props.type,\n          isSelected = _this$props.isSelected,\n          assetId = _this$props.assetId,\n          isLocked = _this$props.isLocked;\n      var asset = AssetLibrary.getAsset(assetId);\n      var thumb = type === SpriteType.TEXT ? AssetLibrary.textboxThumb : asset.thumb;\n      var thumbClassName = \"SpriteItemThumbImg\";\n      if (type === SpriteType.BACKGROUND) thumbClassName += \" SpriteItemThumbImgBG\";\n      return React.createElement(\"div\", {\n        className: \"SpriteItem \".concat(isSelected && \"SpriteItemSelected\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(ButtonIndicator, {\n        buttonId: spriteName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SpriteItemThumb\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n          handleSelectSprite(spriteName, type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: thumbClassName,\n        src: thumb,\n        alt: \"thumb\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"SpriteItemName\",\n        onClick: function onClick() {\n          return handleSelectSprite(spriteName, type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, spriteName), isLocked ? React.createElement(\"div\", {\n        className: \"SpriteItemLock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: lockImg,\n        alt: \"sprite lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })) : isSelected && React.createElement(\"div\", {\n        onClick: function onClick(e) {\n          e.preventDefault();\n          handleRemoveSprite(spriteName);\n        },\n        className: \"SpriteItemRemove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: removeImg,\n        alt: \"sprite remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SpriteItem;\n}(Component);\n\nexport default DndWrapper(SpriteItem, \"SPRITE\");","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sprite/Component/SpriteItem/index.js"],"names":["React","Component","DndWrapper","AssetLibrary","SpriteType","ButtonIndicator","SpriteItem","props","handleRemoveSprite","handleSelectSprite","spriteName","type","isSelected","assetId","isLocked","asset","getAsset","thumb","TEXT","textboxThumb","thumbClassName","BACKGROUND","e","preventDefault","lockImg","removeImg"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,UAAT,QAA2B,wCAA3B;;;AAGA,OAAO,cAAP;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;IAEMC,U;;;;;;;;;;;;;6BACK;AAAA,wBASH,KAAKC,KATF;AAAA,UAELC,kBAFK,eAELA,kBAFK;AAAA,UAGLC,kBAHK,eAGLA,kBAHK;AAAA,UAILC,UAJK,eAILA,UAJK;AAAA,UAKLC,IALK,eAKLA,IALK;AAAA,UAMLC,UANK,eAMLA,UANK;AAAA,UAOLC,OAPK,eAOLA,OAPK;AAAA,UAQLC,QARK,eAQLA,QARK;AAUP,UAAMC,KAAK,GAAGZ,YAAY,CAACa,QAAb,CAAsBH,OAAtB,CAAd;AACA,UAAMI,KAAK,GACTN,IAAI,KAAKP,UAAU,CAACc,IAApB,GAA2Bf,YAAY,CAACgB,YAAxC,GAAuDJ,KAAK,CAACE,KAD/D;AAEA,UAAIG,cAAc,GAAG,oBAArB;AACA,UAAIT,IAAI,KAAKP,UAAU,CAACiB,UAAxB,EACED,cAAc,IAAI,uBAAlB;AACF,aACE;AAAK,QAAA,SAAS,uBAAgBR,UAAU,IAAI,oBAA9B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEF,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,OAAO,EAAE,iBAAAY,CAAC,EAAI;AACZA,UAAAA,CAAC,CAACC,cAAF;AACAd,UAAAA,kBAAkB,CAACC,UAAD,EAAaC,IAAb,CAAlB;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAK,QAAA,SAAS,EAAES,cAAhB;AAAgC,QAAA,GAAG,EAAEH,KAArC;AAA4C,QAAA,GAAG,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CADF,EAYE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMR,kBAAkB,CAACC,UAAD,EAAaC,IAAb,CAAxB;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGD,UAJH,CAZF,EAkBGI,QAAQ,GACP;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEU,OAAV;AAAmB,QAAA,GAAG,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADO,GAKPZ,UAAU,IACR;AACE,QAAA,OAAO,EAAE,iBAAAU,CAAC,EAAI;AACZA,UAAAA,CAAC,CAACC,cAAF;AACAf,UAAAA,kBAAkB,CAACE,UAAD,CAAlB;AACD,SAJH;AAKE,QAAA,SAAS,EAAC,kBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAK,QAAA,GAAG,EAAEe,SAAV;AAAqB,QAAA,GAAG,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAxBN,CADF;AAsCD;;;;EAvDsBxB,S;;AA0DzB,eAAeC,UAAU,CAACI,UAAD,EAAa,QAAb,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport DndWrapper from \"../../../../utils/dndWrapper\";\nimport AssetLibrary from \"../../../../utils/assetLibrary\";\nimport { SpriteType } from \"../../../../../../Common/Util/Constant\";\nimport removeImg from \"../../../../../../Image/builder/group-5.svg\";\nimport lockImg from \"../../../../../../Image/builder/lock-14.svg\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../../../ButtonIndicator\";\n\nclass SpriteItem extends Component {\n  render() {\n    const {\n      handleRemoveSprite,\n      handleSelectSprite,\n      spriteName,\n      type,\n      isSelected,\n      assetId,\n      isLocked\n    } = this.props;\n    const asset = AssetLibrary.getAsset(assetId);\n    const thumb =\n      type === SpriteType.TEXT ? AssetLibrary.textboxThumb : asset.thumb;\n    let thumbClassName = \"SpriteItemThumbImg\";\n    if (type === SpriteType.BACKGROUND)\n      thumbClassName += \" SpriteItemThumbImgBG\";\n    return (\n      <div className={`SpriteItem ${isSelected && \"SpriteItemSelected\"}`}>\n        <ButtonIndicator buttonId={spriteName}>\n          <div\n            className=\"SpriteItemThumb\"\n            onClick={e => {\n              e.preventDefault();\n              handleSelectSprite(spriteName, type);\n            }}\n          >\n            <img className={thumbClassName} src={thumb} alt=\"thumb\" />\n          </div>\n        </ButtonIndicator>\n        <div\n          className=\"SpriteItemName\"\n          onClick={() => handleSelectSprite(spriteName, type)}\n        >\n          {spriteName}\n        </div>\n        {isLocked ? (\n          <div className=\"SpriteItemLock\">\n            <img src={lockImg} alt=\"sprite lock\" />\n          </div>\n        ) : (\n          isSelected && (\n            <div\n              onClick={e => {\n                e.preventDefault();\n                handleRemoveSprite(spriteName);\n              }}\n              className=\"SpriteItemRemove\"\n            >\n              <img src={removeImg} alt=\"sprite remove\" />\n            </div>\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DndWrapper(SpriteItem, \"SPRITE\");\n"]},"metadata":{},"sourceType":"module"}