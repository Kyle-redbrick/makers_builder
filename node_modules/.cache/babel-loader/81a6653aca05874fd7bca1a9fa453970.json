{"ast":null,"code":"import { VCTYPE } from \"../../../../../../../../Common/Util/Constant\";\nexport var data = {\n  level: 10,\n  title: \"중급 10단계. 음악 넣기\",\n  image: null,\n  currentStageNum: 0,\n  stages: [{\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: require(\"./10-1 story.png\"),\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }]\n  }, {\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: require(\"./10-1 start.png\"),\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }]\n  }, {\n    type: VCTYPE.STEP.CODE,\n    imgSrc: require(\"./10-1 main.png\"),\n    successDelay: 3000,\n    conditions: [{\n      type: VCTYPE.CONDITION.CODE_AST,\n      sceneId: \"scene1\",\n      spriteId: \"halloween_red\",\n      code: {\n        type: \"Program\",\n        body: [{\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onFrame\"\n            },\n            arguments: [{\n              type: \"FunctionExpression\",\n              id: null,\n              expression: false,\n              generator: false,\n              async: false,\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"goX\"\n                    },\n                    arguments: [{\n                      type: \"UnaryExpression\",\n                      operator: \"-\",\n                      prefix: true,\n                      argument: {\n                        type: \"Literal\",\n                        value: 2,\n                        raw: \"2\"\n                      }\n                    }],\n                    optional: false\n                  }\n                }]\n              }\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"playSound\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"halloween_fun\",\n              raw: '\"halloween_fun\"'\n            }, {\n              type: \"Literal\",\n              value: false,\n              raw: \"false\"\n            }],\n            optional: false\n          }\n        }]\n      }\n    }, {\n      type: VCTYPE.CONDITION.PLAY_ONCE\n    }],\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"배경 음악을 틀어보자\"\n    }],\n    hint: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: require(\"./10-1 hint.png\")\n    }],\n    answer: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: require(\"./10-1 answer.png\")\n    }]\n  }, {\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: require(\"./10-2 start.png\"),\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n    }]\n  }, {\n    type: VCTYPE.STEP.CODE,\n    imgSrc: require(\"./10-2 main.png\"),\n    successDelay: 5000,\n    conditions: [{\n      type: VCTYPE.CONDITION.CODE_AST,\n      sceneId: \"scene1\",\n      spriteId: \"witch\",\n      code: {\n        type: \"Program\",\n        body: [{\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"playAnimation\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"idle\",\n              raw: '\"idle\"'\n            }, {\n              type: \"Literal\",\n              value: true,\n              raw: \"true\"\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"say\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"시작!\",\n              raw: '\"시작!\"',\n              isLoose: true\n            }, {\n              type: \"Literal\",\n              value: 1,\n              raw: \"1\"\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"setGravityY\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: 1000,\n              raw: \"1000\"\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onScreenClick\"\n            },\n            arguments: [{\n              type: \"FunctionExpression\",\n              id: null,\n              expression: false,\n              generator: false,\n              async: false,\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"setVelocityY\"\n                    },\n                    arguments: [{\n                      type: \"UnaryExpression\",\n                      operator: \"-\",\n                      prefix: true,\n                      argument: {\n                        type: \"Literal\",\n                        value: 400,\n                        raw: \"400\"\n                      }\n                    }],\n                    optional: false\n                  }\n                }, {\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"playSound\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"effect_30\",\n                      raw: '\"effect_30\"'\n                    }, {\n                      type: \"Literal\",\n                      value: false,\n                      raw: \"false\"\n                    }],\n                    optional: false\n                  }\n                }]\n              }\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onOverlap\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"pumpkin\",\n              raw: '\"pumpkin\"'\n            }, {\n              type: \"FunctionExpression\",\n              id: null,\n              expression: false,\n              generator: false,\n              async: false,\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"changeScene\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"scene2\",\n                      raw: '\"scene2\"'\n                    }],\n                    optional: false\n                  }\n                }]\n              }\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onOverlap\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"pumpkin_three\",\n              raw: '\"pumpkin_three\"'\n            }, {\n              type: \"FunctionExpression\",\n              id: null,\n              expression: false,\n              generator: false,\n              async: false,\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"changeScene\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"scene2\",\n                      raw: '\"scene2\"'\n                    }],\n                    optional: false\n                  }\n                }]\n              }\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onOverlap\"\n            },\n            arguments: [{\n              type: \"Literal\",\n              value: \"little_ghost_a\",\n              raw: '\"little_ghost_a\"'\n            }, {\n              type: \"FunctionExpression\",\n              id: null,\n              expression: false,\n              generator: false,\n              async: false,\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"changeScene\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"scene2\",\n                      raw: '\"scene2\"'\n                    }],\n                    optional: false\n                  }\n                }]\n              }\n            }],\n            optional: false\n          }\n        }, {\n          type: \"ExpressionStatement\",\n          expression: {\n            type: \"CallExpression\",\n            callee: {\n              type: \"Identifier\",\n              name: \"onOutStage\"\n            },\n            arguments: [{\n              type: \"FunctionExpression\",\n              id: null,\n              expression: false,\n              generator: false,\n              async: false,\n              params: [],\n              body: {\n                type: \"BlockStatement\",\n                body: [{\n                  type: \"ExpressionStatement\",\n                  expression: {\n                    type: \"CallExpression\",\n                    callee: {\n                      type: \"Identifier\",\n                      name: \"changeScene\"\n                    },\n                    arguments: [{\n                      type: \"Literal\",\n                      value: \"scene2\",\n                      raw: '\"scene2\"'\n                    }],\n                    optional: false\n                  }\n                }]\n              }\n            }],\n            optional: false\n          }\n        }]\n      }\n    }, {\n      type: VCTYPE.CONDITION.PLAY_ONCE\n    }],\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"효과음을 넣어보자\"\n    }],\n    hint: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: require(\"./10-2 hint.png\")\n    }],\n    answer: [{\n      type: VCTYPE.EGO.IMAGE,\n      data: require(\"./10-2 answer.png\")\n    }]\n  }, {\n    type: VCTYPE.STEP.IMAGE,\n    imgSrc: require(\"../../common/lastEnd.png\"),\n    ego: [{\n      type: VCTYPE.EGO.TEXT,\n      data: \"정말 잘하는데?\\n다음 수업에서 또 보자구!\"\n    }]\n  }]\n};\nexport var state = {\n  scene: {\n    sceneIds: [\"scene1\", \"scene2\"],\n    soundIds: [\"halloween_fun_v2\", \"effect_30\"],\n    timeStamp: 1602548167196,\n    scenes: {\n      scene1: {\n        sceneName: \"scene1\",\n        spriteIds: [\"halloween_red\", \"witch\", \"pumpkin\", \"pumpkin_three\", \"little_ghost_a\"],\n        sprites: {\n          witch: {\n            type: \"sprite\",\n            assetId: \"witch_v18\",\n            code: \"playAnimation(\\\"idle\\\",true)\\nsay(\\\"\\uC2DC\\uC791!\\\",1)\\nsetGravityY(1000)\\nonScreenClick(function(){\\n    setVelocityY(-400)\\n    // \\u8BF7\\u5728\\u6B64\\u5904\\u7F16\\u5199\\u4EE3\\u7801\\u3002\\n    \\n})\\nonOverlap(\\\"pumpkin\\\",function(){\\n    changeScene(\\\"scene2\\\")\\n})\\nonOverlap(\\\"pumpkin_three\\\",function(){\\n    changeScene(\\\"scene2\\\")\\n})\\nonOverlap(\\\"little_ghost_a\\\",function(){\\n    changeScene(\\\"scene2\\\")\\n})\\nonOutStage(function(){\\n    changeScene(\\\"scene2\\\")\\n})\",\n            preview: {\n              name: \"witch\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              scaleX: 0.6,\n              scaleY: 0.6,\n              width: 390,\n              height: 346,\n              opacity: 1,\n              left: 294.08939211074994,\n              top: 323.40127159341677,\n              scale: \"60\"\n            }\n          },\n          pumpkin: {\n            type: \"sprite\",\n            assetId: \"pumpkin_v14\",\n            code: \"playAnimation(\\\"idle_a\\\",true)\\nsetVelocityX(-400)\\nonOutStage(function(){\\n    goTo(1280,150)\\n})\",\n            preview: {\n              name: \"pumpkin\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 527,\n              top: 150,\n              scaleX: 1,\n              scaleY: 1,\n              width: 164,\n              height: 146,\n              opacity: 1\n            }\n          },\n          pumpkin_three: {\n            type: \"sprite\",\n            assetId: \"pumpkin_three_v8\",\n            code: \"playAnimation(\\\"idle\\\",true)\\nsetVelocityX(-400)\\nonOutStage(function(){\\n    goTo(1280,570)\\n})\",\n            preview: {\n              name: \"pumpkin_three\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 162,\n              top: 570,\n              scaleX: 1,\n              scaleY: 1,\n              width: 163,\n              height: 300,\n              opacity: 1\n            }\n          },\n          little_ghost_a: {\n            type: \"sprite\",\n            assetId: \"little_ghost_a\",\n            code: \"playAnimation(\\\"attack\\\",true)\\nsetVelocityX(-400)\\nonOutStage(function(){\\n    goTo(1280,430)\\n})\",\n            preview: {\n              name: \"little_ghost_a\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 1015,\n              top: 430,\n              scaleX: 0.6620776651838008,\n              scaleY: 0.6620776651838008,\n              width: 288,\n              height: 296,\n              opacity: 1\n            }\n          },\n          halloween_red: {\n            type: \"background\",\n            assetId: \"halloween_red\",\n            code: \"onFrame(function(){\\n    goX(-2)\\n})\\n// \\u8BF7\\u5728\\u6B64\\u5904\\u7F16\\u5199\\u4EE3\\u7801\\u3002\\n\",\n            preview: {\n              name: \"halloween_red\",\n              type: \"background\",\n              angle: 0,\n              left: -199,\n              top: 0,\n              scaleX: 1,\n              scaleY: 1,\n              width: 1678,\n              height: 720,\n              opacity: 1\n            }\n          }\n        },\n        preview: \"https://tianchengai-etc.oss-cn-beijing.aliyuncs.com/0d1f301f68aab0719a1af258dab7e070.jpg\"\n      },\n      scene2: {\n        sceneName: \"scene2\",\n        sprites: {\n          retry_c: {\n            type: \"sprite\",\n            assetId: \"retry_c_v2\",\n            code: \"onClick(function(){\\n    changeScene(\\\"scene1\\\")\\n})\",\n            preview: {\n              name: \"retry_c\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 640,\n              top: 365.6738299190549,\n              scaleX: 1.5844532578555237,\n              scaleY: 1.5844532578555237,\n              width: 239,\n              height: 101,\n              opacity: 1\n            }\n          },\n          halloween_red: {\n            type: \"background\",\n            assetId: \"halloween_red\",\n            code: \"\",\n            preview: {\n              name: \"halloween_red\",\n              type: \"background\",\n              angle: 0,\n              left: -199,\n              top: 0,\n              scaleX: 1,\n              scaleY: 1,\n              width: 1678,\n              height: 720,\n              opacity: 1\n            }\n          }\n        },\n        spriteIds: [\"halloween_red\", \"retry_c\"],\n        preview: \"https://tianchengai-etc.oss-cn-beijing.aliyuncs.com/2c2d72969848f7c3c1e266a08068f579.jpg\"\n      }\n    }\n  },\n  interaction: {\n    selected: {\n      api: \"ID_PHYSICS\",\n      method: null,\n      scene: \"scene1\",\n      objects: {\n        scene1: {\n          name: \"halloween_red\",\n          type: \"sprite\"\n        },\n        scene2: {\n          name: \"retry_c\",\n          type: \"sprite\"\n        }\n      }\n    },\n    jukebox: {\n      isPlaying: false\n    }\n  },\n  preview: {\n    isPlaying: false,\n    isFullScreen: false,\n    screenMode: \"HORIZONTAL\",\n    volume: 100\n  }\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/OCP2/template/game/intermediate/10/index.js"],"names":["VCTYPE","data","level","title","image","currentStageNum","stages","type","STEP","IMAGE","imgSrc","require","ego","EGO","TEXT","CODE","successDelay","conditions","CONDITION","CODE_AST","sceneId","spriteId","code","body","expression","callee","name","arguments","id","generator","async","params","operator","prefix","argument","value","raw","optional","PLAY_ONCE","hint","answer","isLoose","state","scene","sceneIds","soundIds","timeStamp","scenes","scene1","sceneName","spriteIds","sprites","witch","assetId","preview","subtype","angle","scaleX","scaleY","width","height","opacity","left","top","scale","pumpkin","pumpkin_three","little_ghost_a","halloween_red","scene2","retry_c","interaction","selected","api","method","objects","jukebox","isPlaying","isFullScreen","screenMode","volume"],"mappings":"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","sourcesContent":["import { VCTYPE } from \"../../../../../../../../Common/Util/Constant\";\n\nexport const data = {\n  level: 10,\n  title: \"중급 10단계. 음악 넣기\",\n  image: null,\n  currentStageNum: 0,\n  stages: [\n    {\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: require(\"./10-1 story.png\"),\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ]\n    },\n    {\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: require(\"./10-1 start.png\"),\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ]\n    },\n    {\n      type: VCTYPE.STEP.CODE,\n      imgSrc: require(\"./10-1 main.png\"),\n      successDelay: 3000,\n      conditions: [\n        {\n          type: VCTYPE.CONDITION.CODE_AST,\n          sceneId: \"scene1\",\n          spriteId: \"halloween_red\",\n          code: {\n            type: \"Program\",\n            body: [\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onFrame\"\n                  },\n                  arguments: [\n                    {\n                      type: \"FunctionExpression\",\n                      id: null,\n                      expression: false,\n                      generator: false,\n                      async: false,\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"goX\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"UnaryExpression\",\n                                  operator: \"-\",\n                                  prefix: true,\n                                  argument: {\n                                    type: \"Literal\",\n                                    value: 2,\n                                    raw: \"2\"\n                                  }\n                                }\n                              ],\n                              optional: false\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"playSound\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"halloween_fun\",\n                      raw: '\"halloween_fun\"'\n                    },\n                    {\n                      type: \"Literal\",\n                      value: false,\n                      raw: \"false\"\n                    }\n                  ],\n                  optional: false\n                }\n              }\n            ]\n          }\n        },\n        { type: VCTYPE.CONDITION.PLAY_ONCE }\n      ],\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"배경 음악을 틀어보자\"\n        }\n      ],\n      hint: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: require(\"./10-1 hint.png\")\n        }\n      ],\n      answer: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: require(\"./10-1 answer.png\")\n        }\n      ]\n    },\n    {\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: require(\"./10-2 start.png\"),\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"다음 단계를 진행하려면\\n우측 상단에 다음단계 버튼을 눌러줘!\"\n        }\n      ]\n    },\n    {\n      type: VCTYPE.STEP.CODE,\n      imgSrc: require(\"./10-2 main.png\"),\n      successDelay: 5000,\n      conditions: [\n        {\n          type: VCTYPE.CONDITION.CODE_AST,\n          sceneId: \"scene1\",\n          spriteId: \"witch\",\n          code: {\n            type: \"Program\",\n            body: [\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"playAnimation\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"idle\",\n                      raw: '\"idle\"'\n                    },\n                    {\n                      type: \"Literal\",\n                      value: true,\n                      raw: \"true\"\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"say\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"시작!\",\n                      raw: '\"시작!\"',\n                      isLoose: true\n                    },\n                    {\n                      type: \"Literal\",\n                      value: 1,\n                      raw: \"1\"\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"setGravityY\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: 1000,\n                      raw: \"1000\"\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onScreenClick\"\n                  },\n                  arguments: [\n                    {\n                      type: \"FunctionExpression\",\n                      id: null,\n                      expression: false,\n                      generator: false,\n                      async: false,\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"setVelocityY\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"UnaryExpression\",\n                                  operator: \"-\",\n                                  prefix: true,\n                                  argument: {\n                                    type: \"Literal\",\n                                    value: 400,\n                                    raw: \"400\"\n                                  }\n                                }\n                              ],\n                              optional: false\n                            }\n                          },\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"playSound\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"effect_30\",\n                                  raw: '\"effect_30\"'\n                                },\n                                {\n                                  type: \"Literal\",\n                                  value: false,\n                                  raw: \"false\"\n                                }\n                              ],\n                              optional: false\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onOverlap\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"pumpkin\",\n                      raw: '\"pumpkin\"'\n                    },\n                    {\n                      type: \"FunctionExpression\",\n                      id: null,\n                      expression: false,\n                      generator: false,\n                      async: false,\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"changeScene\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"scene2\",\n                                  raw: '\"scene2\"'\n                                }\n                              ],\n                              optional: false\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onOverlap\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"pumpkin_three\",\n                      raw: '\"pumpkin_three\"'\n                    },\n                    {\n                      type: \"FunctionExpression\",\n                      id: null,\n                      expression: false,\n                      generator: false,\n                      async: false,\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"changeScene\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"scene2\",\n                                  raw: '\"scene2\"'\n                                }\n                              ],\n                              optional: false\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onOverlap\"\n                  },\n                  arguments: [\n                    {\n                      type: \"Literal\",\n                      value: \"little_ghost_a\",\n                      raw: '\"little_ghost_a\"'\n                    },\n                    {\n                      type: \"FunctionExpression\",\n                      id: null,\n                      expression: false,\n                      generator: false,\n                      async: false,\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"changeScene\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"scene2\",\n                                  raw: '\"scene2\"'\n                                }\n                              ],\n                              optional: false\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ],\n                  optional: false\n                }\n              },\n              {\n                type: \"ExpressionStatement\",\n                expression: {\n                  type: \"CallExpression\",\n                  callee: {\n                    type: \"Identifier\",\n                    name: \"onOutStage\"\n                  },\n                  arguments: [\n                    {\n                      type: \"FunctionExpression\",\n                      id: null,\n                      expression: false,\n                      generator: false,\n                      async: false,\n                      params: [],\n                      body: {\n                        type: \"BlockStatement\",\n                        body: [\n                          {\n                            type: \"ExpressionStatement\",\n                            expression: {\n                              type: \"CallExpression\",\n                              callee: {\n                                type: \"Identifier\",\n                                name: \"changeScene\"\n                              },\n                              arguments: [\n                                {\n                                  type: \"Literal\",\n                                  value: \"scene2\",\n                                  raw: '\"scene2\"'\n                                }\n                              ],\n                              optional: false\n                            }\n                          }\n                        ]\n                      }\n                    }\n                  ],\n                  optional: false\n                }\n              }\n            ]\n          }\n        },\n        { type: VCTYPE.CONDITION.PLAY_ONCE }\n      ],\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"효과음을 넣어보자\"\n        }\n      ],\n      hint: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: require(\"./10-2 hint.png\")\n        }\n      ],\n      answer: [\n        {\n          type: VCTYPE.EGO.IMAGE,\n          data: require(\"./10-2 answer.png\")\n        }\n      ]\n    },\n    {\n      type: VCTYPE.STEP.IMAGE,\n      imgSrc: require(\"../../common/lastEnd.png\"),\n      ego: [\n        {\n          type: VCTYPE.EGO.TEXT,\n          data: \"정말 잘하는데?\\n다음 수업에서 또 보자구!\"\n        }\n      ]\n    }\n  ]\n};\n\nexport const state = {\n  scene: {\n    sceneIds: [\"scene1\", \"scene2\"],\n    soundIds: [\"halloween_fun_v2\", \"effect_30\"],\n    timeStamp: 1602548167196,\n    scenes: {\n      scene1: {\n        sceneName: \"scene1\",\n        spriteIds: [\n          \"halloween_red\",\n          \"witch\",\n          \"pumpkin\",\n          \"pumpkin_three\",\n          \"little_ghost_a\"\n        ],\n        sprites: {\n          witch: {\n            type: \"sprite\",\n            assetId: \"witch_v18\",\n            code: `playAnimation(\"idle\",true)\nsay(\"시작!\",1)\nsetGravityY(1000)\nonScreenClick(function(){\n    setVelocityY(-400)\n    // 请在此处编写代码。\n    \n})\nonOverlap(\"pumpkin\",function(){\n    changeScene(\"scene2\")\n})\nonOverlap(\"pumpkin_three\",function(){\n    changeScene(\"scene2\")\n})\nonOverlap(\"little_ghost_a\",function(){\n    changeScene(\"scene2\")\n})\nonOutStage(function(){\n    changeScene(\"scene2\")\n})`,\n            preview: {\n              name: \"witch\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              scaleX: 0.6,\n              scaleY: 0.6,\n              width: 390,\n              height: 346,\n              opacity: 1,\n              left: 294.08939211074994,\n              top: 323.40127159341677,\n              scale: \"60\"\n            }\n          },\n          pumpkin: {\n            type: \"sprite\",\n            assetId: \"pumpkin_v14\",\n            code: `playAnimation(\"idle_a\",true)\nsetVelocityX(-400)\nonOutStage(function(){\n    goTo(1280,150)\n})`,\n            preview: {\n              name: \"pumpkin\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 527,\n              top: 150,\n              scaleX: 1,\n              scaleY: 1,\n              width: 164,\n              height: 146,\n              opacity: 1\n            }\n          },\n          pumpkin_three: {\n            type: \"sprite\",\n            assetId: \"pumpkin_three_v8\",\n            code: `playAnimation(\"idle\",true)\nsetVelocityX(-400)\nonOutStage(function(){\n    goTo(1280,570)\n})`,\n            preview: {\n              name: \"pumpkin_three\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 162,\n              top: 570,\n              scaleX: 1,\n              scaleY: 1,\n              width: 163,\n              height: 300,\n              opacity: 1\n            }\n          },\n          little_ghost_a: {\n            type: \"sprite\",\n            assetId: \"little_ghost_a\",\n            code: `playAnimation(\"attack\",true)\nsetVelocityX(-400)\nonOutStage(function(){\n    goTo(1280,430)\n})`,\n            preview: {\n              name: \"little_ghost_a\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 1015,\n              top: 430,\n              scaleX: 0.6620776651838008,\n              scaleY: 0.6620776651838008,\n              width: 288,\n              height: 296,\n              opacity: 1\n            }\n          },\n          halloween_red: {\n            type: \"background\",\n            assetId: \"halloween_red\",\n            code: `onFrame(function(){\n    goX(-2)\n})\n// 请在此处编写代码。\n`,\n            preview: {\n              name: \"halloween_red\",\n              type: \"background\",\n              angle: 0,\n              left: -199,\n              top: 0,\n              scaleX: 1,\n              scaleY: 1,\n              width: 1678,\n              height: 720,\n              opacity: 1\n            }\n          }\n        },\n        preview:\n          \"https://tianchengai-etc.oss-cn-beijing.aliyuncs.com/0d1f301f68aab0719a1af258dab7e070.jpg\"\n      },\n      scene2: {\n        sceneName: \"scene2\",\n        sprites: {\n          retry_c: {\n            type: \"sprite\",\n            assetId: \"retry_c_v2\",\n            code: `onClick(function(){\n    changeScene(\"scene1\")\n})`,\n            preview: {\n              name: \"retry_c\",\n              type: \"sprite\",\n              subtype: null,\n              angle: 0,\n              left: 640,\n              top: 365.6738299190549,\n              scaleX: 1.5844532578555237,\n              scaleY: 1.5844532578555237,\n              width: 239,\n              height: 101,\n              opacity: 1\n            }\n          },\n          halloween_red: {\n            type: \"background\",\n            assetId: \"halloween_red\",\n            code: ``,\n            preview: {\n              name: \"halloween_red\",\n              type: \"background\",\n              angle: 0,\n              left: -199,\n              top: 0,\n              scaleX: 1,\n              scaleY: 1,\n              width: 1678,\n              height: 720,\n              opacity: 1\n            }\n          }\n        },\n        spriteIds: [\"halloween_red\", \"retry_c\"],\n        preview:\n          \"https://tianchengai-etc.oss-cn-beijing.aliyuncs.com/2c2d72969848f7c3c1e266a08068f579.jpg\"\n      }\n    }\n  },\n  interaction: {\n    selected: {\n      api: \"ID_PHYSICS\",\n      method: null,\n      scene: \"scene1\",\n      objects: {\n        scene1: { name: \"halloween_red\", type: \"sprite\" },\n        scene2: { name: \"retry_c\", type: \"sprite\" }\n      }\n    },\n    jukebox: { isPlaying: false }\n  },\n  preview: {\n    isPlaying: false,\n    isFullScreen: false,\n    screenMode: \"HORIZONTAL\",\n    volume: 100\n  }\n};\n"]},"metadata":{},"sourceType":"module"}