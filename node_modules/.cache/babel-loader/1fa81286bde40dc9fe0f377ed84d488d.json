{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/SpriteBox/Component/TextEditor/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport onClickOutside from \"react-onclickoutside\";\nimport { SketchPicker } from \"react-color\";\nimport { Picker } from \"emoji-mart\";\nimport AssetLibrary from \"../../../../utils/assetLibrary\";\nimport FontDropDown from \"../../../../../../Common/Component/FontDropDown\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\";\nimport { SpriteType } from \"../../../../../../Common/Util/Constant\";\nimport closeImg from \"../../../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport { getColorTheme } from \"../../../../utils/colorThemeUtil\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport \"./index.scss\";\nvar ColorDropDown = onClickOutside(function (props) {\n  var color = props.color,\n      presetColors = props.presetColors,\n      onChangeComplete = props.onChangeComplete;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ColorDD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SketchPicker, {\n    color: color,\n    presetColors: presetColors,\n    onChangeComplete: onChangeComplete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n});\nvar EmojiDropDown = onClickOutside(function (props) {\n  var onSelect = props.onSelect,\n      i18n = props.i18n;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"EmojiDD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Picker, {\n    onSelect: onSelect,\n    i18n: i18n,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n});\n\nvar TextEditor = /*#__PURE__*/function (_Component) {\n  _inherits(TextEditor, _Component);\n\n  var _super = _createSuper(TextEditor);\n\n  function TextEditor() {\n    var _this2;\n\n    _classCallCheck(this, TextEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.state = {\n      isPaletteOn: false,\n      isEmojiOn: false,\n      textboxProps: {\n        fontFamily: \"Jua\",\n        fontSize: 48,\n        fontWeight: \"normal\",\n        fontColor: \"#000000\",\n        fontStyle: \"normal\",\n        textValue: \"hello wizlab!\"\n      },\n      isUploading: false\n    };\n    _this2.fontFamilies = AssetLibrary.fonts;\n    _this2.presetColors = [\"#20a1ec\", \"#ffd185\", \"#77d354\", \"#ffba5c\", \"#23d8af\", \"#f96063\", \"#916cc5\", \"#3e4852\", \"#969fa9\", \"#ffffff\"];\n\n    _this2.setTextboxProps = function (id, value) {\n      var textboxProps = _objectSpread({}, _this2.state.textboxProps, _defineProperty({}, id, value));\n\n      _this2.setState(_objectSpread({}, _this2.state, {\n        textboxProps: textboxProps\n      }));\n    };\n\n    _this2.handleFontChange = function (value) {\n      _this2.setTextboxProps(\"fontFamily\", value);\n    };\n\n    _this2.handleOnChange = function (event) {\n      var _event$target = event.target,\n          id = _event$target.id,\n          value = _event$target.value;\n\n      _this2.setTextboxProps(id, value);\n    };\n\n    _this2.handleOnToggle = function (event) {\n      event.preventDefault();\n      var id = event.target.id;\n      var _this2$state$textboxP = _this2.state.textboxProps,\n          fontWeight = _this2$state$textboxP.fontWeight,\n          fontStyle = _this2$state$textboxP.fontStyle;\n      var value;\n\n      switch (id) {\n        case \"fontWeight\":\n          value = fontWeight === \"normal\" ? \"bold\" : \"normal\";\n\n          _this2.setTextboxProps(id, value);\n\n          break;\n\n        case \"fontStyle\":\n          value = fontStyle === \"normal\" ? \"italic\" : \"normal\";\n\n          _this2.setTextboxProps(id, value);\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this2.handleColorPick = function (color) {\n      _this2.setTextboxProps(\"fontColor\", color.hex);\n    };\n\n    _this2.handlePaletteBtn = function (e) {\n      var isPaletteOn = _this2.state.isPaletteOn;\n\n      _this2.setState({\n        isPaletteOn: !isPaletteOn,\n        isEmojiOn: false\n      });\n    };\n\n    _this2.handleEmojiBtn = function (e) {\n      var isEmojiOn = _this2.state.isEmojiOn;\n\n      _this2.setState({\n        isEmojiOn: !isEmojiOn,\n        isPaletteOn: false\n      });\n    };\n\n    _this2.handleEmojiPick = function (emoji) {\n      var text = _this2.state.textboxProps.textValue;\n      text += emoji.native;\n\n      _this2.setTextboxProps(\"textValue\", text);\n    };\n\n    _this2.handleColorDDClickOutside = function (e) {\n      if (/TextEditorButton__color/.test(e.target.className)) return;\n      if (_this2.state.isPaletteOn) _this2.handlePaletteBtn(e);\n    };\n\n    _this2.handleEmojiDDClickOutside = function (e) {\n      if (/TextEditorButton__emoji/.test(e.target.className)) return;\n      if (_this2.state.isEmojiOn) _this2.handleEmojiBtn(e);\n    };\n\n    _this2.handleApply = function () {\n      if (_this2.state.isUploading) {\n        return;\n      }\n\n      _this2.setState({\n        isUploading: true\n      }, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var textboxProps, info;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                textboxProps = _this2.state.textboxProps;\n                info = _this2.setTextSpriteInfo(textboxProps);\n                info.name = _this2.props.countUpSameName(\"textbox\", _this2.props.spriteIds);\n\n                _this2.props.addSprites(_this2.props.selectedSceneId, [info]);\n\n                _this2.props.dismiss();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    };\n\n    _this2.setTextSpriteInfo = function (item) {\n      var spriteId = \"textbox\";\n      var name = \"textbox\";\n      var type = SpriteType.TEXT;\n      return {\n        name: name,\n        assetId: spriteId,\n        preview: item,\n        type: type\n      };\n    };\n\n    return _this2;\n  }\n\n  _createClass(TextEditor, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state$textboxPr = this.state.textboxProps,\n          fontFamily = _this$state$textboxPr.fontFamily,\n          fontSize = _this$state$textboxPr.fontSize,\n          fontWeight = _this$state$textboxPr.fontWeight,\n          fontColor = _this$state$textboxPr.fontColor,\n          fontStyle = _this$state$textboxPr.fontStyle,\n          textValue = _this$state$textboxPr.textValue;\n      var textAreaStyle = {\n        fontFamily: fontFamily,\n        fontSize: Number(fontSize),\n        fontWeight: fontWeight,\n        color: fontColor,\n        fontStyle: fontStyle\n      };\n      var _this$state = this.state,\n          isPaletteOn = _this$state.isPaletteOn,\n          isEmojiOn = _this$state.isEmojiOn,\n          isUploading = _this$state.isUploading;\n      var handleApply = this.handleApply;\n      var emojiToggle = isEmojiOn ? \"on\" : \"off\";\n      var fontWeightToggle = fontWeight === \"bold\" ? \"on\" : \"off\";\n      var fontStyleToggle = fontStyle === \"italic\" ? \"on\" : \"off\";\n      var colorTheme = getColorTheme();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditor__row row__top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, \"\\uD14D\\uC2A4\\uD2B8\\uC0C1\\uC790\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg,\n        alt: \"img\",\n        className: \"closeBtn\",\n        onClick: this.props.dismiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditor__row TextEditor__row1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditorBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditorBar__row1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FontDropDown, {\n        defaultValue: fontFamily,\n        list: this.fontFamilies,\n        handleSelectItem: this.handleFontChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"TextEditorBar__fontsize\",\n        id: \"fontSize\",\n        onChange: this.handleOnChange,\n        type: \"number\",\n        value: fontSize,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditorBar__row2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditorBar__styleGroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"TextEditorButton TextEditorButton__fontweight--\".concat(fontWeightToggle),\n        id: \"fontWeight\",\n        onClick: this.handleOnToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"TextEditorButton TextEditorButton__fontstyle--\".concat(fontStyleToggle),\n        id: \"fontStyle\",\n        onClick: this.handleOnToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditorBar__alignGroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }\n      }, \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditorBar__pickerGroup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"storage-texteditor-color-btn\",\n        className: \"TextEditorButton TextEditorButton__color\",\n        onClick: this.handlePaletteBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"TextEditorButton__color__A\",\n        style: {\n          color: fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }\n      }, \"U\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"TextEditorButton__color__line\",\n        style: {\n          backgroundColor: fontColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"TextEditorButton TextEditorButton__emoji--\".concat(emojiToggle),\n        onClick: this.handleEmojiBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditorBar__dropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }, isPaletteOn && /*#__PURE__*/React.createElement(ColorDropDown, {\n        handleClickOutside: this.handleColorDDClickOutside,\n        color: fontColor,\n        presetColors: this.presetColors,\n        onChangeComplete: this.handleColorPick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 19\n        }\n      }), isEmojiOn && /*#__PURE__*/React.createElement(EmojiDropDown, {\n        handleClickOutside: this.handleEmojiDDClickOutside,\n        onSelect: this.handleEmojiPick,\n        i18n: {\n          //TODO\n          search: this.props.intl.formatMessage({\n            id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_SEARCH\"\n          }),\n          notfound: this.props.intl.formatMessage({\n            id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_NOT_FOUND\"\n          }),\n          skintext: this.props.intl.formatMessage({\n            id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_SKIN_TEXT\"\n          }),\n          categories: {\n            search: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_SEARCH\"\n            }),\n            recent: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_RECENT\"\n            }),\n            people: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_PEOPLE\"\n            }),\n            nature: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_NATURE\"\n            }),\n            foods: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_FOODS\"\n            }),\n            activity: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_ACTIVITY\"\n            }),\n            places: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_PLACES\"\n            }),\n            objects: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_OBJECTS\"\n            }),\n            symbols: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_SYMBOLS\"\n            }),\n            flags: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_FLAGS\"\n            }),\n            custom: this.props.intl.formatMessage({\n              id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_CUSTOM\"\n            })\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 19\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditor__row TextEditor__row2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        id: \"textValue\",\n        className: \"TextEditorArea\",\n        onChange: this.handleOnChange,\n        style: textAreaStyle,\n        value: textValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TextEditor__bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 9\n        }\n      }, !isUploading ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"applyBtn\",\n        onClick: handleApply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, \"\\uC801\\uC6A9\\uD558\\uAE30\") : /*#__PURE__*/React.createElement(\"button\", {\n        className: \"applyBtn off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }\n      }, \"\\uC801\\uC6A9\\uC911\\uC785\\uB2C8\\uB2E4.\")));\n    }\n  }]);\n\n  return TextEditor;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    selectedSceneId: state.interaction.selected.scene,\n    spriteIds: state.scene.scenes[state.interaction.selected.scene].spriteIds\n  };\n}, {\n  addSprites: sceneActions.addSprites\n})(injectIntl(TextEditor));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/SpriteBox/Component/TextEditor/index.js"],"names":["React","Component","connect","injectIntl","onClickOutside","SketchPicker","Picker","AssetLibrary","FontDropDown","sceneActions","SpriteType","getColorTheme","ColorDropDown","props","color","presetColors","onChangeComplete","EmojiDropDown","onSelect","i18n","TextEditor","state","isPaletteOn","isEmojiOn","textboxProps","fontFamily","fontSize","fontWeight","fontColor","fontStyle","textValue","isUploading","fontFamilies","fonts","setTextboxProps","id","value","setState","handleFontChange","handleOnChange","event","target","handleOnToggle","preventDefault","handleColorPick","hex","handlePaletteBtn","e","handleEmojiBtn","handleEmojiPick","emoji","text","native","handleColorDDClickOutside","test","className","handleEmojiDDClickOutside","handleApply","info","setTextSpriteInfo","name","countUpSameName","spriteIds","addSprites","selectedSceneId","dismiss","item","spriteId","type","TEXT","assetId","preview","textAreaStyle","Number","emojiToggle","fontWeightToggle","fontStyleToggle","colorTheme","closeImg_darkmode","closeImg","backgroundColor","search","intl","formatMessage","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","interaction","selected","scene","scenes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport onClickOutside from \"react-onclickoutside\";\nimport { SketchPicker } from \"react-color\";\nimport { Picker } from \"emoji-mart\";\nimport AssetLibrary from \"../../../../utils/assetLibrary\";\nimport FontDropDown from \"../../../../../../Common/Component/FontDropDown\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\";\nimport { SpriteType } from \"../../../../../../Common/Util/Constant\";\nimport closeImg from \"../../../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport { getColorTheme } from \"../../../../utils/colorThemeUtil\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport \"./index.scss\";\n\nconst ColorDropDown = onClickOutside(props => {\n  const { color, presetColors, onChangeComplete } = props;\n  return (\n    <div className={`ColorDD`}>\n      <SketchPicker\n        color={color}\n        presetColors={presetColors}\n        onChangeComplete={onChangeComplete}\n      />\n    </div>\n  );\n});\n\nconst EmojiDropDown = onClickOutside(props => {\n  const { onSelect, i18n } = props;\n  return (\n    <div className={`EmojiDD`}>\n      <Picker onSelect={onSelect} i18n={i18n} />\n    </div>\n  );\n});\n\nclass TextEditor extends Component {\n  state = {\n    isPaletteOn: false,\n    isEmojiOn: false,\n    textboxProps: {\n      fontFamily: \"Jua\",\n      fontSize: 48,\n      fontWeight: \"normal\",\n      fontColor: \"#000000\",\n      fontStyle: \"normal\",\n      textValue: \"hello wizlab!\"\n    },\n    isUploading: false\n  };\n\n  fontFamilies = AssetLibrary.fonts;\n  presetColors = [\n    \"#20a1ec\",\n    \"#ffd185\",\n    \"#77d354\",\n    \"#ffba5c\",\n    \"#23d8af\",\n    \"#f96063\",\n    \"#916cc5\",\n    \"#3e4852\",\n    \"#969fa9\",\n    \"#ffffff\"\n  ];\n\n  setTextboxProps = (id, value) => {\n    let textboxProps = {\n      ...this.state.textboxProps,\n      [id]: value\n    };\n    this.setState({\n      ...this.state,\n      textboxProps\n    });\n  };\n\n  // fontFamily\n  handleFontChange = value => {\n    this.setTextboxProps(\"fontFamily\", value);\n  };\n  // fontSize, textValue\n  handleOnChange = event => {\n    const { id, value } = event.target;\n    this.setTextboxProps(id, value);\n  };\n  // fontWeight, fontStyle\n  handleOnToggle = event => {\n    event.preventDefault();\n    const { id } = event.target;\n    const { fontWeight, fontStyle } = this.state.textboxProps;\n    let value;\n    switch (id) {\n      case \"fontWeight\":\n        value = fontWeight === \"normal\" ? \"bold\" : \"normal\";\n        this.setTextboxProps(id, value);\n        break;\n      case \"fontStyle\":\n        value = fontStyle === \"normal\" ? \"italic\" : \"normal\";\n        this.setTextboxProps(id, value);\n        break;\n      default:\n        break;\n    }\n  };\n  // fontColor\n  handleColorPick = color => {\n    this.setTextboxProps(\"fontColor\", color.hex);\n  };\n\n  handlePaletteBtn = e => {\n    const { isPaletteOn } = this.state;\n    this.setState({ isPaletteOn: !isPaletteOn, isEmojiOn: false });\n  };\n  handleEmojiBtn = e => {\n    const { isEmojiOn } = this.state;\n    this.setState({ isEmojiOn: !isEmojiOn, isPaletteOn: false });\n  };\n  handleEmojiPick = emoji => {\n    let text = this.state.textboxProps.textValue;\n    text += emoji.native;\n    this.setTextboxProps(\"textValue\", text);\n  };\n\n  handleColorDDClickOutside = e => {\n    if (/TextEditorButton__color/.test(e.target.className)) return;\n    if (this.state.isPaletteOn) this.handlePaletteBtn(e);\n  };\n  handleEmojiDDClickOutside = e => {\n    if (/TextEditorButton__emoji/.test(e.target.className)) return;\n    if (this.state.isEmojiOn) this.handleEmojiBtn(e);\n  };\n  handleApply = () => {\n    if (this.state.isUploading) {\n      return;\n    }\n\n    this.setState(\n      {\n        isUploading: true\n      },\n      async () => {\n        const { textboxProps } = this.state;\n        let info = this.setTextSpriteInfo(textboxProps);\n        info.name = this.props.countUpSameName(\"textbox\", this.props.spriteIds);\n        this.props.addSprites(this.props.selectedSceneId, [info]);\n        this.props.dismiss();\n      }\n    );\n  };\n\n  setTextSpriteInfo = item => {\n    const spriteId = \"textbox\";\n    const name = \"textbox\";\n    const type = SpriteType.TEXT;\n    return { name, assetId: spriteId, preview: item, type };\n  };\n  render() {\n    const {\n      fontFamily,\n      fontSize,\n      fontWeight,\n      fontColor,\n      fontStyle,\n      textValue\n    } = this.state.textboxProps;\n    const textAreaStyle = {\n      fontFamily,\n      fontSize: Number(fontSize),\n      fontWeight,\n      color: fontColor,\n      fontStyle\n    };\n    const { isPaletteOn, isEmojiOn, isUploading } = this.state;\n    const { handleApply } = this;\n    const emojiToggle = isEmojiOn ? \"on\" : \"off\";\n    const fontWeightToggle = fontWeight === \"bold\" ? \"on\" : \"off\";\n    const fontStyleToggle = fontStyle === \"italic\" ? \"on\" : \"off\";\n    const colorTheme = getColorTheme();\n\n    return (\n      <div className=\"TextEditor\">\n        <div className=\"TextEditor__row row__top\">\n          <div className=\"title\">텍스트상자</div>\n          <img\n            src={colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg}\n            alt=\"img\"\n            className=\"closeBtn\"\n            onClick={this.props.dismiss}\n          />\n        </div>\n        <div className=\"TextEditor__row TextEditor__row1\">\n          <div className=\"TextEditorBar\">\n            <div className=\"TextEditorBar__row1\">\n              <FontDropDown\n                defaultValue={fontFamily}\n                list={this.fontFamilies}\n                handleSelectItem={this.handleFontChange}\n              />\n              <input\n                className=\"TextEditorBar__fontsize\"\n                id=\"fontSize\"\n                onChange={this.handleOnChange}\n                type=\"number\"\n                value={fontSize}\n              />\n            </div>\n            <div className=\"TextEditorBar__row2\">\n              <div className=\"TextEditorBar__styleGroup\">\n                <button\n                  className={`TextEditorButton TextEditorButton__fontweight--${fontWeightToggle}`}\n                  id=\"fontWeight\"\n                  onClick={this.handleOnToggle}\n                />\n                <button\n                  className={`TextEditorButton TextEditorButton__fontstyle--${fontStyleToggle}`}\n                  id=\"fontStyle\"\n                  onClick={this.handleOnToggle}\n                />\n              </div>\n              <div className=\"TextEditorBar__alignGroup\">{\"\"}</div>\n              <div className=\"TextEditorBar__pickerGroup\">\n                <div\n                  id={\"storage-texteditor-color-btn\"}\n                  className={`TextEditorButton TextEditorButton__color`}\n                  onClick={this.handlePaletteBtn}\n                >\n                  <span\n                    className=\"TextEditorButton__color__A\"\n                    style={{ color: fontColor }}\n                  >\n                    U\n                  </span>\n                  <span\n                    className=\"TextEditorButton__color__line\"\n                    style={{ backgroundColor: fontColor }}\n                  />\n                </div>\n                <button\n                  className={`TextEditorButton TextEditorButton__emoji--${emojiToggle}`}\n                  onClick={this.handleEmojiBtn}\n                />\n              </div>\n              <div className=\"TextEditorBar__dropdown\">\n                {isPaletteOn && (\n                  <ColorDropDown\n                    handleClickOutside={this.handleColorDDClickOutside}\n                    color={fontColor}\n                    presetColors={this.presetColors}\n                    onChangeComplete={this.handleColorPick}\n                  />\n                )}\n                {isEmojiOn && (\n                  <EmojiDropDown\n                    handleClickOutside={this.handleEmojiDDClickOutside}\n                    onSelect={this.handleEmojiPick}\n                    i18n={{\n                      //TODO\n                      search: this.props.intl.formatMessage({\n                        id: \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_SEARCH\"\n                      }),\n                      notfound: this.props.intl.formatMessage({\n                        id:\n                          \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_NOT_FOUND\"\n                      }),\n                      skintext: this.props.intl.formatMessage({\n                        id:\n                          \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_SKIN_TEXT\"\n                      }),\n                      categories: {\n                        search: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_SEARCH\"\n                        }),\n                        recent: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_RECENT\"\n                        }),\n                        people: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_PEOPLE\"\n                        }),\n                        nature: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_NATURE\"\n                        }),\n                        foods: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_FOODS\"\n                        }),\n                        activity: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_ACTIVITY\"\n                        }),\n                        places: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_PLACES\"\n                        }),\n                        objects: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_OBJECTS\"\n                        }),\n                        symbols: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_SYMBOLS\"\n                        }),\n                        flags: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_FLAGS\"\n                        }),\n                        custom: this.props.intl.formatMessage({\n                          id:\n                            \"ID_STORAGE_CONTAINER_TEXT_EDITOR_DROP_DOWN_CATEGORIES_CUSTOM\"\n                        })\n                      }\n                    }}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"TextEditor__row TextEditor__row2\">\n          <textarea\n            id=\"textValue\"\n            className=\"TextEditorArea\"\n            onChange={this.handleOnChange}\n            style={textAreaStyle}\n            value={textValue}\n          />\n        </div>\n\n        <div className=\"TextEditor__bottom\">\n          {!isUploading ? (\n            <button className=\"applyBtn\" onClick={handleApply}>\n              적용하기\n            </button>\n          ) : (\n            <button className=\"applyBtn off\">적용중입니다.</button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    selectedSceneId: state.interaction.selected.scene,\n    spriteIds: state.scene.scenes[state.interaction.selected.scene].spriteIds\n  }),\n  {\n    addSprites: sceneActions.addSprites\n  }\n)(injectIntl(TextEditor));\n"]},"metadata":{},"sourceType":"module"}