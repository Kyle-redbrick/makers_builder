{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Chat/Component/ChatBot/Component/ChatbotError.js\";\nimport React from \"react\";\nimport ChatbotMsgBot from \"./ChatbotMsgBot\";\nimport ChatbotButton from \"./ChatbotButton\";\nexport default function ChatbotError(props) {\n  var errors = props.errors;\n  var formatMessage = this.props.intl.formatMessage;\n  return React.createElement(ChatbotMsgBot, {\n    item: {\n      text: formatMessage({\n        id: \"ID_BUILDER_CHATBOT_ERROR\"\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, errors.map(function (item, index) {\n    var startLine = item.loc ? item.loc.start.line : item.row + 1;\n    return React.createElement(React.Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatbotErrorItem\",\n      onClick: item.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"ChatbotErrorItem__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ChatbotErrorItem__line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\".concat(formatMessage({\n      id: \"ID_BUILDER_CHATBOT_LINK\"\n    }), \" \").concat(startLine)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, item.text))), item.keywords && item.keywords.map(function (keyword, i) {\n      return React.createElement(React.Fragment, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(ChatbotButton, {\n        questionType: \"api\",\n        keyword: keyword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(ChatbotButton, {\n        questionType: \"class\",\n        keyword: keyword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }));\n  }));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Chat/Component/ChatBot/Component/ChatbotError.js"],"names":["React","ChatbotMsgBot","ChatbotButton","ChatbotError","props","errors","formatMessage","intl","text","id","map","item","index","startLine","loc","start","line","row","onClick","keywords","keyword","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,MAClCC,MADkC,GACvBD,KADuB,CAClCC,MADkC;AAAA,MAElCC,aAFkC,GAEhB,KAAKF,KAAL,CAAWG,IAFK,CAElCD,aAFkC;AAI1C,SACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE;AAAEE,MAAAA,IAAI,EAAEF,aAAa,CAAC;AAAEG,QAAAA,EAAE,EAAE;AAAN,OAAD;AAArB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACK,GAAP,CAAW,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3B,QAAMC,SAAS,GAAGF,IAAI,CAACG,GAAL,GAAWH,IAAI,CAACG,GAAL,CAASC,KAAT,CAAeC,IAA1B,GAAiCL,IAAI,CAACM,GAAL,GAAW,CAA9D;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEL,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAED,IAAI,CAACO,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAE,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6CZ,aAAa,CAAC;AAAEG,MAAAA,EAAE,EAAE;AAAN,KAAD,CAA1D,cAAiGI,SAAjG,EADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACH,IAAZ,CAFF,CADF,CADF,EAOGG,IAAI,CAACQ,QAAL,IAAiBR,IAAI,CAACQ,QAAL,CAAcT,GAAd,CAAkB,UAACU,OAAD,EAAUC,CAAV,EAAgB;AAClD,aACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,YAAY,EAAE,KAA7B;AAAoC,QAAA,OAAO,EAAED,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,aAAD;AAAe,QAAA,YAAY,EAAE,OAA7B;AAAsC,QAAA,OAAO,EAAEA,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAKD,KANiB,CAPpB,CADF;AAiBD,GAnBA,CADH,CADF;AAwBD","sourcesContent":["import React from \"react\";\nimport ChatbotMsgBot from \"./ChatbotMsgBot\";\nimport ChatbotButton from \"./ChatbotButton\";\n\nexport default function ChatbotError(props) {\n  const { errors } = props;\n  const { formatMessage } = this.props.intl;\n\n  return (\n    <ChatbotMsgBot item={{ text: formatMessage({ id: \"ID_BUILDER_CHATBOT_ERROR\" }) }}>\n      {errors.map((item, index) => {\n        const startLine = item.loc ? item.loc.start.line : item.row + 1;\n        return (\n          <React.Fragment key={index}>\n            <div className=\"ChatbotErrorItem\" onClick={item.onClick}>\n              <p className={\"ChatbotErrorItem__text\"}>\n                <span className=\"ChatbotErrorItem__line\">{`${formatMessage({ id: \"ID_BUILDER_CHATBOT_LINK\" })} ${startLine}`}</span>\n                <span>{item.text}</span>\n              </p>\n            </div>\n            {item.keywords && item.keywords.map((keyword, i) => {\n              return (\n                <React.Fragment key={i}>\n                  <ChatbotButton questionType={\"api\"} keyword={keyword} />\n                  <ChatbotButton questionType={\"class\"} keyword={keyword} />\n                </React.Fragment>)\n            })}\n          </React.Fragment>\n        );\n      })}\n    </ChatbotMsgBot>\n  );\n}"]},"metadata":{},"sourceType":"module"}