{"ast":null,"code":"import _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Component/SpriteBox/View.js\";\nimport React from \"react\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport searchImg from \"../../../../Image/builder/group-copy-2.svg\";\nimport \"./index.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport DrawerAnimationItem from \"./Component/DrawerAnimationItem\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\n\nfunction getLocalName(item) {\n  var lang = localStorage.getItem(\"wizLang\");\n  var title;\n\n  try {\n    title = JSON.parse(item.localeName)[lang] || JSON.parse(item.localeName)[\"default\"] || item.name;\n  } catch (err) {\n    title = item.name;\n  }\n\n  return title;\n}\n\nexport default function (props) {\n  var currentCategory = props.currentCategory,\n      currentSubCategory = props.currentSubCategory,\n      assets = props.assets,\n      setCurrentCategory = props.setCurrentCategory,\n      handleAddAsset = props.handleAddAsset,\n      handleOpenDrawing = props.handleOpenDrawing,\n      handleOpenTextbox = props.handleOpenTextbox,\n      handleSelectTab = props.handleSelectTab,\n      handleChangeZIndex = props.handleChangeZIndex,\n      handleOnChange = props.handleOnChange,\n      inputValue = props.inputValue,\n      email = props.email,\n      hoverAsset = props.hoverAsset,\n      handleAnimationHide = props.handleAnimationHide;\n  var category = AssetLibrary.categories.find(function (category) {\n    return category.name === currentCategory;\n  });\n  var subCategories = category.subCategories;\n\n  if (category.name === \"new\") {\n    subCategories = [];\n  } else {\n    subCategories = [{\n      name: \"ALL\",\n      localeName: JSON.stringify({\n        ko: \"전체\",\n        zh: \"All\",\n        default: \"All\"\n      })\n    }].concat(_toConsumableArray(subCategories));\n  }\n\n  var currentCategoryName, currentSubCategoryName;\n  var colorTheme = getColorTheme();\n  return React.createElement(\"div\", {\n    className: \"SpriteBox\",\n    onMouseDown: function onMouseDown() {\n      return handleChangeZIndex(\"spriteBox\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteBoxTitleLine handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteBoxTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_SPRITEBOX_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"SpriteBoxClose\",\n    onClick: function onClick() {\n      return handleSelectTab(\"spriteBox\");\n    },\n    onTouchEnd: function onTouchEnd() {\n      return handleSelectTab(\"spriteBox\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"SpriteBoxContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteBoxContentLeft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteSearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: searchImg,\n    alt: \"search img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    onChange: handleOnChange,\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"SpriteBoxCategoryList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, AssetLibrary.getCategories(email).filter(function (c) {\n    return c.name !== \"bgm\" && c.name !== \"sfx\";\n  }).map(function (category, index) {\n    var isSelected = category.name === currentCategory;\n    if (isSelected) currentCategoryName = getLocalName(category);\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"SpriteBoxCategoryItem \".concat(isSelected && \"SpriteBoxCategoryItemActive\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ButtonIndicator, {\n      buttonId: category.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SpriteBoxCategoryItemName\",\n      onClick: function onClick() {\n        return setCurrentCategory(category.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, getLocalName(category))), isSelected && subCategories.length > 0 && React.createElement(\"div\", {\n      className: \"SpriteBoxSubCategories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, subCategories.map(function (subCategory, index) {\n      var isSelected = subCategory.name === currentSubCategory;\n\n      if (currentCategory === currentSubCategory && subCategory.name === \"ALL\") {\n        isSelected = true;\n      }\n\n      if (isSelected) currentSubCategoryName = getLocalName(subCategory);\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"SpriteBoxSubCategoryItem \".concat(isSelected && \"SpriteBoxSubCategoryItemActive\"),\n        onClick: function onClick() {\n          if (subCategory.name !== \"ALL\") {\n            setCurrentCategory(currentCategory, subCategory.name);\n          } else {\n            setCurrentCategory(currentCategory, currentCategory);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"SpriteBoxSubCategoryItemName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, getLocalName(subCategory)));\n    })));\n  }), React.createElement(\"div\", {\n    className: \"SpriteBoxCategoryItem\",\n    onClick: handleOpenDrawing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"drawingEditor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteBoxCategoryItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_DRAWING_EDITOR_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"SpriteBoxCategoryItem\",\n    onClick: handleOpenTextbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"textEditor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteBoxCategoryItemName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_TEXT_BOX_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: \"SpriteBoxContentRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteBoxAssetTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SpriteBoxAssetTitleCategory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, currentCategoryName), React.createElement(\"div\", {\n    className: \"SpriteBoxAssetTitleSubCategory\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, currentSubCategoryName)), React.createElement(\"div\", {\n    className: \"SpriteBoxAssets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, assets.filter(function (c) {\n    return c.type !== \"sound\";\n  }).map(function (_asset, index) {\n    var assetId = _asset.assetId;\n    var asset = AssetLibrary.getAsset(assetId); // const isSelected = assetId === selectedAssetId;\n\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"SpriteBoxAsset\",\n      onClick: function onClick() {\n        handleAddAsset(asset);\n      } // onMouseEnter={e => {\n      //   handleShowAnimation(e, asset);\n      // }}\n      // onMouseLeave={e => {\n      //   handleHideAnimation();\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SpriteBoxAssetImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: asset.thumb,\n      alt: \"thumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"SpriteBoxAssetName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, asset.defaultName));\n  }), hoverAsset && AnimationView(hoverAsset, handleAnimationHide)))));\n}\n\nvar AnimationView = function AnimationView(hoverAsset, handleAnimationHide) {\n  return React.createElement(\"div\", {\n    className: \"SpriteBox_Animation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AnimationTitleLine handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AnimationTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_ANIMATION_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"AnimationClose\",\n    onClick: handleAnimationHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: closeImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"AnimationContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AnimationSection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"AnimationAnimations\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, Object.keys(hoverAsset.spriteAnimations).map(function (id, index) {\n    return React.createElement(\"div\", {\n      className: \"DrawerAnimationItem__wrapper\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(DrawerAnimationItem, {\n      index: index,\n      key: id,\n      sprite: hoverAsset,\n      item: hoverAsset.spriteAnimations[id],\n      name: id,\n      listName: \"LIST_DRAWER\",\n      width: 60,\n      height: 60,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }));\n  })))));\n};","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Component/SpriteBox/View.js"],"names":["React","AssetLibrary","FormattedMessage","ButtonIndicator","DrawerAnimationItem","getColorTheme","getLocalName","item","lang","localStorage","getItem","title","JSON","parse","localeName","name","err","props","currentCategory","currentSubCategory","assets","setCurrentCategory","handleAddAsset","handleOpenDrawing","handleOpenTextbox","handleSelectTab","handleChangeZIndex","handleOnChange","inputValue","email","hoverAsset","handleAnimationHide","category","categories","find","subCategories","stringify","ko","zh","default","currentCategoryName","currentSubCategoryName","colorTheme","closeImg_darkmode","closeImg","searchImg","getCategories","filter","c","map","index","isSelected","length","subCategory","type","_asset","assetId","asset","getAsset","thumb","defaultName","AnimationView","Object","keys","spriteAnimations","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport closeImg_darkmode from \"../../../../Image/builder/x-copy-3_darkmode.svg\";\nimport searchImg from \"../../../../Image/builder/group-copy-2.svg\";\nimport \"./index.scss\";\nimport { FormattedMessage } from \"react-intl\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport DrawerAnimationItem from \"./Component/DrawerAnimationItem\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\n\nfunction getLocalName(item) {\n  const lang = localStorage.getItem(\"wizLang\");\n  let title;\n  try {\n    title =\n      JSON.parse(item.localeName)[lang] ||\n      JSON.parse(item.localeName)[\"default\"] ||\n      item.name;\n  } catch (err) {\n    title = item.name;\n  }\n  return title;\n}\n\nexport default function(props) {\n  const {\n    currentCategory,\n    currentSubCategory,\n    assets,\n    setCurrentCategory,\n    // selectedAssetId,\n    // handleSelectAsset,\n    handleAddAsset,\n    handleOpenDrawing,\n    handleOpenTextbox,\n    handleSelectTab,\n    handleChangeZIndex,\n    handleOnChange,\n    inputValue,\n    email,\n    hoverAsset,\n    handleAnimationHide\n  } = props;\n  const category = AssetLibrary.categories.find(\n    category => category.name === currentCategory\n  );\n  let subCategories = category.subCategories;\n  if (category.name === \"new\") {\n    subCategories = [];\n  } else {\n    subCategories = [\n      {\n        name: \"ALL\",\n        localeName: JSON.stringify({\n          ko: \"전체\",\n          zh: \"All\",\n          default: \"All\"\n        })\n      },\n      ...subCategories\n    ];\n  }\n  let currentCategoryName, currentSubCategoryName;\n  const colorTheme = getColorTheme();\n  return (\n    <div\n      className=\"SpriteBox\"\n      onMouseDown={() => handleChangeZIndex(\"spriteBox\")}\n    >\n      {/* title */}\n      <div className=\"SpriteBoxTitleLine handle\">\n        <div className=\"SpriteBoxTitle\">\n          <FormattedMessage id=\"ID_SPRITEBOX_TITLE\" />\n        </div>\n        <div\n          className=\"SpriteBoxClose\"\n          onClick={() => handleSelectTab(\"spriteBox\")}\n          onTouchEnd={() => handleSelectTab(\"spriteBox\")}\n        >\n          <img\n            src={colorTheme === \"darkMode\" ? closeImg_darkmode : closeImg}\n            alt=\"img\"\n          />\n        </div>\n      </div>\n\n      {/* content */}\n      <div className=\"SpriteBoxContent\">\n        <div className=\"SpriteBoxContentLeft\">\n          <div className=\"SpriteSearch\">\n            <img src={searchImg} alt=\"search img\" />\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleOnChange}\n              placeholder=\"Search\"\n            />\n          </div>\n          <div className=\"SpriteBoxCategoryList\">\n            {AssetLibrary.getCategories(email)\n              .filter(c => c.name !== \"bgm\" && c.name !== \"sfx\")\n              .map((category, index) => {\n                let isSelected = category.name === currentCategory;\n                if (isSelected) currentCategoryName = getLocalName(category);\n                return (\n                  <div\n                    key={index}\n                    className={`SpriteBoxCategoryItem ${isSelected &&\n                      \"SpriteBoxCategoryItemActive\"}`}\n                  >\n                    <ButtonIndicator buttonId={category.name}>\n                      <div\n                        className=\"SpriteBoxCategoryItemName\"\n                        onClick={() => setCurrentCategory(category.name)}\n                      >\n                        {getLocalName(category)}\n                      </div>\n                    </ButtonIndicator>\n                    {isSelected && subCategories.length > 0 && (\n                      <div className=\"SpriteBoxSubCategories\">\n                        {subCategories.map((subCategory, index) => {\n                          let isSelected =\n                            subCategory.name === currentSubCategory;\n                          if (\n                            currentCategory === currentSubCategory &&\n                            subCategory.name === \"ALL\"\n                          ) {\n                            isSelected = true;\n                          }\n                          if (isSelected)\n                            currentSubCategoryName = getLocalName(subCategory);\n                          return (\n                            <div\n                              key={index}\n                              className={`SpriteBoxSubCategoryItem ${isSelected &&\n                                \"SpriteBoxSubCategoryItemActive\"}`}\n                              onClick={() => {\n                                if (subCategory.name !== \"ALL\") {\n                                  setCurrentCategory(\n                                    currentCategory,\n                                    subCategory.name\n                                  );\n                                } else {\n                                  setCurrentCategory(\n                                    currentCategory,\n                                    currentCategory\n                                  );\n                                }\n                              }}\n                            >\n                              <div className=\"SpriteBoxSubCategoryItemName\">\n                                {getLocalName(subCategory)}\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            <div\n              className={`SpriteBoxCategoryItem`}\n              onClick={handleOpenDrawing}\n            >\n              <ButtonIndicator buttonId=\"drawingEditor\">\n                <div className=\"SpriteBoxCategoryItemName\">\n                  <FormattedMessage id=\"ID_DRAWING_EDITOR_TITLE\" />\n                </div>\n              </ButtonIndicator>\n            </div>\n            <div\n              className={`SpriteBoxCategoryItem`}\n              onClick={handleOpenTextbox}\n            >\n              <ButtonIndicator buttonId=\"textEditor\">\n                <div className=\"SpriteBoxCategoryItemName\">\n                  <FormattedMessage id=\"ID_TEXT_BOX_TITLE\" />\n                </div>\n              </ButtonIndicator>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"SpriteBoxContentRight\">\n          <div className=\"SpriteBoxAssetTitle\">\n            <div className=\"SpriteBoxAssetTitleCategory\">\n              {/* {getLocalName(currentCategoryName)} */}\n              {currentCategoryName}\n            </div>\n            <div className=\"SpriteBoxAssetTitleSubCategory\">\n              {/* {getLocalName(currentSubCategoryName)} */}\n              {currentSubCategoryName}\n            </div>\n          </div>\n          <div className=\"SpriteBoxAssets\">\n            {assets\n              .filter(c => c.type !== \"sound\")\n              .map((_asset, index) => {\n                const assetId = _asset.assetId;\n                const asset = AssetLibrary.getAsset(assetId);\n\n                // const isSelected = assetId === selectedAssetId;\n                return (\n                  <div\n                    key={index}\n                    className=\"SpriteBoxAsset\"\n                    onClick={() => {\n                      handleAddAsset(asset);\n                    }}\n                    // onMouseEnter={e => {\n                    //   handleShowAnimation(e, asset);\n                    // }}\n                    // onMouseLeave={e => {\n                    //   handleHideAnimation();\n                    // }}\n                  >\n                    <div className=\"SpriteBoxAssetImage\">\n                      <img src={asset.thumb} alt=\"thumb\" />\n                    </div>\n                    <div className=\"SpriteBoxAssetName\">\n                      {asset.defaultName}\n                    </div>\n\n                    {/* select */}\n                    {/* {!isSelected && (\n                      <div\n                        className=\"SpriteBoxAssetSelect\"\n                        onClick={() => {\n                          handleSelectAsset(assetId);\n                        }}\n                      />\n                    )} */}\n\n                    {/* add */}\n                    {/* {isSelected && (\n                      <div\n                        className=\"SpriteBoxAssetAdd\"\n                        onClick={() => {\n                          handleAddAsset(asset);\n                        }}\n                      >\n                        <div className=\"SpriteBoxAssetAddIcon\">추가</div>\n                      </div>\n                    )} */}\n                  </div>\n                );\n              })}\n            {hoverAsset && AnimationView(hoverAsset, handleAnimationHide)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst AnimationView = (hoverAsset, handleAnimationHide) => {\n  return (\n    <div className=\"SpriteBox_Animation\">\n      <div className=\"AnimationTitleLine handle\">\n        <div className=\"AnimationTitle\">\n          <FormattedMessage id=\"ID_ANIMATION_TITLE\" />\n        </div>\n        <div className=\"AnimationClose\" onClick={handleAnimationHide}>\n          <img src={closeImg} alt=\"img\" />\n        </div>\n      </div>\n\n      <div className=\"AnimationContent\">\n        {\n          <div className=\"AnimationSection\">\n            <div className=\"AnimationAnimations\">\n              {Object.keys(hoverAsset.spriteAnimations).map((id, index) => {\n                return (\n                  <div className=\"DrawerAnimationItem__wrapper\" key={index}>\n                    <DrawerAnimationItem\n                      index={index}\n                      key={id}\n                      sprite={hoverAsset}\n                      item={hoverAsset.spriteAnimations[id]}\n                      name={id}\n                      listName=\"LIST_DRAWER\"\n                      width={60}\n                      height={60}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}