{"ast":null,"code":"import _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/MyAccount/ChangePassword/Container.js\";\nimport React, { Component } from 'react';\nimport { injectIntl } from \"react-intl\";\nimport View from \"./View\";\nimport Validate from \"../../../Common/Util/Validate\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport sha256 from \"../../../Common/Util/SHA256\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\nexport var Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onChangeField = function (id, value) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, id, value), _defineProperty(_this$setState, \"warnings\", _objectSpread({}, _this.state.warnings, _defineProperty({}, id, undefined))), _this$setState), function () {\n        if (\"currentPassword\" !== id) {\n          if (_this.equalCheckTimeout) {\n            clearTimeout(_this.equalCheckTimeout);\n          }\n\n          _this.equalCheckTimeout = setTimeout(_this.validatePasswordRe, 500);\n        }\n      });\n    };\n\n    _this.validatePasswordRe = function () {\n      var warningId = _this.state.passwordRe ? Validate.passwordRe(_this.state.password, _this.state.passwordRe).id : undefined;\n\n      _this.setState({\n        warnings: _objectSpread({}, _this.state.warnings, {\n          passwordRe: warningId ? _this.props.intl.formatMessage({\n            id: warningId\n          }) : undefined\n        })\n      });\n    };\n\n    _this.onClickChange = function () {\n      if (!_this.allValid) return;\n      var params = {\n        currentPassword: sha256(_this.state.currentPassword),\n        password: sha256(_this.state.password)\n      };\n      request.updatePassword(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json.success) {\n          _this.setState({\n            currentPassword: \"\",\n            password: \"\",\n            passwordRe: \"\"\n          });\n\n          showPopUp(React.createElement(PopUp.OneButton, {\n            title: _this.props.intl.formatMessage({\n              id: \"ID_CHANGE_PASSWORD_SUCCESS\"\n            }),\n            buttonName: _this.props.intl.formatMessage({\n              id: \"ID_SIGNUP_SIGNED_CONFIRM\"\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }), {\n            darkmode: true\n          });\n        } else {\n          _this.setState({\n            warnings: {\n              currentPassword: _this.props.intl.formatMessage({\n                id: \"ID_CHANGE_PASSWORD_ERROR\"\n              })\n            }\n          });\n        }\n      });\n    };\n\n    _this.onClickChange = function () {\n      var isValid = _this.validateFields();\n\n      if (!isValid) return;\n      var params = {\n        currentPassword: sha256(_this.state.currentPassword),\n        password: sha256(_this.state.password)\n      };\n      request.updatePassword(params).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json.success) {\n          _this.setState({\n            currentPassword: \"\",\n            password: \"\",\n            passwordRe: \"\"\n          });\n\n          showPopUp(React.createElement(PopUp.OneButton, {\n            title: _this.props.intl.formatMessage({\n              id: \"ID_CHANGE_PASSWORD_SUCCESS\"\n            }),\n            buttonName: _this.props.intl.formatMessage({\n              id: \"ID_SIGNUP_SIGNED_CONFIRM\"\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }), {\n            darkmode: true\n          });\n        } else {\n          _this.setState({\n            warnings: {\n              currentPassword: _this.props.intl.formatMessage({\n                id: \"ID_CHANGE_PASSWORD_ERROR\"\n              })\n            }\n          });\n        }\n      });\n    };\n\n    _this.validateFields = function () {\n      // todo\n      return true;\n    };\n\n    _this.state = {\n      currentPassword: \"\",\n      password: \"\",\n      passwordRe: \"\",\n      warnings: {}\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, Object.assign({}, this.state, {\n        allValid: this.allValid,\n        onChangeField: this.onChangeField,\n        onClickChange: this.onClickChange,\n        isPasswordLengthValid: this.isPasswordLengthValid,\n        isPasswordCombValid: this.isPasswordCombValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"isPasswordLengthValid\",\n    get: function get() {\n      return Validate.passwordLength(this.state.password);\n    }\n  }, {\n    key: \"isPasswordCombValid\",\n    get: function get() {\n      return Validate.passwordComb(this.state.password);\n    }\n  }, {\n    key: \"allFilled\",\n    get: function get() {\n      return this.state.currentPassword.length > 0 && this.state.password.length > 0 && this.state.passwordRe.length > 0;\n    }\n  }, {\n    key: \"allValid\",\n    get: function get() {\n      if (this.allFilled && this.isPasswordLengthValid && this.isPasswordCombValid) {\n        var _arr = Object.values(this.state.warnings);\n\n        for (var _i = 0; _i < _arr.length; _i++) {\n          var warning = _arr[_i];\n\n          if (warning) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }]);\n\n  return Container;\n}(Component);\nexport default injectIntl(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/MyAccount/ChangePassword/Container.js"],"names":["React","Component","injectIntl","View","Validate","PopUp","showPopUp","sha256","request","Container","props","onChangeField","id","value","setState","state","warnings","undefined","equalCheckTimeout","clearTimeout","setTimeout","validatePasswordRe","warningId","passwordRe","password","intl","formatMessage","onClickChange","allValid","params","currentPassword","updatePassword","then","res","json","success","darkmode","isValid","validateFields","isPasswordLengthValid","isPasswordCombValid","passwordLength","passwordComb","length","allFilled","Object","values","warning"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { injectIntl } from \"react-intl\";\nimport View from \"./View\";\nimport Validate from \"../../../Common/Util/Validate\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport sha256 from \"../../../Common/Util/SHA256\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\n\nexport class Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPassword: \"\",\n      password: \"\",\n      passwordRe: \"\",\n      warnings: {}\n    };\n  }\n\n  get isPasswordLengthValid() {\n    return Validate.passwordLength(this.state.password);\n  }\n  get isPasswordCombValid() {\n    return Validate.passwordComb(this.state.password);\n  }\n  get allFilled() {\n    return this.state.currentPassword.length > 0\n      && this.state.password.length > 0\n      && this.state.passwordRe.length > 0\n  }\n  get allValid() {\n    if (this.allFilled && this.isPasswordLengthValid && this.isPasswordCombValid) {\n      for (const warning of Object.values(this.state.warnings)) {\n        if (warning) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  onChangeField = (id, value) => {\n    this.setState({\n      [id]: value,\n      warnings: {\n        ...this.state.warnings,\n        [id]: undefined\n      }\n    }, () => {\n      if (\"currentPassword\" !== id) {\n        if (this.equalCheckTimeout) {\n          clearTimeout(this.equalCheckTimeout);\n        }\n        this.equalCheckTimeout = setTimeout(this.validatePasswordRe, 500);\n      }\n    });\n  }\n\n  validatePasswordRe = () => {\n    const warningId = this.state.passwordRe \n      ? Validate.passwordRe(this.state.password, this.state.passwordRe).id \n      : undefined;\n    this.setState({\n      warnings: {\n        ...this.state.warnings,\n        passwordRe: warningId ? this.props.intl.formatMessage({ id: warningId }) : undefined\n      }\n    });\n  }\n\n  onClickChange = () => {\n    if (!this.allValid) return;\n\n    const params = {\n      currentPassword: sha256(this.state.currentPassword),\n      password: sha256(this.state.password)\n    };\n\n    request\n      .updatePassword(params)\n      .then(res => res.json())\n      .then(json => {\n        if (json.success) {\n          this.setState({\n            currentPassword: \"\",\n            password: \"\",\n            passwordRe: \"\"\n          });\n          showPopUp(\n            <PopUp.OneButton\n              title={this.props.intl.formatMessage({ id: \"ID_CHANGE_PASSWORD_SUCCESS\" })}\n              buttonName={this.props.intl.formatMessage({ id: \"ID_SIGNUP_SIGNED_CONFIRM\" })}\n            />,\n            { darkmode: true }\n          );\n        } else {\n          this.setState({\n            warnings: {\n              currentPassword: this.props.intl.formatMessage({ id: \"ID_CHANGE_PASSWORD_ERROR\" })\n            }\n          })\n        }\n      });\n  }\n\n  onClickChange = () => {\n    const isValid = this.validateFields();\n    if (!isValid) return;\n\n    const params = {\n      currentPassword: sha256(this.state.currentPassword),\n      password: sha256(this.state.password)\n    };\n\n    request\n      .updatePassword(params)\n      .then(res => res.json())\n      .then(json => {\n        if (json.success) {\n          this.setState({\n            currentPassword: \"\",\n            password: \"\",\n            passwordRe: \"\"\n          });\n          showPopUp(\n            <PopUp.OneButton\n              title={this.props.intl.formatMessage({ id: \"ID_CHANGE_PASSWORD_SUCCESS\" })}\n              buttonName={this.props.intl.formatMessage({ id: \"ID_SIGNUP_SIGNED_CONFIRM\" })}\n            />,\n            { darkmode: true }\n          );\n        } else {\n          this.setState({\n            warnings: {\n              currentPassword: this.props.intl.formatMessage({ id: \"ID_CHANGE_PASSWORD_ERROR\" })\n            }\n          })\n        }\n      });\n  }\n\n  validateFields = () => {\n    // todo\n    return true;\n  }\n\n  render() {\n    return (\n      <View\n        { ...this.state }\n        allValid={this.allValid}\n        onChangeField={this.onChangeField}\n        onClickChange={this.onClickChange}\n        isPasswordLengthValid={this.isPasswordLengthValid}\n        isPasswordCombValid={this.isPasswordCombValid}\n      />\n    );\n  }\n}\n\nexport default injectIntl(Container);\n"]},"metadata":{},"sourceType":"module"}