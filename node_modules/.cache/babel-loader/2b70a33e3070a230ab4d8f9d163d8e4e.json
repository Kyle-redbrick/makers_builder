{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Event/Event1/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as userInfoActions from \"../../../Common/Store/Reducer/UserInfo\";\nimport * as request from \"../../../Common/Util/HTTPRequest\"; // import * as TrackingUtil from \"../../../Common/Util/TrackingUtil\";\n\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport SignIn from \"../../../Common/Component/SignIn\";\nimport View from \"./View\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.getMyTutorial = function (level) {\n      var email = _this.props.email;\n\n      if (email) {\n        request.getMyTutorial({\n          email: email,\n          level: level\n        }).then(function (res) {\n          return res.json();\n        }).then(function (myTutorial) {\n          if (myTutorial) {\n            _this.setState({\n              isTutorialCompleted: myTutorial.isComplete\n            });\n          }\n        }).catch(function (err) {\n          console.error(err);\n        });\n      }\n    };\n\n    _this.getEventProgress = function () {\n      request.getEvent1Progress().then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this.setState({\n          count: json.count\n        });\n      }).catch(function (err) {\n        console.error(err);\n      });\n    };\n\n    _this.onClickBuildGame = function () {\n      var _this$props = _this.props,\n          email = _this$props.email,\n          isMarketingAgreement = _this$props.isMarketingAgreement,\n          intl = _this$props.intl;\n      var formatMessage = intl.formatMessage;\n\n      if (email) {\n        if (isMarketingAgreement) {\n          window.scrollTo(0, 0);\n\n          _this.props.history.push({\n            pathname: \"/tutorial\"\n          }); // TrackingUtil.sendGAEvent(\n          //   {\n          //     category: \"Event\",\n          //     action: \"Event1_Join\"\n          //   },\n          //   email\n          // );\n\n        } else {\n          showPopUp(React.createElement(PopUp.TwoButton, {\n            title: formatMessage({\n              id: \"ID_EVENT_EVENT1_BUILDGAME_TITLE\"\n            }),\n            subtitle: formatMessage({\n              id: \"ID_EVENT_EVENT1_BUILDGAME_SUBTITLE\"\n            }),\n            cancelButtonName: formatMessage({\n              id: \"ID_EVENT_EVENT1_BUILDGAME_CANCEL\"\n            }),\n            cancelAction: function cancelAction() {\n              window.scrollTo(0, 0);\n\n              _this.props.history.push({\n                pathname: \"/tutorial\"\n              });\n            },\n            confirmButtonName: formatMessage({\n              id: \"ID_EVENT_EVENT1_BUILDGAME_CONFIRM\"\n            }),\n            confirmAction: function confirmAction() {\n              request.updateUserInfo({\n                email: email,\n                isMarketingAgreement: true\n              }).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                if (json.success) {\n                  _this.props.updateUserInfo({\n                    isMarketingAgreement: true\n                  });\n                }\n              });\n              window.scrollTo(0, 0);\n\n              _this.props.history.push({\n                pathname: \"/tutorial\"\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }), {\n            dismissButton: false,\n            darkmode: true\n          });\n        }\n      } else {\n        showPopUp(React.createElement(SignIn, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), {\n          darkmode: true,\n          mobileFullscreen: true\n        });\n      }\n    };\n\n    _this.onClickEvent2Banner = function () {\n      window.scrollTo(0, 0);\n\n      _this.props.history.push({\n        pathname: \"/event/2\"\n      }); // TrackingUtil.sendGAEvent(\n      //   {\n      //     category: \"Event\",\n      //     action: \"Event1_Move\"\n      //   },\n      //   this.props.email\n      // );\n\n    };\n\n    _this.state = {\n      count: 0,\n      isTutorialCompleted: false\n    };\n    var code = _this.props.match.params.code;\n\n    if (code) {\n      sessionStorage.setItem(\"recommendCode\", code);\n\n      _this.props.history.replace(\"/event/1\");\n    }\n\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // TrackingUtil.sendPageEvent(\"/event/1\", this.props.email);\n      this.getMyTutorial(10);\n      this.getEventProgress();\n      this.getEventProgressInterval = setInterval(function () {\n        _this2.getEventProgress();\n      }, 10000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.getEventProgressInterval) {\n        clearInterval(this.getEventProgressInterval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        count: this.state.count,\n        isTutorialCompleted: this.state.isTutorialCompleted,\n        isMarketingAgreement: this.props.isMarketingAgreement,\n        onClickBuildGame: this.onClickBuildGame,\n        onClickEvent2Banner: this.onClickEvent2Banner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    email: state.userinfo.email,\n    isMarketingAgreement: state.userinfo.isMarketingAgreement\n  };\n}, {\n  updateUserInfo: userInfoActions.updateUserInfo\n})(withRouter(injectIntl(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Event/Event1/Container.js"],"names":["React","Component","connect","injectIntl","withRouter","userInfoActions","request","PopUp","showPopUp","SignIn","View","Container","props","getMyTutorial","level","email","then","res","json","myTutorial","setState","isTutorialCompleted","isComplete","catch","err","console","error","getEventProgress","getEvent1Progress","count","onClickBuildGame","isMarketingAgreement","intl","formatMessage","window","scrollTo","history","push","pathname","id","updateUserInfo","success","dismissButton","darkmode","mobileFullscreen","onClickEvent2Banner","state","code","match","params","sessionStorage","setItem","replace","getEventProgressInterval","setInterval","clearInterval","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as userInfoActions from \"../../../Common/Store/Reducer/UserInfo\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\n// import * as TrackingUtil from \"../../../Common/Util/TrackingUtil\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport SignIn from \"../../../Common/Component/SignIn\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0, isTutorialCompleted: false };\n    const code = this.props.match.params.code;\n    if (code) {\n      sessionStorage.setItem(\"recommendCode\", code);\n      this.props.history.replace(\"/event/1\");\n    }\n  }\n  componentDidMount() {\n    // TrackingUtil.sendPageEvent(\"/event/1\", this.props.email);\n    this.getMyTutorial(10);\n    this.getEventProgress();\n    this.getEventProgressInterval = setInterval(() => {\n      this.getEventProgress();\n    }, 10000);\n  }\n  componentWillUnmount() {\n    if (this.getEventProgressInterval) {\n      clearInterval(this.getEventProgressInterval);\n    }\n  }\n\n  getMyTutorial = level => {\n    const { email } = this.props;\n    if (email) {\n      request\n        .getMyTutorial({ email, level })\n        .then(res => res.json())\n        .then(myTutorial => {\n          if (myTutorial) {\n            this.setState({ isTutorialCompleted: myTutorial.isComplete });\n          }\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  };\n  getEventProgress = () => {\n    request\n      .getEvent1Progress()\n      .then(res => res.json())\n      .then(json => {\n        this.setState({ count: json.count });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  onClickBuildGame = () => {\n    const { email, isMarketingAgreement, intl } = this.props;\n    const { formatMessage } = intl;\n    if (email) {\n      if (isMarketingAgreement) {\n        window.scrollTo(0, 0);\n        this.props.history.push({ pathname: \"/tutorial\" });\n        // TrackingUtil.sendGAEvent(\n        //   {\n        //     category: \"Event\",\n        //     action: \"Event1_Join\"\n        //   },\n        //   email\n        // );\n      } else {\n        showPopUp(\n          <PopUp.TwoButton\n            title={formatMessage({ id: \"ID_EVENT_EVENT1_BUILDGAME_TITLE\" })}\n            subtitle={formatMessage({\n              id: \"ID_EVENT_EVENT1_BUILDGAME_SUBTITLE\"\n            })}\n            cancelButtonName={formatMessage({\n              id: \"ID_EVENT_EVENT1_BUILDGAME_CANCEL\"\n            })}\n            cancelAction={() => {\n              window.scrollTo(0, 0);\n              this.props.history.push({ pathname: \"/tutorial\" });\n            }}\n            confirmButtonName={formatMessage({\n              id: \"ID_EVENT_EVENT1_BUILDGAME_CONFIRM\"\n            })}\n            confirmAction={() => {\n              request\n                .updateUserInfo({ email, isMarketingAgreement: true })\n                .then(res => res.json())\n                .then(json => {\n                  if (json.success) {\n                    this.props.updateUserInfo({ isMarketingAgreement: true });\n                  }\n                });\n              window.scrollTo(0, 0);\n              this.props.history.push({ pathname: \"/tutorial\" });\n            }}\n          />,\n          { dismissButton: false, darkmode: true }\n        );\n      }\n    } else {\n      showPopUp(<SignIn />, { darkmode: true, mobileFullscreen: true });\n    }\n  };\n  onClickEvent2Banner = () => {\n    window.scrollTo(0, 0);\n    this.props.history.push({ pathname: \"/event/2\" });\n    // TrackingUtil.sendGAEvent(\n    //   {\n    //     category: \"Event\",\n    //     action: \"Event1_Move\"\n    //   },\n    //   this.props.email\n    // );\n  };\n\n  render() {\n    return (\n      <View\n        count={this.state.count}\n        isTutorialCompleted={this.state.isTutorialCompleted}\n        isMarketingAgreement={this.props.isMarketingAgreement}\n        onClickBuildGame={this.onClickBuildGame}\n        onClickEvent2Banner={this.onClickEvent2Banner}\n      />\n    );\n  }\n}\nexport default connect(\n  state => ({\n    email: state.userinfo.email,\n    isMarketingAgreement: state.userinfo.isMarketingAgreement\n  }),\n  { updateUserInfo: userInfoActions.updateUserInfo }\n)(withRouter(injectIntl(Container)));\n"]},"metadata":{},"sourceType":"module"}