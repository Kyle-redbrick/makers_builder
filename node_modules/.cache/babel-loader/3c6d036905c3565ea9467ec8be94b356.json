{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/News/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport QueryString from \"query-string\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport View from \"./View\";\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      window.scrollTo(0, 0);\n\n      _this.fetchNews();\n    };\n\n    _this.fetchNews = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, news;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return request.getNewsList({\n                type: \"all\",\n                limit: _this.limit,\n                offset: _this.limit * (_this.state.currentPage - 1)\n              });\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              news = _context.sent;\n\n              _this.setState(function (prev) {\n                return {\n                  news: prev.news.concat(news.rows),\n                  newsCount: news.count\n                };\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.onClickTab = function (tab) {\n      if (tab === _this.state.selectedTab) return;\n\n      _this.setState({\n        selectedTab: tab\n      });\n\n      _this.props.history.push(\"?tab=\".concat(tab));\n    };\n\n    _this.onClickMore = function () {\n      _this.setState(function (prev) {\n        return {\n          currentPage: prev.currentPage + 1\n        };\n      }, function () {\n        _this.fetchNews();\n      });\n    };\n\n    var query = QueryString.parse(props.location.search);\n    _this.TAB_TYPE = {\n      ING: \"event\",\n      END: \"endedEvent\",\n      NOTICE: \"notice\"\n    };\n    _this.limit = 10;\n    _this.state = {\n      selectedTab: query.tab ? query.tab : _this.TAB_TYPE.ING,\n      news: [],\n      currentPage: 1,\n      newsCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var TAB_TYPE = this.TAB_TYPE,\n          onClickTab = this.onClickTab,\n          onClickMore = this.onClickMore;\n      var _this$state = this.state,\n          selectedTab = _this$state.selectedTab,\n          news = _this$state.news,\n          newsCount = _this$state.newsCount;\n      var intl = this.props.intl;\n      return /*#__PURE__*/React.createElement(View, {\n        intl: intl,\n        TAB_TYPE: TAB_TYPE,\n        selectedTab: selectedTab,\n        news: news,\n        newsCount: newsCount,\n        onClickTab: onClickTab,\n        onClickMore: onClickMore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    email: state.userinfo.email\n  };\n}, {})(injectIntl(withRouter(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/News/Container.js"],"names":["React","Component","connect","withRouter","injectIntl","QueryString","request","View","Container","props","componentDidMount","window","scrollTo","fetchNews","getNewsList","type","limit","offset","state","currentPage","res","json","news","setState","prev","concat","rows","newsCount","count","onClickTab","tab","selectedTab","history","push","onClickMore","query","parse","location","search","TAB_TYPE","ING","END","NOTICE","intl","email","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { injectIntl } from \"react-intl\";\nimport QueryString from \"query-string\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    const query = QueryString.parse(props.location.search);\n\n    this.TAB_TYPE = {\n      ING: \"event\",\n      END: \"endedEvent\",\n      NOTICE: \"notice\"\n    };\n\n    this.limit = 10;\n\n    this.state = {\n      selectedTab: query.tab ? query.tab : this.TAB_TYPE.ING,\n      news: [], \n      currentPage: 1, \n      newsCount: 0\n    };\n  }\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0);\n    this.fetchNews();\n  };\n\n  fetchNews = async () => {\n    let res = await request.getNewsList({\n      type: \"all\",\n      limit: this.limit,\n      offset: this.limit * (this.state.currentPage - 1)\n    });\n    let news = await res.json();\n    this.setState(prev => ({\n      news: prev.news.concat(news.rows),\n      newsCount: news.count\n    }));\n  };\n\n  onClickTab = tab => {\n    if (tab === this.state.selectedTab) return;\n    this.setState({ selectedTab: tab });\n    this.props.history.push(`?tab=${tab}`);\n  };\n  \n  onClickMore = () => {\n    this.setState(\n      prev => ({ currentPage: prev.currentPage + 1 }),\n      () => {\n        this.fetchNews();\n      }\n    );\n  };\n\n  render() {\n    const { TAB_TYPE, onClickTab, onClickMore } = this;\n    const { selectedTab, news, newsCount } = this.state;\n    const { intl } = this.props;\n    return (\n      <View\n        intl={intl}\n        TAB_TYPE={TAB_TYPE}\n        selectedTab={selectedTab}\n        news={news}\n        newsCount={newsCount}\n        onClickTab={onClickTab}\n        onClickMore={onClickMore}\n      />\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    email: state.userinfo.email\n  }),\n  {}\n)(injectIntl(withRouter(Container)));\n"]},"metadata":{},"sourceType":"module"}