{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/NewsDetail/Comment/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport SignIn from \"../../../Common/Component/SignIn\";\nimport Menus from \"../Menus\";\nimport \"./index.scss\";\nimport officialIcon from \"../../../Image/certification-mark.svg\";\nimport moreImg from \"../../../Image/social_more.svg\";\nimport emptyImg from \"../../../Image/empty-img.png\";\nimport checkBlockedUser from \"../../../Common/Util/CheckBlockedUser\";\n\nvar Comment = /*#__PURE__*/function (_Component) {\n  _inherits(Comment, _Component);\n\n  var _super = _createSuper(Comment);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _super.call(this, props);\n    _this.addComment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var formatMessage, isBlocked, _this$props, user, newsId, parentCommentId, res, el;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formatMessage = _this.props.intl.formatMessage;\n              isBlocked = checkBlockedUser(_this.props.user);\n\n              if (!isBlocked) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (_this.state.message) {\n                _context.next = 7;\n                break;\n              }\n\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\"\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 9\n                }\n              }), {\n                dismissOverlay: true,\n                dismissButton: false,\n                darkmode: true\n              });\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (!(_this.state.message.length > 1000)) {\n                _context.next = 10;\n                break;\n              }\n\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: \"ID_SOCIAL_WARNNING\"\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_BUILDER_ALERT_CONFIRMBTN\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 9\n                }\n              }), {\n                darkmode: true,\n                dismissButton: false\n              });\n              return _context.abrupt(\"return\");\n\n            case 10:\n              _this$props = _this.props, user = _this$props.user, newsId = _this$props.newsId, parentCommentId = _this$props.parentCommentId;\n              _context.next = 13;\n              return request.createNewsReply({\n                message: _this.state.message,\n                writerId: user.id,\n                parentCommentId: parentCommentId,\n                newsId: newsId\n              });\n\n            case 13:\n              res = _context.sent;\n              _context.next = 16;\n              return res.json();\n\n            case 16:\n              res = _context.sent;\n\n              if (!res.success) {\n                _context.next = 23;\n                break;\n              }\n\n              if (parentCommentId) {\n                _this.props.onAddNewReply(res.comment);\n              } else {\n                _this.props.onAddNewComment(res.comment);\n              }\n\n              el = document.querySelector(\"#news__input\");\n\n              if (el) {\n                el.value = \"\";\n              }\n\n              _context.next = 27;\n              break;\n\n            case 23:\n              if (!res.spam) {\n                _context.next = 26;\n                break;\n              }\n\n              _this.showSpamPopup(res.spam);\n\n              return _context.abrupt(\"return\");\n\n            case 26:\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: \"ID_NEWS_COMMENT_FAIL_TITLE\"\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_NEWS_COMMENT_FAIL_CONFIRM\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 9\n                }\n              }), {\n                dismissOverlay: true,\n                dismissButton: false,\n                darkmode: true\n              });\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.updateComment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var formatMessage, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formatMessage = _this.props.intl.formatMessage;\n\n              if (!_this.state.message) {\n                _context2.next = 18;\n                break;\n              }\n\n              _context2.next = 4;\n              return request.updateNewsReply({\n                message: _this.state.message,\n                commentId: _this.props.comment.id\n              });\n\n            case 4:\n              res = _context2.sent;\n              _context2.next = 7;\n              return res.json();\n\n            case 7:\n              res = _context2.sent;\n\n              if (!res.success) {\n                _context2.next = 12;\n                break;\n              }\n\n              _this.setState({\n                readonly: true\n              }, function () {\n                _this.setState({\n                  message: _this.state.message\n                });\n              });\n\n              _context2.next = 16;\n              break;\n\n            case 12:\n              if (!res.spam) {\n                _context2.next = 15;\n                break;\n              }\n\n              _this.showSpamPopup(res.spam);\n\n              return _context2.abrupt(\"return\");\n\n            case 15:\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: \"ID_NEWS_COMMENT_UPDATE_FAIL_TITLE\"\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_NEWS_COMMENT_FAIL_CONFIRM\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 11\n                }\n              }), {\n                dismissOverlay: true,\n                dismissButton: false,\n                darkmode: true\n              });\n\n            case 16:\n              _context2.next = 19;\n              break;\n\n            case 18:\n              showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                title: formatMessage({\n                  id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\"\n                }),\n                buttonName: formatMessage({\n                  id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\"\n                }),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 9\n                }\n              }), {\n                dismissOverlay: true,\n                dismissButton: false,\n                darkmode: true\n              });\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.onChangeComment = function (e) {\n      _this.setState({\n        message: e.target.value\n      });\n    };\n\n    _this.onClickUser = function () {\n      if (_this.state.readonly) {\n        var writer = _this.props.comment.writer;\n        window.scrollTo(0, 0);\n\n        _this.props.history.push(\"/userpage/\".concat(writer.id));\n      }\n    };\n\n    _this.onClickNewReply = function () {\n      var email = _this.props.user.email;\n\n      if (email) {\n        _this.props.onClickNewReply();\n      } else {\n        showPopUp( /*#__PURE__*/React.createElement(SignIn, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }\n        }), {\n          darkmode: true,\n          mobileFullscreen: true\n        });\n      }\n    };\n\n    _this.onClickCommentsMore = function () {};\n\n    _this.onClickSubmit = function () {\n      if (_this.props.comment) {\n        _this.updateComment();\n      } else {\n        _this.addComment();\n      }\n    };\n\n    _this.onClickMore = function () {\n      if (!_this.state.readonly) return;\n      var menus = [];\n      var _this$props2 = _this.props,\n          user = _this$props2.user,\n          comment = _this$props2.comment,\n          intl = _this$props2.intl;\n      var isDeleted = comment.isDeleted;\n      var formatMessage = intl.formatMessage;\n\n      if (!isDeleted && user.id === comment.writer.id) {\n        var editMenu = {\n          name: formatMessage({\n            id: \"ID_SOCIAL_MORE_UPDATE\"\n          }),\n          onClick: _this.onClickUpdate\n        };\n        menus.push(editMenu);\n        var deleteMenu = {\n          name: formatMessage({\n            id: \"ID_SOCIAL_MORE_DELTE\"\n          }),\n          onClick: _this.onClickDelete\n        };\n        menus.push(deleteMenu);\n      } else {\n        var reportMenu = {\n          name: formatMessage({\n            id: \"ID_SOCIAL_MORE_REPORT\"\n          }),\n          onClick: _this.onClickReport\n        };\n        menus.push(reportMenu);\n      }\n\n      showPopUp( /*#__PURE__*/React.createElement(Menus, {\n        menus: menus,\n        cancelButtonName: formatMessage({\n          id: \"ID_SOCIAL_MORE_CANCEL\"\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }\n      }), {\n        dismissOverlay: true,\n        dismissButton: false,\n        defaultPadding: false,\n        darkmode: true\n      });\n    };\n\n    _this.onClickUpdate = function () {\n      _this.setState({\n        readonly: false\n      });\n    };\n\n    _this.onClickDelete = function () {\n      var formatMessage = _this.props.intl.formatMessage;\n      showPopUp( /*#__PURE__*/React.createElement(PopUp.TwoButton, {\n        title: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_TITLE\"\n        }),\n        cancelButtonName: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CANCEL\"\n        }),\n        confirmButtonName: formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CONFIRM\"\n        }),\n        confirmAction: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return request.deleteNewsReply({\n                    commentId: _this.props.comment.id\n                  });\n\n                case 2:\n                  res = _context3.sent;\n                  _context3.next = 5;\n                  return res.json();\n\n                case 5:\n                  res = _context3.sent;\n\n                  if (res.success) {\n                    _this.setState({\n                      isDeleted: true\n                    }, function () {\n                      showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                        title: formatMessage({\n                          id: \"ID_SOCIAL_COMMENT_DELETED_TITLE\"\n                        }),\n                        buttonName: formatMessage({\n                          id: \"ID_SOCIAL_COMMENT_DELETED_CONFIRM\"\n                        }),\n                        __self: _assertThisInitialized(_this),\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 17\n                        }\n                      }), {\n                        dismissOverlay: true,\n                        dismissButton: false,\n                        darkmode: true\n                      });\n                    });\n                  } else {\n                    showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n                      title: formatMessage({\n                        id: \"ID_NEWS_COMMENT_DELETE_FAIL_TITLE\"\n                      }),\n                      buttonName: formatMessage({\n                        id: \"ID_SOCIAL_COMMENT_DELETED_CONFIRM\"\n                      }),\n                      __self: _assertThisInitialized(_this),\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 15\n                      }\n                    }), {\n                      dismissOverlay: true,\n                      dismissButton: false,\n                      darkmode: true\n                    });\n                  }\n\n                case 7:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        })),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      }), {\n        dismissOverlay: true,\n        dismissButton: false,\n        darkmode: true\n      });\n    };\n\n    _this.onClickReport = function () {};\n\n    _this.onAddNewReply = function (comment) {\n      _this.props.onClickNewReply();\n\n      _this.setState(function (prevState) {\n        return {\n          childComments: [].concat(prevState.childComments, [comment])\n        };\n      });\n    };\n\n    _this.showSpamPopup = function (message) {\n      var warning;\n      var formatMessage = _this.props.intl.formatMessage;\n\n      switch (message) {\n        case \"badWord\":\n          warning = formatMessage({\n            id: \"ID_SPAM_POPUP_TITLE_BAD_WORD\"\n          });\n          break;\n\n        case \"duplication\":\n          warning = formatMessage({\n            id: \"ID_SPAM_POPUP_TITLE_DUPLICATION\"\n          });\n          break;\n\n        case \"time\":\n          warning = formatMessage({\n            id: \"ID_SPAM_POPUP_TITLE_TIME\"\n          });\n          break;\n\n        default:\n          warning = formatMessage({\n            id: \"ID_SPAM_POPUP_TITLE_TIME\"\n          });\n          break;\n      }\n\n      showPopUp( /*#__PURE__*/React.createElement(PopUp.OneButton, {\n        title: warning,\n        buttonName: formatMessage({\n          id: \"ID_SPAM_POPUP_CONFIRM\"\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 7\n        }\n      }), {\n        dismissOverlay: true,\n        dismissButton: false,\n        darkmode: true\n      });\n    };\n\n    var _comment = props.comment;\n\n    if (_comment) {\n      _this.state = {\n        readonly: true,\n        isDeleted: _comment.isDeleted,\n        childComments: _comment.childComments,\n        message: _comment.message\n      };\n    } else {\n      _this.state = {\n        readonly: false,\n        message: \"\"\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          readonly = _this$state.readonly,\n          isDeleted = _this$state.isDeleted,\n          childComments = _this$state.childComments,\n          message = _this$state.message;\n      var formatMessage = this.props.intl.formatMessage;\n\n      var _ref4 = readonly ? this.props.comment : {},\n          id = _ref4.id,\n          showNewReply = _ref4.showNewReply;\n\n      var user = readonly ? this.props.comment.writer : this.props.user;\n      var isLoginUser = this.props.user.email;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment__user-img\",\n        src: !this.props.notLoginUser ? user.icon : emptyImg,\n        alt: user.name,\n        onClick: this.onClickUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }\n      }, readonly ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__header__user-name\",\n        onClick: this.onClickUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }\n      }, user.name), user.isOfficial && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__header__user-official\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: officialIcon,\n        alt: user.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__header__actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"comment__header__action\",\n        onClick: this.onClickNewReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 19\n        }\n      }, formatMessage({\n        id: \"ID_NEWS_COMMENT_ACTIONS_REPLY\"\n      }))), readonly && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"comment__header__more\",\n        src: moreImg,\n        alt: \"more\",\n        onClick: this.onClickMore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"comment__contents-\".concat(id),\n        className: \"comment_contents comment__contents--readonly\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }\n      }, isDeleted ? formatMessage({\n        id: \"ID_SOCIAL_COMMENT_DELETED\"\n      }) : message), showNewReply && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__newcomment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        intl: this.props.intl,\n        user: this.props.user,\n        newsId: this.props.newsId,\n        parentCommentId: id,\n        onAddNewReply: this.onAddNewReply,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 19\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__editor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }\n      }, isLoginUser ? /*#__PURE__*/React.createElement(\"textarea\", {\n        value: message,\n        id: \"news__input\",\n        onChange: this.onChangeComment,\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD574 \\uC8FC\\uC138\\uC694\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(\"textarea\", {\n        id: \"news__input\",\n        placeholder: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uB313\\uAE00\\uC744 \\uC4F0\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\",\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__editor__submit\",\n        onClick: isLoginUser && this.onClickSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 19\n        }\n      }, formatMessage({\n        id: \"ID_NEWS_COMMENT_SUBMIT\"\n      }))))), childComments && childComments.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"comment__childcomments\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }\n      }, childComments.map(function (childComment, index) {\n        return /*#__PURE__*/React.createElement(Comment, {\n          key: childComment.id,\n          newsId: _this2.props.newsId,\n          comment: childComment,\n          intl: _this2.props.intl,\n          user: _this2.props.user,\n          onClickNewReply: _this2.onClickNewReply,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 19\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    user: state.userinfo\n  };\n})(withRouter(injectIntl(Comment)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/NewsDetail/Comment/index.js"],"names":["React","Component","connect","injectIntl","withRouter","request","PopUp","showPopUp","SignIn","Menus","emptyImg","checkBlockedUser","Comment","props","addComment","formatMessage","intl","isBlocked","user","state","message","id","dismissOverlay","dismissButton","darkmode","length","newsId","parentCommentId","createNewsReply","writerId","res","json","success","onAddNewReply","comment","onAddNewComment","el","document","querySelector","value","spam","showSpamPopup","updateComment","updateNewsReply","commentId","setState","readonly","onChangeComment","e","target","onClickUser","writer","window","scrollTo","history","push","onClickNewReply","email","mobileFullscreen","onClickCommentsMore","onClickSubmit","onClickMore","menus","isDeleted","editMenu","name","onClick","onClickUpdate","deleteMenu","onClickDelete","reportMenu","onClickReport","defaultPadding","deleteNewsReply","prevState","childComments","concat","warning","showNewReply","isLoginUser","notLoginUser","icon","isOfficial","officialIcon","moreImg","map","childComment","index","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport * as request from \"../../../Common/Util/HTTPRequest\";\nimport PopUp, { showPopUp } from \"../../../Common/Component/PopUp\";\nimport SignIn from \"../../../Common/Component/SignIn\";\nimport Menus from \"../Menus\";\nimport \"./index.scss\";\nimport officialIcon from \"../../../Image/certification-mark.svg\";\nimport moreImg from \"../../../Image/social_more.svg\";\nimport emptyImg from \"../../../Image/empty-img.png\";\nimport checkBlockedUser from \"../../../Common/Util/CheckBlockedUser\";\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    const { comment } = props;\n    if (comment) {\n      this.state = {\n        readonly: true,\n        isDeleted: comment.isDeleted,\n        childComments: comment.childComments,\n        message: comment.message\n      };\n    } else {\n      this.state = {\n        readonly: false,\n        message: \"\"\n      };\n    }\n  }\n  addComment = async () => {\n    const { formatMessage } = this.props.intl;\n    const isBlocked = checkBlockedUser(this.props.user);\n    if (isBlocked) {\n      return;\n    }\n    if (!this.state.message) {\n      showPopUp(\n        <PopUp.OneButton\n          title={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\" })}\n          buttonName={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\" })}\n        />,\n        {\n          dismissOverlay: true,\n          dismissButton: false,\n          darkmode: true\n        }\n      );\n      return;\n    }\n    if (this.state.message.length > 1000) {\n      showPopUp(\n        <PopUp.OneButton\n          title={formatMessage({ id: \"ID_SOCIAL_WARNNING\" })}\n          buttonName={formatMessage({\n            id: \"ID_BUILDER_ALERT_CONFIRMBTN\"\n          })}\n        />,\n        { darkmode: true, dismissButton: false }\n      );\n\n      return;\n    }\n\n    const { user, newsId, parentCommentId } = this.props;\n\n    let res = await request.createNewsReply({\n      message: this.state.message,\n      writerId: user.id,\n      parentCommentId,\n      newsId\n    });\n    res = await res.json();\n    if (res.success) {\n      if (parentCommentId) {\n        this.props.onAddNewReply(res.comment);\n      } else {\n        this.props.onAddNewComment(res.comment);\n      }\n      let el = document.querySelector(\"#news__input\");\n      if (el) {\n        el.value = \"\";\n      }\n    } else {\n      if (res.spam) {\n        this.showSpamPopup(res.spam);\n        return;\n      }\n      showPopUp(\n        <PopUp.OneButton\n          title={formatMessage({ id: \"ID_NEWS_COMMENT_FAIL_TITLE\" })}\n          buttonName={formatMessage({ id: \"ID_NEWS_COMMENT_FAIL_CONFIRM\" })}\n        />,\n        {\n          dismissOverlay: true,\n          dismissButton: false,\n          darkmode: true\n        }\n      );\n    }\n  };\n  updateComment = async () => {\n    const { formatMessage } = this.props.intl;\n    if (this.state.message) {\n      let res = await request.updateNewsReply({\n        message: this.state.message,\n        commentId: this.props.comment.id\n      });\n      res = await res.json();\n      if (res.success) {\n        this.setState({ readonly: true }, () => {\n          this.setState({ message: this.state.message });\n        });\n      } else {\n        if (res.spam) {\n          this.showSpamPopup(res.spam);\n          return;\n        }\n        showPopUp(\n          <PopUp.OneButton\n            title={formatMessage({ id: \"ID_NEWS_COMMENT_UPDATE_FAIL_TITLE\" })}\n            buttonName={formatMessage({ id: \"ID_NEWS_COMMENT_FAIL_CONFIRM\" })}\n          />,\n          {\n            dismissOverlay: true,\n            dismissButton: false,\n            darkmode: true\n          }\n        );\n      }\n    } else {\n      showPopUp(\n        <PopUp.OneButton\n          title={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_TITLE\" })}\n          buttonName={formatMessage({ id: \"ID_SOCIAL_WRITE_EMPTY_CONFIRM\" })}\n        />,\n        {\n          dismissOverlay: true,\n          dismissButton: false,\n          darkmode: true\n        }\n      );\n    }\n  };\n\n  // util\n  onChangeComment = e => {\n    this.setState({ message: e.target.value });\n  };\n\n  // actions\n  onClickUser = () => {\n    if (this.state.readonly) {\n      const { writer } = this.props.comment;\n      window.scrollTo(0, 0);\n      this.props.history.push(`/userpage/${writer.id}`);\n    }\n  };\n\n  //답글 달기 버튼 눌렀을때\n  onClickNewReply = () => {\n    const { email } = this.props.user;\n    if (email) {\n      this.props.onClickNewReply();\n    } else {\n      showPopUp(<SignIn />, { darkmode: true, mobileFullscreen: true });\n    }\n  };\n  onClickCommentsMore = () => {};\n  onClickSubmit = () => {\n    if (this.props.comment) {\n      this.updateComment();\n    } else {\n      this.addComment();\n    }\n  };\n\n  // more\n  onClickMore = () => {\n    if (!this.state.readonly) return;\n\n    const menus = [];\n    const { user, comment, intl } = this.props;\n    const { isDeleted } = comment;\n    const { formatMessage } = intl;\n    if (!isDeleted && user.id === comment.writer.id) {\n      const editMenu = {\n        name: formatMessage({ id: \"ID_SOCIAL_MORE_UPDATE\" }),\n        onClick: this.onClickUpdate\n      };\n      menus.push(editMenu);\n      const deleteMenu = {\n        name: formatMessage({ id: \"ID_SOCIAL_MORE_DELTE\" }),\n        onClick: this.onClickDelete\n      };\n      menus.push(deleteMenu);\n    } else {\n      const reportMenu = {\n        name: formatMessage({ id: \"ID_SOCIAL_MORE_REPORT\" }),\n        onClick: this.onClickReport\n      };\n      menus.push(reportMenu);\n    }\n\n    showPopUp(\n      <Menus\n        menus={menus}\n        cancelButtonName={formatMessage({ id: \"ID_SOCIAL_MORE_CANCEL\" })}\n      />,\n      {\n        dismissOverlay: true,\n        dismissButton: false,\n        defaultPadding: false,\n        darkmode: true\n      }\n    );\n  };\n  onClickUpdate = () => {\n    this.setState({ readonly: false });\n  };\n  onClickDelete = () => {\n    const { formatMessage } = this.props.intl;\n    showPopUp(\n      <PopUp.TwoButton\n        title={formatMessage({ id: \"ID_SOCIAL_COMMENT_DELETE_TITLE\" })}\n        cancelButtonName={formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CANCEL\"\n        })}\n        confirmButtonName={formatMessage({\n          id: \"ID_SOCIAL_COMMENT_DELETE_CONFIRM\"\n        })}\n        confirmAction={async () => {\n          let res = await request.deleteNewsReply({\n            commentId: this.props.comment.id\n          });\n          res = await res.json();\n          if (res.success) {\n            this.setState({ isDeleted: true }, () => {\n              showPopUp(\n                <PopUp.OneButton\n                  title={formatMessage({\n                    id: \"ID_SOCIAL_COMMENT_DELETED_TITLE\"\n                  })}\n                  buttonName={formatMessage({\n                    id: \"ID_SOCIAL_COMMENT_DELETED_CONFIRM\"\n                  })}\n                />,\n                {\n                  dismissOverlay: true,\n                  dismissButton: false,\n                  darkmode: true\n                }\n              );\n            });\n          } else {\n            showPopUp(\n              <PopUp.OneButton\n                title={formatMessage({\n                  id: \"ID_NEWS_COMMENT_DELETE_FAIL_TITLE\"\n                })}\n                buttonName={formatMessage({\n                  id: \"ID_SOCIAL_COMMENT_DELETED_CONFIRM\"\n                })}\n              />,\n              {\n                dismissOverlay: true,\n                dismissButton: false,\n                darkmode: true\n              }\n            );\n          }\n        }}\n      />,\n      {\n        dismissOverlay: true,\n        dismissButton: false,\n        darkmode: true\n      }\n    );\n  };\n  onClickReport = () => {};\n\n  // events\n  //  답글 작성 완료 버튼 누르고 서버 데이터 생성했을때\n  onAddNewReply = comment => {\n    this.props.onClickNewReply();\n    this.setState(prevState => {\n      return {\n        childComments: [].concat(prevState.childComments, [comment])\n      };\n    });\n  };\n\n  showSpamPopup = message => {\n    let warning;\n    const { formatMessage } = this.props.intl;\n\n    switch (message) {\n      case \"badWord\":\n        warning = formatMessage({\n          id: \"ID_SPAM_POPUP_TITLE_BAD_WORD\"\n        });\n        break;\n\n      case \"duplication\":\n        warning = formatMessage({\n          id: \"ID_SPAM_POPUP_TITLE_DUPLICATION\"\n        });\n\n        break;\n      case \"time\":\n        warning = formatMessage({ id: \"ID_SPAM_POPUP_TITLE_TIME\" });\n        break;\n      default:\n        warning = formatMessage({ id: \"ID_SPAM_POPUP_TITLE_TIME\" });\n        break;\n    }\n    showPopUp(\n      <PopUp.OneButton\n        title={warning}\n        buttonName={formatMessage({ id: \"ID_SPAM_POPUP_CONFIRM\" })}\n      />,\n      {\n        dismissOverlay: true,\n        dismissButton: false,\n        darkmode: true\n      }\n    );\n  };\n\n  render() {\n    const { readonly, isDeleted, childComments, message } = this.state;\n    const { formatMessage } = this.props.intl;\n    const { id, showNewReply } = readonly ? this.props.comment : {};\n    const user = readonly ? this.props.comment.writer : this.props.user;\n    const isLoginUser = this.props.user.email;\n    return (\n      <div className=\"comment\">\n        <img\n          className=\"comment__user-img\"\n          src={!this.props.notLoginUser ? user.icon : emptyImg}\n          alt={user.name}\n          onClick={this.onClickUser}\n        />\n        <div className=\"comment__section\">\n          {readonly ? (\n            <>\n              <div className=\"comment__header\">\n                <div className=\"comment__header__user-name\" onClick={this.onClickUser}>\n                  {user.name}\n                </div>\n                {user.isOfficial && (\n                  <div className=\"comment__header__user-official\">\n                    <img src={officialIcon} alt={user.name} />\n                  </div>\n                )}\n                <div className=\"comment__header__actions\">\n                  <button\n                    className=\"comment__header__action\"\n                    onClick={this.onClickNewReply}\n                  >\n                    {formatMessage({ id: \"ID_NEWS_COMMENT_ACTIONS_REPLY\" })}\n                  </button>\n                </div>\n                {readonly && (\n                  <img\n                    className=\"comment__header__more\"\n                    src={moreImg}\n                    alt=\"more\"\n                    onClick={this.onClickMore}\n                  />\n                )}\n              </div>\n              <div\n                id={`comment__contents-${id}`}\n                className={`comment_contents comment__contents--readonly`}\n              >\n                {isDeleted\n                  ? formatMessage({ id: \"ID_SOCIAL_COMMENT_DELETED\" })\n                  : message}\n              </div>\n              \n              {/* ===== 답글쓰기 ============================== */}\n              {showNewReply && (\n                <div className=\"comment__newcomment\">\n                  <Comment\n                    intl={this.props.intl}\n                    user={this.props.user}\n                    newsId={this.props.newsId}\n                    parentCommentId={id}\n                    onAddNewReply={this.onAddNewReply}\n                  />\n                </div>\n              )}\n            </>\n          ) : (\n            <>\n              {/* ===== 수정 ============================== */}\n              <div className=\"comment__editor\">\n                {/* <input\n                  type=\"text\"\n                  value={message}\n                  id=\"news__input\"\n                  onChange={this.onChangeComment}\n                /> */}\n                {isLoginUser ? (\n                  <textarea\n                    value={message}\n                    id=\"news__input\"\n                    onChange={this.onChangeComment}\n                    placeholder=\"댓글을 작성해 주세요\"\n                  />\n                ) : (\n                  <textarea\n                    id=\"news__input\"\n                    placeholder=\"로그인 후 댓글을 쓰실 수 있습니다.\"\n                    readOnly\n                  />\n                )}\n                <div\n                  className=\"comment__editor__submit\"\n                  onClick={isLoginUser && this.onClickSubmit}\n                >\n                  <span>{formatMessage({ id: \"ID_NEWS_COMMENT_SUBMIT\" })}</span>\n                </div>\n              </div>\n            </>\n          )}\n          {/* ===== 대댓글 ============================== */}\n          {childComments && childComments.length > 0 && (\n            <div className=\"comment__childcomments\">\n              {childComments.map((childComment, index) => {\n                return (\n                  <Comment\n                    key={childComment.id}\n                    newsId={this.props.newsId}\n                    comment={childComment}\n                    intl={this.props.intl}\n                    user={this.props.user}\n                    onClickNewReply={this.onClickNewReply}\n                  />\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({ user: state.userinfo }))(\n  withRouter(injectIntl(Comment))\n);\n"]},"metadata":{},"sourceType":"module"}