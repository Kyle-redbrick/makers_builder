{"ast":null,"code":"import _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Preview/Component/WorldSize/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WORLD } from \"../../../../../../Common/Util/Constant\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\";\nimport \"./index.scss\";\n\nvar WorldSize =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorldSize, _Component);\n\n  function WorldSize(props) {\n    var _this;\n\n    _classCallCheck(this, WorldSize);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorldSize).call(this, props));\n\n    _this.onChangeWorldSize = function () {\n      var currentScene = _this.props.currentScene;\n\n      if (currentScene) {\n        var worldWidth = currentScene.worldWidth,\n            worldHeight = currentScene.worldHeight;\n\n        _this.setState({\n          worldWidth: worldWidth,\n          worldHeight: worldHeight\n        });\n      }\n    };\n\n    _this.onChangeCurrentScene = function () {\n      var currentScene = _this.props.currentScene;\n\n      if (currentScene) {\n        var worldWidth = currentScene.worldWidth,\n            worldHeight = currentScene.worldHeight;\n\n        _this.setState({\n          worldWidth: worldWidth,\n          worldHeight: worldHeight\n        });\n      }\n    };\n\n    _this.onChangeScreenMode = function () {\n      var _this$props = _this.props,\n          scenes = _this$props.scenes,\n          screenMode = _this$props.screenMode,\n          setWorldSize = _this$props.setWorldSize;\n      var isHorizontal = screenMode === \"HORIZONTAL\";\n      var worldWidth = isHorizontal ? WORLD.DEFAULT_WIDTH : WORLD.DEFAULT_HEIGHT;\n      var worldHeight = isHorizontal ? WORLD.DEFAULT_HEIGHT : WORLD.DEFAULT_WIDTH;\n\n      for (var sceneId in scenes) {\n        setWorldSize(sceneId, worldWidth, worldHeight);\n      }\n    };\n\n    _this.onChangeInput = function (e) {\n      var _e$currentTarget = e.currentTarget,\n          id = _e$currentTarget.id,\n          value = _e$currentTarget.value;\n\n      _this.setState(_defineProperty({}, id, value));\n    };\n\n    _this.onBlurInput = function (e) {\n      var _this$props2 = _this.props,\n          currentSceneId = _this$props2.currentSceneId,\n          setWorldSize = _this$props2.setWorldSize;\n      var _this$state = _this.state,\n          worldWidth = _this$state.worldWidth,\n          worldHeight = _this$state.worldHeight;\n      setWorldSize(currentSceneId, worldWidth, worldHeight);\n    };\n\n    _this.onKeyDown = function (e) {\n      if (e.key === \"Enter\") {\n        e.currentTarget.blur();\n      }\n    };\n\n    var _ref = props.currentScene || {},\n        _ref$worldWidth = _ref.worldWidth,\n        _worldWidth = _ref$worldWidth === void 0 ? WORLD.DEFAULT_WIDTH : _ref$worldWidth,\n        _ref$worldHeight = _ref.worldHeight,\n        _worldHeight = _ref$worldHeight === void 0 ? WORLD.DEFAULT_HEIGHT : _ref$worldHeight;\n\n    _this.enabled = [\"het@wizschool.io\", \"chris@wizschool.io\"].includes(props.email);\n    _this.state = {\n      worldWidth: _worldWidth,\n      worldHeight: _worldHeight\n    };\n    return _this;\n  }\n\n  _createClass(WorldSize, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onChangeScreenMode();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.currentSceneId === this.props.currentSceneId) {\n        if (prevProps.currentScene.worldWidth !== this.props.currentScene.worldWidth || prevProps.currentScene.worldHeight !== this.props.currentScene.worldHeight) {\n          this.onChangeWorldSize();\n        }\n      } else {\n        this.onChangeCurrentScene();\n      }\n\n      if (prevProps.screenMode !== this.props.screenMode) {\n        this.onChangeScreenMode();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          worldWidth = _this$state2.worldWidth,\n          worldHeight = _this$state2.worldHeight;\n\n      if (this.enabled) {\n        return React.createElement(\"div\", {\n          className: \"preview_worldSize\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"preview_worldSize_size preview_worldSize_size-width\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"W\", React.createElement(\"input\", {\n          id: \"worldWidth\",\n          type: \"number\",\n          value: worldWidth,\n          onChange: this.onChangeInput,\n          onBlur: this.onBlurInput,\n          onKeyDown: this.onKeyDown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"preview_worldSize_size preview_worldSize_size-height\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"H\", React.createElement(\"input\", {\n          id: \"worldHeight\",\n          type: \"number\",\n          value: worldHeight,\n          onChange: this.onChangeInput,\n          onBlur: this.onBlurInput,\n          onKeyDown: this.onKeyDown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(React.Fragment, null);\n      }\n    }\n  }]);\n\n  return WorldSize;\n}(Component);\n\nexport default connect(function (state) {\n  var scenes = state.scene.scenes;\n  var currentSceneId = state.interaction.selected.scene;\n  var currentScene = scenes[currentSceneId];\n  var screenMode = state.preview.screenMode;\n  var email = state.userinfo.email;\n  return {\n    scenes: scenes,\n    currentSceneId: currentSceneId,\n    currentScene: currentScene,\n    screenMode: screenMode,\n    email: email\n  };\n}, {\n  setWorldSize: sceneActions.setWorldSize\n})(WorldSize);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Preview/Component/WorldSize/index.js"],"names":["React","Component","connect","WORLD","sceneActions","WorldSize","props","onChangeWorldSize","currentScene","worldWidth","worldHeight","setState","onChangeCurrentScene","onChangeScreenMode","scenes","screenMode","setWorldSize","isHorizontal","DEFAULT_WIDTH","DEFAULT_HEIGHT","sceneId","onChangeInput","e","currentTarget","id","value","onBlurInput","currentSceneId","state","onKeyDown","key","blur","enabled","includes","email","prevProps","scene","interaction","selected","preview","userinfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { WORLD } from \"../../../../../../Common/Util/Constant\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\";\nimport \"./index.scss\";\n\nclass WorldSize extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      worldWidth = WORLD.DEFAULT_WIDTH,\n      worldHeight = WORLD.DEFAULT_HEIGHT\n    } = props.currentScene || {};\n    this.enabled = [\"het@wizschool.io\", \"chris@wizschool.io\"].includes(\n      props.email\n    );\n    this.state = { worldWidth, worldHeight };\n  }\n  componentDidMount() {\n    this.onChangeScreenMode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentSceneId === this.props.currentSceneId) {\n      if (\n        prevProps.currentScene.worldWidth !==\n          this.props.currentScene.worldWidth ||\n        prevProps.currentScene.worldHeight !==\n          this.props.currentScene.worldHeight\n      ) {\n        this.onChangeWorldSize();\n      }\n    } else {\n      this.onChangeCurrentScene();\n    }\n    if (prevProps.screenMode !== this.props.screenMode) {\n      this.onChangeScreenMode();\n    }\n  }\n  onChangeWorldSize = () => {\n    const { currentScene } = this.props;\n    if (currentScene) {\n      const { worldWidth, worldHeight } = currentScene;\n      this.setState({ worldWidth, worldHeight });\n    }\n  };\n  onChangeCurrentScene = () => {\n    const { currentScene } = this.props;\n    if (currentScene) {\n      const { worldWidth, worldHeight } = currentScene;\n      this.setState({ worldWidth, worldHeight });\n    }\n  };\n  onChangeScreenMode = () => {\n    const { scenes, screenMode, setWorldSize } = this.props;\n    const isHorizontal = screenMode === \"HORIZONTAL\";\n    const worldWidth = isHorizontal\n      ? WORLD.DEFAULT_WIDTH\n      : WORLD.DEFAULT_HEIGHT;\n    const worldHeight = isHorizontal\n      ? WORLD.DEFAULT_HEIGHT\n      : WORLD.DEFAULT_WIDTH;\n    for (let sceneId in scenes) {\n      setWorldSize(sceneId, worldWidth, worldHeight);\n    }\n  };\n\n  onChangeInput = e => {\n    const { id, value } = e.currentTarget;\n    this.setState({ [id]: value });\n  };\n  onBlurInput = e => {\n    const { currentSceneId, setWorldSize } = this.props;\n    const { worldWidth, worldHeight } = this.state;\n    setWorldSize(currentSceneId, worldWidth, worldHeight);\n  };\n  onKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.currentTarget.blur();\n    }\n  };\n\n  render() {\n    const { worldWidth, worldHeight } = this.state;\n    if (this.enabled) {\n      return (\n        <div className=\"preview_worldSize\">\n          <div className=\"preview_worldSize_size preview_worldSize_size-width\">\n            W\n            <input\n              id=\"worldWidth\"\n              type=\"number\"\n              value={worldWidth}\n              onChange={this.onChangeInput}\n              onBlur={this.onBlurInput}\n              onKeyDown={this.onKeyDown}\n            />\n          </div>\n          <div className=\"preview_worldSize_size preview_worldSize_size-height\">\n            H\n            <input\n              id=\"worldHeight\"\n              type=\"number\"\n              value={worldHeight}\n              onChange={this.onChangeInput}\n              onBlur={this.onBlurInput}\n              onKeyDown={this.onKeyDown}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n\nexport default connect(\n  state => {\n    const { scenes } = state.scene;\n    const currentSceneId = state.interaction.selected.scene;\n    const currentScene = scenes[currentSceneId];\n    const { screenMode } = state.preview;\n    const email = state.userinfo.email;\n    return { scenes, currentSceneId, currentScene, screenMode, email };\n  },\n  { setWorldSize: sceneActions.setWorldSize }\n)(WorldSize);\n"]},"metadata":{},"sourceType":"module"}