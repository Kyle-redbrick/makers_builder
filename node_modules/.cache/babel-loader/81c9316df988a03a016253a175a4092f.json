{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/astroboy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { fabric } from \"fabric\";\n\nvar DrawingCanvas = /*#__PURE__*/function () {\n  function DrawingCanvas(canvasId, historyStatusChanged, onChanged) {\n    var _this = this;\n\n    _classCallCheck(this, DrawingCanvas);\n\n    this.selectedColor = \"rgba(0,0,0,1)\";\n    this.selectedTool = \"pen\";\n    this.brushWidth = 10;\n    this.canvas = undefined;\n    this.history = [];\n    this.historyIndex = -1;\n    this.historyStatusChanged = undefined;\n    this.onChanged = undefined;\n\n    this.onUpdated = function () {\n      var json = _this.canvas.toJSON();\n\n      while (_this.history.length !== _this.historyIndex + 1) {\n        _this.history.pop();\n      }\n\n      _this.history.push(json);\n\n      _this.historyIndex++;\n\n      if (_this.historyStatusChanged) {\n        _this.historyStatusChanged(_this.canUndo(), _this.canRedo());\n      }\n\n      if (_this.onChanged) {\n        _this.toBlob(_this.onChanged);\n      }\n    };\n\n    this.onTextChanged = function () {\n      if (_this.onChanged) {\n        _this.toBlob(_this.onChanged);\n      }\n    };\n\n    this.setCanvasSize = function (width, height) {\n      _this.canvas.setWidth(width);\n\n      _this.canvas.setHeight(height);\n    };\n\n    this.setColor = function (color) {\n      _this.selectedColor = color;\n      _this.canvas.freeDrawingBrush.color = _this.selectedColor;\n\n      if (_this.getActiveObject()) {\n        if (_this.getActiveObject().stroke) {\n          _this.getActiveObject().set({\n            stroke: color\n          });\n        } else {\n          _this.getActiveObject().set({\n            fill: color\n          });\n        }\n\n        _this.canvas.renderAll();\n\n        _this.onUpdated();\n      }\n    };\n\n    this.setBrushWidth = function (width) {\n      _this.canvas.freeDrawingBrush.width = width;\n    };\n\n    this.clearAll = function () {\n      _this.canvas.clear();\n\n      _this.onUpdated();\n    };\n\n    this.getCoords = function (obj) {\n      var _obj$oCoords = obj.oCoords,\n          tl = _obj$oCoords.tl,\n          tr = _obj$oCoords.tr,\n          bl = _obj$oCoords.bl,\n          br = _obj$oCoords.br;\n      return {\n        tl: tl,\n        tr: tr,\n        bl: bl,\n        br: br\n      };\n    };\n\n    this.toBlob = function (callback) {\n      var objs = _this.canvas.getObjects();\n\n      if (objs.length < 1) {\n        return undefined;\n      }\n\n      var coords = _this.getCoords(objs[0]);\n\n      for (var i = 1; i < objs.length; i++) {\n        var _this$getCoords = _this.getCoords(objs[i]),\n            tl = _this$getCoords.tl,\n            tr = _this$getCoords.tr,\n            br = _this$getCoords.br,\n            bl = _this$getCoords.bl;\n\n        if (coords.tl.x > tl.x) {\n          coords.tl.x = tl.x;\n        }\n\n        if (coords.tl.y > tl.y) {\n          coords.tl.y = tl.y;\n        }\n\n        if (coords.tr.x < tr.x) {\n          coords.tr.x = tr.x;\n        }\n\n        if (coords.tr.y > tr.y) {\n          coords.tr.y = tr.y;\n        }\n\n        if (coords.bl.x > bl.x) {\n          coords.bl.x = bl.x;\n        }\n\n        if (coords.bl.y < bl.y) {\n          coords.bl.y = bl.y;\n        }\n\n        if (coords.br.x < br.x) {\n          coords.br.x = br.x;\n        }\n\n        if (coords.br.y < br.y) {\n          coords.br.y = br.y;\n        }\n      } //cropping\n      // const cw = this.canvas.width;\n      // const ch = this.canvas.height;\n      // coords.tl.x = coords.tl.x < 0 ? 0 : coords.tl.x;\n      // coords.tl.y = coords.tl.y < 0 ? 0 : coords.tl.y;\n      // coords.tr.x = coords.tr.x > cw ? cw : coords.tr.x;\n      // coords.tr.y = coords.tr.y < 0 ? 0 : coords.tr.y;\n      // coords.bl.x = coords.bl.x < 0 ? 0 : coords.bl.x;\n      // coords.bl.y = coords.bl.y > ch ? ch : coords.bl.y;\n      // coords.br.x = coords.br.x > cw ? cw : coords.br.x;\n      // coords.br.y = coords.br.y > ch ? ch : coords.br.y;\n\n\n      var width = coords.tr.x - coords.tl.x;\n      var height = coords.bl.y - coords.tl.y;\n      var startX = coords.tl.x;\n      var startY = coords.tl.y;\n\n      var screenshotData = _this.canvas.toDataURL({\n        format: \"png\",\n        left: startX,\n        top: startY,\n        width: width,\n        height: height\n      });\n\n      var byteString;\n\n      if (screenshotData.split(\",\")[0].indexOf(\"base64\") >= 0) {\n        byteString = atob(screenshotData.split(\",\")[1]);\n      } else {\n        byteString = unescape(screenshotData.split(\",\")[1]);\n      } // separate out the mime component\n\n\n      var mimeString = screenshotData.split(\",\")[0].split(\":\")[1].split(\";\")[0]; // write the bytes of the string to a typed array\n\n      var ia = new Uint8Array(byteString.length);\n\n      for (var _i = 0; _i < byteString.length; _i++) {\n        ia[_i] = byteString.charCodeAt(_i);\n      }\n\n      var blob = new Blob([ia], {\n        type: mimeString\n      });\n      var blobUrl = URL.createObjectURL(blob);\n      callback(blobUrl, blob);\n    };\n\n    this.addImageFromURL = function (url) {\n      fabric.Image.fromURL(url, function (img) {\n        _this.canvas.add(img);\n\n        _this.canvas.renderAll();\n\n        _this.selectTool(\"select\");\n\n        _this.onUpdated();\n      }, {\n        crossOrigin: \"anonymous\"\n      });\n    };\n\n    this.onMouseDown = function (e) {\n      if (_this.selectedTool === \"rectangle\" || _this.selectedTool === \"circle\" || _this.selectedTool === \"triangle\" || _this.selectedTool === \"line\") {\n        _this.canvas.isMouseDown = true;\n\n        var pointer = _this.canvas.getPointer(e.e);\n\n        _this.canvas.mousDownX = pointer.x;\n        _this.canvas.mousDownY = pointer.y;\n        var className;\n\n        switch (_this.selectedTool) {\n          case \"rectangle\":\n            className = \"Rect\";\n            break;\n\n          case \"circle\":\n            className = \"Ellipse\";\n            break;\n\n          case \"triangle\":\n            className = \"Triangle\";\n            break;\n\n          default:\n            break;\n        }\n\n        var _obj;\n\n        if (_this.selectedTool === \"line\") {\n          var coords = [pointer.x, pointer.y, pointer.x, pointer.y];\n          _obj = new fabric.Line(coords, {\n            originX: \"left\",\n            originY: \"top\",\n            selectable: false,\n            stroke: _this.selectedColor,\n            strokeWidth: _this.brushWidth,\n            fill: _this.selectedColor\n          });\n        } else {\n          _obj = new fabric[className]({\n            left: _this.canvas.mousDownX,\n            top: _this.canvas.mousDownY,\n            originX: \"left\",\n            originY: \"top\",\n            width: 0,\n            height: 0,\n            selectable: false,\n            fill: _this.selectedColor\n          });\n        }\n\n        _this.canvas.add(_obj);\n\n        _this.canvas.renderAll();\n      } else if (_this.selectedTool === \"text\") {\n        var _pointer = _this.canvas.getPointer(e.e);\n\n        var obj = new fabric.IText(\"\", {\n          left: _pointer.x,\n          top: _pointer.y,\n          originX: \"left\",\n          originY: \"top\",\n          fontFamily: \"Arial\",\n          fontSize: 28,\n          fontWeight: \"normal\",\n          fontStyle: \"normal\",\n          fill: _this.selectedColor\n        });\n\n        _this.canvas.add(obj);\n\n        _this.canvas.renderAll();\n\n        obj.enterEditing();\n\n        _this.canvas.setActiveObject(obj);\n\n        _this.selectTool(\"select\");\n      }\n    };\n\n    this.onMouseUp = function (e) {\n      if (_this.selectedTool === \"rectangle\" || _this.selectedTool === \"circle\" || _this.selectedTool === \"triangle\" || _this.selectedTool === \"line\") {\n        _this.canvas.isMouseDown = false;\n\n        var lastObj = _this.canvas.getObjects()[_this.canvas.getObjects().length - 1];\n\n        lastObj.setCoords();\n\n        _this.canvas.renderAll();\n\n        _this.onUpdated();\n      } else if (_this.selectedTool === \"pen\" || _this.selectedTool === \"brush_circle\" || _this.selectedTool === \"brush_spray\") {\n        _this.canvas.renderAll();\n\n        _this.onUpdated();\n      }\n    };\n\n    this.onMouseMove = function (e) {\n      if (_this.selectedTool === \"rectangle\" || _this.selectedTool === \"circle\" || _this.selectedTool === \"triangle\" || _this.selectedTool === \"line\") {\n        if (!_this.canvas.isMouseDown) return;\n\n        var obj = _this.canvas.getObjects()[_this.canvas.getObjects().length - 1];\n\n        var pointer = _this.canvas.getPointer(e.e);\n\n        if (_this.canvas.mousDownX > pointer.x) {\n          obj.set({\n            left: Math.abs(pointer.x)\n          });\n        }\n\n        if (_this.canvas.mousDownY > pointer.y) {\n          obj.set({\n            top: Math.abs(pointer.y)\n          });\n        }\n\n        if (_this.selectedTool === \"circle\") {\n          obj.set({\n            rx: Math.abs(_this.canvas.mousDownX - pointer.x) / 2\n          });\n          obj.set({\n            ry: Math.abs(_this.canvas.mousDownY - pointer.y) / 2\n          });\n        } else if (_this.selectedTool === \"line\") {\n          obj.set({\n            x2: pointer.x,\n            y2: pointer.y\n          });\n        } else {\n          obj.set({\n            width: Math.abs(_this.canvas.mousDownX - pointer.x)\n          });\n          obj.set({\n            height: Math.abs(_this.canvas.mousDownY - pointer.y)\n          });\n        }\n\n        _this.canvas.renderAll();\n      }\n    };\n\n    this.getActiveObject = function () {\n      return _this.canvas.getActiveObject();\n    };\n\n    this.getObjects = function () {\n      return _this.canvas.getObjects();\n    };\n\n    this.canUndo = function () {\n      return _this.historyIndex > 0;\n    };\n\n    this.canRedo = function () {\n      return _this.historyIndex < _this.history.length - 1;\n    };\n\n    this.undo = function () {\n      if (_this.historyIndex > 0) {\n        _this.historyIndex--;\n        var json = _this.history[_this.historyIndex];\n\n        _this.canvas.loadFromJSON(json);\n\n        _this.canvas.renderAll();\n\n        if (_this.historyStatusChanged) {\n          _this.historyStatusChanged(_this.canUndo(), _this.canRedo());\n        }\n\n        if (_this.onChanged) {\n          _this.toBlob(_this.onChanged);\n        }\n      }\n    };\n\n    this.redo = function () {\n      if (_this.historyIndex < _this.history.length - 1) {\n        _this.historyIndex++;\n        var json = _this.history[_this.historyIndex];\n\n        _this.canvas.loadFromJSON(json);\n\n        _this.canvas.renderAll();\n\n        if (_this.historyStatusChanged) {\n          _this.historyStatusChanged(_this.canUndo(), _this.canRedo());\n        }\n\n        if (_this.onChanged) {\n          _this.toBlob(_this.onChanged);\n        }\n      }\n    };\n\n    this.delete = function () {\n      if (_this.getActiveObject()) {\n        _this.canvas.remove(_this.getActiveObject());\n\n        _this.canvas.renderAll();\n\n        _this.onUpdated();\n      }\n    };\n\n    this.forward = function () {\n      if (_this.getActiveObject()) {\n        _this.canvas.bringForward(_this.getActiveObject());\n\n        _this.onUpdated();\n      }\n    };\n\n    this.backward = function () {\n      if (_this.getActiveObject()) {\n        _this.canvas.sendBackwards(_this.getActiveObject());\n\n        _this.onUpdated();\n      }\n    };\n\n    this.front = function () {\n      var obj = _this.getActiveObject();\n\n      if (obj) {\n        while (_this.getObjects().indexOf(obj) < _this.getObjects().length - 1) {\n          _this.forward();\n        }\n\n        _this.onUpdated();\n      }\n    };\n\n    this.back = function () {\n      var obj = _this.getActiveObject();\n\n      if (obj) {\n        while (_this.getObjects().indexOf(obj) > 0) {\n          _this.backward();\n        }\n\n        _this.onUpdated();\n      }\n    };\n\n    this.paste = function () {\n      if (_this.getActiveObject()) {\n        _this.getActiveObject().clone(function (cloned) {\n          _this.canvas.discardActiveObject();\n\n          cloned.set({\n            left: cloned.left + 10,\n            top: cloned.top + 10\n          });\n\n          _this.canvas.add(cloned);\n\n          _this.canvas.setActiveObject(cloned);\n\n          _this.onUpdated();\n        });\n      }\n    };\n\n    this.setSelectionMode = function (enabled) {\n      var objs = _this.canvas.getObjects();\n\n      for (var i = 0; i < objs.length; i++) {\n        objs[i].selectable = enabled;\n      }\n    };\n\n    this.selectTool = function (tool) {\n      _this.canvas.isDrawingMode = false;\n\n      _this.setSelectionMode(false);\n\n      switch (tool) {\n        case \"select\":\n          _this.setSelectionMode(true);\n\n          break;\n\n        case \"pen\":\n          _this.canvas.isDrawingMode = true;\n          _this.canvas.freeDrawingBrush = new fabric[\"PencilBrush\"](_this.canvas);\n          _this.canvas.freeDrawingBrush.color = _this.selectedColor;\n          _this.canvas.freeDrawingBrush.width = _this.brushWidth;\n          break;\n\n        case \"brush_circle\":\n          _this.canvas.isDrawingMode = true;\n          _this.canvas.freeDrawingBrush = new fabric[\"CircleBrush\"](_this.canvas);\n          _this.canvas.freeDrawingBrush.color = _this.selectedColor;\n          _this.canvas.freeDrawingBrush.width = _this.brushWidth;\n          break;\n\n        case \"brush_spray\":\n          _this.canvas.isDrawingMode = true;\n          _this.canvas.freeDrawingBrush = new fabric[\"SprayBrush\"](_this.canvas);\n          _this.canvas.freeDrawingBrush.color = _this.selectedColor;\n          _this.canvas.freeDrawingBrush.width = _this.brushWidth;\n          break;\n\n        case \"rectangle\":\n        case \"triangle\":\n        case \"circle\":\n        case \"line\":\n        case \"text\":\n          break;\n\n        default:\n          break;\n      }\n\n      _this.selectedTool = tool;\n    };\n\n    this.historyStatusChanged = historyStatusChanged;\n    this.onChanged = onChanged;\n    this.initFabric(canvasId);\n  }\n\n  _createClass(DrawingCanvas, [{\n    key: \"initFabric\",\n    value: function initFabric(canvasId) {\n      this.canvas = new fabric.Canvas(canvasId);\n      this.canvas.isDrawingMode = true;\n      this.canvas.selection = false;\n      this.canvas.preserveObjectStacking = true;\n      this.canvas.freeDrawingBrush.color = this.selectedColor;\n      this.canvas.freeDrawingBrush.width = this.brushWidth;\n      this.canvas.on(\"mouse:down\", this.onMouseDown);\n      this.canvas.on(\"mouse:up\", this.onMouseUp);\n      this.canvas.on(\"mouse:move\", this.onMouseMove);\n      this.canvas.on(\"object:modified\", this.onUpdated);\n      this.canvas.on(\"text:changed\", this.onTextChanged);\n      this.onUpdated();\n    }\n  }]);\n\n  return DrawingCanvas;\n}();\n\nexport { DrawingCanvas as default };","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder/Component/SpriteBox/Component/DrawingEditor/DrawingCanvas.js"],"names":["fabric","DrawingCanvas","canvasId","historyStatusChanged","onChanged","selectedColor","selectedTool","brushWidth","canvas","undefined","history","historyIndex","onUpdated","json","toJSON","length","pop","push","canUndo","canRedo","toBlob","onTextChanged","setCanvasSize","width","height","setWidth","setHeight","setColor","color","freeDrawingBrush","getActiveObject","stroke","set","fill","renderAll","setBrushWidth","clearAll","clear","getCoords","obj","oCoords","tl","tr","bl","br","callback","objs","getObjects","coords","i","x","y","startX","startY","screenshotData","toDataURL","format","left","top","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","charCodeAt","blob","Blob","type","blobUrl","URL","createObjectURL","addImageFromURL","url","Image","fromURL","img","add","selectTool","crossOrigin","onMouseDown","e","isMouseDown","pointer","getPointer","mousDownX","mousDownY","className","Line","originX","originY","selectable","strokeWidth","IText","fontFamily","fontSize","fontWeight","fontStyle","enterEditing","setActiveObject","onMouseUp","lastObj","setCoords","onMouseMove","Math","abs","rx","ry","x2","y2","undo","loadFromJSON","redo","delete","remove","forward","bringForward","backward","sendBackwards","front","back","paste","clone","cloned","discardActiveObject","setSelectionMode","enabled","tool","isDrawingMode","initFabric","Canvas","selection","preserveObjectStacking","on"],"mappings":"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","sourcesContent":["import { fabric } from \"fabric\";\n\nexport default class DrawingCanvas {\n  selectedColor = \"rgba(0,0,0,1)\";\n  selectedTool = \"pen\";\n  brushWidth = 10;\n  canvas = undefined;\n  history = [];\n  historyIndex = -1;\n  historyStatusChanged = undefined;\n  onChanged = undefined;\n\n  constructor(canvasId, historyStatusChanged, onChanged) {\n    this.historyStatusChanged = historyStatusChanged;\n    this.onChanged = onChanged;\n    this.initFabric(canvasId);\n  }\n\n  initFabric(canvasId) {\n    this.canvas = new fabric.Canvas(canvasId);\n    this.canvas.isDrawingMode = true;\n    this.canvas.selection = false;\n    this.canvas.preserveObjectStacking = true;\n    this.canvas.freeDrawingBrush.color = this.selectedColor;\n    this.canvas.freeDrawingBrush.width = this.brushWidth;\n    this.canvas.on(\"mouse:down\", this.onMouseDown);\n    this.canvas.on(\"mouse:up\", this.onMouseUp);\n    this.canvas.on(\"mouse:move\", this.onMouseMove);\n    this.canvas.on(\"object:modified\", this.onUpdated);\n    this.canvas.on(\"text:changed\", this.onTextChanged);\n    this.onUpdated();\n  }\n\n  onUpdated = () => {\n    const json = this.canvas.toJSON();\n    while (this.history.length !== this.historyIndex + 1) {\n      this.history.pop();\n    }\n    this.history.push(json);\n    this.historyIndex++;\n    if (this.historyStatusChanged) {\n      this.historyStatusChanged(this.canUndo(), this.canRedo());\n    }\n\n    if (this.onChanged) {\n      this.toBlob(this.onChanged);\n    }\n  };\n\n  onTextChanged = () => {\n    if (this.onChanged) {\n      this.toBlob(this.onChanged);\n    }\n  };\n\n  setCanvasSize = (width, height) => {\n    this.canvas.setWidth(width);\n    this.canvas.setHeight(height);\n  };\n\n  setColor = color => {\n    this.selectedColor = color;\n    this.canvas.freeDrawingBrush.color = this.selectedColor;\n    if (this.getActiveObject()) {\n      if (this.getActiveObject().stroke) {\n        this.getActiveObject().set({ stroke: color });\n      } else {\n        this.getActiveObject().set({ fill: color });\n      }\n      this.canvas.renderAll();\n      this.onUpdated();\n    }\n  };\n\n  setBrushWidth = width => {\n    this.canvas.freeDrawingBrush.width = width;\n  };\n\n  clearAll = () => {\n    this.canvas.clear();\n    this.onUpdated();\n  };\n\n  getCoords = obj => {\n    const { tl, tr, bl, br } = obj.oCoords;\n    return { tl, tr, bl, br };\n  };\n\n  toBlob = callback => {\n    const objs = this.canvas.getObjects();\n    if (objs.length < 1) {\n      return undefined;\n    }\n\n    let coords = this.getCoords(objs[0]);\n\n    for (let i = 1; i < objs.length; i++) {\n      const { tl, tr, br, bl } = this.getCoords(objs[i]);\n      if (coords.tl.x > tl.x) {\n        coords.tl.x = tl.x;\n      }\n      if (coords.tl.y > tl.y) {\n        coords.tl.y = tl.y;\n      }\n      if (coords.tr.x < tr.x) {\n        coords.tr.x = tr.x;\n      }\n      if (coords.tr.y > tr.y) {\n        coords.tr.y = tr.y;\n      }\n      if (coords.bl.x > bl.x) {\n        coords.bl.x = bl.x;\n      }\n      if (coords.bl.y < bl.y) {\n        coords.bl.y = bl.y;\n      }\n      if (coords.br.x < br.x) {\n        coords.br.x = br.x;\n      }\n      if (coords.br.y < br.y) {\n        coords.br.y = br.y;\n      }\n    }\n\n    //cropping\n    // const cw = this.canvas.width;\n    // const ch = this.canvas.height;\n    // coords.tl.x = coords.tl.x < 0 ? 0 : coords.tl.x;\n    // coords.tl.y = coords.tl.y < 0 ? 0 : coords.tl.y;\n    // coords.tr.x = coords.tr.x > cw ? cw : coords.tr.x;\n    // coords.tr.y = coords.tr.y < 0 ? 0 : coords.tr.y;\n    // coords.bl.x = coords.bl.x < 0 ? 0 : coords.bl.x;\n    // coords.bl.y = coords.bl.y > ch ? ch : coords.bl.y;\n    // coords.br.x = coords.br.x > cw ? cw : coords.br.x;\n    // coords.br.y = coords.br.y > ch ? ch : coords.br.y;\n\n    let width = coords.tr.x - coords.tl.x;\n    let height = coords.bl.y - coords.tl.y;\n    let startX = coords.tl.x;\n    let startY = coords.tl.y;\n\n    let screenshotData = this.canvas.toDataURL({\n      format: \"png\",\n      left: startX,\n      top: startY,\n      width: width,\n      height: height\n    });\n\n    let byteString;\n    if (screenshotData.split(\",\")[0].indexOf(\"base64\") >= 0) {\n      byteString = atob(screenshotData.split(\",\")[1]);\n    } else {\n      byteString = unescape(screenshotData.split(\",\")[1]);\n    }\n    // separate out the mime component\n    const mimeString = screenshotData\n      .split(\",\")[0]\n      .split(\":\")[1]\n      .split(\";\")[0];\n    // write the bytes of the string to a typed array\n    let ia = new Uint8Array(byteString.length);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    const blob = new Blob([ia], { type: mimeString });\n    const blobUrl = URL.createObjectURL(blob);\n    callback(blobUrl, blob);\n  };\n\n  addImageFromURL = url => {\n    fabric.Image.fromURL(\n      url,\n      img => {\n        this.canvas.add(img);\n        this.canvas.renderAll();\n        this.selectTool(\"select\");\n        this.onUpdated();\n      },\n      { crossOrigin: \"anonymous\" }\n    );\n  };\n\n  onMouseDown = e => {\n    if (\n      this.selectedTool === \"rectangle\" ||\n      this.selectedTool === \"circle\" ||\n      this.selectedTool === \"triangle\" ||\n      this.selectedTool === \"line\"\n    ) {\n      this.canvas.isMouseDown = true;\n      const pointer = this.canvas.getPointer(e.e);\n      this.canvas.mousDownX = pointer.x;\n      this.canvas.mousDownY = pointer.y;\n      let className;\n      switch (this.selectedTool) {\n        case \"rectangle\":\n          className = \"Rect\";\n          break;\n        case \"circle\":\n          className = \"Ellipse\";\n          break;\n        case \"triangle\":\n          className = \"Triangle\";\n          break;\n        default:\n          break;\n      }\n      let obj;\n      if (this.selectedTool === \"line\") {\n        const coords = [pointer.x, pointer.y, pointer.x, pointer.y];\n        obj = new fabric.Line(coords, {\n          originX: \"left\",\n          originY: \"top\",\n          selectable: false,\n          stroke: this.selectedColor,\n          strokeWidth: this.brushWidth,\n          fill: this.selectedColor\n        });\n      } else {\n        obj = new fabric[className]({\n          left: this.canvas.mousDownX,\n          top: this.canvas.mousDownY,\n          originX: \"left\",\n          originY: \"top\",\n          width: 0,\n          height: 0,\n          selectable: false,\n          fill: this.selectedColor\n        });\n      }\n\n      this.canvas.add(obj);\n      this.canvas.renderAll();\n    } else if (this.selectedTool === \"text\") {\n      const pointer = this.canvas.getPointer(e.e);\n      var obj = new fabric.IText(\"\", {\n        left: pointer.x,\n        top: pointer.y,\n        originX: \"left\",\n        originY: \"top\",\n        fontFamily: \"Arial\",\n        fontSize: 28,\n        fontWeight: \"normal\",\n        fontStyle: \"normal\",\n        fill: this.selectedColor\n      });\n      this.canvas.add(obj);\n      this.canvas.renderAll();\n      obj.enterEditing();\n      this.canvas.setActiveObject(obj);\n      this.selectTool(\"select\");\n    }\n  };\n\n  onMouseUp = e => {\n    if (\n      this.selectedTool === \"rectangle\" ||\n      this.selectedTool === \"circle\" ||\n      this.selectedTool === \"triangle\" ||\n      this.selectedTool === \"line\"\n    ) {\n      this.canvas.isMouseDown = false;\n      const lastObj = this.canvas.getObjects()[\n        this.canvas.getObjects().length - 1\n      ];\n      lastObj.setCoords();\n      this.canvas.renderAll();\n      this.onUpdated();\n    } else if (\n      this.selectedTool === \"pen\" ||\n      this.selectedTool === \"brush_circle\" ||\n      this.selectedTool === \"brush_spray\"\n    ) {\n      this.canvas.renderAll();\n      this.onUpdated();\n    }\n  };\n\n  onMouseMove = e => {\n    if (\n      this.selectedTool === \"rectangle\" ||\n      this.selectedTool === \"circle\" ||\n      this.selectedTool === \"triangle\" ||\n      this.selectedTool === \"line\"\n    ) {\n      if (!this.canvas.isMouseDown) return;\n      const obj = this.canvas.getObjects()[this.canvas.getObjects().length - 1];\n      let pointer = this.canvas.getPointer(e.e);\n\n      if (this.canvas.mousDownX > pointer.x) {\n        obj.set({ left: Math.abs(pointer.x) });\n      }\n      if (this.canvas.mousDownY > pointer.y) {\n        obj.set({ top: Math.abs(pointer.y) });\n      }\n\n      if (this.selectedTool === \"circle\") {\n        obj.set({ rx: Math.abs(this.canvas.mousDownX - pointer.x) / 2 });\n        obj.set({ ry: Math.abs(this.canvas.mousDownY - pointer.y) / 2 });\n      } else if (this.selectedTool === \"line\") {\n        obj.set({ x2: pointer.x, y2: pointer.y });\n      } else {\n        obj.set({ width: Math.abs(this.canvas.mousDownX - pointer.x) });\n        obj.set({ height: Math.abs(this.canvas.mousDownY - pointer.y) });\n      }\n\n      this.canvas.renderAll();\n    }\n  };\n\n  getActiveObject = () => {\n    return this.canvas.getActiveObject();\n  };\n\n  getObjects = () => {\n    return this.canvas.getObjects();\n  };\n\n  canUndo = () => {\n    return this.historyIndex > 0;\n  };\n\n  canRedo = () => {\n    return this.historyIndex < this.history.length - 1;\n  };\n\n  undo = () => {\n    if (this.historyIndex > 0) {\n      this.historyIndex--;\n      const json = this.history[this.historyIndex];\n      this.canvas.loadFromJSON(json);\n      this.canvas.renderAll();\n      if (this.historyStatusChanged) {\n        this.historyStatusChanged(this.canUndo(), this.canRedo());\n      }\n      if (this.onChanged) {\n        this.toBlob(this.onChanged);\n      }\n    }\n  };\n\n  redo = () => {\n    if (this.historyIndex < this.history.length - 1) {\n      this.historyIndex++;\n      const json = this.history[this.historyIndex];\n      this.canvas.loadFromJSON(json);\n      this.canvas.renderAll();\n      if (this.historyStatusChanged) {\n        this.historyStatusChanged(this.canUndo(), this.canRedo());\n      }\n      if (this.onChanged) {\n        this.toBlob(this.onChanged);\n      }\n    }\n  };\n\n  delete = () => {\n    if (this.getActiveObject()) {\n      this.canvas.remove(this.getActiveObject());\n      this.canvas.renderAll();\n      this.onUpdated();\n    }\n  };\n\n  forward = () => {\n    if (this.getActiveObject()) {\n      this.canvas.bringForward(this.getActiveObject());\n      this.onUpdated();\n    }\n  };\n\n  backward = () => {\n    if (this.getActiveObject()) {\n      this.canvas.sendBackwards(this.getActiveObject());\n      this.onUpdated();\n    }\n  };\n\n  front = () => {\n    const obj = this.getActiveObject();\n    if (obj) {\n      while (this.getObjects().indexOf(obj) < this.getObjects().length - 1) {\n        this.forward();\n      }\n      this.onUpdated();\n    }\n  };\n\n  back = () => {\n    const obj = this.getActiveObject();\n    if (obj) {\n      while (this.getObjects().indexOf(obj) > 0) {\n        this.backward();\n      }\n      this.onUpdated();\n    }\n  };\n\n  paste = () => {\n    if (this.getActiveObject()) {\n      this.getActiveObject().clone(cloned => {\n        this.canvas.discardActiveObject();\n        cloned.set({\n          left: cloned.left + 10,\n          top: cloned.top + 10\n        });\n        this.canvas.add(cloned);\n        this.canvas.setActiveObject(cloned);\n        this.onUpdated();\n      });\n    }\n  };\n\n  setSelectionMode = enabled => {\n    const objs = this.canvas.getObjects();\n    for (let i = 0; i < objs.length; i++) {\n      objs[i].selectable = enabled;\n    }\n  };\n\n  selectTool = tool => {\n    this.canvas.isDrawingMode = false;\n    this.setSelectionMode(false);\n    switch (tool) {\n      case \"select\":\n        this.setSelectionMode(true);\n        break;\n      case \"pen\":\n        this.canvas.isDrawingMode = true;\n        this.canvas.freeDrawingBrush = new fabric[\"PencilBrush\"](this.canvas);\n        this.canvas.freeDrawingBrush.color = this.selectedColor;\n        this.canvas.freeDrawingBrush.width = this.brushWidth;\n        break;\n      case \"brush_circle\":\n        this.canvas.isDrawingMode = true;\n        this.canvas.freeDrawingBrush = new fabric[\"CircleBrush\"](this.canvas);\n        this.canvas.freeDrawingBrush.color = this.selectedColor;\n        this.canvas.freeDrawingBrush.width = this.brushWidth;\n        break;\n      case \"brush_spray\":\n        this.canvas.isDrawingMode = true;\n        this.canvas.freeDrawingBrush = new fabric[\"SprayBrush\"](this.canvas);\n        this.canvas.freeDrawingBrush.color = this.selectedColor;\n        this.canvas.freeDrawingBrush.width = this.brushWidth;\n        break;\n      case \"rectangle\":\n      case \"triangle\":\n      case \"circle\":\n      case \"line\":\n      case \"text\":\n        break;\n      default:\n        break;\n    }\n\n    this.selectedTool = tool;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}