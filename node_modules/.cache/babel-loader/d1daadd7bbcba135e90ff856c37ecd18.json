{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Python/Components/PopupComponents/InfoPopup/index.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Rnd } from \"react-rnd\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport ReactMarkdown from \"react-markdown\";\nimport HtmlParser from \"react-markdown/plugins/html-parser\";\nimport \"./index.scss\";\nimport closeBtn from \"../../../../../Image/newPython/python-popup-close-btn@2x.png\";\nimport manImage from \"../../../../../Image/newPython/chat-man-profile@2x.png\";\nimport womanImage from \"../../../../../Image/newPython/chat-woman-profile@2x.png\";\nimport meImage from \"../../../../../Image/newPython/ic-user@3x.png\";\nimport hintOpenArrow from \"../../../../../Image/newPython/hint-popup-arrow.png\";\nimport dragArrow from \"../../../../../Image/newPython/btn-extend-pressed.svg\";\nimport { playTabEffect, playButtonEffect } from \"../../../Util/PlaySound\";\nimport CodeBlock from \"./CodeBlock\";\n\nfunction PythonInfo(props) {\n  var handleInfoPopup = props.handleInfoPopup,\n      chatHistory = props.chatHistory,\n      infoPopupData = props.infoPopupData,\n      isShowAnswerCode = props.isShowAnswerCode,\n      handleNextDestination = props.handleNextDestination;\n\n  var _useState = useState({\n    x: 10,\n    y: 20,\n    width: 446,\n    height: 530\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      infoPopupSetting = _useState2[0],\n      setInfoPopupSetting = _useState2[1];\n\n  var _useState3 = useState(\"hint\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      infoPopupTab = _useState4[0],\n      setInfoPopupTab = _useState4[1]; // hint, chatHistory, data\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isShowAnswerBox = _useState6[0],\n      setisShowAnswerBox = _useState6[1];\n\n  var codeBox = useRef(null);\n  useEffect(function () {\n    setAce();\n  }, [infoPopupTab, isShowAnswerCode]);\n\n  var setAce = function setAce() {\n    if (!isShowAnswerCode) return;\n    if (infoPopupTab === \"chatHistory\") return;\n    var infoPopupAce = window.ace;\n    var infoPopupAceEditor = undefined;\n    infoPopupAceEditor = infoPopupAce.edit(\"hintEditor\");\n    infoPopupAceEditor.session.setMode(\"ace/mode/python\");\n    infoPopupAceEditor.setTheme(\"ace/theme/wizschool-python\");\n    infoPopupAceEditor.setFontSize(12);\n    infoPopupAceEditor.setValue(infoPopupData.hintCode, 1);\n    infoPopupAceEditor.renderer.setShowGutter(false);\n    infoPopupAceEditor.setReadOnly(true);\n    infoPopupAceEditor.container.style.lineHeight = 2;\n    var line = infoPopupData.hintCode.match(/\\n/g);\n    codeBox.current.style.height = line ? 15 * line.length + \"px\" : \"60px\";\n  };\n\n  var handleInfoPopupTab = function handleInfoPopupTab(tab) {\n    setInfoPopupTab(tab);\n  };\n\n  var changePointText = function changePointText(text, pointText) {\n    var fullText = text.split(pointText);\n    var data = \"\".concat(fullText[0], \"<span>\").concat(pointText, \"</span>\").concat(fullText[1]);\n    return ReactHtmlParser(data);\n  };\n\n  var dragDefaultStyles = {\n    cursor: \"url(\".concat(dragArrow, \") 28 28, pointer\")\n  };\n  return React.createElement(Rnd, {\n    default: {\n      x: 10,\n      y: 20,\n      width: infoPopupSetting.width,\n      hegith: infoPopupSetting.height\n    },\n    minWidth: \"330\",\n    minHeight: \"200\",\n    position: {\n      x: infoPopupSetting.x,\n      y: infoPopupSetting.y\n    },\n    dragHandleClassName: \"popupHeader\",\n    onDragStop: function onDragStop(e, d) {\n      setInfoPopupSetting(_objectSpread({}, infoPopupSetting, {\n        x: d.x,\n        y: d.y\n      }));\n    },\n    onResizeStop: function onResizeStop(e, direction, ref, delta, position) {\n      setInfoPopupSetting(_objectSpread({}, infoPopupSetting, {\n        width: ref.style.width,\n        height: ref.style.height\n      }, position));\n    },\n    resizeHandleStyles: {\n      bottomRight: dragDefaultStyles\n    },\n    bounds: \"parent\",\n    className: \"pythonPopup pythonInfoPopup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"popupHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"popupHeaderTabArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"\".concat(infoPopupTab === \"hint\" ? \"activeTab\" : \"\"),\n    onClick: function onClick() {\n      playTabEffect();\n      handleInfoPopupTab(\"hint\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_PYTHON_HINT_TITLE\"\n  })), React.createElement(\"li\", {\n    className: \"\".concat(infoPopupTab === \"chatHistory\" ? \"activeTab\" : \"\"),\n    onClick: function onClick() {\n      playTabEffect();\n      handleInfoPopupTab(\"chatHistory\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_PYTHON_HINT_HISTORY\"\n  }))), React.createElement(\"img\", {\n    className: \"closePopupBtn\",\n    onClick: handleInfoPopup,\n    src: closeBtn,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"popupBody\",\n    style: {\n      maxHeight: infoPopupSetting.height\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, infoPopupTab === \"hint\" && React.createElement(\"div\", {\n    className: \"hintBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"hintText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"hintTextTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, infoPopupData.missionGoal ? \"\".concat(infoPopupData.missionGoal, \"\\n\") : props.intl.formatMessage({\n    id: \"ID_PYTHON_HINT_MISSION_GOAL\"\n  })), infoPopupData.hint ? React.createElement(ReactMarkdown, {\n    skipHtml: false,\n    allowDangerousHtml: true,\n    renderers: {\n      code: CodeBlock\n    },\n    astPlugins: [HtmlParser(infoPopupData.hint)],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, infoPopupData.hint) : props.intl.formatMessage({\n    id: \"ID_PYTHON_HINT_MISSION_DATA\"\n  })), React.createElement(\"div\", {\n    className: \"hintAnswerBox \".concat(isShowAnswerBox ? \"open\" : \"close\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    onClick: function onClick() {\n      playButtonEffect();\n      setisShowAnswerBox(!isShowAnswerBox);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_PYTHON_HINT_ANSWER_TITLE\"\n  })), React.createElement(\"img\", {\n    className: isShowAnswerBox ? \"hintOpenArrowOpen\" : \"hintOpenArrowClose\",\n    src: hintOpenArrow,\n    alt: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, isShowAnswerCode ? React.createElement(\"div\", {\n    className: \"showAnswer\",\n    id: \"hintEditor\",\n    ref: codeBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }) : React.createElement(\"p\", {\n    className: \"defaultMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_PYTHON_HINT_ANSWER_DEFAULT_MSG\"\n  }))))), infoPopupTab === \"chatHistory\" && React.createElement(\"div\", {\n    className: \"chatHistoryList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, chatHistory.map(function (chat, i) {\n    if (chat.type === \"announce\") {\n      return React.createElement(\"div\", {\n        key: chat + i,\n        className: \"chatInfoBox\",\n        onClick: function onClick() {\n          handleNextDestination(chat.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, chat.text);\n    } else if (chat.type === \"chat\") {\n      if (chat.character === \"me\") {\n        return React.createElement(\"div\", {\n          className: \"chatMe\",\n          key: chat + i,\n          onClick: function onClick() {\n            handleNextDestination(chat.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"chatMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, chat.text), React.createElement(\"img\", {\n          src: meImage,\n          alt: \"\",\n          className: \"chatCharacter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"chatPeer\",\n          key: chat + i,\n          onClick: function onClick() {\n            handleNextDestination(chat.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: chat.character === \"py\" ? womanImage : manImage,\n          alt: \"\",\n          className: \"chatCharacter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"chatMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, chat.pointText ? changePointText(chat.text, chat.pointText) : chat.text));\n      }\n    } else {\n      return null;\n    }\n  })), infoPopupTab === \"data\" && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dataContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"data data data data data data data data data data data data data data data data data data data data data data data data data data data data data data data data data\"), React.createElement(\"button\", {\n    onClick: function onClick() {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_PYTHON_HINT_DATA_COPY\"\n  })))));\n}\n\nexport default injectIntl(PythonInfo);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Python/Components/PopupComponents/InfoPopup/index.js"],"names":["React","useState","useEffect","useRef","injectIntl","Rnd","ReactHtmlParser","ReactMarkdown","HtmlParser","closeBtn","manImage","womanImage","meImage","hintOpenArrow","playTabEffect","playButtonEffect","CodeBlock","PythonInfo","props","handleInfoPopup","chatHistory","infoPopupData","isShowAnswerCode","handleNextDestination","x","y","width","height","infoPopupSetting","setInfoPopupSetting","infoPopupTab","setInfoPopupTab","isShowAnswerBox","setisShowAnswerBox","codeBox","setAce","infoPopupAce","window","ace","infoPopupAceEditor","undefined","edit","session","setMode","setTheme","setFontSize","setValue","hintCode","renderer","setShowGutter","setReadOnly","container","style","lineHeight","line","match","current","length","handleInfoPopupTab","tab","changePointText","text","pointText","fullText","split","data","dragDefaultStyles","cursor","dragArrow","hegith","e","d","direction","ref","delta","position","bottomRight","intl","formatMessage","id","maxHeight","missionGoal","hint","code","map","chat","i","type","character"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport { Rnd } from \"react-rnd\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport ReactMarkdown from \"react-markdown\";\nimport HtmlParser from \"react-markdown/plugins/html-parser\";\nimport \"./index.scss\";\n\nimport closeBtn from \"../../../../../Image/newPython/python-popup-close-btn@2x.png\";\nimport manImage from \"../../../../../Image/newPython/chat-man-profile@2x.png\";\nimport womanImage from \"../../../../../Image/newPython/chat-woman-profile@2x.png\";\nimport meImage from \"../../../../../Image/newPython/ic-user@3x.png\";\nimport hintOpenArrow from \"../../../../../Image/newPython/hint-popup-arrow.png\";\nimport dragArrow from \"../../../../../Image/newPython/btn-extend-pressed.svg\";\n\nimport { playTabEffect, playButtonEffect } from \"../../../Util/PlaySound\";\nimport CodeBlock from \"./CodeBlock\"\n\nfunction PythonInfo(props) {\n  const { handleInfoPopup, chatHistory, infoPopupData, isShowAnswerCode, handleNextDestination } = props;\n  const [infoPopupSetting, setInfoPopupSetting] = useState({\n    x: 10,\n    y: 20,\n    width: 446,\n    height: 530\n  });\n  const [infoPopupTab, setInfoPopupTab] = useState(\"hint\"); // hint, chatHistory, data\n  const [isShowAnswerBox, setisShowAnswerBox] = useState(false);\n  const codeBox = useRef(null);\n\n  useEffect(() => {\n    setAce()\n  }, [infoPopupTab, isShowAnswerCode]);\n  \n  const setAce = () => {\n    if(!isShowAnswerCode) return;\n    if(infoPopupTab === \"chatHistory\") return;\n    \n    let infoPopupAce = window.ace;\n    let infoPopupAceEditor = undefined;\n    \n    infoPopupAceEditor = infoPopupAce.edit(\"hintEditor\");\n    infoPopupAceEditor.session.setMode(`ace/mode/python`);\n    infoPopupAceEditor.setTheme(\"ace/theme/wizschool-python\");\n    infoPopupAceEditor.setFontSize(12);\n    infoPopupAceEditor.setValue(infoPopupData.hintCode, 1); \n    infoPopupAceEditor.renderer.setShowGutter(false);\n    infoPopupAceEditor.setReadOnly(true);\n    infoPopupAceEditor.container.style.lineHeight = 2;\n    \n    const line = infoPopupData.hintCode.match(/\\n/g);\n    codeBox.current.style.height = line ? 15 * line.length + \"px\" : \"60px\";\n  }\n  \n  const handleInfoPopupTab = tab => {\n    setInfoPopupTab(tab);\n  };\n\n  const changePointText = (text, pointText) => {\n    const fullText = text.split(pointText);\n    const data = `${fullText[0]}<span>${pointText}</span>${fullText[1]}`;\n    return ReactHtmlParser(data);\n  };\n  \n  const dragDefaultStyles = { \n    cursor: `url(${dragArrow}) 28 28, pointer`\n  }\n  \n  return (\n    <Rnd\n      default={{\n        x: 10,\n        y: 20,\n        width: infoPopupSetting.width,\n        hegith: infoPopupSetting.height\n      }}\n      minWidth=\"330\"\n      minHeight=\"200\"\n      position={{ x: infoPopupSetting.x, y: infoPopupSetting.y }}\n      dragHandleClassName = \"popupHeader\"\n      onDragStop={(e, d) => {\n        setInfoPopupSetting({ ...infoPopupSetting, x: d.x, y: d.y });\n      }}\n      onResizeStop={(e, direction, ref, delta, position) => {\n        setInfoPopupSetting({\n          ...infoPopupSetting,\n          width: ref.style.width,\n          height: ref.style.height,\n          ...position\n        });\n      }}\n      resizeHandleStyles = {{\n        bottomRight: dragDefaultStyles\n      }}\n      bounds=\"parent\"\n      className=\"pythonPopup pythonInfoPopup\"\n    >\n      <div className=\"popupHeader\">\n        <ul className=\"popupHeaderTabArea\">\n          <li\n            className={`${infoPopupTab === \"hint\" ? \"activeTab\" : \"\"}`}\n            onClick={() => {\n              playTabEffect();\n              handleInfoPopupTab(\"hint\");\n            }}\n          >\n            {props.intl.formatMessage({ id: \"ID_PYTHON_HINT_TITLE\" })}\n          </li>\n          <li\n            className={`${infoPopupTab === \"chatHistory\" ? \"activeTab\" : \"\"}`}\n            onClick={() => {\n              playTabEffect();\n              handleInfoPopupTab(\"chatHistory\");\n            }}\n          >\n            {props.intl.formatMessage({ id: \"ID_PYTHON_HINT_HISTORY\" })}\n          </li>\n        </ul>\n        <img\n          className=\"closePopupBtn\"\n          onClick={handleInfoPopup}\n          src={closeBtn}\n          alt=\"\"\n        />\n      </div>\n\n      <div className=\"popupBody\" style={{ maxHeight: infoPopupSetting.height }}>\n        {infoPopupTab === \"hint\" && (\n          <div className=\"hintBox\">\n            <div className=\"hintText\">\n            <span className=\"hintTextTitle\">\n            { infoPopupData.missionGoal ? `${infoPopupData.missionGoal}\\n` : props.intl.formatMessage({ id: \"ID_PYTHON_HINT_MISSION_GOAL\" }) }\n            </span>\n            { infoPopupData.hint \n            ? <ReactMarkdown \n                skipHtml={false} \n                allowDangerousHtml \n                renderers={{code: CodeBlock}}\n                astPlugins={[\n                  HtmlParser(infoPopupData.hint)\n                ]}\n              >\n                {infoPopupData.hint}\n              </ReactMarkdown>\n            : props.intl.formatMessage({ id: \"ID_PYTHON_HINT_MISSION_DATA\" }) \n            }\n            </div>\n            <div\n              className={`hintAnswerBox ${\n                isShowAnswerBox ? \"open\" : \"close\"\n              }`}\n            >\n              <p\n                className=\"title\"\n                onClick={() => {\n                  playButtonEffect();\n                  setisShowAnswerBox(!isShowAnswerBox);\n                }}\n              >\n                <span>{props.intl.formatMessage({ id: \"ID_PYTHON_HINT_ANSWER_TITLE\" })}</span>\n                <img className={isShowAnswerBox ? \"hintOpenArrowOpen\" : \"hintOpenArrowClose\"} src={hintOpenArrow} alt=\"box\" />\n              </p>\n              <div className=\"answer\">\n                {isShowAnswerCode ? (\n                  <div className=\"showAnswer\" id=\"hintEditor\" ref={codeBox} />\n                ) : (\n                  <p className=\"defaultMessage\">\n                    {props.intl.formatMessage({ id: \"ID_PYTHON_HINT_ANSWER_DEFAULT_MSG\" })}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        {infoPopupTab === \"chatHistory\" && (\n          <div className=\"chatHistoryList\">\n            {chatHistory.map((chat, i) => {\n              if (chat.type === \"announce\") {\n                return (\n                  <div key={chat + i} className=\"chatInfoBox\" onClick={()=>{handleNextDestination(chat.id)}}>\n                    {chat.text}\n                  </div>\n                );\n              } else  if (chat.type === \"chat\") {\n                if(chat.character === \"me\"){\n                  return (\n                  <div className=\"chatMe\" key={chat + i} onClick={()=>{handleNextDestination(chat.id)}}>\n                    <p className=\"chatMessage\">\n                      {/* 파이! 빌더버그 인공위성에서 <span>해킹한 파일이 방금 전송</span>됐어. */}\n                      {chat.text}\n                    </p>\n                    <img src={meImage} alt=\"\" className=\"chatCharacter\" />\n                  </div> \n                  );\n                } else {\n                  return (\n                    <div className=\"chatPeer\" key={chat + i} onClick={()=>{handleNextDestination(chat.id)}}>\n                      <img\n                        src={chat.character === \"py\" ? womanImage : manImage}\n                        alt=\"\"\n                        className=\"chatCharacter\"\n                      />\n                      <p className=\"chatMessage\">\n                        {chat.pointText\n                          ? changePointText(chat.text, chat.pointText)\n                          : chat.text}\n                      </p>\n                    </div>\n                  );\n                }\n              } else {\n                return null\n              }\n            })}\n          </div>\n        )}\n        {infoPopupTab === \"data\" && (\n          <div>\n            <div className=\"dataContent\">\n              data data data data data data data data data data data data data\n              data data data data data data data data data data data data data\n              data data data data data data data\n            </div>\n            <button onClick={() => {}}>\n              {props.intl.formatMessage({ id: \"ID_PYTHON_HINT_DATA_COPY\" })}\n            </button>\n          </div>\n        )}\n      </div>\n    </Rnd>\n  );\n}\n\nexport default injectIntl(PythonInfo);\n"]},"metadata":{},"sourceType":"module"}