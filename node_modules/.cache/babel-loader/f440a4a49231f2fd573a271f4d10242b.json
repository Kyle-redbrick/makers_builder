{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sound/View.js\";\nimport React from \"react\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport addImg from \"../../../../Image/builder/light-mode-sound-plus.svg\";\nimport addImg_darkmode from \"../../../../Image/builder/dark-mode-sound-plus.svg\";\nimport playImg from \"../../../../Image/builder/iconspace-not-b-25-px-copy.svg\";\nimport pauseImg from \"../../../../Image/builder/group-4.svg\";\nimport trashImg from \"../../../../Image/builder/group-5.svg\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\nexport default function (props) {\n  var soundIds = props.soundIds,\n      soundNames = props.soundNames,\n      selectedItemId = props.selectedItemId,\n      handleOpenSoundPopup = props.handleOpenSoundPopup,\n      handleItemSelect = props.handleItemSelect,\n      handleItemRemove = props.handleItemRemove,\n      jukebox = props.jukebox,\n      intl = props.intl;\n\n  var getClassName = function getClassName(isSelected) {\n    if (isSelected) {\n      return \"Sound_Item Sound_Item_Active\";\n    } else {\n      return \"Sound_Item\";\n    }\n  };\n\n  var getThumb = function getThumb(isSelected) {\n    if (isSelected && jukebox.isPlaying) {\n      return pauseImg;\n    } else {\n      return playImg;\n    }\n  };\n\n  var colorTheme = getColorTheme();\n  return React.createElement(\"div\", {\n    className: \"SoundContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"SoundContainer_Sounds\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, soundIds.map(function (soundId, index) {\n    var isSelected = selectedItemId === soundId;\n    var soundName;\n\n    if (soundNames[soundId]) {\n      soundName = soundNames[soundId];\n    } else {\n      soundName = AssetLibrary.getSoundAsset(soundId).defaultName;\n    }\n\n    return React.createElement(\"div\", {\n      className: getClassName(isSelected),\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ButtonIndicator, {\n      buttonId: \"\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SoundItemThumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"SoundItemThumbImg\",\n      src: getThumb(isSelected),\n      alt: \"sound icon\",\n      onClick: function onClick() {\n        return handleItemSelect(soundId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"SoundItemName\",\n      \"data-tip\": soundName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, soundName), isSelected && React.createElement(\"div\", {\n      className: \"SoundRemoveButton\",\n      onClick: function onClick() {\n        return handleItemRemove(soundId);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: trashImg,\n      alt: \"trash icon\",\n      \"data-tip\": intl.formatMessage({\n        id: \"ID_TOOLTIP_SOUND_DELETE\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  })), React.createElement(\"div\", {\n    className: \"SoundContainer_Line\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"SoundContainer_Tools\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"soundAddImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Sound_Add\",\n    onClick: handleOpenSoundPopup,\n    \"data-tip\": intl.formatMessage({\n      id: \"ID_TOOLTIP_SOUND_ADD\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"Sound_Add_Img\",\n    src: colorTheme === \"darkMode\" ? addImg_darkmode : addImg,\n    alt: \"add sound\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sound/View.js"],"names":["React","AssetLibrary","ButtonIndicator","getColorTheme","props","soundIds","soundNames","selectedItemId","handleOpenSoundPopup","handleItemSelect","handleItemRemove","jukebox","intl","getClassName","isSelected","getThumb","isPlaying","pauseImg","playImg","colorTheme","map","soundId","index","soundName","getSoundAsset","defaultName","trashImg","formatMessage","id","addImg_darkmode","addImg"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AssetLibrary from \"../../utils/assetLibrary\";\nimport addImg from \"../../../../Image/builder/light-mode-sound-plus.svg\";\nimport addImg_darkmode from \"../../../../Image/builder/dark-mode-sound-plus.svg\";\nimport playImg from \"../../../../Image/builder/iconspace-not-b-25-px-copy.svg\";\nimport pauseImg from \"../../../../Image/builder/group-4.svg\";\nimport trashImg from \"../../../../Image/builder/group-5.svg\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport { getColorTheme } from \"../../utils/colorThemeUtil\";\n\nexport default function(props) {\n  const {\n    soundIds,\n    soundNames,\n    selectedItemId,\n    handleOpenSoundPopup,\n    handleItemSelect,\n    handleItemRemove,\n    jukebox,\n    intl\n  } = props;\n  const getClassName = isSelected => {\n    if (isSelected) {\n      return \"Sound_Item Sound_Item_Active\";\n    } else {\n      return \"Sound_Item\";\n    }\n  };\n  const getThumb = isSelected => {\n    if (isSelected && jukebox.isPlaying) {\n      return pauseImg;\n    } else {\n      return playImg;\n    }\n  };\n  const colorTheme = getColorTheme();\n\n  return (\n    <div className=\"SoundContainer\">\n      <div className=\"SoundContainer_Sounds\">\n        {soundIds.map((soundId, index) => {\n          const isSelected = selectedItemId === soundId;\n          let soundName;\n          if (soundNames[soundId]) {\n            soundName = soundNames[soundId];\n          } else {\n            soundName = AssetLibrary.getSoundAsset(soundId).defaultName;\n          }\n\n          return (\n            <div className={getClassName(isSelected)} key={index}>\n              <ButtonIndicator buttonId={`${index}`}>\n                <div className=\"SoundItemThumb\">\n                  <img\n                    className=\"SoundItemThumbImg\"\n                    src={getThumb(isSelected)}\n                    alt=\"sound icon\"\n                    onClick={() => handleItemSelect(soundId)}\n                  />\n                </div>\n              </ButtonIndicator>\n              <div\n                className=\"SoundItemName\"\n                data-tip={soundName}\n              >\n                {soundName}\n              </div>\n\n              {isSelected && (\n                <div\n                  className=\"SoundRemoveButton\"\n                  onClick={() => handleItemRemove(soundId)}\n                >\n                  <img\n                    src={trashImg}\n                    alt=\"trash icon\"\n                    data-tip={intl.formatMessage({\n                      id: \"ID_TOOLTIP_SOUND_DELETE\"\n                    })}\n                  />\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"SoundContainer_Line\" />\n      <div className=\"SoundContainer_Tools\">\n        <ButtonIndicator buttonId=\"soundAddImg\">\n          <div\n            className=\"Sound_Add\"\n            onClick={handleOpenSoundPopup}\n            data-tip={intl.formatMessage({\n              id: \"ID_TOOLTIP_SOUND_ADD\"\n            })}\n          >\n            <img\n              className=\"Sound_Add_Img\"\n              src={colorTheme === \"darkMode\" ? addImg_darkmode : addImg}\n              alt=\"add sound\"\n            />\n          </div>\n        </ButtonIndicator>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}