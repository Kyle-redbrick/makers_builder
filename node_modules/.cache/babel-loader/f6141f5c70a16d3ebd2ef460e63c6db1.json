{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder3D/Component/Api/View.js\";\nimport React from \"react\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport searchImg from \"../../../../Image/builder/group-search.svg\";\nimport \"./index.scss\";\n\nfunction View(props) {\n  var selectedCategory = props.selectedCategory,\n      selectedApi = props.selectedApi,\n      onCategorySelect = props.onCategorySelect,\n      onApiSelect = props.onApiSelect,\n      formatMessage = props.formatMessage,\n      apiLibrary = props.apiLibrary,\n      apiList = props.apiList,\n      apiItems = props.apiItems,\n      onChange = props.onChange,\n      searchValue = props.searchValue,\n      onClickClose = props.onClickClose;\n\n  var getTip = function getTip(name) {\n    var language = \"ko\";\n    var api = apiLibrary.getAPI(name);\n\n    if (!api || !api.tip) {\n      return null;\n    }\n\n    var tip = api.tip;\n\n    if (!getApiDescription(tip.description, language)) {\n      return null;\n    }\n\n    function getApiDescription(description, language) {\n      if (description === undefined) {\n        return \"\";\n      } else {\n        return description[language];\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"APITip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"APITipDesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, getApiDescription(tip.description, language)), tip.params && tip.params.map(function (param, index) {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"APITipParam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"APITipParamTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, param.name), React.createElement(\"div\", {\n        className: \"APITipParamDesc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, getApiDescription(param.description, language)));\n    }), tip.description && React.createElement(\"div\", {\n      className: \"APITipDesc2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, getApiDescription(tip.description2, language)), api.snippet && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"APITipSnippet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\uC0AC\\uC6A9\\uC608\\uC2DC\"), React.createElement(\"pre\", {\n      className: \"APITipSnippetCode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, api.snippet)));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"API rndResizeHandler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APITitleLine handle rndDragHandler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APITitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"API\"), React.createElement(\"div\", {\n    className: \"APIClose\",\n    onClick: onClickClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: closeImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"APIContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APICategories\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, apiList.map(function (api, index) {\n    return (// <ButtonIndicator buttonId={api.name} key={index}>\n      React.createElement(\"div\", {\n        key: index,\n        onClick: function onClick() {\n          return onCategorySelect(api.name);\n        },\n        className: \"APICategory \".concat(selectedCategory === api.name && \"APICategoryActive\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, formatMessage({\n        id: api.name\n      })) // </ButtonIndicator>\n\n    );\n  })), React.createElement(\"div\", {\n    className: \"APIRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"APISearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: onChange,\n    type: \"text\",\n    placeholder: \"Search\",\n    value: searchValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: searchImg,\n    alt: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"APIItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, apiItems.map(function (api, index) {\n    var isSelected = api.name === selectedApi;\n    return (// <ButtonIndicator buttonId={api.name}>\n      React.createElement(\"div\", {\n        onClick: function onClick() {\n          return onApiSelect(api.name);\n        },\n        className: \"APIItem \".concat(isSelected ? \"active\" : \"\"),\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"APIItemName \".concat(isSelected ? \"APIItemNameActive\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, api.name), isSelected && getTip(api.name)) // </ButtonIndicator>\n\n    );\n  })))));\n}\n\nexport default View;","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Page/Builder3D/Component/Api/View.js"],"names":["React","View","props","selectedCategory","selectedApi","onCategorySelect","onApiSelect","formatMessage","apiLibrary","apiList","apiItems","onChange","searchValue","onClickClose","getTip","name","language","api","getAPI","tip","getApiDescription","description","undefined","params","map","param","index","description2","snippet","closeImg","id","searchImg","isSelected"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport closeImg from \"../../../../Image/builder/x-copy-3.svg\";\nimport searchImg from \"../../../../Image/builder/group-search.svg\";\nimport \"./index.scss\";\n\nfunction View(props) {\n  const {\n    selectedCategory,\n    selectedApi,\n    onCategorySelect,\n    onApiSelect,\n    formatMessage,\n    apiLibrary,\n    apiList,\n    apiItems,\n    onChange,\n    searchValue,\n    onClickClose\n  } = props;\n\n  const getTip = name => {\n    const language = \"ko\";\n    const api = apiLibrary.getAPI(name);\n    if (!api || !api.tip) {\n      return null;\n    }\n    const tip = api.tip;\n\n    if (!getApiDescription(tip.description, language)) {\n      return null;\n    }\n\n    function getApiDescription(description, language) {\n      if (description === undefined) {\n        return \"\";\n      } else {\n        return description[language];\n      }\n    }\n\n    return (\n      <div className=\"APITip\">\n        <div className=\"APITipDesc\">\n          {getApiDescription(tip.description, language)}\n        </div>\n        {tip.params &&\n          tip.params.map((param, index) => {\n            return (\n              <div key={index} className=\"APITipParam\">\n                <div className=\"APITipParamTitle\">{param.name}</div>\n                <div className=\"APITipParamDesc\">\n                  {getApiDescription(param.description, language)}\n                </div>\n              </div>\n            );\n          })}\n        {tip.description && (\n          <div className=\"APITipDesc2\">\n            {getApiDescription(tip.description2, language)}\n          </div>\n        )}\n        {api.snippet && (\n          <div>\n            <div className=\"APITipSnippet\">사용예시</div>\n            <pre className=\"APITipSnippetCode\">{api.snippet}</pre>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"API rndResizeHandler\">\n      <div className=\"APITitleLine handle rndDragHandler\">\n        <div className=\"APITitle\">API</div>\n        <div className=\"APIClose\" onClick={onClickClose}>\n          <img src={closeImg} alt=\"img\" />\n        </div>\n      </div>\n\n      <div className=\"APIContent\">\n        <div className=\"APICategories\">\n          {apiList.map((api, index) => {\n            return (\n              // <ButtonIndicator buttonId={api.name} key={index}>\n              <div\n                key={index}\n                onClick={() => onCategorySelect(api.name)}\n                className={`APICategory ${selectedCategory === api.name &&\n                  \"APICategoryActive\"}`}\n              >\n                {formatMessage({ id: api.name })}\n              </div>\n              // </ButtonIndicator>\n            );\n          })}\n        </div>\n        <div className=\"APIRight\">\n          <div className=\"APISearch\">\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Search\"\n              value={searchValue}\n            />\n            <img src={searchImg} alt=\"img\" />\n          </div>\n          <div className=\"APIItems\">\n            {apiItems.map((api, index) => {\n              const isSelected = api.name === selectedApi;\n              return (\n                // <ButtonIndicator buttonId={api.name}>\n                <div\n                  onClick={() => onApiSelect(api.name)}\n                  className={`APIItem ${isSelected ? \"active\" : \"\"}`}\n                  key={index}\n                >\n                  <div\n                    className={`APIItemName ${\n                      isSelected ? \"APIItemNameActive\" : \"\"\n                    }`}\n                  >\n                    {api.name}\n                  </div>\n                  {isSelected && getTip(api.name)}\n                </div>\n                // </ButtonIndicator>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}