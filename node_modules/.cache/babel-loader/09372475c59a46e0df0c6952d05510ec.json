{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/astroboy/src/Common/Component/Comment/View.js\";\nimport React from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport ContextMenu from \"../ContextMenu\";\nimport { SIGNOUT_PROFILE_IMAGE } from \"../../Util/Constant\";\nimport { dateFormatter } from \"../../Util/DateFormatter\";\nimport UserIconWrapper from \"../../../Common/Component/UserIconWrapper\";\nimport moreDown from \"../../../Image/more-down.svg\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport arrowDownImg from \"../../../Image/social_arrow-down.svg\";\nimport userDefaultImg from \"../../../Image/userDefaultImg.png\";\n\nvar View = function View(props) {\n  var userinfo = props.userinfo,\n      comments = props.comments,\n      isLoggedIn = props.isLoggedIn,\n      user = props.user,\n      hasMore = props.hasMore,\n      handleLoadMore = props.handleLoadMore,\n      _handleInputChange = props.handleInputChange,\n      _handleAddComment = props.handleAddComment,\n      handleSetInputTarget = props.handleSetInputTarget,\n      mainInputMessage = props.mainInputMessage,\n      subInputMessage = props.subInputMessage,\n      subInputTargetId = props.subInputTargetId,\n      subInputTargetType = props.subInputTargetType,\n      targetUser = props.targetUser,\n      handleDeleteComment = props.handleDeleteComment,\n      handleDeleteReply = props.handleDeleteReply,\n      editTargetType = props.editTargetType,\n      editTargetId = props.editTargetId,\n      editInputMessage = props.editInputMessage,\n      handleEditComment = props.handleEditComment,\n      handleEditReply = props.handleEditReply,\n      handleReportComment = props.handleReportComment,\n      handleReportReply = props.handleReportReply,\n      openedFolds = props.openedFolds,\n      onClickFoldMore = props.onClickFoldMore,\n      intl = props.intl,\n      handleInputFocus = props.handleInputFocus,\n      commentWriteOnType = props.commentWriteOnType;\n  return React.createElement(\"div\", {\n    className: \"CommentView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"CommentViewRight CommentViewRight__on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(WriteView, {\n    type: \"main\",\n    user: user,\n    inputValue: mainInputMessage,\n    handleInputChange: function handleInputChange(e) {\n      return _handleInputChange(e, \"main\");\n    },\n    handleAddComment: function handleAddComment(e) {\n      return _handleAddComment(e, \"main\");\n    },\n    isLoggedIn: isLoggedIn,\n    handleInputFocus: handleInputFocus,\n    commentWriteOnType: commentWriteOnType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"CommentItemList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, comments.map(function (comment) {\n    comment.message = comment.isDeletedFromAdmin ? intl.formatMessage({\n      id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n    }) : comment.isDeleted ? intl.formatMessage({\n      id: \"ID_COMMENT_DELETED\"\n    }) : comment.message;\n    var isFold = (comment.message.length > 180 || comment.message.split(\"\\n\").length > 5) && openedFolds && !openedFolds.includes(comment.id);\n    return React.createElement(\"li\", {\n      className: \"CommentItem\",\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CommentItem__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, comment.user.signedOut ? React.createElement(\"div\", {\n      className: \"UserTag SignOutUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"UserTagIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"UserTagIcon__img\",\n      alt: \"user icon\",\n      src: SIGNOUT_PROFILE_IMAGE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"UserTagName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"(\", React.createElement(FormattedMessage, {\n      id: \"ID_SIGNEDOUT_USER\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \")\")) : React.createElement(Link, {\n      to: \"/userpage/\".concat(comment.user.id),\n      className: \"UserTag__link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"UserTag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(UserIconWrapper, {\n      iconSrc: comment.user.icon,\n      style: {\n        width: \"45px\",\n        height: \"45px\",\n        minWidth: \"45px\",\n        minHeight: \"45px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"UserTagName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, comment.user.name), React.createElement(\"div\", {\n      className: \"CommentDot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"CommentItem__Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"CommentItem__date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, dateFormatter(comment.createdAt))))), !comment.isDeleted && !comment.user.signedOut && React.createElement(\"div\", {\n      className: \"CommentItem__headerBtnRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(ContextMenu, {\n      onClickEdit: comment.user.email === userinfo.email && function () {\n        props.handleSetEditTarget({\n          editTargetType: \"comment\",\n          editTargetId: comment.id,\n          editInputMessage: comment.message\n        });\n      },\n      onClickReport: !(comment.user.email === userinfo.email) && function () {\n        handleReportComment(comment);\n      },\n      onClickDelete: comment.user.email === userinfo.email && function () {\n        handleDeleteComment({\n          id: comment.id,\n          commentId: comment.id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"CommentItem__body CommentEditForm\",\n      id: \"EditForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, editTargetType === \"comment\" && editTargetId === comment.id ? React.createElement(EditView, {\n      inputValue: editInputMessage,\n      handleInputChange: function handleInputChange(e) {\n        return _handleInputChange(e, \"edit\");\n      },\n      handleSubmit: handleEditComment,\n      handleCancel: function handleCancel() {\n        props.handleSetEditTarget({\n          editTargetType: \"\",\n          editTargetId: null,\n          editInputMessage: \"\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      className: \"CommentItem__content CommentItem__content__\".concat(isFold ? \"fold\" : \"\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, comment.message), isLoggedIn && !comment.isDeleted && !comment.user.signedOut && React.createElement(\"p\", {\n      className: \"CommentItem__replyBtn\",\n      onClick: function onClick(e) {\n        return handleSetInputTarget(e, \"comment\", comment.id, comment.id, null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"ID_COMMENT_REPLY_BUTTON\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), isFold && !comment.isDeleted && React.createElement(\"div\", {\n      className: \"content__more\",\n      onClick: function onClick() {\n        return onClickFoldMore(comment.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content__more__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"ID_SOCIAL_COMMENT_CONTENTS_MORE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })))), subInputTargetType === \"comment\" && comment.id === subInputTargetId ? React.createElement(WriteView, {\n      type: \"sub\",\n      user: user,\n      inputValue: subInputMessage,\n      handleInputChange: function handleInputChange(e) {\n        return _handleInputChange(e, \"sub\");\n      },\n      handleAddComment: function handleAddComment(e) {\n        return _handleAddComment(e, \"sub\");\n      },\n      isLoggedIn: isLoggedIn,\n      handleInputFocus: handleInputFocus,\n      commentWriteOnType: commentWriteOnType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, null), React.createElement(\"ul\", {\n      className: \"CommentItemList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, comment.replies.map(function (reply) {\n      reply.message = reply.isDeletedFromAdmin ? intl.formatMessage({\n        id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n      }) : reply.isDeleted ? intl.formatMessage({\n        id: \"ID_COMMENT_DELETED\"\n      }) : reply.message;\n      var isFold = (reply.message.length > 180 || reply.message.split(\"\\n\").length > 5) && openedFolds && !openedFolds.includes(reply.id);\n      return React.createElement(\"li\", {\n        className: \"CommentItem\",\n        key: reply.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CommentItem__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, reply.user.signedOut ? React.createElement(\"div\", {\n        className: \"UserTag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"UserTagIcon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"UserTagIcon__img\",\n        alt: \"user icon\",\n        src: SIGNOUT_PROFILE_IMAGE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"UserTagName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"(\", React.createElement(FormattedMessage, {\n        id: \"ID_SIGNEDOUT_USER\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }), \")\")) : React.createElement(Link, {\n        to: \"/userpage/\".concat(reply.user.id),\n        className: \"UserTag__link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"UserTag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(UserIconWrapper, {\n        iconSrc: reply.user.icon,\n        style: {\n          width: \"40px\",\n          height: \"42px\",\n          minWidth: \"40px\",\n          minHeight: \"42px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"UserTagName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, reply.user.name), React.createElement(\"div\", {\n        className: \"CommentDot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"CommentItem__Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CommentItem__date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, dateFormatter(reply.createdAt))))), !reply.isDeleted && !reply.user.signedOut && React.createElement(\"div\", {\n        className: \"CommentItem__headerBtnRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(ContextMenu, {\n        onClickEdit: reply.user.email === userinfo.email && function () {\n          props.handleSetEditTarget({\n            editTargetType: \"reply\",\n            editTargetId: reply.id,\n            editInputMessage: reply.message\n          });\n        },\n        onClickReport: !(reply.user.email === userinfo.email) && function () {\n          handleReportReply(reply);\n        },\n        onClickDelete: reply.user.email === userinfo.email && function () {\n          handleDeleteReply({\n            id: reply.id,\n            commentId: reply.id\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"CommentItem__body reply\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, editTargetType === \"reply\" && editTargetId === reply.id ? React.createElement(EditView, {\n        inputValue: editInputMessage,\n        handleInputChange: function handleInputChange(e) {\n          return _handleInputChange(e, \"edit\");\n        },\n        handleSubmit: handleEditReply,\n        handleCancel: function handleCancel() {\n          props.handleSetEditTarget({\n            editTargetType: \"\",\n            editTargetId: null,\n            editInputMessage: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        className: \"CommentItem__content CommentItem__content__\".concat(isFold ? \"fold\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, reply.targetUser && React.createElement(\"span\", {\n        className: \"CommentItem__targetUser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, reply.targetUser.signedOut ? React.createElement(FormattedMessage, {\n        id: \"ID_SIGNEDOUT_USER\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }) : \"@\" + reply.targetUser.name), reply.message), isLoggedIn && !reply.isDeleted && !reply.user.signedOut && React.createElement(\"p\", {\n        className: \"CommentItem__replyBtn\",\n        onClick: function onClick(e) {\n          return handleSetInputTarget(e, \"reply\", reply.id, comment.id, reply.user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ID_COMMENT_REPLY_BUTTON\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      })), isFold && !reply.isDeleted && React.createElement(\"div\", {\n        className: \"content__more\",\n        onClick: function onClick() {\n          return onClickFoldMore(reply.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content__more__text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"ID_SOCIAL_COMMENT_CONTENTS_MORE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        className: \"content__more__img\",\n        src: arrowDownImg,\n        alt: \"arrowDown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }))), subInputTargetType === \"reply\" && reply.id === subInputTargetId ? React.createElement(WriteView, {\n        type: \"sub\",\n        user: user,\n        targetUser: targetUser,\n        inputValue: subInputMessage,\n        handleInputChange: function handleInputChange(e) {\n          return _handleInputChange(e, \"sub\");\n        },\n        handleAddComment: function handleAddComment(e) {\n          return _handleAddComment(e, \"sub\");\n        },\n        isLoggedIn: isLoggedIn,\n        handleInputFocus: handleInputFocus,\n        commentWriteOnType: commentWriteOnType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null)));\n    }))));\n  })), hasMore && React.createElement(\"div\", {\n    className: \"CommentView__loadMoreBtn\",\n    onClick: handleLoadMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_COMMENT_MOREBTN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: moreDown,\n    alt: \"more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }))));\n};\n\nexport default injectIntl(View);\nvar WriteView = injectIntl(function (props) {\n  var type = props.type,\n      user = props.user,\n      handleAddComment = props.handleAddComment,\n      handleInputChange = props.handleInputChange,\n      inputValue = props.inputValue,\n      isLoggedIn = props.isLoggedIn,\n      handleButtonHeightChange = props.handleButtonHeightChange,\n      handleInputFocus = props.handleInputFocus,\n      commentWriteOnType = props.commentWriteOnType;\n  return React.createElement(\"div\", {\n    className: \"CommentWrite \".concat(commentWriteOnType ? \"commentMode\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"UserTag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443\n    },\n    __self: this\n  }, React.createElement(UserIconWrapper, {\n    iconSrc: isLoggedIn ? user.icon : userDefaultImg,\n    userDefault: isLoggedIn ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }))), React.createElement(\"form\", {\n    className: \"CommentWriteForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, React.createElement(TextareaAutosize, {\n    className: \"CommentWriteForm__textarea\",\n    onChange: handleInputChange,\n    onKeyDown: handleButtonHeightChange,\n    value: inputValue,\n    placeholder: isLoggedIn ? props.intl.formatMessage({\n      id: \"ID_COMMENT_TEXTAREA_PH\"\n    }) : props.intl.formatMessage({\n      id: \"ID_COMMENT_TEXTAREA_LOGIN\"\n    }),\n    disabled: !isLoggedIn,\n    onFocus: function onFocus() {\n      return handleInputFocus(type);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CommentWriteForm__btnRow \".concat(commentWriteOnType === type ? \"show\" : \"hidden\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"cancelBtn\",\n    className: \"CommentWriteForm__cancelBtn\",\n    onClick: function onClick() {\n      return handleInputFocus('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_COMMENT_CANCEL_BUTTON\"\n  })), React.createElement(\"input\", {\n    id: \"submitBtn\",\n    className: \"CommentWriteForm__submitBtn submitBtn--\".concat(isLoggedIn ? \"on\" : \"off\"),\n    type: \"submit\",\n    onClick: handleAddComment,\n    value: props.intl.formatMessage({\n      id: \"ID_COMMENT_SUBMITBTN\"\n    }),\n    disabled: !isLoggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }))));\n});\nvar EditView = injectIntl(function (props) {\n  var handleSubmit = props.handleSubmit,\n      handleInputChange = props.handleInputChange,\n      inputValue = props.inputValue,\n      targetUser = props.targetUser,\n      handleCancel = props.handleCancel;\n  return React.createElement(\"form\", {\n    className: \"CommentWriteForm EditCommentWriteForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506\n    },\n    __self: this\n  }, targetUser && React.createElement(\"span\", {\n    className: \"CommentItem__targetUser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508\n    },\n    __self: this\n  }, targetUser.name), React.createElement(TextareaAutosize, {\n    className: \"CommentWriteForm__textarea\",\n    onChange: handleInputChange,\n    value: inputValue,\n    placeholder: props.intl.formatMessage({\n      id: \"ID_COMMENT_TEXTAREA_PH\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"CommentWriteForm__btnRow Edit\",\n    style: {\n      marginBottom: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"CommentWriteForm__cancelBtn\",\n    id: \"cancleBtn\",\n    type: \"button\",\n    onClick: handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522\n    },\n    __self: this\n  }, props.intl.formatMessage({\n    id: \"ID_COMMENT_CANCEL_BUTTON\"\n  })), React.createElement(\"input\", {\n    className: \"CommentWriteForm__submitBtn\",\n    id: \"editBtn\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    value: props.intl.formatMessage({\n      id: \"ID_COMMENT_EDIT_BUTTON\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/astroboy/src/Common/Component/Comment/View.js"],"names":["React","FormattedMessage","injectIntl","Link","ContextMenu","SIGNOUT_PROFILE_IMAGE","dateFormatter","UserIconWrapper","TextareaAutosize","userDefaultImg","View","props","userinfo","comments","isLoggedIn","user","hasMore","handleLoadMore","handleInputChange","handleAddComment","handleSetInputTarget","mainInputMessage","subInputMessage","subInputTargetId","subInputTargetType","targetUser","handleDeleteComment","handleDeleteReply","editTargetType","editTargetId","editInputMessage","handleEditComment","handleEditReply","handleReportComment","handleReportReply","openedFolds","onClickFoldMore","intl","handleInputFocus","commentWriteOnType","e","map","comment","message","isDeletedFromAdmin","formatMessage","id","isDeleted","isFold","length","split","includes","signedOut","icon","width","height","minWidth","minHeight","name","createdAt","email","handleSetEditTarget","commentId","replies","reply","arrowDownImg","moreDown","WriteView","type","inputValue","handleButtonHeightChange","EditView","handleSubmit","handleCancel","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { Link } from \"react-router-dom\";\nimport ContextMenu from \"../ContextMenu\";\nimport { SIGNOUT_PROFILE_IMAGE } from \"../../Util/Constant\";\nimport { dateFormatter } from \"../../Util/DateFormatter\";\nimport UserIconWrapper from \"../../../Common/Component/UserIconWrapper\";\nimport moreDown from \"../../../Image/more-down.svg\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport arrowDownImg from \"../../../Image/social_arrow-down.svg\";\nimport userDefaultImg from \"../../../Image/userDefaultImg.png\";\nconst View = props => {\n  const {\n    userinfo,\n    comments,\n    isLoggedIn,\n    user,\n    hasMore,\n    handleLoadMore,\n    handleInputChange,\n    handleAddComment,\n    handleSetInputTarget,\n    mainInputMessage,\n    subInputMessage,\n    subInputTargetId,\n    subInputTargetType,\n    targetUser,\n    handleDeleteComment,\n    handleDeleteReply,\n    editTargetType,\n    editTargetId,\n    editInputMessage,\n    handleEditComment,\n    handleEditReply,\n    handleReportComment,\n    handleReportReply,\n    openedFolds,\n    onClickFoldMore,\n    intl,\n    // handleCommentsShow,\n    // isCommentsShow,\n    // isMobile,\n    handleInputFocus,\n    commentWriteOnType\n  } = props;\n  return (\n    <div className=\"CommentView\">\n      <div\n        className={`CommentViewRight CommentViewRight__on`}\n      >\n        <WriteView\n          type=\"main\"\n          user={user}\n          inputValue={mainInputMessage}\n          handleInputChange={e => handleInputChange(e, \"main\")}\n          handleAddComment={e => handleAddComment(e, \"main\")}\n          isLoggedIn={isLoggedIn}\n          handleInputFocus={handleInputFocus}\n          commentWriteOnType={commentWriteOnType}\n        />\n        <ul className=\"CommentItemList\">\n          {comments.map(comment => {\n            comment.message = comment.isDeletedFromAdmin\n              ? intl.formatMessage({\n                  id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n                })\n              : comment.isDeleted\n              ? intl.formatMessage({ id: \"ID_COMMENT_DELETED\" })\n              : comment.message;\n            let isFold =\n              (comment.message.length > 180 ||\n                comment.message.split(\"\\n\").length > 5) &&\n              openedFolds &&\n              !openedFolds.includes(comment.id);\n\n            return (\n              <li className=\"CommentItem\" key={comment.id}>\n                <div className=\"CommentItem__header\">\n                  {comment.user.signedOut ? (\n                    <div className=\"UserTag SignOutUser\">\n                      <p className=\"UserTagIcon\">\n                        <img\n                          className=\"UserTagIcon__img\"\n                          alt=\"user icon\"\n                          src={SIGNOUT_PROFILE_IMAGE}\n                        />\n                      </p>\n                      <p className=\"UserTagName\">\n                        (<FormattedMessage id=\"ID_SIGNEDOUT_USER\" />)\n                      </p>\n                    </div>\n                  ) : (\n                    <Link\n                      to={`/userpage/${comment.user.id}`}\n                      className=\"UserTag__link\"\n                    >\n                      <div className=\"UserTag\">\n                        <UserIconWrapper\n                          iconSrc={comment.user.icon}\n                          style={{\n                            width: \"45px\",\n                            height: \"45px\",\n                            minWidth: \"45px\",\n                            minHeight: \"45px\"\n                          }}\n                        />\n                        <span className=\"UserTagName\">{comment.user.name}</span>\n                        <div className=\"CommentDot\" />\n                        <div className=\"CommentItem__Info\">\n                          <div className=\"CommentItem__date\">\n                            {dateFormatter(comment.createdAt)}\n                          </div>                          \n                        </div>\n                      </div>\n                    </Link>\n                  )}\n                  {!comment.isDeleted && !comment.user.signedOut && (\n                    <div className=\"CommentItem__headerBtnRow\">\n                      <ContextMenu\n                        onClickEdit={\n                          comment.user.email === userinfo.email &&\n                          (() => {\n                            props.handleSetEditTarget({\n                              editTargetType: \"comment\",\n                              editTargetId: comment.id,\n                              editInputMessage: comment.message\n                            });\n                          })\n                        }\n                        onClickReport={\n                          !(comment.user.email === userinfo.email) &&\n                          (() => {\n                            handleReportComment(comment);\n                          })\n                        }\n                        onClickDelete={\n                          comment.user.email === userinfo.email &&\n                          (() => {\n                            handleDeleteComment({\n                              id: comment.id,\n                              commentId: comment.id\n                            });\n                          })\n                        }\n                      />\n                    </div>\n                  )}\n                </div>\n                <div\n                  className=\"CommentItem__body CommentEditForm\"\n                  id=\"EditForm\"\n                >\n                  {editTargetType === \"comment\" &&\n                  editTargetId === comment.id ? (\n                    <EditView\n                      inputValue={editInputMessage}\n                      handleInputChange={e => handleInputChange(e, \"edit\")}\n                      handleSubmit={handleEditComment}\n                      handleCancel={() => {\n                        props.handleSetEditTarget({\n                          editTargetType: \"\",\n                          editTargetId: null,\n                          editInputMessage: \"\"\n                        });\n                      }}\n                    />\n                  ) : (\n                    <>\n                      <p\n                        className={`CommentItem__content CommentItem__content__${\n                          isFold ? \"fold\" : \"\"\n                        }`}\n                      >\n                        {comment.message}\n                      </p>\n                      {isLoggedIn &&\n                        !comment.isDeleted &&\n                        !comment.user.signedOut && (\n                          <p\n                            className=\"CommentItem__replyBtn\"\n                            onClick={e =>\n                              handleSetInputTarget(\n                                e,\n                                \"comment\",\n                                comment.id,\n                                comment.id,\n                                null\n                              )\n                            }\n                          >\n                            <FormattedMessage id=\"ID_COMMENT_REPLY_BUTTON\" />\n                          </p>\n                        )}\n                      {isFold && !comment.isDeleted && (\n                        <div\n                          className=\"content__more\"\n                          onClick={() => onClickFoldMore(comment.id)}\n                        >\n                          <div className=\"content__more__text\">\n                            <FormattedMessage id=\"ID_SOCIAL_COMMENT_CONTENTS_MORE\" />\n                          </div>\n                        </div>\n                      )}\n                    </>\n                  )}\n\n                  {subInputTargetType === \"comment\" &&\n                  comment.id === subInputTargetId ? (\n                    <WriteView\n                      type=\"sub\"\n                      user={user}\n                      inputValue={subInputMessage}\n                      handleInputChange={e => handleInputChange(e, \"sub\")}\n                      handleAddComment={e => handleAddComment(e, \"sub\")}\n                      isLoggedIn={isLoggedIn}\n                      handleInputFocus={handleInputFocus}\n                      commentWriteOnType={commentWriteOnType}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                  <ul className=\"CommentItemList\">\n                    {comment.replies.map(reply => {\n                      reply.message = reply.isDeletedFromAdmin\n                        ? intl.formatMessage({\n                            id: \"ID_COMMENT_DELETED_FROM_ADMIN\"\n                          })\n                        : reply.isDeleted\n                        ? intl.formatMessage({\n                            id: \"ID_COMMENT_DELETED\"\n                          })\n                        : reply.message;\n                      let isFold =\n                        (reply.message.length > 180 ||\n                          reply.message.split(\"\\n\").length > 5) &&\n                        openedFolds &&\n                        !openedFolds.includes(reply.id);\n\n                      return (\n                        <li className=\"CommentItem\" key={reply.id}>\n                          <div className=\"CommentItem__header\">\n                            {reply.user.signedOut ? (\n                              <div className=\"UserTag\">\n                                <p className=\"UserTagIcon\">\n                                  <img\n                                    className=\"UserTagIcon__img\"\n                                    alt=\"user icon\"\n                                    src={SIGNOUT_PROFILE_IMAGE}\n                                  />\n                                </p>\n                                <p className=\"UserTagName\">\n                                  (<FormattedMessage id=\"ID_SIGNEDOUT_USER\" />)\n                                </p>\n                              </div>\n                            ) : (\n                              <Link\n                                to={`/userpage/${reply.user.id}`}\n                                className=\"UserTag__link\"\n                              >\n                                <div className=\"UserTag\">\n                                  <UserIconWrapper\n                                    iconSrc={reply.user.icon}\n                                    style={{\n                                      width: \"40px\",\n                                      height: \"42px\",\n                                      minWidth: \"40px\",\n                                      minHeight: \"42px\"\n                                    }}\n                                  />\n                                  <p className=\"UserTagName\">\n                                    {reply.user.name}\n                                  </p>\n                                  <div className=\"CommentDot\" />\n                                  <div className=\"CommentItem__Info\">\n                                    <div className=\"CommentItem__date\">\n                                      {dateFormatter(reply.createdAt)}\n                                    </div>\n                                  </div>\n                                </div>\n                              </Link>\n                            )}\n                            {!reply.isDeleted && !reply.user.signedOut && (\n                              <div className=\"CommentItem__headerBtnRow\">\n                                <ContextMenu\n                                  onClickEdit={\n                                    reply.user.email === userinfo.email &&\n                                    (() => {\n                                      props.handleSetEditTarget({\n                                        editTargetType: \"reply\",\n                                        editTargetId: reply.id,\n                                        editInputMessage: reply.message\n                                      });\n                                    })\n                                  }\n                                  onClickReport={\n                                    !(reply.user.email === userinfo.email) &&\n                                    (() => {\n                                      handleReportReply(reply);\n                                    })\n                                  }\n                                  onClickDelete={\n                                    reply.user.email === userinfo.email &&\n                                    (() => {\n                                      handleDeleteReply({\n                                        id: reply.id,\n                                        commentId: reply.id\n                                      });\n                                    })\n                                  }\n                                />\n                              </div>\n                            )}\n                          </div>\n                          <div className=\"CommentItem__body reply\">\n                            {editTargetType === \"reply\" &&\n                            editTargetId === reply.id ? (\n                              <EditView\n                                inputValue={editInputMessage}\n                                handleInputChange={e =>\n                                  handleInputChange(e, \"edit\")\n                                }\n                                handleSubmit={handleEditReply}\n                                handleCancel={() => {\n                                  props.handleSetEditTarget({\n                                    editTargetType: \"\",\n                                    editTargetId: null,\n                                    editInputMessage: \"\"\n                                  });\n                                }}\n                              />\n                            ) : (\n                              <>\n                                <p\n                                  className={`CommentItem__content CommentItem__content__${\n                                    isFold ? \"fold\" : \"\"\n                                  }`}\n                                >\n                                  {reply.targetUser && (\n                                    <span className=\"CommentItem__targetUser\">\n                                      {reply.targetUser.signedOut ? (\n                                        <FormattedMessage id=\"ID_SIGNEDOUT_USER\" />\n                                      ) : (\n                                        \"@\" + reply.targetUser.name\n                                      )}\n                                    </span>\n                                  )}\n                                  {reply.message}\n                                </p>\n                                {isLoggedIn &&\n                                  !reply.isDeleted &&\n                                  !reply.user.signedOut && (\n                                    <p\n                                      className=\"CommentItem__replyBtn\"\n                                      onClick={e =>\n                                        handleSetInputTarget(\n                                          e,\n                                          \"reply\",\n                                          reply.id,\n                                          comment.id,\n                                          reply.user\n                                        )\n                                      }\n                                    >\n                                      <FormattedMessage id=\"ID_COMMENT_REPLY_BUTTON\" />\n                                    </p>\n                                  )}\n                                {isFold && !reply.isDeleted && (\n                                  <div\n                                    className=\"content__more\"\n                                    onClick={() => onClickFoldMore(reply.id)}\n                                  >\n                                    <div className=\"content__more__text\">\n                                      <FormattedMessage id=\"ID_SOCIAL_COMMENT_CONTENTS_MORE\" />\n                                    </div>\n                                    <img\n                                      className=\"content__more__img\"\n                                      src={arrowDownImg}\n                                      alt=\"arrowDown\"\n                                    />\n                                  </div>\n                                )}\n                              </>\n                            )}\n\n                            {subInputTargetType === \"reply\" &&\n                            reply.id === subInputTargetId ? (\n                              <WriteView\n                                type=\"sub\"\n                                user={user}\n                                targetUser={targetUser}\n                                inputValue={subInputMessage}\n                                handleInputChange={e =>\n                                  handleInputChange(e, \"sub\")\n                                }\n                                handleAddComment={e =>\n                                  handleAddComment(e, \"sub\")\n                                }\n                                isLoggedIn={isLoggedIn}\n                                handleInputFocus={handleInputFocus}\n                                commentWriteOnType={commentWriteOnType}\n                              />\n                            ) : (\n                              <></>\n                            )}\n                          </div>\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n        {hasMore && (\n          <div className=\"CommentView__loadMoreBtn\" onClick={handleLoadMore}>\n            <FormattedMessage id=\"ID_COMMENT_MOREBTN\" />\n            <img src={moreDown} alt=\"more\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default injectIntl(View);\n\nconst WriteView = injectIntl(props => {\n  const {\n    type,\n    user,\n    handleAddComment,\n    handleInputChange,\n    inputValue,\n    isLoggedIn,\n    handleButtonHeightChange,\n    handleInputFocus,\n    commentWriteOnType\n  } = props;\n  return (\n    <div className={`CommentWrite ${commentWriteOnType ? \"commentMode\" : \"\"}`}>\n      <div className=\"UserTag\">\n        <div>\n          <UserIconWrapper\n            iconSrc={isLoggedIn ? user.icon : userDefaultImg}\n            userDefault={isLoggedIn ? false : true}\n          />\n        </div>\n      </div>\n\n      <form className=\"CommentWriteForm\">\n        <TextareaAutosize\n          className=\"CommentWriteForm__textarea\"\n          onChange={handleInputChange}\n          onKeyDown={handleButtonHeightChange}\n          value={inputValue}\n          placeholder={\n            isLoggedIn\n              ? props.intl.formatMessage({\n                  id: \"ID_COMMENT_TEXTAREA_PH\"\n                })\n              : props.intl.formatMessage({\n                  id: \"ID_COMMENT_TEXTAREA_LOGIN\"\n                })\n          }\n          disabled={!isLoggedIn}\n          onFocus={() => handleInputFocus(type)}\n        />\n         <div className={`CommentWriteForm__btnRow ${commentWriteOnType === type ? \"show\" : \"hidden\"}`}>\n          <button\n            id=\"cancelBtn\"\n            className=\"CommentWriteForm__cancelBtn\"\n            onClick={() => handleInputFocus('')}\n          >\n            {props.intl.formatMessage({\n              id: \"ID_COMMENT_CANCEL_BUTTON\"\n            })}\n          </button>\n          <input\n            id=\"submitBtn\"\n            className={`CommentWriteForm__submitBtn submitBtn--${\n              isLoggedIn ? \"on\" : \"off\"\n            }`}\n            type=\"submit\"\n            onClick={handleAddComment}\n            value={props.intl.formatMessage({\n              id: \"ID_COMMENT_SUBMITBTN\"\n            })}\n            disabled={!isLoggedIn}\n          />\n        </div>\n      </form>\n    </div>\n  );\n});\n\nconst EditView = injectIntl(props => {\n  const {\n    handleSubmit,\n    handleInputChange,\n    inputValue,\n    targetUser,\n    handleCancel\n  } = props;\n  return (\n    <form className=\"CommentWriteForm EditCommentWriteForm\">\n      {targetUser && (\n        <span className=\"CommentItem__targetUser\">{targetUser.name}</span>\n      )}\n      <TextareaAutosize\n        className=\"CommentWriteForm__textarea\"\n        onChange={handleInputChange}\n        value={inputValue}\n        placeholder={props.intl.formatMessage({\n          id: \"ID_COMMENT_TEXTAREA_PH\"\n        })}\n      />\n      <div\n        className=\"CommentWriteForm__btnRow Edit\"\n        style={{ marginBottom: \"30px\" }}\n      >\n        <button\n          className=\"CommentWriteForm__cancelBtn\"\n          id=\"cancleBtn\"\n          type=\"button\"\n          onClick={handleCancel}\n        >\n          {props.intl.formatMessage({ id: \"ID_COMMENT_CANCEL_BUTTON\" })}\n        </button>\n        <input\n          className=\"CommentWriteForm__submitBtn\"\n          id=\"editBtn\"\n          type=\"submit\"\n          onClick={handleSubmit}\n          value={props.intl.formatMessage({ id: \"ID_COMMENT_EDIT_BUTTON\" })}\n        />\n      </div>\n    </form>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}