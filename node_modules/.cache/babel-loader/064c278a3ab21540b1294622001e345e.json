{"ast":null,"code":"import _defineProperty from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Mypage/Container.js\";\nimport React, { Component } from \"react\";\nimport View from \"./View\";\nimport moment from \"moment\";\nimport * as userInfoActions from \"../../Common/Store/Reducer/UserInfo\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { injectIntl } from \"react-intl\"; // import sha256 from \"../../Common/Util/SHA256\";\n\nimport PublishPopup from \"../../Common/Component/Publish\";\nimport Popup, { showPopUp } from \"../../Common/Component/PopUp\";\nimport NameSetting from \"./Components/NameSetting\"; // import * as TrackingUtil from \"../../Common/Util/TrackingUtil\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.componentDidMount = function () {\n      // TrackingUtil.sendPageEvent(\"/mypage\", this.props.userinfo.email);\n      _this.getMyPublishedProjects();\n\n      _this.getUserProfile();\n\n      window.addEventListener(\"scroll\", _this.onScroll);\n    };\n\n    _this.getUserProfile =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var profile;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.props.userinfo) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return request.userProfile({\n                email: _this.props.userinfo.email\n              }).then(function (res) {\n                return res.json();\n              }).catch(function (e) {\n                return console.error(e);\n              });\n\n            case 3:\n              profile = _context.sent;\n\n              _this.setState({\n                profile: profile\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.getMyPublishedProjects = function () {\n      _this.setState({\n        loading: true\n      }, function () {\n        var params = {\n          email: _this.props.userinfo.email,\n          offset: _this.state.publishedOffset,\n          limit: _this.limit\n        };\n        request.getPublishedProjectsByLive(params).then(function (res) {\n          return res.json();\n        }).then(function (result) {\n          var rows = result.rows;\n\n          _this.setState(function (prev) {\n            return {\n              publisheds: [].concat(prev.publisheds, rows),\n              loading: false\n            };\n          }, function () {\n            if (_this.state.publisheds.length < 20) {\n              window.removeEventListener(\"scroll\", _this.onScroll);\n            }\n          });\n        }).catch(function (err) {\n          return console.error(err);\n        });\n      });\n    };\n\n    _this.onScroll = function (e) {\n      if (window.innerHeight + window.pageYOffset >= document.body.offsetHeight - 100) {\n        var _this$state = _this.state,\n            publishedOffset = _this$state.publishedOffset,\n            selectedTab = _this$state.selectedTab,\n            loading = _this$state.loading;\n\n        if (!loading) {\n          switch (selectedTab) {\n            case \"퍼블리싱\":\n              _this.setState({\n                publishedOffset: publishedOffset + _this.limit\n              }, function () {\n                _this.getMyPublishedProjects();\n              });\n\n              break;\n\n            case \"내 업적\":\n              break;\n\n            case \"나의 활동\":\n              break;\n\n            default:\n              console.warn(\"unhandled category\", selectedTab);\n              break;\n          }\n        }\n      }\n    };\n\n    _this.handleSelectTab = function (tab) {\n      if (tab === _this.state.selectedTab) return;\n\n      if (tab === _this.TAB_TYPE.PUBLISH) {\n        window.addEventListener(\"scroll\", _this.onScroll);\n      } else {\n        window.removeEventListener(\"scroll\", _this.onScroll);\n      }\n\n      _this.setState({\n        selectedTab: tab\n      });\n    };\n\n    _this.onClickPublishedSetting = function (published) {\n      showPopUp(React.createElement(PublishPopup, {\n        pId: published.pId,\n        isDeveloping: false,\n        publishCallback: _this.updatePublishedInfo,\n        isBuilder: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), {\n        defaultPadding: false,\n        scrollable: true\n      });\n    };\n\n    _this.updatePublishedInfo = function (params) {\n      _this.setState(function (prev) {\n        return {\n          publisheds: prev.publisheds.map(function (item) {\n            if (item.pId === params.pId) {\n              return _objectSpread({}, item, params);\n            } else {\n              return item;\n            }\n          })\n        };\n      });\n    };\n\n    _this.onClickSettingBtn =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              request.getUserNameHistory({\n                email: _this.props.userinfo.email\n              }).then(function (res) {\n                return res.json();\n              }).then(function (json) {\n                var lastDateOfRename = json.history && moment(json.history.createdAt);\n\n                if (lastDateOfRename) {\n                  lastDateOfRename = moment.duration(moment().diff(lastDateOfRename)).asDays();\n                }\n\n                showPopUp(React.createElement(NameSetting, {\n                  intl: _this.props.intl,\n                  handleNameSettingChange: _this.handleNameSettingChange,\n                  profile: _this.props.userinfo,\n                  handleSubmit: _this.handleSubmit,\n                  onClickNameSettingInit: _this.onClickNameSettingInit,\n                  lastDateOfRename: lastDateOfRename,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 195\n                  },\n                  __self: this\n                }), {\n                  darkmode: true,\n                  defaultPadding: false\n                });\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.getUserNameValid = function (name) {\n      return name && name.length >= 2;\n    };\n\n    _this.handleNameSettingChange = function (e) {\n      var target = e.target;\n\n      if (target.name === \"userName\") {\n        _this.setState(function (state) {\n          return {\n            changeUserName: target.value,\n            warnPW: !_this.getUserNameValid(target.value)\n          };\n        }, function () {\n          var nameSettingEl = document.getElementById(\"userName\").style;\n\n          if (_this.state.warnPW) {\n            nameSettingEl.borderColor = \"#ff0c0c\";\n          } else {\n            nameSettingEl.borderColor = \"#3f3f3f\";\n          }\n        });\n      } else {\n        _this.setState(_defineProperty({}, target.name, target.value));\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var params = {\n        email: _this.props.userinfo.email\n      };\n      var name = _this.state.changeUserName;\n      var organization = _this.state.userOrganization;\n      var statusMessage = _this.state.userStatusMsg;\n      var intl = _this.props.intl; // Name check\n\n      var warnName = !_this.getUserNameValid(name);\n\n      if (warnName && name.length > 0) {\n        return;\n      }\n\n      if (name.length > 0 && name !== _this.state.userName) {\n        showPopUp(React.createElement(Popup.TwoButton, {\n          confirmAction: function confirmAction() {\n            params.name = name;\n\n            _this.handleSendSubmit(params, organization, statusMessage, intl);\n\n            _this.setState({\n              userName: name\n            });\n          },\n          intl: _this.props.intl,\n          titleId: \"ID_MYPAGE_NAME_CHANGE_TITLE\",\n          confirmButtonNameId: \"ID_MYPAGE_NAME_CHNAGE_BTN\",\n          cancelButtonNameId: \"ID_MYPAGE_NAME_CANCLE\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }));\n      } else {\n        _this.handleSendSubmit(params, organization, statusMessage, intl);\n      }\n    };\n\n    _this.handleSendSubmit = function (params, organization, statusMessage, intl) {\n      // Organization check\n      if (organization && organization.length > 0) {\n        params.organization = organization;\n      } // StatusMessage check\n\n\n      if (statusMessage && statusMessage.length > 0) {\n        params.statusMessage = statusMessage;\n      }\n\n      try {\n        request.updateUserInfo(params).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            _this.props.updateUserInfo(params);\n\n            showPopUp(React.createElement(Popup.OneButton, {\n              titleId: \"ID_SETTING_ALERT_TITLE_SUCC\",\n              subtitleId: \"ID_SETTING_ALERT_PROFILE_SUCC\",\n              buttonNameId: \"ID_SETTING_ALERT_CLOSEBTN\",\n              intl: _this.props.intl,\n              buttonAction: function buttonAction() {\n                _this.getUserProfile();\n\n                _this.setState({\n                  warnPW: false\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 285\n              },\n              __self: this\n            }), {\n              darkmode: true,\n              defaultPadding: true\n            });\n          } else {\n            if (json.message === \"unavailableName\") {\n              showPopUp(React.createElement(Popup.OneButton, {\n                title: intl.formatMessage({\n                  id: \"ID_MYPAGE_NAME_USERNAME_OFFICIAL_WARNING\"\n                }),\n                subtitle: intl.formatMessage({\n                  id: \"ID_SETTING_ALERT_RETRY\"\n                }),\n                buttonNameId: intl.formatMessage({\n                  id: \"ID_SETTING_ALERT_CLOSEBTN\"\n                }),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 302\n                },\n                __self: this\n              }), {\n                darkmode: true\n              });\n            } else {\n              showPopUp(React.createElement(Popup.OneButton, {\n                title: intl.formatMessage({\n                  id: \"ID_SETTING_ALERT_TITLE_FAIL\"\n                }),\n                subtitle: intl.formatMessage({\n                  id: \"ID_SETTING_ALERT_RETRY\"\n                }),\n                buttonNameId: intl.formatMessage({\n                  id: \"ID_SETTING_ALERT_CLOSEBTN\"\n                }),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 317\n                },\n                __self: this\n              }), {\n                darkmode: true\n              });\n            }\n          }\n        });\n      } catch (err) {\n        showPopUp(React.createElement(Popup.OneButton, {\n          title: intl.formatMessage({\n            id: \"ID_SETTING_ALERT_TITLE_FAIL\"\n          }),\n          subtitle: intl.formatMessage({\n            id: \"ID_SETTING_ALERT_RETRY\"\n          }),\n          buttonNameId: intl.formatMessage({\n            id: \"ID_SETTING_ALERT_CLOSEBTN\"\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }), {\n          darkmode: true\n        });\n        console.error(err);\n      }\n    };\n\n    _this.onClickMobileTooltip = function (tooltip) {\n      showPopUp(React.createElement(Popup.OneButton, {\n        title: tooltip,\n        buttonNameId: \"ID_MYPAGE_TOOLTIP_TIER_CONFIRM\",\n        intl: _this.props.intl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), {\n        darkmode: true,\n        dismissButton: false\n      });\n    };\n\n    _this.handleProjectLive =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(project) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                project.live = !project.live;\n\n                if (!project.tags) {\n                  project.tags = [];\n                }\n\n                _context3.prev = 2;\n                _context3.next = 5;\n                return request.postPublishedProject(project);\n\n              case 5:\n                _this.updateItemInfo(project);\n\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](2);\n                console.error(_context3.t0);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.updateItemInfo = function (params) {\n      _this.setState(function (state) {\n        return {\n          publisheds: state.publisheds.map(function (item) {\n            if (item.pId === params.pId) {\n              return _objectSpread({}, item, params);\n            } else {\n              return item;\n            }\n          })\n        };\n      });\n    };\n\n    _this.TAB_TYPE = {\n      // QUEST: intl.formatMessage({\n      //   id: `ID_MYPAGE_TABTAPE_QUEST`\n      // }),\n      PUBLISH: _this.props.intl.formatMessage({\n        id: \"ID_MYPAGE_TABTAPE_PUBLISH\"\n      }) // ACTIVITY: PUBLISH: intl.formatMessage({\n      //   id: `ID_MYPAGE_TABTAPE_ACTIVITY`\n      // })\n\n    };\n    _this.limit = 20;\n    _this.state = {\n      profile: _this.props.userinfo,\n      selectedTab: _this.TAB_TYPE.PUBLISH,\n      loading: false,\n      // publisheds\n      publisheds: [],\n      publishedOffset: 0,\n      // name setting\n      userName: _this.props.userinfo.name,\n      changeUserName: \"\",\n      userStatusMsg: _this.props.userinfo.statusMessage ? _this.props.userinfo.statusMessage : null,\n      userOrganization: _this.props.userinfo.userOrganization ? _this.props.userinfo.userOrganization : null\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.onScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.userinfo.email) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        });\n      }\n\n      var _this$state2 = this.state,\n          selectedTab = _this$state2.selectedTab,\n          publisheds = _this$state2.publisheds,\n          profile = _this$state2.profile;\n      return React.createElement(View, {\n        match: this.props.match,\n        intl: this.props.intl,\n        profile: profile,\n        selectedTab: selectedTab,\n        handleSelectTab: this.handleSelectTab,\n        TAB_TYPE: this.TAB_TYPE,\n        email: this.props.userinfo.email,\n        publisheds: publisheds,\n        onClickPublishedSetting: this.onClickPublishedSetting,\n        onClickSettingBtn: this.onClickSettingBtn,\n        onClickMobileTooltip: this.onClickMobileTooltip,\n        handleCheck: this.handleCheck,\n        handleProjectLive: this.handleProjectLive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    userinfo: state.userinfo\n  };\n}, {\n  updateUserInfo: userInfoActions.updateUserInfo\n})(injectIntl(withRouter(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Mypage/Container.js"],"names":["React","Component","View","moment","userInfoActions","connect","withRouter","Redirect","request","injectIntl","PublishPopup","Popup","showPopUp","NameSetting","Container","props","componentDidMount","getMyPublishedProjects","getUserProfile","window","addEventListener","onScroll","userinfo","userProfile","email","then","res","json","catch","e","console","error","profile","setState","loading","params","offset","state","publishedOffset","limit","getPublishedProjectsByLive","result","rows","prev","publisheds","concat","length","removeEventListener","err","innerHeight","pageYOffset","document","body","offsetHeight","selectedTab","warn","handleSelectTab","tab","TAB_TYPE","PUBLISH","onClickPublishedSetting","published","pId","updatePublishedInfo","defaultPadding","scrollable","map","item","onClickSettingBtn","getUserNameHistory","lastDateOfRename","history","createdAt","duration","diff","asDays","intl","handleNameSettingChange","handleSubmit","onClickNameSettingInit","darkmode","getUserNameValid","name","target","changeUserName","value","warnPW","nameSettingEl","getElementById","style","borderColor","preventDefault","organization","userOrganization","statusMessage","userStatusMsg","warnName","userName","handleSendSubmit","updateUserInfo","success","message","formatMessage","id","onClickMobileTooltip","tooltip","dismissButton","handleProjectLive","project","live","tags","postPublishedProject","updateItemInfo","match","handleCheck"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport View from \"./View\";\nimport moment from \"moment\";\nimport * as userInfoActions from \"../../Common/Store/Reducer/UserInfo\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport * as request from \"../../Common/Util/HTTPRequest\";\nimport { injectIntl } from \"react-intl\";\n// import sha256 from \"../../Common/Util/SHA256\";\nimport PublishPopup from \"../../Common/Component/Publish\";\nimport Popup, { showPopUp } from \"../../Common/Component/PopUp\";\nimport NameSetting from \"./Components/NameSetting\";\n// import * as TrackingUtil from \"../../Common/Util/TrackingUtil\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    this.TAB_TYPE = {\n      // QUEST: intl.formatMessage({\n      //   id: `ID_MYPAGE_TABTAPE_QUEST`\n      // }),\n      PUBLISH: this.props.intl.formatMessage({\n        id: `ID_MYPAGE_TABTAPE_PUBLISH`\n      }),\n      // ACTIVITY: PUBLISH: intl.formatMessage({\n      //   id: `ID_MYPAGE_TABTAPE_ACTIVITY`\n      // })\n    };\n\n    this.limit = 20;\n    this.state = {\n      profile: this.props.userinfo,\n      selectedTab: this.TAB_TYPE.PUBLISH,\n      loading: false,\n\n      // publisheds\n      publisheds: [],\n      publishedOffset: 0,\n\n      // name setting\n      userName: this.props.userinfo.name,\n      changeUserName: \"\",\n      userStatusMsg: this.props.userinfo.statusMessage\n        ? this.props.userinfo.statusMessage\n        : null,\n      userOrganization: this.props.userinfo.userOrganization\n        ? this.props.userinfo.userOrganization\n        : null\n    };\n  }\n\n  componentDidMount = () => {\n    // TrackingUtil.sendPageEvent(\"/mypage\", this.props.userinfo.email);\n    this.getMyPublishedProjects();\n    this.getUserProfile();\n    window.addEventListener(\"scroll\", this.onScroll);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.onScroll);\n  }\n\n  getUserProfile = async () => {\n    if (this.props.userinfo) {\n      const profile = await request\n        .userProfile({ email: this.props.userinfo.email })\n        .then(res => res.json())\n        .catch(e => console.error(e));\n      this.setState({\n        profile\n      });\n    }\n  };\n\n  getMyPublishedProjects = () => {\n    this.setState(\n      {\n        loading: true\n      },\n      () => {\n        let params = {\n          email: this.props.userinfo.email,\n          offset: this.state.publishedOffset,\n          limit: this.limit\n        };\n        request\n          .getPublishedProjectsByLive(params)\n          .then(res => res.json())\n          .then(result => {\n            const { rows } = result;\n            this.setState(\n              prev => ({\n                publisheds: [].concat(prev.publisheds, rows),\n                loading: false\n              }),\n              () => {\n                if (this.state.publisheds.length < 20) {\n                  window.removeEventListener(\"scroll\", this.onScroll);\n                }\n              }\n            );\n          })\n          .catch(err => console.error(err));\n      }\n    );\n  };\n\n  onScroll = e => {\n    if (\n      window.innerHeight + window.pageYOffset >=\n      document.body.offsetHeight - 100\n    ) {\n      const { publishedOffset, selectedTab, loading } = this.state;\n      if (!loading) {\n        switch (selectedTab) {\n          case \"퍼블리싱\":\n            this.setState(\n              {\n                publishedOffset: publishedOffset + this.limit\n              },\n              () => {\n                this.getMyPublishedProjects();\n              }\n            );\n            break;\n          case \"내 업적\":\n            break;\n          case \"나의 활동\":\n            break;\n          default:\n            console.warn(\"unhandled category\", selectedTab);\n            break;\n        }\n      }\n    }\n  };\n\n  handleSelectTab = tab => {\n    if (tab === this.state.selectedTab) return;\n    if (tab === this.TAB_TYPE.PUBLISH) {\n      window.addEventListener(\"scroll\", this.onScroll);\n    } else {\n      window.removeEventListener(\"scroll\", this.onScroll);\n    }\n    this.setState({\n      selectedTab: tab\n    });\n  };\n\n  /** Publish Tab */\n  onClickPublishedSetting = published => {\n    showPopUp(\n      <PublishPopup\n        pId={published.pId}\n        isDeveloping={false}\n        publishCallback={this.updatePublishedInfo}\n        isBuilder={false}\n      />,\n      { defaultPadding: false, scrollable: true }\n    );\n  };\n\n  updatePublishedInfo = params => {\n    this.setState(prev => ({\n      publisheds: prev.publisheds.map(item => {\n        if (item.pId === params.pId) {\n          return {\n            ...item,\n            ...params\n          };\n        } else {\n          return item;\n        }\n      })\n    }));\n  };\n\n  /** Setting (NameSetting) */\n  onClickSettingBtn = async () => {\n    request\n      .getUserNameHistory({\n        email: this.props.userinfo.email\n      })\n      .then(res => res.json())\n      .then(json => {\n        let lastDateOfRename = json.history && moment(json.history.createdAt);\n        if (lastDateOfRename) {\n          lastDateOfRename = moment\n            .duration(moment().diff(lastDateOfRename))\n            .asDays();\n        }\n\n        showPopUp(\n          <NameSetting\n            intl={this.props.intl}\n            handleNameSettingChange={this.handleNameSettingChange}\n            profile={this.props.userinfo}\n            handleSubmit={this.handleSubmit}\n            onClickNameSettingInit={this.onClickNameSettingInit}\n            lastDateOfRename={lastDateOfRename}\n          />,\n          { darkmode: true, defaultPadding: false }\n        );\n      });\n  };\n\n  getUserNameValid = name => {\n    return name && name.length >= 2;\n  };\n\n  handleNameSettingChange = e => {\n    const target = e.target;\n    if (target.name === \"userName\") {\n      this.setState(\n        state => ({\n          changeUserName: target.value,\n          warnPW: !this.getUserNameValid(target.value)\n        }),\n        () => {\n          const nameSettingEl = document.getElementById(\"userName\").style;\n          if (this.state.warnPW) {\n            nameSettingEl.borderColor = \"#ff0c0c\";\n          } else {\n            nameSettingEl.borderColor = \"#3f3f3f\";\n          }\n        }\n      );\n    } else {\n      this.setState({\n        [target.name]: target.value\n      });\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const params = { email: this.props.userinfo.email };\n    const name = this.state.changeUserName;\n    const organization = this.state.userOrganization;\n    const statusMessage = this.state.userStatusMsg;\n    const { intl } = this.props;\n    // Name check\n    const warnName = !this.getUserNameValid(name);\n    if (warnName && name.length > 0) {\n      return;\n    }\n\n    if (name.length > 0 && name !== this.state.userName) {\n      showPopUp(\n        <Popup.TwoButton\n          confirmAction={() => {\n            params.name = name;\n            this.handleSendSubmit(params, organization, statusMessage, intl);\n            this.setState({ userName: name });\n          }}\n          intl={this.props.intl}\n          titleId=\"ID_MYPAGE_NAME_CHANGE_TITLE\"\n          confirmButtonNameId=\"ID_MYPAGE_NAME_CHNAGE_BTN\"\n          cancelButtonNameId=\"ID_MYPAGE_NAME_CANCLE\"\n        />\n      );\n    } else {\n      this.handleSendSubmit(params, organization, statusMessage, intl);\n    }\n  };\n\n  handleSendSubmit = (params, organization, statusMessage, intl) => {\n    // Organization check\n    if (organization && organization.length > 0) {\n      params.organization = organization;\n    }\n    // StatusMessage check\n    if (statusMessage && statusMessage.length > 0) {\n      params.statusMessage = statusMessage;\n    }\n    try {\n      request\n        .updateUserInfo(params)\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            this.props.updateUserInfo(params);\n            showPopUp(\n              <Popup.OneButton\n                titleId=\"ID_SETTING_ALERT_TITLE_SUCC\"\n                subtitleId=\"ID_SETTING_ALERT_PROFILE_SUCC\"\n                buttonNameId=\"ID_SETTING_ALERT_CLOSEBTN\"\n                intl={this.props.intl}\n                buttonAction={() => {\n                  this.getUserProfile();\n                  this.setState({\n                    warnPW: false\n                  });\n                }}\n              />,\n              { darkmode: true, defaultPadding: true }\n            );\n          } else {\n            if (json.message === \"unavailableName\") {\n              showPopUp(\n                <Popup.OneButton\n                  title={intl.formatMessage({\n                    id: \"ID_MYPAGE_NAME_USERNAME_OFFICIAL_WARNING\"\n                  })}\n                  subtitle={intl.formatMessage({\n                    id: \"ID_SETTING_ALERT_RETRY\"\n                  })}\n                  buttonNameId={intl.formatMessage({\n                    id: \"ID_SETTING_ALERT_CLOSEBTN\"\n                  })}\n                />,\n                { darkmode: true }\n              );\n            } else {\n              showPopUp(\n                <Popup.OneButton\n                  title={intl.formatMessage({\n                    id: \"ID_SETTING_ALERT_TITLE_FAIL\"\n                  })}\n                  subtitle={intl.formatMessage({\n                    id: \"ID_SETTING_ALERT_RETRY\"\n                  })}\n                  buttonNameId={intl.formatMessage({\n                    id: \"ID_SETTING_ALERT_CLOSEBTN\"\n                  })}\n                />,\n                { darkmode: true }\n              );\n            }\n          }\n        });\n    } catch (err) {\n      showPopUp(\n        <Popup.OneButton\n          title={intl.formatMessage({\n            id: \"ID_SETTING_ALERT_TITLE_FAIL\"\n          })}\n          subtitle={intl.formatMessage({\n            id: \"ID_SETTING_ALERT_RETRY\"\n          })}\n          buttonNameId={intl.formatMessage({\n            id: \"ID_SETTING_ALERT_CLOSEBTN\"\n          })}\n        />,\n        { darkmode: true }\n      );\n\n      console.error(err);\n    }\n  };\n\n  onClickMobileTooltip = tooltip => {\n    showPopUp(\n      <Popup.OneButton\n        title={tooltip}\n        buttonNameId=\"ID_MYPAGE_TOOLTIP_TIER_CONFIRM\"\n        intl={this.props.intl}\n      />,\n      { darkmode: true, dismissButton: false }\n    );\n  };\n\n  handleProjectLive = async project => {\n    project.live = !project.live;\n    if (!project.tags) {\n      project.tags = [];\n    }\n    try {\n      await request.postPublishedProject(project);\n      this.updateItemInfo(project);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  updateItemInfo = params => {\n    this.setState(state => ({\n      publisheds: state.publisheds.map(item => {\n        if (item.pId === params.pId) {\n          return {\n            ...item,\n            ...params\n          };\n        } else {\n          return item;\n        }\n      })\n    }));\n  };\n\n  render() {\n    if (!this.props.userinfo.email) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const {\n      selectedTab,\n      publisheds,\n      profile\n    } = this.state;\n    return (\n      <View\n        match={this.props.match}\n        intl={this.props.intl}\n        profile={profile}\n        selectedTab={selectedTab}\n        handleSelectTab={this.handleSelectTab}\n        TAB_TYPE={this.TAB_TYPE}\n        email={this.props.userinfo.email}\n        publisheds={publisheds}\n        onClickPublishedSetting={this.onClickPublishedSetting}\n        onClickSettingBtn={this.onClickSettingBtn}\n        onClickMobileTooltip={this.onClickMobileTooltip}\n        handleCheck={this.handleCheck}\n        handleProjectLive={this.handleProjectLive}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({ userinfo: state.userinfo }),\n  {\n    updateUserInfo: userInfoActions.updateUserInfo\n  }\n)(injectIntl(withRouter(Container)));\n"]},"metadata":{},"sourceType":"module"}