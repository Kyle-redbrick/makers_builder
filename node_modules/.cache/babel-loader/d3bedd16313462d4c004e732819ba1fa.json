{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sprite/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as sceneActions from \"../../Store/Reducer/scene\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport View from \"./View\";\nimport * as TrackingUtil from \"../../../../Common/Util/TrackingUtil\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Container)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSelectSprite = function (name, type) {\n      var selectedSceneId = _this.props.selectedSceneId;\n      TrackingUtil.sendGAEvent({\n        category: \"Builder\",\n        action: \"ClickSprite\",\n        label: \"SpriteView\"\n      });\n\n      _this.props.selectSprite(selectedSceneId, name, type, \"SpriteView\");\n    };\n\n    _this.handleRemoveSprite = function (name) {\n      TrackingUtil.sendGAEvent({\n        category: \"Builder\",\n        action: \"DeleteSprite\",\n        label: \"SpriteView\"\n      });\n      var _this$props = _this.props,\n          spriteIds = _this$props.spriteIds,\n          selectedObject = _this$props.selectedObject;\n      var index = spriteIds.findIndex(function (key) {\n        return key === name;\n      });\n      index = index > 0 ? index - 1 : 1;\n      var nextSelectedName = spriteIds[index];\n      showPopUp(React.createElement(PopUp.TwoButton, {\n        confirmAction: function confirmAction() {\n          var selectedSceneId = _this.props.selectedSceneId;\n\n          _this.props.removeSprite(selectedSceneId, name);\n\n          _this.handleSelectSprite(nextSelectedName);\n        },\n        intl: _this.props.intl,\n        titleId: \"ID_BUILDER_ALERT_MSG_REMOVE_QUESTION\",\n        titleValue: {\n          spriteName: selectedObject.name\n        },\n        subtitleId: \"ID_BUILDER_ALERT_MSG_REMOVE_QUESTION_SUBTITLE\",\n        confirmButtonNameId: \"ID_BUILDER_ALERT_MSG_REMOVE_SPRITE_CONFIRM\",\n        cancelButtonNameId: \"ID_BUILDER_ALERT_MSG_REMOVE_SCENE_CANCEL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    };\n\n    _this.moveDndSprite = function (dragIndex, hoverIndex) {\n      var _this$props2 = _this.props,\n          selectedSceneId = _this$props2.selectedSceneId,\n          reorderSprite = _this$props2.reorderSprite;\n      reorderSprite(selectedSceneId, dragIndex, hoverIndex);\n    };\n\n    _this.handleRemoveAll = function () {\n      TrackingUtil.sendGAEvent({\n        category: \"Builder\",\n        action: \"SceneActions\",\n        label: \"DeleteAllSprite\"\n      });\n      showPopUp(React.createElement(PopUp.TwoButton, {\n        confirmAction: function confirmAction() {\n          var selectedSceneId = _this.props.selectedSceneId;\n\n          _this.props.removeAllSprite(selectedSceneId);\n        },\n        intl: _this.props.intl,\n        titleId: \"ID_BUILDER_ALERT_MSG_REMOVEALL_QUESTION\",\n        confirmButtonNameId: \"ID_BUILDER_ALERT_MSG_REMOVE_SCENE_CONFIRM\",\n        cancelButtonNameId: \"ID_BUILDER_ALERT_MSG_REMOVE_SCENE_CANCEL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleHideLocks = function () {\n      TrackingUtil.sendGAEvent({\n        category: \"Builder\",\n        action: \"SceneActions\",\n        label: \"LockHide\"\n      });\n      var _this$props3 = _this.props,\n          selectedSceneId = _this$props3.selectedSceneId,\n          selectedScene = _this$props3.selectedScene;\n\n      _this.props.hideLockSprite(selectedSceneId, !selectedScene.isHiddenLockSprites);\n    };\n\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          sprites = _this$props4.sprites,\n          spriteIds = _this$props4.spriteIds,\n          selectedObject = _this$props4.selectedObject,\n          selectedScene = _this$props4.selectedScene,\n          handleSelectTab = _this$props4.handleSelectTab;\n      var handleSelectSprite = this.handleSelectSprite,\n          handleRemoveSprite = this.handleRemoveSprite,\n          moveDndSprite = this.moveDndSprite,\n          handleRemoveAll = this.handleRemoveAll,\n          handleHideLocks = this.handleHideLocks;\n      return React.createElement(View, {\n        sprites: sprites,\n        spriteIds: spriteIds,\n        selectedObject: selectedObject,\n        handleSelectSprite: handleSelectSprite,\n        handleRemoveSprite: handleRemoveSprite,\n        handleSelectTab: handleSelectTab,\n        moveDndSprite: moveDndSprite,\n        selectedScene: selectedScene,\n        handleRemoveAll: handleRemoveAll,\n        handleHideLocks: handleHideLocks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    selectedScene: state.scene.scenes[state.interaction.selected.scene],\n    sprites: state.scene.scenes[state.interaction.selected.scene].sprites,\n    spriteIds: state.scene.scenes[state.interaction.selected.scene].spriteIds,\n    selectedSceneId: state.interaction.selected.scene,\n    selectedObject: state.interaction.selected.objects[state.interaction.selected.scene]\n  };\n}, {\n  selectSprite: interactionActions.selectSprite,\n  removeSprite: sceneActions.removeSprite,\n  reorderSprite: sceneActions.reorderSprite,\n  removeAllSprite: sceneActions.removeAllSprite,\n  hideLockSprite: sceneActions.hideLockSprite\n})(injectIntl(Container));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Sprite/Container.js"],"names":["React","Component","connect","sceneActions","interactionActions","injectIntl","PopUp","showPopUp","View","TrackingUtil","Container","handleSelectSprite","name","type","selectedSceneId","props","sendGAEvent","category","action","label","selectSprite","handleRemoveSprite","spriteIds","selectedObject","index","findIndex","key","nextSelectedName","removeSprite","intl","spriteName","moveDndSprite","dragIndex","hoverIndex","reorderSprite","handleRemoveAll","removeAllSprite","handleHideLocks","selectedScene","hideLockSprite","isHiddenLockSprites","sprites","handleSelectTab","state","scene","scenes","interaction","selected","objects"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as sceneActions from \"../../Store/Reducer/scene\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport View from \"./View\";\nimport * as TrackingUtil from \"../../../../Common/Util/TrackingUtil\";\n\nclass Container extends Component {\n  handleSelectSprite = (name, type) => {\n    const { selectedSceneId } = this.props;\n    TrackingUtil.sendGAEvent({\n      category: \"Builder\",\n      action: `ClickSprite`,\n      label: \"SpriteView\"\n    });\n    this.props.selectSprite(selectedSceneId, name, type, \"SpriteView\");\n  };\n\n  handleRemoveSprite = name => {\n    TrackingUtil.sendGAEvent({\n      category: \"Builder\",\n      action: `DeleteSprite`,\n      label: \"SpriteView\"\n    });\n    const { spriteIds, selectedObject } = this.props;\n    let index = spriteIds.findIndex(key => key === name);\n    index = index > 0 ? index - 1 : 1;\n    const nextSelectedName = spriteIds[index];\n\n    showPopUp(\n      <PopUp.TwoButton\n        confirmAction={() => {\n          const { selectedSceneId } = this.props;\n          this.props.removeSprite(selectedSceneId, name);\n          this.handleSelectSprite(nextSelectedName);\n        }}\n        intl={this.props.intl}\n        titleId={\"ID_BUILDER_ALERT_MSG_REMOVE_QUESTION\"}\n        titleValue={{ spriteName: selectedObject.name }}\n        subtitleId=\"ID_BUILDER_ALERT_MSG_REMOVE_QUESTION_SUBTITLE\"\n        confirmButtonNameId=\"ID_BUILDER_ALERT_MSG_REMOVE_SPRITE_CONFIRM\"\n        cancelButtonNameId=\"ID_BUILDER_ALERT_MSG_REMOVE_SCENE_CANCEL\"\n      />\n    );\n  };\n\n  moveDndSprite = (dragIndex, hoverIndex) => {\n    const { selectedSceneId, reorderSprite } = this.props;\n    reorderSprite(selectedSceneId, dragIndex, hoverIndex);\n  };\n\n  handleRemoveAll = () => {\n    TrackingUtil.sendGAEvent({\n      category: \"Builder\",\n      action: `SceneActions`,\n      label: \"DeleteAllSprite\"\n    });\n    showPopUp(\n      <PopUp.TwoButton\n        confirmAction={() => {\n          const { selectedSceneId } = this.props;\n          this.props.removeAllSprite(selectedSceneId);\n        }}\n        intl={this.props.intl}\n        titleId=\"ID_BUILDER_ALERT_MSG_REMOVEALL_QUESTION\"\n        confirmButtonNameId=\"ID_BUILDER_ALERT_MSG_REMOVE_SCENE_CONFIRM\"\n        cancelButtonNameId=\"ID_BUILDER_ALERT_MSG_REMOVE_SCENE_CANCEL\"\n      />\n    );\n  };\n\n  handleHideLocks = () => {\n    TrackingUtil.sendGAEvent({\n      category: \"Builder\",\n      action: `SceneActions`,\n      label: \"LockHide\"\n    });\n    const { selectedSceneId, selectedScene } = this.props;\n    this.props.hideLockSprite(\n      selectedSceneId,\n      !selectedScene.isHiddenLockSprites\n    );\n  };\n\n  render() {\n    const {\n      sprites,\n      spriteIds,\n      selectedObject,\n      selectedScene,\n      handleSelectTab\n    } = this.props;\n    const {\n      handleSelectSprite,\n      handleRemoveSprite,\n      moveDndSprite,\n      handleRemoveAll,\n      handleHideLocks\n    } = this;\n    return (\n      <View\n        sprites={sprites}\n        spriteIds={spriteIds}\n        selectedObject={selectedObject}\n        handleSelectSprite={handleSelectSprite}\n        handleRemoveSprite={handleRemoveSprite}\n        handleSelectTab={handleSelectTab}\n        moveDndSprite={moveDndSprite}\n        selectedScene={selectedScene}\n        handleRemoveAll={handleRemoveAll}\n        handleHideLocks={handleHideLocks}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    selectedScene: state.scene.scenes[state.interaction.selected.scene],\n    sprites: state.scene.scenes[state.interaction.selected.scene].sprites,\n    spriteIds: state.scene.scenes[state.interaction.selected.scene].spriteIds,\n    selectedSceneId: state.interaction.selected.scene,\n    selectedObject:\n      state.interaction.selected.objects[state.interaction.selected.scene]\n  }),\n  {\n    selectSprite: interactionActions.selectSprite,\n    removeSprite: sceneActions.removeSprite,\n    reorderSprite: sceneActions.reorderSprite,\n    removeAllSprite: sceneActions.removeAllSprite,\n    hideLockSprite: sceneActions.hideLockSprite\n  }\n)(injectIntl(Container));\n"]},"metadata":{},"sourceType":"module"}