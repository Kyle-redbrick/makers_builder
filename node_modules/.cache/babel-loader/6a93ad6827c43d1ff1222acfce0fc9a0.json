{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Socket/Container.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\"; // import uuidv4 from \"uuid/v4\";\n\nimport { URL, PAGETYPE } from \"../../../../Common/Util/Constant\";\nimport * as socketActions from \"../../Store/Reducer/socket\";\nimport * as chatActions from \"../../Store/Reducer/chat\";\nimport { showPopUp } from \"../../../../Common/Component/PopUp\"; // import { FormattedMessage } from \"react-intl\";\n\nimport { setMyProject } from \"../MultiSocket/Container\"; // import AssetLibrary from \"../../utils/assetLibrary\";\n\nvar socket = io(URL.SOCKET_SERVER, {});\nexport var socketUtil = {\n  socket: socket,\n  sendSocketEvent: function sendSocketEvent(event) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    socket.emit(event, data);\n  }\n};\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  //chat\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n    _this.socketTimer = undefined;\n    _this.EVENT_CONNECT = \"connect\";\n    _this.EVENT_JOIN = \"join\";\n    _this.EVENT_JOIN_ROOM = \"joinRoom\";\n    _this.EVENT_INSTANT_RUN_ACK = \"instantRunAck\";\n    _this.EVENT_INSTANT_RUN = \"instantRun\";\n    _this.EVENT_STATE = _this.props.pageType === PAGETYPE.WIZLIVE_1V4 ? \"multiState\" : \"state\";\n    _this.EVENT_STATE_TUTORIAL = \"stateTutorial\";\n    _this.EVENT_REQUEST_IMAGE = \"requestImage\";\n    _this.EVENT_RESPONSE_IMAGE = \"responseImage\";\n    _this.EVENT_TIMER = _this.props.pageType === PAGETYPE.WIZLIVE_1V4 ? 500 : 2000;\n    _this.EVENT_MULTI_STATE = \"multiState\";\n    _this.EVENT_LEAVE = \"leave\";\n    _this.EVENT_HIGHLIGHT = \"highlight\";\n    _this.EVENT_CHAT_MESSAGE = \"chatMessage\";\n\n    _this.setSocket = function () {\n      // const options = {}; //options reference : https://socket.io/docs/client-api/#new-Manager-url-options\n      _this.socket = socket;\n      var roomId = \"all\";\n\n      if (_this.props.pageType === PAGETYPE.WIZLIVE_1V4) {\n        roomId = _this.props.roomId;\n      }\n\n      if (_this.props.email) {\n        _this.socket.emit(_this.EVENT_JOIN, {\n          email: _this.props.email\n        });\n      }\n\n      _this.socket.emit(_this.EVENT_JOIN_ROOM, {\n        roomId: roomId\n      }); // global chat room\n\n\n      _this.joinedRoom.push(roomId);\n\n      _this.socket.on(_this.EVENT_INSTANT_RUN_ACK, function (data) {\n        setTimeout(function () {\n          showPopUp(null);\n        }, 1000);\n      }); // this.socket.on(this.EVENT_RESPONSE_IMAGE, data => {\n      //   this.props.setResponseImage(data.url);\n      //   this.props.setRequestImage(false);\n      // });\n\n    };\n\n    var pageType = props.pageType;\n    _this.codeSync = pageType !== PAGETYPE.VIDEOCLASS && pageType !== PAGETYPE.OCP && pageType !== PAGETYPE.TUTORIAL && pageType !== PAGETYPE.MONITOR && pageType !== PAGETYPE.QNA_READONLY && pageType !== PAGETYPE.BUILDER_READONLY;\n    _this.isTutorial = pageType === PAGETYPE.TUTORIAL;\n    _this.joinedRoom = [];\n    _this.currentUser = null;\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setSocket();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.props.email) {\n        if (this.props.instantRunURL !== nextProps.instantRunURL) {\n          this.socket.emit(this.EVENT_INSTANT_RUN, {\n            email: this.props.email,\n            url: nextProps.instantRunURL\n          });\n          return false;\n        }\n\n        if (this.props.requestImage !== nextProps.requestImage) {\n          if (nextProps.requestImage === true) {\n            this.socket.emit(this.EVENT_REQUEST_IMAGE, {\n              email: this.props.email\n            });\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      // chatting\n      if (this.props.messageQueue.length > 0) {\n        this.props.messageQueue.forEach(function (msg) {\n          var _msg = msg;\n\n          if (_this2.props.pageType === PAGETYPE.WIZLIVE_1V4) {\n            _msg = _objectSpread({}, _msg, {\n              roomId: _this2.props.roomId\n            });\n          }\n\n          _this2.socket.emit(_this2.EVENT_CHAT_MESSAGE, _msg);\n        });\n        this.props.clearMsgQueue();\n      } // code sync\n\n\n      if (!this.props.email) {\n        return;\n      }\n\n      if (this.codeSync) {\n        if (this.socketTimer) {\n          clearTimeout(this.socketTimer);\n        }\n\n        this.socketTimer = setTimeout(function () {\n          var _this2$props = _this2.props,\n              pId = _this2$props.pId,\n              scene = _this2$props.scene,\n              interaction = _this2$props.interaction,\n              preview = _this2$props.preview;\n          var state = JSON.stringify({\n            scene: scene,\n            interaction: _objectSpread({}, interaction, {\n              isPublished: undefined\n            }),\n            preview: _objectSpread({}, preview, {\n              isPlaying: false\n            })\n          });\n          var data = {\n            pId: pId,\n            state: state,\n            email: _this2.props.email\n          };\n\n          if (_this2.isTutorial) {\n            var scenes = scene.scenes;\n            var _this2$props2 = _this2.props,\n                selectedSceneId = _this2$props2.selectedSceneId,\n                selectedObject = _this2$props2.selectedObject;\n            var _sprite = scenes[selectedSceneId].sprites[selectedObject.name];\n\n            _this2.socket.emit(_this2.EVENT_STATE_TUTORIAL, {\n              email: _this2.props.email,\n              code: _sprite.code\n            });\n          } else {\n            // 1:4 수업\n            if (_this2.props.pageType === PAGETYPE.WIZLIVE_1V4) {\n              if (_this2.props.currentUser.email === _this2.props.email) {\n                // console.log(\n                //   3333,\n                //   \" ---- Set My Project to localStorage : \" +\n                //     this.props.currentUser.email\n                // );\n                setMyProject({\n                  scene: scene,\n                  interaction: interaction,\n                  preview: preview\n                }); // console.log(\n                //   3333,\n                //   `sending ${\n                //     this.props.currentUser.email\n                //   }'s project state --- socket event: ${this.EVENT_STATE} `\n                // );\n\n                _this2.socket.emit(_this2.EVENT_STATE, data);\n              } // 1:1 수업\n\n            } else {\n              _this2.socket.emit(_this2.EVENT_STATE, data);\n            }\n          }\n        }, this.EVENT_TIMER);\n      } else if (this.isTutorial) {// const { pId, scene, interaction, preview } = this.props;\n        // const state = JSON.stringify({\n        //   scene,\n        //   interaction: { ...interaction, isPublished: undefined },\n        //   preview: { ...preview, isPlaying: false }\n        // });\n        // const data = { pId, state };\n        // if (this.isTutorial) {\n        //   const { scenes } = scene;\n        //   const { selectedSceneId, selectedObject } = this.props;\n        //   const _sprite = scenes[selectedSceneId].sprites[selectedObject.name];\n        //   if (!_sprite) return;\n        //   const _code = _sprite.code;\n        //   if (this.lastSentCode === _code) {\n        //     return;\n        //   }\n        //   this.lastSentCode = _code;\n        //   this.socket.emit(this.EVENT_STATE_TUTORIAL, {\n        //     email: this.props.email,\n        //     code: _sprite.code\n        //   });\n        // } else {\n        //   this.socket.emit(this.EVENT_STATE, data);\n        // }\n      }\n\n      if (this.props.pageType === PAGETYPE.WIZLIVE_1V4) return;\n\n      if (this.joinedRoom.length !== Object.keys(this.props.rooms).length) {\n        Object.keys(this.props.rooms).forEach(function (roomId) {\n          if (_this2.joinedRoom.indexOf(roomId) === -1) {\n            _this2.socket.emit(_this2.EVENT_JOIN_ROOM, {\n              roomId: roomId\n            });\n\n            _this2.joinedRoom.push(roomId);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.socket.off(this.EVENT_INSTANT_RUN_ACK);\n      this.socket.off(this.EVENT_RESPONSE_IMAGE);\n      this.socket.off(this.EVENT_CHAT_MESSAGE);\n      this.socket.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          display: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  var _state$scene = state.scene,\n      history = _state$scene.history,\n      historyIndex = _state$scene.historyIndex,\n      _scene = _objectWithoutProperties(_state$scene, [\"history\", \"historyIndex\"]);\n\n  return {\n    selectedSceneId: state.interaction.selected.scene,\n    selectedObject: state.interaction.selected.objects[state.interaction.selected.scene],\n    pId: state.project.pId,\n    scene: _scene,\n    interaction: _objectSpread({}, state.interaction, {\n      jukebox: {\n        isPlaying: false\n      },\n      addSoundsTimeStamp: undefined\n    }),\n    preview: state.preview,\n    email: state.userinfo.email,\n    project: state.project,\n    instantRunURL: state.socket.url,\n    requestImage: state.socket.requestImage,\n    messageQueue: state.chat.messageQueue,\n    rooms: state.chat.rooms,\n    currentUser: state.tabs.currentUser\n  };\n}, {\n  setRequestImage: socketActions.setRequestImage,\n  setResponseImage: socketActions.setResponseImage,\n  clearMsgQueue: chatActions.clearMsgQueue,\n  addMsg: chatActions.addMsg,\n  addUnreadMsgCount: chatActions.addUnreadMsgCount\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Socket/Container.js"],"names":["React","Component","connect","io","URL","PAGETYPE","socketActions","chatActions","showPopUp","setMyProject","socket","SOCKET_SERVER","socketUtil","sendSocketEvent","event","data","emit","Container","props","socketTimer","undefined","EVENT_CONNECT","EVENT_JOIN","EVENT_JOIN_ROOM","EVENT_INSTANT_RUN_ACK","EVENT_INSTANT_RUN","EVENT_STATE","pageType","WIZLIVE_1V4","EVENT_STATE_TUTORIAL","EVENT_REQUEST_IMAGE","EVENT_RESPONSE_IMAGE","EVENT_TIMER","EVENT_MULTI_STATE","EVENT_LEAVE","EVENT_HIGHLIGHT","EVENT_CHAT_MESSAGE","setSocket","roomId","email","joinedRoom","push","on","setTimeout","codeSync","VIDEOCLASS","OCP","TUTORIAL","MONITOR","QNA_READONLY","BUILDER_READONLY","isTutorial","currentUser","nextProps","nextState","instantRunURL","url","requestImage","prevProps","messageQueue","length","forEach","msg","_msg","clearMsgQueue","clearTimeout","pId","scene","interaction","preview","state","JSON","stringify","isPublished","isPlaying","scenes","selectedSceneId","selectedObject","_sprite","sprites","name","code","Object","keys","rooms","indexOf","off","disconnect","display","history","historyIndex","_scene","selected","objects","project","jukebox","addSoundsTimeStamp","userinfo","chat","tabs","setRequestImage","setResponseImage","addMsg","addUnreadMsgCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\n// import uuidv4 from \"uuid/v4\";\nimport { URL, PAGETYPE } from \"../../../../Common/Util/Constant\";\nimport * as socketActions from \"../../Store/Reducer/socket\";\nimport * as chatActions from \"../../Store/Reducer/chat\";\nimport { showPopUp } from \"../../../../Common/Component/PopUp\";\n// import { FormattedMessage } from \"react-intl\";\nimport { setMyProject } from \"../MultiSocket/Container\";\n// import AssetLibrary from \"../../utils/assetLibrary\";\n\nconst socket = io(URL.SOCKET_SERVER, {});\nexport const socketUtil = {\n  socket: socket,\n  sendSocketEvent: (event, data = {}) => {\n    socket.emit(event, data);\n  }\n};\n\nclass Container extends Component {\n  socketTimer = undefined;\n  EVENT_CONNECT = \"connect\";\n  EVENT_JOIN = \"join\";\n  EVENT_JOIN_ROOM = \"joinRoom\";\n  EVENT_INSTANT_RUN_ACK = \"instantRunAck\";\n  EVENT_INSTANT_RUN = \"instantRun\";\n  EVENT_STATE =\n    this.props.pageType === PAGETYPE.WIZLIVE_1V4 ? \"multiState\" : \"state\";\n  EVENT_STATE_TUTORIAL = \"stateTutorial\";\n  EVENT_REQUEST_IMAGE = \"requestImage\";\n  EVENT_RESPONSE_IMAGE = \"responseImage\";\n  EVENT_TIMER = this.props.pageType === PAGETYPE.WIZLIVE_1V4 ? 500 : 2000;\n  EVENT_MULTI_STATE = \"multiState\";\n  EVENT_LEAVE = \"leave\";\n  EVENT_HIGHLIGHT = \"highlight\";\n  //chat\n  EVENT_CHAT_MESSAGE = \"chatMessage\";\n\n  constructor(props) {\n    super(props);\n    const { pageType } = props;\n    this.codeSync =\n      pageType !== PAGETYPE.VIDEOCLASS &&\n      pageType !== PAGETYPE.OCP &&\n      pageType !== PAGETYPE.TUTORIAL &&\n      pageType !== PAGETYPE.MONITOR &&\n      pageType !== PAGETYPE.QNA_READONLY &&\n      pageType !== PAGETYPE.BUILDER_READONLY;\n    this.isTutorial = pageType === PAGETYPE.TUTORIAL;\n    this.joinedRoom = [];\n    this.currentUser = null;\n  }\n\n  componentDidMount() {\n    this.setSocket();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.email) {\n      if (this.props.instantRunURL !== nextProps.instantRunURL) {\n        this.socket.emit(this.EVENT_INSTANT_RUN, {\n          email: this.props.email,\n          url: nextProps.instantRunURL\n        });\n        return false;\n      }\n\n      if (this.props.requestImage !== nextProps.requestImage) {\n        if (nextProps.requestImage === true) {\n          this.socket.emit(this.EVENT_REQUEST_IMAGE, {\n            email: this.props.email\n          });\n        }\n      }\n    }\n    return true;\n  }\n\n  componentDidUpdate(prevProps) {\n    // chatting\n    if (this.props.messageQueue.length > 0) {\n      this.props.messageQueue.forEach(msg => {\n        let _msg = msg;\n        if (this.props.pageType === PAGETYPE.WIZLIVE_1V4) {\n          _msg = { ..._msg, roomId: this.props.roomId };\n        }\n        this.socket.emit(this.EVENT_CHAT_MESSAGE, _msg);\n      });\n      this.props.clearMsgQueue();\n    }\n\n    // code sync\n    if (!this.props.email) {\n      return;\n    }\n    if (this.codeSync) {\n      if (this.socketTimer) {\n        clearTimeout(this.socketTimer);\n      }\n      this.socketTimer = setTimeout(() => {\n        const { pId, scene, interaction, preview } = this.props;\n        const state = JSON.stringify({\n          scene,\n          interaction: { ...interaction, isPublished: undefined },\n          preview: { ...preview, isPlaying: false }\n        });\n        const data = { pId, state, email: this.props.email };\n\n        if (this.isTutorial) {\n          const { scenes } = scene;\n          const { selectedSceneId, selectedObject } = this.props;\n          const _sprite = scenes[selectedSceneId].sprites[selectedObject.name];\n          this.socket.emit(this.EVENT_STATE_TUTORIAL, {\n            email: this.props.email,\n            code: _sprite.code\n          });\n        } else {\n          // 1:4 수업\n          if (this.props.pageType === PAGETYPE.WIZLIVE_1V4) {\n            if (this.props.currentUser.email === this.props.email) {\n              // console.log(\n              //   3333,\n              //   \" ---- Set My Project to localStorage : \" +\n              //     this.props.currentUser.email\n              // );\n              setMyProject({ scene, interaction, preview });\n\n              // console.log(\n              //   3333,\n              //   `sending ${\n              //     this.props.currentUser.email\n              //   }'s project state --- socket event: ${this.EVENT_STATE} `\n              // );\n              this.socket.emit(this.EVENT_STATE, data);\n            }\n            // 1:1 수업\n          } else {\n            this.socket.emit(this.EVENT_STATE, data);\n          }\n        }\n      }, this.EVENT_TIMER);\n    } else if (this.isTutorial) {\n      // const { pId, scene, interaction, preview } = this.props;\n      // const state = JSON.stringify({\n      //   scene,\n      //   interaction: { ...interaction, isPublished: undefined },\n      //   preview: { ...preview, isPlaying: false }\n      // });\n      // const data = { pId, state };\n      // if (this.isTutorial) {\n      //   const { scenes } = scene;\n      //   const { selectedSceneId, selectedObject } = this.props;\n      //   const _sprite = scenes[selectedSceneId].sprites[selectedObject.name];\n      //   if (!_sprite) return;\n      //   const _code = _sprite.code;\n      //   if (this.lastSentCode === _code) {\n      //     return;\n      //   }\n      //   this.lastSentCode = _code;\n      //   this.socket.emit(this.EVENT_STATE_TUTORIAL, {\n      //     email: this.props.email,\n      //     code: _sprite.code\n      //   });\n      // } else {\n      //   this.socket.emit(this.EVENT_STATE, data);\n      // }\n    }\n    if (this.props.pageType === PAGETYPE.WIZLIVE_1V4) return;\n\n    if (this.joinedRoom.length !== Object.keys(this.props.rooms).length) {\n      Object.keys(this.props.rooms).forEach(roomId => {\n        if (this.joinedRoom.indexOf(roomId) === -1) {\n          this.socket.emit(this.EVENT_JOIN_ROOM, { roomId });\n          this.joinedRoom.push(roomId);\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.off(this.EVENT_INSTANT_RUN_ACK);\n    this.socket.off(this.EVENT_RESPONSE_IMAGE);\n    this.socket.off(this.EVENT_CHAT_MESSAGE);\n    this.socket.disconnect();\n  }\n\n  setSocket = () => {\n    // const options = {}; //options reference : https://socket.io/docs/client-api/#new-Manager-url-options\n    this.socket = socket;\n    let roomId = \"all\";\n\n    if (this.props.pageType === PAGETYPE.WIZLIVE_1V4) {\n      roomId = this.props.roomId;\n    }\n\n    if (this.props.email) {\n      this.socket.emit(this.EVENT_JOIN, { email: this.props.email });\n    }\n\n    this.socket.emit(this.EVENT_JOIN_ROOM, { roomId }); // global chat room\n    this.joinedRoom.push(roomId);\n\n    this.socket.on(this.EVENT_INSTANT_RUN_ACK, data => {\n      setTimeout(() => {\n        showPopUp(null);\n      }, 1000);\n    });\n    // this.socket.on(this.EVENT_RESPONSE_IMAGE, data => {\n    //   this.props.setResponseImage(data.url);\n    //   this.props.setRequestImage(false);\n    // });\n  };\n\n  render() {\n    return <div style={{ display: \"none\" }} />;\n  }\n}\n\nexport default connect(\n  state => {\n    const { history, historyIndex, ..._scene } = state.scene;\n\n    return {\n      selectedSceneId: state.interaction.selected.scene,\n      selectedObject:\n        state.interaction.selected.objects[state.interaction.selected.scene],\n      pId: state.project.pId,\n      scene: _scene,\n      interaction: {\n        ...state.interaction,\n        jukebox: {\n          isPlaying: false\n        },\n        addSoundsTimeStamp: undefined\n      },\n      preview: state.preview,\n      email: state.userinfo.email,\n      project: state.project,\n      instantRunURL: state.socket.url,\n      requestImage: state.socket.requestImage,\n      messageQueue: state.chat.messageQueue,\n      rooms: state.chat.rooms,\n      currentUser: state.tabs.currentUser\n    };\n  },\n  {\n    setRequestImage: socketActions.setRequestImage,\n    setResponseImage: socketActions.setResponseImage,\n    clearMsgQueue: chatActions.clearMsgQueue,\n    addMsg: chatActions.addMsg,\n    addUnreadMsgCount: chatActions.addUnreadMsgCount\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}