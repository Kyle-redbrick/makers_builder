{"ast":null,"code":"import _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Challenge/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { isMobileOnly } from \"react-device-detect\";\nimport QueryString from \"query-string\";\nimport PopUp, { showPopUp } from \"../../Common/Component/PopUp\";\nimport ChallengeAlertPopup from \"./Component/ChallengeAlertPopup\";\nimport ChallengeEndPopup from \"./Component/ChallengeEndPopup\";\nimport View from \"./View\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.onClickTab = function (tab) {\n      if (tab !== _this.state.tab) {\n        _this.setState({\n          currentTab: tab\n        }); //history replace without reload\n\n\n        window.history.replaceState({}, \"\", \"/challenge2021?tab=\".concat(tab));\n      }\n    };\n\n    _this.showAlertPopup = function () {\n      showPopUp(React.createElement(ChallengeAlertPopup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), {\n        darkmode: true,\n        dismissButton: false,\n        dismissOverlay: true,\n        defaultPadding: false\n      });\n    };\n\n    _this.onClickApplyBtn = function () {// challenge is over\n      // const { userinfo } = this.props;\n      // if (!userinfo.id) {\n      //   this.showAlertPopup();\n      //   return;\n      // }\n      // if (isMobileOnly) {\n      //   showPopUp(\n      //     <PopUp.OneButton\n      //       title={this.props.intl.formatMessage({\n      //         id: \"ID_CHALLENGE_POPUP_LOGIN_TITLE\"\n      //       })}\n      //       buttonName={this.props.intl.formatMessage({\n      //         id: \"ID_CHALLENGE_POPUP_CONFIRM\"\n      //       })}\n      //     />,\n      //     {\n      //       darkmode: true,\n      //       dismissButton: false,\n      //       dismissOverlay: true\n      //     }\n      //   );\n      //   return;\n      // }\n      // this.props.history.push(\"/challenge/apply\");\n    };\n\n    _this.onClickConfirmBtn = function () {\n      var userinfo = _this.props.userinfo;\n\n      if (!userinfo.id) {\n        _this.showAlertPopup();\n\n        return;\n      }\n\n      _this.props.history.push(\"/challenge2021/projectlist\");\n    };\n\n    _this.setVideo = function () {\n      if (_this.videoControl) return;\n      var video = _this.videoRef.current;\n      var videoMin = video.offsetTop + video.offsetHeight / 3 - window.innerHeight;\n      var videoMax = video.offsetTop + video.offsetHeight / 3 * 2;\n      video.volume = 0.5;\n\n      if (videoMin < window.scrollY && window.scrollY < videoMax) {\n        video.play();\n      } else {\n        video.pause();\n      }\n    };\n\n    _this.stopAutoplay = function () {\n      _this.videoControl = true;\n    };\n\n    var _QueryString$parse = QueryString.parse(props.location.search),\n        _tab = _QueryString$parse.tab;\n\n    _this.state = {\n      currentTab: _tab ? _tab : \"info\"\n    };\n    _this.videoRef = React.createRef();\n    _this.videoControl = false;\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // challenge is over\n      var isShow = localStorage.getItem(\"showChallengeOverPopup\");\n\n      if (!isShow || isShow !== \"true\") {\n        showPopUp(React.createElement(ChallengeEndPopup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), {\n          darkmode: true,\n          dismissButton: false,\n          dismissOverlay: true,\n          defaultPadding: false\n        });\n      }\n\n      window.addEventListener(\"scroll\", this.setVideo);\n      this.videoRef.current.addEventListener(\"pause\", this.stopAutoplay);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.setVideo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentTab = this.state.currentTab;\n      var onClickTab = this.onClickTab,\n          onClickApplyBtn = this.onClickApplyBtn,\n          onClickConfirmBtn = this.onClickConfirmBtn,\n          onClickVideo = this.onClickVideo,\n          videoRef = this.videoRef;\n      return React.createElement(View, {\n        currentTab: currentTab,\n        onClickTab: onClickTab,\n        onClickApplyBtn: onClickApplyBtn,\n        onClickConfirmBtn: onClickConfirmBtn,\n        onClickVideo: onClickVideo,\n        videoRef: videoRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    userinfo: state.userinfo\n  };\n}, {})(withRouter(injectIntl(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Challenge/Container.js"],"names":["React","Component","connect","injectIntl","withRouter","isMobileOnly","QueryString","PopUp","showPopUp","ChallengeAlertPopup","ChallengeEndPopup","View","Container","props","onClickTab","tab","state","setState","currentTab","window","history","replaceState","showAlertPopup","darkmode","dismissButton","dismissOverlay","defaultPadding","onClickApplyBtn","onClickConfirmBtn","userinfo","id","push","setVideo","videoControl","video","videoRef","current","videoMin","offsetTop","offsetHeight","innerHeight","videoMax","volume","scrollY","play","pause","stopAutoplay","parse","location","search","createRef","isShow","localStorage","getItem","addEventListener","removeEventListener","onClickVideo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport { withRouter } from \"react-router-dom\";\nimport { isMobileOnly } from \"react-device-detect\";\nimport QueryString from \"query-string\";\nimport PopUp, { showPopUp } from \"../../Common/Component/PopUp\";\nimport ChallengeAlertPopup from \"./Component/ChallengeAlertPopup\";\nimport ChallengeEndPopup from \"./Component/ChallengeEndPopup\";\nimport View from \"./View\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    const { tab } = QueryString.parse(props.location.search);\n    this.state = {\n      currentTab: tab ? tab : \"info\",\n    };\n    this.videoRef = React.createRef();\n    this.videoControl = false;\n  }\n\n  componentDidMount() {\n    // challenge is over\n    const isShow = localStorage.getItem(\"showChallengeOverPopup\");\n    if(!isShow || isShow !== \"true\") {\n      showPopUp(\n        <ChallengeEndPopup/>,\n        {\n          darkmode: true,\n          dismissButton: false,\n          dismissOverlay: true,\n          defaultPadding: false\n        }\n      ); \n    }\n\n    window.addEventListener(\"scroll\", this.setVideo);\n    this.videoRef.current.addEventListener(\"pause\", this.stopAutoplay);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\",this.setVideo);\n  }\n\n\n  onClickTab = (tab) => {\n    if( tab!== this.state.tab ){\n      this.setState({ currentTab : tab })\n\n      //history replace without reload\n      window.history.replaceState({}, \"\",`/challenge2021?tab=${tab}`);\n    }\n  }\n\n  showAlertPopup = () => {\n    showPopUp(\n      <ChallengeAlertPopup/>,\n      {\n        darkmode: true,\n        dismissButton: false,\n        dismissOverlay: true,\n        defaultPadding: false\n      }\n    );\n  }\n\n  onClickApplyBtn = () => {\n    // challenge is over\n    // const { userinfo } = this.props;\n\n    // if (!userinfo.id) {\n    //   this.showAlertPopup();\n    //   return;\n    // }\n\n    // if (isMobileOnly) {\n    //   showPopUp(\n    //     <PopUp.OneButton\n    //       title={this.props.intl.formatMessage({\n    //         id: \"ID_CHALLENGE_POPUP_LOGIN_TITLE\"\n    //       })}\n    //       buttonName={this.props.intl.formatMessage({\n    //         id: \"ID_CHALLENGE_POPUP_CONFIRM\"\n    //       })}\n    //     />,\n    //     {\n    //       darkmode: true,\n    //       dismissButton: false,\n    //       dismissOverlay: true\n    //     }\n    //   );\n    //   return;\n    // }\n\n    // this.props.history.push(\"/challenge/apply\");\n  }\n\n  onClickConfirmBtn = () => {\n    const { userinfo } = this.props;\n    if (!userinfo.id) {\n      this.showAlertPopup();\n      return;\n    }\n    this.props.history.push(\"/challenge2021/projectlist\");\n  }\n\n  setVideo = () => {\n    if (this.videoControl) return;\n    \n    const video = this.videoRef.current;\n    const videoMin = video.offsetTop + video.offsetHeight / 3 - window.innerHeight;\n    const videoMax = video.offsetTop + video.offsetHeight / 3 * 2;\n    video.volume = 0.5;\n\n    if (videoMin < window.scrollY && window.scrollY < videoMax) {\n      video.play();\n    } else {\n      video.pause();\n    }\n  };\n\n  stopAutoplay = () => {\n    this.videoControl = true;\n  }\n  \n  render() {\n    const { currentTab } = this.state;\n    const { onClickTab, onClickApplyBtn, onClickConfirmBtn, onClickVideo, videoRef } = this;\n    return (\n      <View \n        currentTab={currentTab} \n        onClickTab={onClickTab}\n        onClickApplyBtn={onClickApplyBtn}\n        onClickConfirmBtn={onClickConfirmBtn}\n        onClickVideo={onClickVideo}\n        videoRef={videoRef}\n      />\n    );\n  }\n}\n\nexport default connect(\n  state => ({ userinfo: state.userinfo }),\n  {}\n)(withRouter(injectIntl(Container)));\n"]},"metadata":{},"sourceType":"module"}