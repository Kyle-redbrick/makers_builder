{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/ProjectListContainer/View.js\";\nimport React from \"react\";\nimport \"./index.scss\";\nimport CloseImage from \"../../../../Image/close-btn-popup.svg\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\n\nvar View = function View(props) {\n  var itemArray = props.itemArray,\n      handleCloseBtn = props.handleCloseBtn,\n      handleLoadprojectBtn = props.handleLoadprojectBtn,\n      handleProjectItem = props.handleProjectItem,\n      selectedProject = props.selectedProject;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ProjectListContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Modal__overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Modal__layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Modal__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Modal__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_BUILDER_PROJECTLIST_TITLE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"Modal__closeBtn\",\n    src: CloseImage,\n    alt: \"closeBtn\",\n    onClick: handleCloseBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Modal__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ProjectList_ListArea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, Object.keys(itemArray).map(function (key, index) {\n    var isSelected = itemArray[key].id === selectedProject ? \"on\" : \"off\";\n    return React.createElement(\"div\", {\n      className: \"list_ItemBox ItemBox--\".concat(isSelected),\n      key: index,\n      onClick: function onClick() {\n        return handleProjectItem(itemArray[key].id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list_Item_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list_Item_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, itemArray[key].title)));\n  }))), React.createElement(\"div\", {\n    className: \"ProjectList__row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"two_btn btn_no\",\n    onClick: handleCloseBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_BUILDER_PROJECTLIST_CANCEL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"two_btn btn_yes\",\n    onClick: handleLoadprojectBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormattedMessage, {\n    id: \"ID_BUILDER_PROJECTLIST_OK\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))))));\n};\n\nexport default injectIntl(View);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/ProjectListContainer/View.js"],"names":["React","FormattedMessage","injectIntl","View","props","itemArray","handleCloseBtn","handleLoadprojectBtn","handleProjectItem","selectedProject","CloseImage","Object","keys","map","key","index","isSelected","id","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\nimport CloseImage from \"../../../../Image/close-btn-popup.svg\";\nimport { FormattedMessage, injectIntl } from \"react-intl\";\n\nconst View = props => {\n  const {\n    itemArray,\n    handleCloseBtn,\n    handleLoadprojectBtn,\n    handleProjectItem,\n    selectedProject\n  } = props;\n  return (\n    <React.Fragment>\n      <div className={`ProjectListContainer`}>\n        <div className={`Modal__overlay`} />\n        <div className=\"Modal__layout\">\n          <div className=\"Modal__header\">\n            <div className=\"Modal__title\">\n              <FormattedMessage id=\"ID_BUILDER_PROJECTLIST_TITLE\" />\n            </div>\n            <img\n              className=\"Modal__closeBtn\"\n              src={CloseImage}\n              alt=\"closeBtn\"\n              onClick={handleCloseBtn}\n            />\n          </div>\n\n          <div className=\"Modal__content\">\n            <div className=\"ProjectList_ListArea\">\n              {Object.keys(itemArray).map((key, index) => {\n                let isSelected =\n                  itemArray[key].id === selectedProject ? \"on\" : \"off\";\n                return (\n                  <div\n                    className={`list_ItemBox ItemBox--${isSelected}`}\n                    key={index}\n                    onClick={() => handleProjectItem(itemArray[key].id)}\n                  >\n                    <div className=\"list_Item_row\">\n                      <div className=\"list_Item_title\">\n                        {itemArray[key].title}\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"ProjectList__row\">\n            <button className=\"two_btn btn_no\" onClick={handleCloseBtn}>\n              <FormattedMessage id=\"ID_BUILDER_PROJECTLIST_CANCEL\" />\n            </button>\n            <button className=\"two_btn btn_yes\" onClick={handleLoadprojectBtn}>\n              <FormattedMessage id=\"ID_BUILDER_PROJECTLIST_OK\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default injectIntl(View);\n"]},"metadata":{},"sourceType":"module"}