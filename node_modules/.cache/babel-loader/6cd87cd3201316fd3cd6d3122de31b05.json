{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Mypage/Components/IconSetting/View.js\";\nimport React from \"react\";\nimport Layout from \"../../../../Common/Component/Layout\";\nimport \"./index.scss\";\nimport WizTooltip from \"../../../../Common/Component/Tooltip\";\nimport UserIconWrapper from \"../../../../Common/Component/UserIconWrapper\";\nimport IconSelector from \"./Components/IconSelector\";\nimport tooltipIcon from \"../../../../Image/icon-tooltip.svg\";\nexport default function View(props) {\n  var handleUploadIcon = props.handleUploadIcon,\n      handleUploadFile = props.handleUploadFile,\n      handleSelectIcon = props.handleSelectIcon,\n      handleSelectTab = props.handleSelectTab,\n      handleSubmit = props.handleSubmit,\n      selectedTab = props.selectedTab,\n      selectedIconUrl = props.selectedIconUrl,\n      profile = props.profile,\n      TAB_TYPE = props.TAB_TYPE,\n      customIconUrl = props.customIconUrl,\n      onClickMobileTooltip = props.onClickMobileTooltip; // logic\n\n  var content;\n\n  switch (selectedTab) {\n    case TAB_TYPE.ICON.title:\n      content = React.createElement(IconSelector, {\n        handleUploadFile: handleUploadFile,\n        handleUploadIcon: handleUploadIcon,\n        handleSelectIcon: handleSelectIcon,\n        customIconUrl: customIconUrl,\n        handleSubmit: handleSubmit,\n        profile: profile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n      break;\n\n    case TAB_TYPE.EDGE.title:\n      content = React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"\\uC11C\\uBE44\\uC2A4 \\uC900\\uBE44\\uC911 \\uC785\\uB2C8\\uB2E4\");\n      break;\n\n    default:\n      break;\n  }\n\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Page--Setting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Setting--Inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"Setting_Head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Setting_Head-iconWrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, selectedIconUrl && React.createElement(UserIconWrapper, {\n    iconSrc: selectedIconUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))), React.createElement(\"section\", {\n    className: \"Setting_SelectView\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Setting_Tabs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, Object.keys(TAB_TYPE).map(function (tab, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"Setting_Tabs-tap\",\n      style: selectedTab === TAB_TYPE[tab].title ? {\n        color: \"white\"\n      } : {},\n      onClick: function onClick() {\n        handleSelectTab(TAB_TYPE[tab].title);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Setting_Tabs-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, TAB_TYPE[tab].title), React.createElement(\"div\", {\n      className: \"Setting_Tabs-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(WizTooltip, {\n      contentTitle: TAB_TYPE[tab].tooltip,\n      container: React.createElement(\"img\", {\n        src: tooltipIcon,\n        alt: \"img\",\n        style: {\n          width: \"12px\",\n          height: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      backgroundColor: \"#2c2f4f\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      className: \"Setting_Tabs-tooltipMobile\",\n      src: tooltipIcon,\n      alt: \"img\",\n      onClick: function onClick() {\n        onClickMobileTooltip(TAB_TYPE[tab].tooltip);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  })), React.createElement(\"div\", {\n    className: \"Setting_Tabs_Ani\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Setting_Tabs_Ani-bar\",\n    style: selectedTab === TAB_TYPE.ICON.title ? {\n      left: \"0px\"\n    } : selectedTab === TAB_TYPE.EDGE.title ? {\n      left: \"calc(50%)\"\n    } : {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Setting_Contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, content)))));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Mypage/Components/IconSetting/View.js"],"names":["React","Layout","WizTooltip","UserIconWrapper","IconSelector","View","props","handleUploadIcon","handleUploadFile","handleSelectIcon","handleSelectTab","handleSubmit","selectedTab","selectedIconUrl","profile","TAB_TYPE","customIconUrl","onClickMobileTooltip","content","ICON","title","EDGE","display","justifyContent","Object","keys","map","tab","index","color","tooltip","tooltipIcon","width","height","left"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../../../../Common/Component/Layout\";\nimport \"./index.scss\";\nimport WizTooltip from \"../../../../Common/Component/Tooltip\";\nimport UserIconWrapper from \"../../../../Common/Component/UserIconWrapper\";\nimport IconSelector from \"./Components/IconSelector\";\nimport tooltipIcon from \"../../../../Image/icon-tooltip.svg\";\n\nexport default function View(props) {\n  const {\n    handleUploadIcon,\n    handleUploadFile,\n    handleSelectIcon,\n    handleSelectTab,\n    handleSubmit,\n    selectedTab,\n    selectedIconUrl,\n    profile,\n    TAB_TYPE,\n    customIconUrl,\n    onClickMobileTooltip\n  } = props;\n\n  // logic\n  let content;\n  switch (selectedTab) {\n    case TAB_TYPE.ICON.title:\n      content = (\n        <IconSelector\n          handleUploadFile={handleUploadFile}\n          handleUploadIcon={handleUploadIcon}\n          handleSelectIcon={handleSelectIcon}\n          customIconUrl={customIconUrl}\n          handleSubmit={handleSubmit}\n          profile={profile}\n        />\n      );\n      break;\n    case TAB_TYPE.EDGE.title:\n      content = (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          서비스 준비중 입니다\n        </div>\n      );\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <Layout>\n      <div className=\"Page--Setting\">\n        <div className=\"Setting--Inner\">\n          <section className=\"Setting_Head\">\n            <div className=\"Setting_Head-iconWrap\">\n              {selectedIconUrl && <UserIconWrapper iconSrc={selectedIconUrl} />}\n            </div>\n          </section>\n\n          <section className=\"Setting_SelectView\">\n            <div className=\"Setting_Tabs\">\n              {Object.keys(TAB_TYPE).map((tab, index) => (\n                <div\n                  key={index}\n                  className={`Setting_Tabs-tap`}\n                  style={\n                    selectedTab === TAB_TYPE[tab].title\n                      ? { color: \"white\" }\n                      : {}\n                  }\n                  onClick={() => {\n                    handleSelectTab(TAB_TYPE[tab].title);\n                  }}\n                >\n                  <div className=\"Setting_Tabs-title\">\n                    {TAB_TYPE[tab].title}\n                  </div>\n                  <div className=\"Setting_Tabs-tooltip\">\n                    <WizTooltip\n                      contentTitle={TAB_TYPE[tab].tooltip}\n                      container={\n                        <img\n                          src={tooltipIcon}\n                          alt=\"img\"\n                          style={{ width: \"12px\", height: \"12px\" }}\n                        />\n                      }\n                      backgroundColor=\"#2c2f4f\"\n                    />\n                  </div>\n                  <img\n                    className=\"Setting_Tabs-tooltipMobile\"\n                    src={tooltipIcon}\n                    alt=\"img\"\n                    onClick={() => {\n                      onClickMobileTooltip(TAB_TYPE[tab].tooltip);\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"Setting_Tabs_Ani\">\n              <div\n                className=\"Setting_Tabs_Ani-bar\"\n                style={\n                  selectedTab === TAB_TYPE.ICON.title\n                    ? { left: \"0px\" }\n                    : selectedTab === TAB_TYPE.EDGE.title\n                    ? { left: \"calc(50%)\" }\n                    : {}\n                }\n              />\n            </div>\n            <div className=\"Setting_Contents\">{content}</div>\n          </section>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}