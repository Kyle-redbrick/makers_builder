{"ast":null,"code":"import _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/Editor/Component/AceEditor/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as gameActions from \"../../../../Store/Reducer/game\";\nimport { EDITORMODE } from \"../../../../../../Common/Util/Constant\";\nimport ApiLibrary3d from \"../../../../Util/ApiLibrary3d\";\nimport JSEvaluator from \"../../../../../Builder/utils/JSEvaluator\";\nimport AssetLibrary from \"../../../../Util/AssetLibrary/index\";\nimport View from \"./View\";\nimport { injectIntl } from \"react-intl\";\nimport Parser from \"../../../../../Builder/utils/parser\";\nimport { toast } from \"react-toastify\";\nvar enableJSEval = true;\nvar signalNameWorker = undefined;\nvar signalNames = [];\nvar globalValueWorker = undefined;\nvar globalValues = [];\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.getCompleters = function (selectionType) {\n      switch (selectionType) {\n        case \"all\":\n          return Object.keys(_this.completers).map(function (key) {\n            return _this.completers[key];\n          });\n\n        case \"global\":\n          return [_this.completers[selectionType + \"ValueCompleter\"]];\n\n        default:\n          var completer = _this.completers[selectionType + \"Completer\"];\n\n          if (completer) {\n            return [completer];\n          } else {\n            return [];\n          }\n\n      }\n    };\n\n    _this.getStoredFontSize = function () {\n      var fontSize = localStorage.getItem(\"wizFontSize\");\n\n      if (fontSize) {\n        return parseInt(fontSize);\n      }\n\n      return 18;\n    };\n\n    _this.handleMousemove = function (e) {\n      try {\n        var tooltip = document.getElementById(\"EditorContainer3d_tooltip\");\n        var pos = e.getDocumentPosition();\n        var line = e.editor.session.getLine(pos.row); // 해당 라인에 있는 함수들의 범위 구하기\n\n        var funcsRanges = [];\n        var funcRegex = /([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/gim;\n        var funcMatch;\n\n        while (funcMatch = funcRegex.exec(line)) {\n          funcsRanges.push({\n            start: funcMatch.index,\n            end: funcRegex.lastIndex\n          });\n        } // 현재 커서가 있는 함수의 범위 구하기\n\n\n        var currentFuncRange;\n\n        for (var i = 0; i < funcsRanges.length; i++) {\n          var funcRange = funcsRanges[i];\n\n          if (funcRange.start <= pos.column && pos.column <= funcRange.end) {\n            currentFuncRange = funcRange;\n            break;\n          }\n        } // 현재 커서가 있는 함수의 이름 구하기\n\n\n        if (currentFuncRange) {\n          var currentFunctionName = line.substring(currentFuncRange.start, currentFuncRange.end); // 해당 함수의 api 정보 불러오기\n\n          var api = _this.apiList.find(function (api) {\n            return api.name === currentFunctionName;\n          });\n\n          if (!api) {\n            tooltip.style.display = \"none\";\n            return;\n          } // 이름이 대체된 api라면 대체된 api의 정보를 불러오기\n\n\n          var equal = api.equal;\n          var caption = api.caption;\n\n          if (equal) {\n            api = _objectSpread({}, _this.apiList.find(function (api) {\n              return api.name === equal;\n            }));\n            api.caption = caption;\n          } // 툴팁 보여주기\n\n\n          _this.setState({\n            tooltip: _objectSpread({}, api)\n          }, function () {\n            tooltip.style.display = \"block\";\n            tooltip.style.left = \"\".concat(e.domEvent.offsetX, \"px\");\n            tooltip.style.top = \"\".concat(e.domEvent.offsetY + 18, \"px\");\n          });\n        } else {\n          tooltip.style.display = \"none\";\n        }\n      } catch (e) {}\n    };\n\n    _this.handleOnChange = function (event, editor) {\n      var _this$props = _this.props,\n          currentSceneId = _this$props.currentSceneId,\n          currentGameObject = _this$props.currentGameObject,\n          updateGameObjectProperty = _this$props.updateGameObjectProperty;\n\n      if (!currentGameObject) {\n        return;\n      }\n\n      var code = editor.getValue();\n      var currentGameObjectId = currentGameObject.id;\n\n      if (editor.completer === undefined) {\n        try {\n          editor.execCommand(\"startAutocomplete\");\n          editor.completer.detach();\n\n          _this.refreshCompleterPopupSize();\n        } catch (e) {}\n      } // If inserted number, disable autocomplete\n\n\n      if (event) {\n        editor.setOptions({\n          enableLiveAutocompletion: isNaN(event.lines[0])\n        });\n      }\n\n      if (_this.JSEvaluatorTimer) {\n        clearTimeout(_this.JSEvaluatorTimer);\n      }\n\n      _this.JSEvaluatorTimer = setTimeout(function () {\n        _this.parseJSEvaluator(code, editor);\n      }, 3000);\n\n      if (currentGameObjectId) {\n        if (editor.curOp && editor.curOp.command.name) {\n          updateGameObjectProperty(currentSceneId, currentGameObjectId, window.BabylonConstant.PROPERTY_ID.CODE, code);\n        }\n      }\n    };\n\n    _this.parseJSEvaluator = function (code, editor) {\n      // Parsing the code (JSEvaluator uses the Acorn)\n      // let errors = [];\n      // eslint-disable-next-line\n      var annotations = []; // TODO:\n      // Ugly way to enable the following code block only for the development version.\n\n      if (enableJSEval) {\n        // if (enableJSEval || window.location.hostname !== \"wizlab.net\") {\n        var ret;\n\n        try {\n          // Parsing the code (JSEvaluator uses the Acorn)\n          ret = _this.JSEval.parse(code);\n        } catch (e) {\n          // console.log(\"JSEvaluator\", e);\n          ret = false;\n        }\n\n        if (ret === true) {\n          // Evaluating the parsed code (AST)\n          // In order to build the symbol table and get the runtime errors\n          var symtab;\n\n          if (_this.JSEval.build() === true) {\n            symtab = _this.JSEval.SymbolTable(); // Update the symbol table only if the JSEval successfully built the table.\n            // Otherwise uses the old table for the auto completions.\n\n            if (symtab !== null) {\n              _this.symtab = symtab;\n            }\n          }\n        } // errors = this.JSEval.getErrors();\n\n      }\n\n      annotations = editor.getSession().getAnnotations();\n    };\n\n    _this.handleShowErrors = function () {\n      var errors = _this.props.errors;\n      errors.forEach(function (item) {\n        item.text = _this.setErrorText(item);\n\n        item.onClick = function () {\n          var end = item.loc && item.loc.end;\n          if (!end) return;\n          var position = {\n            row: end.line - 1,\n            column: end.column\n          };\n\n          _this.aceEditor.selection.moveCursorToPosition(position);\n\n          _this.aceEditor.selection.clearSelection();\n        };\n      });\n    };\n\n    _this.setErrorText = function (item) {\n      // let startLine = item.loc ? item.loc.start.line : item.row + 1;\n      var message = item.message;\n      var text = \"\";\n\n      if (/parameter/i.test(message)) {\n        text += message.split(\" \")[0] + \" 함수는 \";\n        text += message.split(\" \")[2] + \"개의 매개변수를 넣어주어야 해~\";\n      }\n\n      if (/is undefined/i.test(message)) {\n        text += message.split(\" \")[0] + \" 는 아직 정의되지 않은 것 같은데?\";\n      }\n\n      if (/has already been declared/i.test(message)) {\n        var name = message.match(/'\\w+'/);\n        text += \"\\uC774\\uBBF8 \\uC815\\uC758\\uB41C \".concat(name, \"\\uB97C \\uB2E4\\uC2DC \\uC815\\uC758\\uD558\\uACE0 \\uC788\\uC5B4.\");\n      }\n\n      if (/Cannot change the constant/i.test(message)) {\n        var _name = message.split(\" \")[4];\n        text += \"const\\uB85C \\uC815\\uC758\\uD55C \".concat(_name, \"\\uB97C \\uB2E4\\uC2DC \\uC815\\uC758\\uD558\\uACE0 \\uC788\\uAD70.\");\n      }\n\n      if (message === _this.JSEval.ERROR_MESSAGE.FUNCTION_UPPER_LOWER) {\n        text += \"\\uD568\\uC218\\uC758 \\uB300\\uC18C\\uBB38\\uC790\\uB97C \\uD655\\uC778\\uD574\\uBD10.\\n (\".concat(item.typingFunction, \" \\u2192 \").concat(item.originFunction, \")\");\n      }\n\n      if (!text) {\n        text += \"을 확인해봐!\";\n      }\n\n      return text;\n    };\n\n    _this.handleOnChangeSelection = function (event, editor) {\n      var range = _this.getSelectionRange();\n\n      if (editor.curOp && editor.curOp.selectionChanged && editor.curOp.command.name) {\n        if (range) {\n          range.byUser = true;\n        }\n      } else {\n        return;\n      }\n\n      var line = editor.session.getLine(range.start.row); // 문자열의 범위 모두 구하기\n\n      var quotesRanges = [];\n      var quoteRegex = /'((?:\\\\.|[^'])*)'|\"((?:\\\\.|[^\"])*)\"/gim;\n      var quoteMatch;\n\n      while (quoteMatch = quoteRegex.exec(line)) {\n        quotesRanges.push({\n          start: quoteMatch.index,\n          end: quoteRegex.lastIndex\n        });\n      } // console.log(\"quotesRanges\", quotesRanges);\n      // 커서가 위치한 문자열을 현재 문자열로 저장\n\n\n      var currentQuoteRange;\n\n      for (var i in quotesRanges) {\n        var quoteRange = quotesRanges[i];\n\n        if (range.start.column === quoteRange.start + 1 || range.end.column === quoteRange.end - 1) {\n          currentQuoteRange = quoteRange;\n          break;\n        }\n      } // console.log(\"currentQuoteRange\", currentQuoteRange);\n      // 현재 문자열이 있으면 자동완성 활성화\n\n\n      if (currentQuoteRange) {\n        // 함수이름의 범위 모두 구하기\n        var funcsRanges = [];\n        var funcRegex = /([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/gim;\n        var funcMatch;\n\n        while (funcMatch = funcRegex.exec(line)) {\n          funcsRanges.push({\n            start: funcMatch.index,\n            end: funcRegex.lastIndex\n          });\n        } // console.log(\"funcsRanges\", funcsRanges);\n        // 현재 문자열의 start에 가장 가까운 함수이름의 범위 구하기\n\n\n        var currentFunctionRange;\n\n        for (var _i in funcsRanges) {\n          var funcRange = funcsRanges[_i];\n\n          if (funcRange.end < currentQuoteRange.start) {\n            currentFunctionRange = funcRange;\n          } else {\n            break;\n          }\n        }\n\n        if (!currentFunctionRange) {\n          return;\n        } // 해당 함수의 이름 구하기\n\n\n        var currentFunctionName = line.substring(currentFunctionRange.start, currentFunctionRange.end); // console.log(\"currentFunctionName\", currentFunctionName);\n        // 함수 이름으로 자동완성 리스트 업데이트 및 보여주기\n\n        var list = _this.autoCompleteApiList.filter(function (api) {\n          return api.caption.indexOf(currentFunctionName) !== -1;\n        });\n\n        if (list && list[0]) {\n          var selectionType = list[0].selectionType;\n\n          if (selectionType) {\n            setTimeout(function () {\n              _this.isCustomCompleterOpen = true;\n\n              _this.langTools.setCompleters(_this.getCompleters(selectionType));\n\n              editor.completer.showPopup(editor);\n\n              _this.langTools.setCompleters(_this.getCompleters(\"all\"));\n            }, 10);\n          }\n        }\n      } else {\n        // 문자열 밖에 커서가 있을 때는 커스텀 컴플리터를 해제\n        if (_this.isCustomCompleterOpen) {\n          setTimeout(function () {\n            _this.isCustomCompleterOpen = false;\n            editor.completer.detach();\n          }, 10);\n        }\n      }\n    };\n\n    _this.setSorting = function () {\n      try {\n        var code = _this.aceEditor.getValue();\n\n        var parsedCode = Parser.parseForSort(code);\n\n        _this.aceEditor.setValue(parsedCode, 1);\n\n        toast.info(\"코드가 정렬되었습니다\", {\n          position: toast.POSITION.BOTTOM_RIGHT\n        });\n        _this.aceEditor.curOp.command.name = \"mouse\";\n\n        _this.handleOnChange(undefined, _this.aceEditor);\n      } catch (e) {\n        toast.warn(\"에러를 수정한 후 정렬해주세요\", {\n          position: toast.POSITION.BOTTOM_RIGHT\n        });\n      }\n    };\n\n    _this.setFontZoomIn = function () {\n      var size = _this.aceEditor.getFontSize() + 2;\n\n      if (size > 50) {\n        return;\n      }\n\n      localStorage.setItem(\"wizFontSize\", size);\n\n      _this.aceEditor.setFontSize(size);\n\n      _this.refreshCompleterPopupSize();\n    };\n\n    _this.setFontZoomOut = function () {\n      var MIN_SIZE = 8;\n      var size = _this.aceEditor.getFontSize() - 2;\n\n      if (size < MIN_SIZE) {\n        return;\n      }\n\n      localStorage.setItem(\"wizFontSize\", size);\n\n      _this.aceEditor.setFontSize(size);\n\n      _this.refreshCompleterPopupSize();\n    };\n\n    _this.refreshCompleterPopupSize = function () {\n      if (_this.aceEditor.completer) {\n        var percent = _this.aceEditor.getFontSize() + 10 + \"%\";\n        _this.aceEditor.completer.popup.container.style.width = percent;\n      }\n    };\n\n    _this.isLive = false;\n    _this.ace = window.ace;\n    _this.langTools = undefined;\n    _this.completers = {};\n    _this.aceEditor = undefined;\n    _this.undoManagers = {};\n    _this.JSEval = new JSEvaluator();\n    _this.symtab = undefined;\n    _this.errorTimer = null;\n    _this.state = {\n      tooltip: null\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"getAutoCompleteApiList\",\n    value: function getAutoCompleteApiList(apiList) {\n      var captionList = apiList.map(function (_ref) {\n        var caption = _ref.caption;\n        return caption;\n      });\n      var filteredApiList = apiList.filter(function (item, index) {\n        return captionList.indexOf(item.caption) === index;\n      });\n      return filteredApiList;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setAceEditor();\n      this.setCode();\n      this.setWorkers();\n      this.setSignalNames();\n      this.setGlobalValues();\n      this.setAPILibrary();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.setCode();\n      this.setSignalNames();\n      this.setGlobalValues();\n      this.setAceEditor();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.state.tooltip !== nextState.tooltip) {\n        return true;\n      }\n\n      this.aceEditor.resize();\n\n      if (this.props.currentSceneId !== nextProps.currentSceneId) {\n        return true;\n      }\n\n      var currentGameObject = this.props.currentGameObject;\n      var nextGameObject = nextProps.currentGameObject;\n\n      if (currentGameObject && nextGameObject) {\n        if (currentGameObject.id === nextGameObject.id) {\n          return false;\n        }\n      } else if (!currentGameObject && !nextGameObject) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"setAceEditor\",\n    value: function setAceEditor() {\n      this.aceEditor = this.ace.edit(\"ace-editor-3d\");\n      this.aceEditor.session.setMode(\"ace/mode/\".concat(EDITORMODE.JAVASCRIPT));\n      this.aceEditor.setTheme(\"ace/theme/wizschool\");\n\n      if (!this.props.currentGameObject) {\n        return;\n      }\n\n      this.aceEditor.on(\"changeSelection\", this.handleOnChangeSelection);\n      this.aceEditor.on(\"change\", this.handleOnChange);\n      document.getElementById(\"ace-editor-3d\").addEventListener(\"mouseout\", function () {\n        document.getElementById(\"EditorContainer3d_tooltip\").style.display = \"none\";\n      });\n      this.aceEditor.getSession().setUseWrapMode(false);\n      this.aceEditor.setFontSize(this.getStoredFontSize());\n      this.undoManagers.defaultManager = this.aceEditor.session.getUndoManager();\n      this.aceEditor.setOptions({\n        enableBasicAutocompletion: true,\n        enableSnippets: true,\n        enableLiveAutocompletion: true\n      });\n      this.setAutoCompleters();\n      this.aceEditor.session.on(\"changeMode\", function (e, session) {\n        if (\"ace/mode/javascript-wiz\" === session.getMode().$id) {\n          if (!!session.$worker) {\n            session.$worker.send(\"setOptions\", [{\n              \"-W041\": false,\n              \"-W033\": false,\n              \"-W104\": false,\n              \"-W118\": false\n            }]);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getApiNameSet\",\n    value: function getApiNameSet(apiList) {\n      var ret = new Set();\n\n      for (var i = 0; i < apiList.length; i++) {\n        var api = apiList[i];\n        var caption = api.caption;\n        var idx = caption.indexOf(\"(\");\n\n        if (idx === -1) {\n          continue;\n        }\n\n        var name = caption.substring(0, idx);\n        ret.add(name);\n      } // Additional Reserved Keyword\n\n\n      ret.add(\"let\");\n      ret.add(\"var\");\n      ret.add(\"function\");\n      ret.add(\"switch\");\n      ret.add(\"case\");\n      ret.add(\"default\");\n      ret.add(\"global\");\n      ret.add(\"if\");\n      ret.add(\"else if\");\n      ret.add(\"else\");\n      return ret;\n    }\n  }, {\n    key: \"setAPILibrary\",\n    value: function setAPILibrary() {\n      this.apiList = ApiLibrary3d.getAllFunctions();\n      this.autoCompleteApiList = this.getAutoCompleteApiList(this.apiList);\n      this.apiNameSet = this.getApiNameSet(this.apiList);\n      this.JSEval.setListOfReserved(this.apiList.map(function (api) {\n        var cleanCaption = api.caption.replace(/\\[.+\\]/, \"array\");\n        var tokens = cleanCaption.match(/[a-z|A-Z]+/g);\n        return {\n          id: tokens[0],\n          type: \"function\",\n          value: {\n            /* Return value of a function */\n            type: \"object\",\n            value: {}\n          },\n          params: tokens.slice(1),\n          requiredParamCount: api.requiredParamCount || tokens.length - 1\n        };\n      }));\n    }\n  }, {\n    key: \"setAutoCompleters\",\n    value: function setAutoCompleters() {\n      var _this2 = this;\n\n      this.langTools = this.ace.require(\"ace/ext/language_tools\"); // const TokenIterator = this.ace.require(\"ace/token_iterator\").TokenIterator;\n      //default completers\n\n      var staticWordCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var list = _this2.autoCompleteApiList.map(function (_ref2) {\n            var caption = _ref2.caption,\n                value = _ref2.value,\n                newLine = _ref2.newLine,\n                selection = _ref2.selection,\n                selectionType = _ref2.selectionType;\n            return {\n              caption: caption,\n              value: value,\n              meta: \"function\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  editor.removeWordLeft();\n                  editor.insert(value);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setNewLine(editor, newLine);\n                  setNewLines(editor, caption);\n                  setSelectionWord(editor, getMatchedValue(newLine, value), selection, selectionType); // showSelectionWordList(selectionType);\n                }\n              }\n            };\n          });\n\n          function setNewLine(editor, newLine) {\n            if (newLine === undefined) {\n              return;\n            }\n\n            var valueRange = editor.find(newLine, {\n              backwards: true,\n              caseSensitive: true\n            });\n\n            if (valueRange === undefined) {\n              return;\n            }\n\n            editor.selection.moveCursorToPosition(valueRange.end);\n            editor.selection.clearSelection();\n            editor.insert(editor.session.doc.getNewLineCharacter());\n\n            if (editor.curOp && !editor.curOp.command.name) {\n              // editor.curOp.command.name = \"mouse\";\n              this.handleOnChange(undefined, editor);\n            }\n          }\n\n          function setNewLines(editor, caption) {\n            switch (caption) {\n              case \"switch~case\":\n                var afterNewLines = [\"case \\\"\\\" :\", \"break;\", \"default :\", \"break;\"];\n                var afterNewLine = afterNewLines.join(\"\");\n                var valueRange = editor.find(afterNewLine, {\n                  backwards: false,\n                  caseSensitive: true\n                });\n\n                if (valueRange === undefined) {\n                  return;\n                }\n\n                editor.selection.moveCursorToPosition(valueRange.end);\n                editor.selection.clearSelection();\n\n                for (var i = afterNewLines.length - 1; i >= 0; i--) {\n                  setNewLine(editor, afterNewLines[i]);\n                }\n\n                break;\n\n              default:\n                break;\n            }\n          }\n\n          function getMatchedValue(newLine, value) {\n            if (newLine !== undefined) {\n              return newLine;\n            } else {\n              return value;\n            }\n          }\n\n          function setSelectionWord(editor, value, selection, selectionType) {\n            if (selection === undefined) {\n              return;\n            }\n\n            var valueRange = editor.find(value, {\n              backwards: true,\n              caseSensitive: true\n            });\n\n            if (valueRange === undefined) {\n              return;\n            }\n\n            editor.selection.moveCursorToPosition(valueRange.start);\n            var selectionRange = editor.find(selection, {\n              backwards: false\n            });\n\n            if (selectionRange === undefined) {\n              return;\n            }\n\n            editor.selection.setSelectionRange(selectionRange, isSelectionRangeReverse(selectionType));\n          }\n\n          function isSelectionRangeReverse(selectionType) {\n            return selectionType !== undefined;\n          } // const showSelectionWordList = selectionType => {\n          //   if (selectionType) {\n          //     setTimeout(() => {\n          //       this.langTools.setCompleters(this.getCompleters(selectionType));\n          //       this.aceEditor.completer.showPopup(this.aceEditor);\n          //       this.langTools.setCompleters(this.getCompleters(\"all\"));\n          //     }, 10); //TODO : remove delay\n          //   }\n          // };\n\n\n          var start = prefix.split(\"\").reverse().join(\"\");\n\n          var entries = _this2.JSEval.FindSymbol(start, {\n            start: {\n              line: pos.row + 1,\n              column: pos.column\n            },\n            end: {\n              line: pos.row + 1,\n              column: pos.column\n            }\n          }, _this2.symtab, true);\n\n          if (Array.isArray(entries) === true) {\n            entries.forEach(function (entry) {\n              list.push({\n                caption: entry.id,\n                name: entry.id,\n                value: entry.id,\n                score: 1,\n                meta: entry.type\n              });\n            });\n          }\n\n          return callback(null, list);\n        }\n      };\n\n      var clearCompleterTarget = function clearCompleterTarget(editor) {\n        var start = editor.selection.getRange().start;\n        var end = editor.selection.getRange().end;\n        var line = editor.session.getLine(start.row);\n\n        if (line[start.column - 1] && line[start.column - 1] !== \"\\\"\") {\n          editor.removeWordLeft();\n        }\n\n        if (line[end.column] && line[end.column] !== \"\\\"\") {\n          editor.removeWordRight();\n        }\n      };\n\n      var soundCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var soundIds = _this2.props.soundIds;\n          callback(null, !soundIds ? null : soundIds.map(function (soundId) {\n            var name = AssetLibrary.getSoundAsset(soundId).defaultName;\n            return {\n              caption: name,\n              value: name,\n              meta: \"Sound\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newPos = {\n                    row: pos.row,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      var objectCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var currentGameObjects = _this2.props.currentGameObjects;\n          callback(null, Object.keys(currentGameObjects).map(function (id) {\n            var name = currentGameObjects[id].name;\n            return {\n              caption: name,\n              value: name,\n              meta: \"Object\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newLine = false;\n                  var functions = session.getLine(editor.selection.getRange().start.row).match(/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/g);\n\n                  if (functions && functions[0]) {\n                    var f = functions[0];\n\n                    if (f === \"onOverlap\") {\n                      newLine = true;\n                    }\n                  }\n\n                  var newPos = {\n                    row: pos.row + (newLine ? 1 : 0),\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      var sceneCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var _this2$props = _this2.props,\n              sceneIds = _this2$props.sceneIds,\n              scenes = _this2$props.scenes;\n          callback(null, sceneIds.map(function (id) {\n            var name = scenes[id].name;\n            return {\n              caption: name,\n              value: name,\n              meta: \"Scene\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newPos = {\n                    row: pos.row,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      var directionCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var directions = [\"left\", \"right\", \"up\", \"down\"];\n          callback(null, directions.map(function (name) {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Direction\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newPos = {\n                    row: pos.row + 1,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      var keyCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var keys = [\"left\", \"right\", \"up\", \"down\", \"shift\", \"control\", \"space\", \"enter\", \"esc\", \"f1\", \"f2\", \"f3\", \"f4\", \"f5\", \"f6\", \"f7\", \"f8\", \"f9\", \"f10\", \"f11\", \"f12\"];\n          callback(null, keys.map(function (name) {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Key\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newPos = {\n                    row: pos.row + 1,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      var colorCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var colors = window.HTML_Colors;\n          var colorNames = Object.keys(colors);\n          callback(null, colorNames.map(function (name) {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Color\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newPos = {\n                    row: pos.row,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      var textCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var completer = _this2.langTools.textCompleter;\n          var completions = completer.getCompletions(editor, session, pos, prefix, function (e, items) {\n            var filteredItems = getFilteredItems(items, _this2.apiNameSet);\n            callback(null, filteredItems);\n          });\n\n          function getFilteredItems(items, apiNameSet) {\n            return items.filter(function (item) {\n              if (apiNameSet.has(item.caption)) {\n                return false;\n              } else if (isAlreadySignalName(item.caption)) {\n                return false;\n              } else if (isAlreadyGlobalValue(item.caption)) {\n                return false;\n              } else {\n                return true;\n              }\n            });\n          }\n\n          function isAlreadySignalName(itemCaption) {\n            for (var i = 0; i < signalNames.length; i++) {\n              if (signalNames[i] === itemCaption) {\n                return true;\n              }\n            }\n\n            return false;\n          }\n\n          function isAlreadyGlobalValue(itemCaption) {\n            for (var i = 0; i < globalValues.length; i++) {\n              if (globalValues[i] === itemCaption) {\n                return true;\n              }\n            }\n\n            return false;\n          }\n\n          return completions;\n        }\n      };\n      var signalCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          callback(null, signalNames.map(function (name) {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Signal\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newPos = {\n                    row: pos.row + 1,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      var globalValueCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          callback(null, globalValues.map(function (name) {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Global\"\n            };\n          }));\n        }\n      };\n      var animationCompleter = {\n        getCompletions: function getCompletions(editor, session, pos, prefix, callback) {\n          var currentGameObject = _this2.props.currentGameObject;\n          var asset = AssetLibrary.getAssetFor(currentGameObject.assetId, currentGameObject.category || currentGameObject.type);\n          var animationNames = asset.animationNames;\n          callback(null, animationNames && animationNames.map(function (animationName) {\n            return {\n              caption: animationName,\n              value: animationName,\n              meta: \"Animation\",\n              completer: {\n                insertMatch: function insertMatch(editor) {\n                  clearCompleterTarget(editor);\n                  editor.insert(animationName);\n\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"Return\";\n\n                    _this2.handleOnChange(undefined, editor);\n                  }\n\n                  setTimeout(function () {\n                    editor.completer.detach();\n                  }, 10);\n                  var newPos = {\n                    row: pos.row,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          }));\n        }\n      };\n      this.completers = {\n        staticWordCompleter: staticWordCompleter,\n        soundCompleter: soundCompleter,\n        objectCompleter: objectCompleter,\n        sceneCompleter: sceneCompleter,\n        directionCompleter: directionCompleter,\n        keyCompleter: keyCompleter,\n        colorCompleter: colorCompleter,\n        textCompleter: textCompleter,\n        signalCompleter: signalCompleter,\n        globalValueCompleter: globalValueCompleter,\n        animationCompleter: animationCompleter\n      };\n      this.langTools.setCompleters(this.getCompleters(\"all\"));\n    }\n  }, {\n    key: \"setCode\",\n    value: function setCode() {\n      var currentGameObject = this.props.currentGameObject;\n      var code = currentGameObject ? currentGameObject.code : \"\";\n\n      if (this.aceEditor.getValue() !== code) {\n        this.aceEditor.setValue(code ? code : \"\", 1);\n      }\n\n      this.aceEditor.setReadOnly(!currentGameObject);\n    }\n  }, {\n    key: \"setWorkers\",\n    value: function setWorkers() {\n      if (window.Worker) {\n        signalNameWorker = new Worker(\"/ace/worker-signal-name.js\");\n        globalValueWorker = new Worker(\"/ace/worker-global-value.js\");\n      }\n    }\n  }, {\n    key: \"setSignalNames\",\n    value: function setSignalNames() {\n      if (window.Worker && signalNameWorker) {\n        signalNameWorker.onmessage = function (e) {\n          if (e === undefined || e.data === undefined) {\n            return;\n          }\n\n          signalNames = e.data;\n        };\n\n        var _this$props2 = this.props,\n            currentGameObjects = _this$props2.currentGameObjects,\n            gameObjectIds = _this$props2.gameObjectIds;\n        signalNameWorker.postMessage({\n          sprites: currentGameObjects,\n          spriteIds: gameObjectIds\n        });\n      } else {// worker not supported logic\n      }\n    }\n  }, {\n    key: \"setGlobalValues\",\n    value: function setGlobalValues() {\n      if (window.Worker && globalValueWorker) {\n        globalValueWorker.onmessage = function (e) {\n          if (e === undefined || e.data === undefined) {\n            return;\n          }\n\n          globalValues = e.data;\n        };\n\n        var _this$props3 = this.props,\n            currentGameObjects = _this$props3.currentGameObjects,\n            gameObjectIds = _this$props3.gameObjectIds;\n        globalValueWorker.postMessage({\n          sprites: currentGameObjects,\n          spriteIds: gameObjectIds\n        });\n      } else {// worker not supported logic\n      }\n    }\n  }, {\n    key: \"getSelectionRange\",\n    value: function getSelectionRange() {\n      return this.aceEditor.selection.getRange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.clearTimeout(this.errorTimer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var setSorting = this.setSorting,\n          setFontZoomIn = this.setFontZoomIn,\n          setFontZoomOut = this.setFontZoomOut;\n      var tooltip = this.state.tooltip;\n      return React.createElement(View, {\n        setSorting: setSorting,\n        setFontZoomIn: setFontZoomIn,\n        setFontZoomOut: setFontZoomOut,\n        tooltip: tooltip,\n        intl: this.props.intl,\n        editorMode: this.props.editorMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  var sceneIds = state.game.sceneIds;\n  var currentSceneId = state.interaction.currentSceneId;\n  var currentScene = currentSceneId ? state.game.scenes[currentSceneId] : null;\n  var soundIds = currentScene ? currentScene.soundIds : [];\n  var gameObjectIds = currentScene ? currentScene.gameObjectIds : null;\n  var currentGameObjects = currentScene ? currentScene.gameObjects : null;\n  var currentGameObjectId = state.interaction.currentGameObjectIds[currentSceneId];\n  var currentGameObject = currentGameObjects ? currentGameObjects[currentGameObjectId] : null;\n  return {\n    scenes: state.game.scenes,\n    sceneIds: sceneIds,\n    currentSceneId: currentSceneId,\n    soundIds: soundIds,\n    gameObjectIds: gameObjectIds,\n    currentGameObjects: currentGameObjects,\n    currentGameObject: currentGameObject\n  };\n}, {\n  updateGameObjectProperty: gameActions.updateGameObjectProperty\n})(withRouter(injectIntl(Container)));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/Editor/Component/AceEditor/Container.js"],"names":["React","Component","connect","withRouter","gameActions","EDITORMODE","ApiLibrary3d","JSEvaluator","AssetLibrary","View","injectIntl","Parser","toast","enableJSEval","signalNameWorker","undefined","signalNames","globalValueWorker","globalValues","Container","props","getCompleters","selectionType","Object","keys","completers","map","key","completer","getStoredFontSize","fontSize","localStorage","getItem","parseInt","handleMousemove","e","tooltip","document","getElementById","pos","getDocumentPosition","line","editor","session","getLine","row","funcsRanges","funcRegex","funcMatch","exec","push","start","index","end","lastIndex","currentFuncRange","i","length","funcRange","column","currentFunctionName","substring","api","apiList","find","name","style","display","equal","caption","setState","left","domEvent","offsetX","top","offsetY","handleOnChange","event","currentSceneId","currentGameObject","updateGameObjectProperty","code","getValue","currentGameObjectId","id","execCommand","detach","refreshCompleterPopupSize","setOptions","enableLiveAutocompletion","isNaN","lines","JSEvaluatorTimer","clearTimeout","setTimeout","parseJSEvaluator","curOp","command","window","BabylonConstant","PROPERTY_ID","CODE","annotations","ret","JSEval","parse","symtab","build","SymbolTable","getSession","getAnnotations","handleShowErrors","errors","forEach","item","text","setErrorText","onClick","loc","position","aceEditor","selection","moveCursorToPosition","clearSelection","message","test","split","match","ERROR_MESSAGE","FUNCTION_UPPER_LOWER","typingFunction","originFunction","handleOnChangeSelection","range","getSelectionRange","selectionChanged","byUser","quotesRanges","quoteRegex","quoteMatch","currentQuoteRange","quoteRange","currentFunctionRange","list","autoCompleteApiList","filter","indexOf","isCustomCompleterOpen","langTools","setCompleters","showPopup","setSorting","parsedCode","parseForSort","setValue","info","POSITION","BOTTOM_RIGHT","warn","setFontZoomIn","size","getFontSize","setItem","setFontSize","setFontZoomOut","MIN_SIZE","percent","popup","container","width","isLive","ace","undoManagers","errorTimer","state","captionList","filteredApiList","setAceEditor","setCode","setWorkers","setSignalNames","setGlobalValues","setAPILibrary","nextProps","nextState","resize","nextGameObject","edit","setMode","JAVASCRIPT","setTheme","on","addEventListener","setUseWrapMode","defaultManager","getUndoManager","enableBasicAutocompletion","enableSnippets","setAutoCompleters","getMode","$id","$worker","send","Set","idx","add","getAllFunctions","getAutoCompleteApiList","apiNameSet","getApiNameSet","setListOfReserved","cleanCaption","replace","tokens","type","value","params","slice","requiredParamCount","require","staticWordCompleter","getCompletions","prefix","callback","newLine","meta","insertMatch","removeWordLeft","insert","setNewLine","setNewLines","setSelectionWord","getMatchedValue","valueRange","backwards","caseSensitive","doc","getNewLineCharacter","afterNewLines","afterNewLine","join","selectionRange","setSelectionRange","isSelectionRangeReverse","reverse","entries","FindSymbol","Array","isArray","entry","score","clearCompleterTarget","getRange","removeWordRight","soundCompleter","soundIds","soundId","getSoundAsset","defaultName","newPos","objectCompleter","currentGameObjects","functions","f","sceneCompleter","sceneIds","scenes","directionCompleter","directions","keyCompleter","colorCompleter","colors","HTML_Colors","colorNames","textCompleter","completions","items","filteredItems","getFilteredItems","has","isAlreadySignalName","isAlreadyGlobalValue","itemCaption","signalCompleter","globalValueCompleter","animationCompleter","asset","getAssetFor","assetId","category","animationNames","animationName","setReadOnly","Worker","onmessage","data","gameObjectIds","postMessage","sprites","spriteIds","intl","editorMode","game","interaction","currentScene","gameObjects","currentGameObjectIds"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as gameActions from \"../../../../Store/Reducer/game\";\nimport { EDITORMODE } from \"../../../../../../Common/Util/Constant\";\nimport ApiLibrary3d from \"../../../../Util/ApiLibrary3d\";\nimport JSEvaluator from \"../../../../../Builder/utils/JSEvaluator\";\nimport AssetLibrary from \"../../../../Util/AssetLibrary/index\";\nimport View from \"./View\";\nimport { injectIntl } from \"react-intl\";\nimport Parser from \"../../../../../Builder/utils/parser\";\nimport { toast } from \"react-toastify\";\n\nconst enableJSEval = true;\nlet signalNameWorker = undefined;\nlet signalNames = [];\nlet globalValueWorker = undefined;\nlet globalValues = [];\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.isLive = false;\n    this.ace = window.ace;\n    this.langTools = undefined;\n    this.completers = {};\n    this.aceEditor = undefined;\n    this.undoManagers = {};\n    this.JSEval = new JSEvaluator();\n    this.symtab = undefined;\n    this.errorTimer = null;\n\n    this.state = { tooltip: null };\n  }\n\n  getAutoCompleteApiList(apiList) {\n    const captionList = apiList.map(({ caption }) => {\n      return caption;\n    });\n\n    const filteredApiList = apiList.filter((item, index) => {\n      return captionList.indexOf(item.caption) === index;\n    });\n\n    return filteredApiList;\n  }\n\n  componentDidMount() {\n    this.setAceEditor();\n    this.setCode();\n    this.setWorkers();\n    this.setSignalNames();\n    this.setGlobalValues();\n    this.setAPILibrary();\n  }\n\n  componentDidUpdate() {\n    this.setCode();\n    this.setSignalNames();\n    this.setGlobalValues();\n    this.setAceEditor();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.tooltip !== nextState.tooltip) {\n      return true;\n    }\n    this.aceEditor.resize();\n    if (this.props.currentSceneId !== nextProps.currentSceneId) {\n      return true;\n    }\n\n    const currentGameObject = this.props.currentGameObject;\n    const nextGameObject = nextProps.currentGameObject;\n    if (currentGameObject && nextGameObject) {\n      if (currentGameObject.id === nextGameObject.id) {\n        return false;\n      }\n    } else if (!currentGameObject && !nextGameObject) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getCompleters = selectionType => {\n    switch (selectionType) {\n      case \"all\":\n        return Object.keys(this.completers).map(key => this.completers[key]);\n      case \"global\":\n        return [this.completers[selectionType + \"ValueCompleter\"]];\n      default:\n        let completer = this.completers[selectionType + \"Completer\"];\n        if (completer) {\n          return [completer];\n        } else {\n          return [];\n        }\n    }\n  };\n\n  setAceEditor() {\n    this.aceEditor = this.ace.edit(\"ace-editor-3d\");\n    this.aceEditor.session.setMode(`ace/mode/${EDITORMODE.JAVASCRIPT}`);\n    this.aceEditor.setTheme(\"ace/theme/wizschool\");\n\n    if (!this.props.currentGameObject) {\n      return;\n    }\n\n    this.aceEditor.on(\"changeSelection\", this.handleOnChangeSelection);\n    this.aceEditor.on(\"change\", this.handleOnChange);\n    document\n      .getElementById(\"ace-editor-3d\")\n      .addEventListener(\"mouseout\", () => {\n        document.getElementById(\"EditorContainer3d_tooltip\").style.display =\n          \"none\";\n      });\n    this.aceEditor.getSession().setUseWrapMode(false);\n    this.aceEditor.setFontSize(this.getStoredFontSize());\n\n    this.undoManagers.defaultManager = this.aceEditor.session.getUndoManager();\n\n    this.aceEditor.setOptions({\n      enableBasicAutocompletion: true,\n      enableSnippets: true,\n      enableLiveAutocompletion: true\n    });\n\n    this.setAutoCompleters();\n\n    this.aceEditor.session.on(\"changeMode\", function(e, session) {\n      if (`ace/mode/javascript-wiz` === session.getMode().$id) {\n        if (!!session.$worker) {\n          session.$worker.send(\"setOptions\", [\n            {\n              \"-W041\": false,\n              \"-W033\": false,\n              \"-W104\": false,\n              \"-W118\": false\n            }\n          ]);\n        }\n      }\n    });\n  }\n\n  getStoredFontSize = () => {\n    const fontSize = localStorage.getItem(\"wizFontSize\");\n    if (fontSize) {\n      return parseInt(fontSize);\n    }\n    return 18;\n  };\n\n  getApiNameSet(apiList) {\n    const ret = new Set();\n\n    for (let i = 0; i < apiList.length; i++) {\n      const api = apiList[i];\n      const caption = api.caption;\n      const idx = caption.indexOf(\"(\");\n\n      if (idx === -1) {\n        continue;\n      }\n\n      const name = caption.substring(0, idx);\n      ret.add(name);\n    }\n\n    // Additional Reserved Keyword\n    ret.add(\"let\");\n    ret.add(\"var\");\n    ret.add(\"function\");\n    ret.add(\"switch\");\n    ret.add(\"case\");\n    ret.add(\"default\");\n    ret.add(\"global\");\n    ret.add(\"if\");\n    ret.add(\"else if\");\n    ret.add(\"else\");\n\n    return ret;\n  }\n\n  setAPILibrary() {\n    this.apiList = ApiLibrary3d.getAllFunctions();\n    this.autoCompleteApiList = this.getAutoCompleteApiList(this.apiList);\n    this.apiNameSet = this.getApiNameSet(this.apiList);\n    this.JSEval.setListOfReserved(\n      this.apiList.map(api => {\n        const cleanCaption = api.caption.replace(/\\[.+\\]/, \"array\");\n        const tokens = cleanCaption.match(/[a-z|A-Z]+/g);\n        return {\n          id: tokens[0],\n          type: \"function\",\n          value: {\n            /* Return value of a function */\n            type: \"object\",\n            value: {}\n          },\n          params: tokens.slice(1),\n          requiredParamCount: api.requiredParamCount || tokens.length - 1\n        };\n      })\n    );\n  }\n\n  setAutoCompleters() {\n    this.langTools = this.ace.require(\"ace/ext/language_tools\");\n    // const TokenIterator = this.ace.require(\"ace/token_iterator\").TokenIterator;\n\n    //default completers\n    const staticWordCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        let list = this.autoCompleteApiList.map(\n          ({ caption, value, newLine, selection, selectionType }) => {\n            return {\n              caption: caption,\n              value: value,\n              meta: \"function\",\n              completer: {\n                insertMatch: editor => {\n                  editor.removeWordLeft();\n                  editor.insert(value);\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n                    this.handleOnChange(undefined, editor);\n                  }\n                  setNewLine(editor, newLine);\n                  setNewLines(editor, caption);\n                  setSelectionWord(\n                    editor,\n                    getMatchedValue(newLine, value),\n                    selection,\n                    selectionType\n                  );\n                  // showSelectionWordList(selectionType);\n                }\n              }\n            };\n          }\n        );\n\n        function setNewLine(editor, newLine) {\n          if (newLine === undefined) {\n            return;\n          }\n\n          const valueRange = editor.find(newLine, {\n            backwards: true,\n            caseSensitive: true\n          });\n          if (valueRange === undefined) {\n            return;\n          }\n          editor.selection.moveCursorToPosition(valueRange.end);\n          editor.selection.clearSelection();\n          editor.insert(editor.session.doc.getNewLineCharacter());\n          if (editor.curOp && !editor.curOp.command.name) {\n            // editor.curOp.command.name = \"mouse\";\n            this.handleOnChange(undefined, editor);\n          }\n        }\n\n        function setNewLines(editor, caption) {\n          switch (caption) {\n            case \"switch~case\":\n              const afterNewLines = [\n                `case \"\" :`,\n                `break;`,\n                `default :`,\n                `break;`\n              ];\n\n              const afterNewLine = afterNewLines.join(\"\");\n              const valueRange = editor.find(afterNewLine, {\n                backwards: false,\n                caseSensitive: true\n              });\n              if (valueRange === undefined) {\n                return;\n              }\n\n              editor.selection.moveCursorToPosition(valueRange.end);\n              editor.selection.clearSelection();\n\n              for (let i = afterNewLines.length - 1; i >= 0; i--) {\n                setNewLine(editor, afterNewLines[i]);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n\n        function getMatchedValue(newLine, value) {\n          if (newLine !== undefined) {\n            return newLine;\n          } else {\n            return value;\n          }\n        }\n\n        function setSelectionWord(editor, value, selection, selectionType) {\n          if (selection === undefined) {\n            return;\n          }\n          const valueRange = editor.find(value, {\n            backwards: true,\n            caseSensitive: true\n          });\n          if (valueRange === undefined) {\n            return;\n          }\n          editor.selection.moveCursorToPosition(valueRange.start);\n          const selectionRange = editor.find(selection, { backwards: false });\n          if (selectionRange === undefined) {\n            return;\n          }\n          editor.selection.setSelectionRange(\n            selectionRange,\n            isSelectionRangeReverse(selectionType)\n          );\n        }\n\n        function isSelectionRangeReverse(selectionType) {\n          return selectionType !== undefined;\n        }\n\n        // const showSelectionWordList = selectionType => {\n        //   if (selectionType) {\n        //     setTimeout(() => {\n        //       this.langTools.setCompleters(this.getCompleters(selectionType));\n        //       this.aceEditor.completer.showPopup(this.aceEditor);\n        //       this.langTools.setCompleters(this.getCompleters(\"all\"));\n        //     }, 10); //TODO : remove delay\n        //   }\n        // };\n\n        let start = prefix\n          .split(\"\")\n          .reverse()\n          .join(\"\");\n\n        const entries = this.JSEval.FindSymbol(\n          start,\n          {\n            start: {\n              line: pos.row + 1,\n              column: pos.column\n            },\n            end: {\n              line: pos.row + 1,\n              column: pos.column\n            }\n          },\n          this.symtab,\n          true\n        );\n\n        if (Array.isArray(entries) === true) {\n          entries.forEach(entry => {\n            list.push({\n              caption: entry.id,\n              name: entry.id,\n              value: entry.id,\n              score: 1,\n              meta: entry.type\n            });\n          });\n        }\n\n        return callback(null, list);\n      }\n    };\n\n    const clearCompleterTarget = editor => {\n      const start = editor.selection.getRange().start;\n      const end = editor.selection.getRange().end;\n      const line = editor.session.getLine(start.row);\n      if (line[start.column - 1] && line[start.column - 1] !== `\"`) {\n        editor.removeWordLeft();\n      }\n      if (line[end.column] && line[end.column] !== `\"`) {\n        editor.removeWordRight();\n      }\n    };\n\n    const soundCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const { soundIds } = this.props;\n        callback(\n          null,\n          !soundIds\n            ? null\n            : soundIds.map(soundId => {\n                const name = AssetLibrary.getSoundAsset(soundId).defaultName;\n                return {\n                  caption: name,\n                  value: name,\n                  meta: \"Sound\",\n                  completer: {\n                    insertMatch: editor => {\n                      clearCompleterTarget(editor);\n                      editor.insert(name);\n                      if (editor.curOp && !editor.curOp.command.name) {\n                        editor.curOp.command.name = \"mouse\";\n                        this.handleOnChange(undefined, editor);\n                      }\n                      setTimeout(() => {\n                        editor.completer.detach();\n                      }, 10);\n\n                      const newPos = {\n                        row: pos.row,\n                        column: session.getLine(pos.row).length\n                      };\n                      editor.selection.moveCursorToPosition(newPos);\n                    }\n                  }\n                };\n              })\n        );\n      }\n    };\n\n    const objectCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const { currentGameObjects } = this.props;\n        callback(\n          null,\n          Object.keys(currentGameObjects).map(id => {\n            const name = currentGameObjects[id].name;\n            return {\n              caption: name,\n              value: name,\n              meta: \"Object\",\n              completer: {\n                insertMatch: editor => {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n                    this.handleOnChange(undefined, editor);\n                  }\n                  setTimeout(() => {\n                    editor.completer.detach();\n                  }, 10);\n\n                  let newLine = false;\n                  const functions = session\n                    .getLine(editor.selection.getRange().start.row)\n                    .match(/([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/g);\n                  if (functions && functions[0]) {\n                    const f = functions[0];\n                    if (f === \"onOverlap\") {\n                      newLine = true;\n                    }\n                  }\n                  const newPos = {\n                    row: pos.row + (newLine ? 1 : 0),\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          })\n        );\n      }\n    };\n\n    const sceneCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const { sceneIds, scenes } = this.props;\n        callback(\n          null,\n          sceneIds.map(id => {\n            const name = scenes[id].name;\n            return {\n              caption: name,\n              value: name,\n              meta: \"Scene\",\n              completer: {\n                insertMatch: editor => {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n                    this.handleOnChange(undefined, editor);\n                  }\n                  setTimeout(() => {\n                    editor.completer.detach();\n                  }, 10);\n\n                  const newPos = {\n                    row: pos.row,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          })\n        );\n      }\n    };\n\n    const directionCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const directions = [\"left\", \"right\", \"up\", \"down\"];\n        callback(\n          null,\n          directions.map(name => {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Direction\",\n              completer: {\n                insertMatch: editor => {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n                    this.handleOnChange(undefined, editor);\n                  }\n                  setTimeout(() => {\n                    editor.completer.detach();\n                  }, 10);\n\n                  const newPos = {\n                    row: pos.row + 1,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          })\n        );\n      }\n    };\n\n    const keyCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const keys = [\n          \"left\",\n          \"right\",\n          \"up\",\n          \"down\",\n          \"shift\",\n          \"control\",\n          \"space\",\n          \"enter\",\n          \"esc\",\n          \"f1\",\n          \"f2\",\n          \"f3\",\n          \"f4\",\n          \"f5\",\n          \"f6\",\n          \"f7\",\n          \"f8\",\n          \"f9\",\n          \"f10\",\n          \"f11\",\n          \"f12\"\n        ];\n\n        callback(\n          null,\n          keys.map(name => {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Key\",\n              completer: {\n                insertMatch: editor => {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n                    this.handleOnChange(undefined, editor);\n                  }\n                  setTimeout(() => {\n                    editor.completer.detach();\n                  }, 10);\n\n                  const newPos = {\n                    row: pos.row + 1,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          })\n        );\n      }\n    };\n\n    const colorCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const colors = window.HTML_Colors;\n        const colorNames = Object.keys(colors);\n        callback(\n          null,\n          colorNames.map(name => {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Color\",\n              completer: {\n                insertMatch: editor => {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n                    this.handleOnChange(undefined, editor);\n                  }\n                  setTimeout(() => {\n                    editor.completer.detach();\n                  }, 10);\n\n                  const newPos = {\n                    row: pos.row,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          })\n        );\n      }\n    };\n\n    const textCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const completer = this.langTools.textCompleter;\n        const completions = completer.getCompletions(\n          editor,\n          session,\n          pos,\n          prefix,\n          (e, items) => {\n            const filteredItems = getFilteredItems(items, this.apiNameSet);\n            callback(null, filteredItems);\n          }\n        );\n\n        function getFilteredItems(items, apiNameSet) {\n          return items.filter(item => {\n            if (apiNameSet.has(item.caption)) {\n              return false;\n            } else if (isAlreadySignalName(item.caption)) {\n              return false;\n            } else if (isAlreadyGlobalValue(item.caption)) {\n              return false;\n            } else {\n              return true;\n            }\n          });\n        }\n\n        function isAlreadySignalName(itemCaption) {\n          for (let i = 0; i < signalNames.length; i++) {\n            if (signalNames[i] === itemCaption) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n        function isAlreadyGlobalValue(itemCaption) {\n          for (let i = 0; i < globalValues.length; i++) {\n            if (globalValues[i] === itemCaption) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n        return completions;\n      }\n    };\n\n    const signalCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        callback(\n          null,\n          signalNames.map(name => {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Signal\",\n              completer: {\n                insertMatch: editor => {\n                  clearCompleterTarget(editor);\n                  editor.insert(name);\n                  if (editor.curOp && !editor.curOp.command.name) {\n                    editor.curOp.command.name = \"mouse\";\n                    this.handleOnChange(undefined, editor);\n                  }\n                  setTimeout(() => {\n                    editor.completer.detach();\n                  }, 10);\n\n                  const newPos = {\n                    row: pos.row + 1,\n                    column: session.getLine(pos.row).length\n                  };\n                  editor.selection.moveCursorToPosition(newPos);\n                }\n              }\n            };\n          })\n        );\n      }\n    };\n\n    const globalValueCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        callback(\n          null,\n          globalValues.map(function(name) {\n            return {\n              caption: name,\n              value: name,\n              meta: \"Global\"\n            };\n          })\n        );\n      }\n    };\n\n    const animationCompleter = {\n      getCompletions: (editor, session, pos, prefix, callback) => {\n        const { currentGameObject } = this.props;\n        const asset = AssetLibrary.getAssetFor(\n          currentGameObject.assetId,\n          currentGameObject.category || currentGameObject.type\n        );\n        const { animationNames } = asset;\n\n        callback(\n          null,\n          animationNames &&\n            animationNames.map(animationName => {\n              return {\n                caption: animationName,\n                value: animationName,\n                meta: \"Animation\",\n                completer: {\n                  insertMatch: editor => {\n                    clearCompleterTarget(editor);\n                    editor.insert(animationName);\n                    if (editor.curOp && !editor.curOp.command.name) {\n                      editor.curOp.command.name = \"Return\";\n                      this.handleOnChange(undefined, editor);\n                    }\n                    setTimeout(() => {\n                      editor.completer.detach();\n                    }, 10);\n\n                    const newPos = {\n                      row: pos.row,\n                      column: session.getLine(pos.row).length\n                    };\n                    editor.selection.moveCursorToPosition(newPos);\n                  }\n                }\n              };\n            })\n        );\n      }\n    };\n\n    this.completers = {\n      staticWordCompleter,\n      soundCompleter,\n      objectCompleter,\n      sceneCompleter,\n      directionCompleter,\n      keyCompleter,\n      colorCompleter,\n      textCompleter,\n      signalCompleter,\n      globalValueCompleter,\n      animationCompleter\n    };\n\n    this.langTools.setCompleters(this.getCompleters(\"all\"));\n  }\n\n  setCode() {\n    const { currentGameObject } = this.props;\n    const code = currentGameObject ? currentGameObject.code : \"\";\n    if (this.aceEditor.getValue() !== code) {\n      this.aceEditor.setValue(code ? code : \"\", 1);\n    }\n    this.aceEditor.setReadOnly(!currentGameObject);\n  }\n\n  setWorkers() {\n    if (window.Worker) {\n      signalNameWorker = new Worker(\"/ace/worker-signal-name.js\");\n      globalValueWorker = new Worker(\"/ace/worker-global-value.js\");\n    }\n  }\n\n  setSignalNames() {\n    if (window.Worker && signalNameWorker) {\n      signalNameWorker.onmessage = function(e) {\n        if (e === undefined || e.data === undefined) {\n          return;\n        }\n        signalNames = e.data;\n      };\n\n      const { currentGameObjects, gameObjectIds } = this.props;\n      signalNameWorker.postMessage({\n        sprites: currentGameObjects,\n        spriteIds: gameObjectIds\n      });\n    } else {\n      // worker not supported logic\n    }\n  }\n\n  setGlobalValues() {\n    if (window.Worker && globalValueWorker) {\n      globalValueWorker.onmessage = function(e) {\n        if (e === undefined || e.data === undefined) {\n          return;\n        }\n\n        globalValues = e.data;\n      };\n\n      const { currentGameObjects, gameObjectIds } = this.props;\n      globalValueWorker.postMessage({\n        sprites: currentGameObjects,\n        spriteIds: gameObjectIds\n      });\n    } else {\n      // worker not supported logic\n    }\n  }\n\n  handleMousemove = e => {\n    try {\n      const tooltip = document.getElementById(\"EditorContainer3d_tooltip\");\n      const pos = e.getDocumentPosition();\n      const line = e.editor.session.getLine(pos.row);\n\n      // 해당 라인에 있는 함수들의 범위 구하기\n      let funcsRanges = [];\n      const funcRegex = /([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/gim;\n      let funcMatch;\n      while ((funcMatch = funcRegex.exec(line))) {\n        funcsRanges.push({ start: funcMatch.index, end: funcRegex.lastIndex });\n      }\n\n      // 현재 커서가 있는 함수의 범위 구하기\n      let currentFuncRange;\n      for (let i = 0; i < funcsRanges.length; i++) {\n        const funcRange = funcsRanges[i];\n        if (funcRange.start <= pos.column && pos.column <= funcRange.end) {\n          currentFuncRange = funcRange;\n          break;\n        }\n      }\n\n      // 현재 커서가 있는 함수의 이름 구하기\n      if (currentFuncRange) {\n        const currentFunctionName = line.substring(\n          currentFuncRange.start,\n          currentFuncRange.end\n        );\n\n        // 해당 함수의 api 정보 불러오기\n        let api = this.apiList.find(api => api.name === currentFunctionName);\n        if (!api) {\n          tooltip.style.display = \"none\";\n          return;\n        }\n\n        // 이름이 대체된 api라면 대체된 api의 정보를 불러오기\n        const equal = api.equal;\n        const caption = api.caption;\n        if (equal) {\n          api = { ...this.apiList.find(api => api.name === equal) };\n          api.caption = caption;\n        }\n\n        // 툴팁 보여주기\n        this.setState({ tooltip: { ...api } }, () => {\n          tooltip.style.display = \"block\";\n          tooltip.style.left = `${e.domEvent.offsetX}px`;\n          tooltip.style.top = `${e.domEvent.offsetY + 18}px`;\n        });\n      } else {\n        tooltip.style.display = \"none\";\n      }\n    } catch (e) {}\n  };\n\n  handleOnChange = (event, editor) => {\n    const {\n      currentSceneId,\n      currentGameObject,\n      updateGameObjectProperty\n    } = this.props;\n    if (!currentGameObject) {\n      return;\n    }\n\n    const code = editor.getValue();\n    const currentGameObjectId = currentGameObject.id;\n\n    if (editor.completer === undefined) {\n      try {\n        editor.execCommand(\"startAutocomplete\");\n        editor.completer.detach();\n        this.refreshCompleterPopupSize();\n      } catch (e) {}\n    }\n\n    // If inserted number, disable autocomplete\n    if (event) {\n      editor.setOptions({ enableLiveAutocompletion: isNaN(event.lines[0]) });\n    }\n\n    if (this.JSEvaluatorTimer) {\n      clearTimeout(this.JSEvaluatorTimer);\n    }\n    this.JSEvaluatorTimer = setTimeout(() => {\n      this.parseJSEvaluator(code, editor);\n    }, 3000);\n\n    if (currentGameObjectId) {\n      if (editor.curOp && editor.curOp.command.name) {\n        updateGameObjectProperty(\n          currentSceneId,\n          currentGameObjectId,\n          window.BabylonConstant.PROPERTY_ID.CODE,\n          code\n        );\n      }\n    }\n  };\n\n  parseJSEvaluator = (code, editor) => {\n    // Parsing the code (JSEvaluator uses the Acorn)\n    // let errors = [];\n    // eslint-disable-next-line\n    let annotations = [];\n\n    // TODO:\n    // Ugly way to enable the following code block only for the development version.\n    if (enableJSEval) {\n      // if (enableJSEval || window.location.hostname !== \"wizlab.net\") {\n      var ret;\n\n      try {\n        // Parsing the code (JSEvaluator uses the Acorn)\n        ret = this.JSEval.parse(code);\n      } catch (e) {\n        // console.log(\"JSEvaluator\", e);\n        ret = false;\n      }\n\n      if (ret === true) {\n        // Evaluating the parsed code (AST)\n        // In order to build the symbol table and get the runtime errors\n        let symtab;\n\n        if (this.JSEval.build() === true) {\n          symtab = this.JSEval.SymbolTable();\n          // Update the symbol table only if the JSEval successfully built the table.\n          // Otherwise uses the old table for the auto completions.\n          if (symtab !== null) {\n            this.symtab = symtab;\n          }\n        }\n      }\n\n      // errors = this.JSEval.getErrors();\n    }\n\n    annotations = editor.getSession().getAnnotations();\n  };\n\n  handleShowErrors = () => {\n    const errors = this.props.errors;\n    errors.forEach(item => {\n      item.text = this.setErrorText(item);\n      item.onClick = () => {\n        let end = item.loc && item.loc.end;\n        if (!end) return;\n        let position = {\n          row: end.line - 1,\n          column: end.column\n        };\n        this.aceEditor.selection.moveCursorToPosition(position);\n        this.aceEditor.selection.clearSelection();\n      };\n    });\n  };\n\n  setErrorText = item => {\n    // let startLine = item.loc ? item.loc.start.line : item.row + 1;\n    let message = item.message;\n\n    let text = ``;\n    if (/parameter/i.test(message)) {\n      text += message.split(\" \")[0] + \" 함수는 \";\n      text += message.split(\" \")[2] + \"개의 매개변수를 넣어주어야 해~\";\n    }\n    if (/is undefined/i.test(message)) {\n      text += message.split(\" \")[0] + \" 는 아직 정의되지 않은 것 같은데?\";\n    }\n    if (/has already been declared/i.test(message)) {\n      let name = message.match(/'\\w+'/);\n      text += `이미 정의된 ${name}를 다시 정의하고 있어.`;\n    }\n    if (/Cannot change the constant/i.test(message)) {\n      let name = message.split(\" \")[4];\n      text += `const로 정의한 ${name}를 다시 정의하고 있군.`;\n    }\n    if (message === this.JSEval.ERROR_MESSAGE.FUNCTION_UPPER_LOWER) {\n      text += `함수의 대소문자를 확인해봐.\\n (${item.typingFunction} → ${item.originFunction})`;\n    }\n    if (!text) {\n      text += \"을 확인해봐!\";\n    }\n\n    return text;\n  };\n\n  handleOnChangeSelection = (event, editor) => {\n    let range = this.getSelectionRange();\n    if (\n      editor.curOp &&\n      editor.curOp.selectionChanged &&\n      editor.curOp.command.name\n    ) {\n      if (range) {\n        range.byUser = true;\n      }\n    } else {\n      return;\n    }\n\n    const line = editor.session.getLine(range.start.row);\n\n    // 문자열의 범위 모두 구하기\n    let quotesRanges = [];\n    const quoteRegex = /'((?:\\\\.|[^'])*)'|\"((?:\\\\.|[^\"])*)\"/gim;\n    let quoteMatch;\n    while ((quoteMatch = quoteRegex.exec(line))) {\n      quotesRanges.push({ start: quoteMatch.index, end: quoteRegex.lastIndex });\n    }\n    // console.log(\"quotesRanges\", quotesRanges);\n\n    // 커서가 위치한 문자열을 현재 문자열로 저장\n    let currentQuoteRange;\n    for (let i in quotesRanges) {\n      const quoteRange = quotesRanges[i];\n      if (\n        range.start.column === quoteRange.start + 1 ||\n        range.end.column === quoteRange.end - 1\n      ) {\n        currentQuoteRange = quoteRange;\n        break;\n      }\n    }\n    // console.log(\"currentQuoteRange\", currentQuoteRange);\n\n    // 현재 문자열이 있으면 자동완성 활성화\n    if (currentQuoteRange) {\n      // 함수이름의 범위 모두 구하기\n      let funcsRanges = [];\n      const funcRegex = /([a-zA-Z_{1}][a-zA-Z0-9_]+)(?=\\()/gim;\n      let funcMatch;\n      while ((funcMatch = funcRegex.exec(line))) {\n        funcsRanges.push({ start: funcMatch.index, end: funcRegex.lastIndex });\n      }\n      // console.log(\"funcsRanges\", funcsRanges);\n\n      // 현재 문자열의 start에 가장 가까운 함수이름의 범위 구하기\n      let currentFunctionRange;\n      for (let i in funcsRanges) {\n        const funcRange = funcsRanges[i];\n        if (funcRange.end < currentQuoteRange.start) {\n          currentFunctionRange = funcRange;\n        } else {\n          break;\n        }\n      }\n      if (!currentFunctionRange) {\n        return;\n      }\n\n      // 해당 함수의 이름 구하기\n      const currentFunctionName = line.substring(\n        currentFunctionRange.start,\n        currentFunctionRange.end\n      );\n      // console.log(\"currentFunctionName\", currentFunctionName);\n\n      // 함수 이름으로 자동완성 리스트 업데이트 및 보여주기\n      let list = this.autoCompleteApiList.filter(\n        api => api.caption.indexOf(currentFunctionName) !== -1\n      );\n\n      if (list && list[0]) {\n        let selectionType = list[0].selectionType;\n        if (selectionType) {\n          setTimeout(() => {\n            this.isCustomCompleterOpen = true;\n            this.langTools.setCompleters(this.getCompleters(selectionType));\n            editor.completer.showPopup(editor);\n            this.langTools.setCompleters(this.getCompleters(\"all\"));\n          }, 10);\n        }\n      }\n    } else {\n      // 문자열 밖에 커서가 있을 때는 커스텀 컴플리터를 해제\n      if (this.isCustomCompleterOpen) {\n        setTimeout(() => {\n          this.isCustomCompleterOpen = false;\n          editor.completer.detach();\n        }, 10);\n      }\n    }\n  };\n\n  setSorting = () => {\n    try {\n      const code = this.aceEditor.getValue();\n      const parsedCode = Parser.parseForSort(code);\n      this.aceEditor.setValue(parsedCode, 1);\n      toast.info(\"코드가 정렬되었습니다\", {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n\n      this.aceEditor.curOp.command.name = \"mouse\";\n      this.handleOnChange(undefined, this.aceEditor);\n    } catch (e) {\n      toast.warn(\"에러를 수정한 후 정렬해주세요\", {\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n    }\n  };\n\n  setFontZoomIn = () => {\n    const size = this.aceEditor.getFontSize() + 2;\n    if (size > 50) {\n      return;\n    }\n    localStorage.setItem(\"wizFontSize\", size);\n    this.aceEditor.setFontSize(size);\n    this.refreshCompleterPopupSize();\n  };\n\n  setFontZoomOut = () => {\n    const MIN_SIZE = 8;\n    const size = this.aceEditor.getFontSize() - 2;\n    if (size < MIN_SIZE) {\n      return;\n    }\n    localStorage.setItem(\"wizFontSize\", size);\n    this.aceEditor.setFontSize(size);\n    this.refreshCompleterPopupSize();\n  };\n\n  refreshCompleterPopupSize = () => {\n    if (this.aceEditor.completer) {\n      const percent = this.aceEditor.getFontSize() + 10 + \"%\";\n      this.aceEditor.completer.popup.container.style.width = percent;\n    }\n  };\n\n  getSelectionRange() {\n    return this.aceEditor.selection.getRange();\n  }\n\n  componentWillUnmount() {\n    window.clearTimeout(this.errorTimer);\n  }\n\n  render() {\n    const { setSorting, setFontZoomIn, setFontZoomOut } = this;\n    const { tooltip } = this.state;\n    return (\n      <View\n        setSorting={setSorting}\n        setFontZoomIn={setFontZoomIn}\n        setFontZoomOut={setFontZoomOut}\n        tooltip={tooltip}\n        intl={this.props.intl}\n        editorMode={this.props.editorMode}\n      />\n    );\n  }\n}\nexport default connect(\n  state => {\n    const sceneIds = state.game.sceneIds;\n    const currentSceneId = state.interaction.currentSceneId;\n    const currentScene = currentSceneId\n      ? state.game.scenes[currentSceneId]\n      : null;\n    const soundIds = currentScene ? currentScene.soundIds : [];\n    const gameObjectIds = currentScene ? currentScene.gameObjectIds : null;\n    const currentGameObjects = currentScene ? currentScene.gameObjects : null;\n    const currentGameObjectId =\n      state.interaction.currentGameObjectIds[currentSceneId];\n    const currentGameObject = currentGameObjects\n      ? currentGameObjects[currentGameObjectId]\n      : null;\n    return {\n      scenes: state.game.scenes,\n      sceneIds,\n      currentSceneId,\n      soundIds,\n      gameObjectIds,\n      currentGameObjects,\n      currentGameObject\n    };\n  },\n  {\n    updateGameObjectProperty: gameActions.updateGameObjectProperty\n  }\n)(withRouter(injectIntl(Container)));\n"]},"metadata":{},"sourceType":"module"}