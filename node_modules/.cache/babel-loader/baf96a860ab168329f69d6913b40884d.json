{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Header/View.js\";\nimport React from \"react\";\nimport { isTablet } from \"react-device-detect\";\nimport { PAGETYPE } from \"../../../../Common/Util/Constant\";\nimport loadImg from \"../../../../Image/builder/folder.svg\";\nimport mobileImg from \"../../../../Image/builder/mobile.svg\";\nimport shareImg from \"../../../../Image/builder/share.svg\";\nimport publishImg from \"../../../../Image/builder/pulishing.svg\";\nimport helpImg from \"../../../../Image/builder/builder_header_tutorial.svg\";\nimport darkImg from \"../../../../Image/builder/dark-mode.svg\";\nimport lightImg from \"../../../../Image/builder/light-mode.svg\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport ProjectList from \"../ProjectListContainer\";\nexport default function (props) {\n  var email = props.email,\n      openProjectPopup = props.openProjectPopup,\n      openInstantRunPopup = props.openInstantRunPopup,\n      openSharePopup = props.openSharePopup,\n      openPublishPopup = props.openPublishPopup,\n      openLoginPopup = props.openLoginPopup,\n      openHelp = props.openHelp,\n      project = props.project,\n      currentTheme = props.currentTheme,\n      handleChangeTheme = props.handleChangeTheme,\n      intl = props.intl,\n      pageType = props.pageType,\n      isTutor = props.isTutor,\n      isAppModalOn = props.isAppModalOn,\n      appModalType = props.appModalType,\n      handleTemplateBtn = props.handleTemplateBtn,\n      handleSelectTab = props.handleSelectTab,\n      handlechangeProjectName = props.handlechangeProjectName;\n  return React.createElement(\"div\", {\n    className: \"Header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HeaderLeft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HeaderProjectItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, pageType !== \"ocp\" && pageType !== \"wizlive\" && React.createElement(\"div\", {\n    className: \"HeaderProjectItem\",\n    onClick: function onClick() {\n      return openProjectPopup();\n    },\n    \"data-tip\": isTablet ? null : intl.formatMessage({\n      id: \"ID_TOOLTIP_PROJECT_MANAGEMENT\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"loadImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: loadImg,\n    alt: \"load\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))), isTutor && React.createElement(\"p\", {\n    className: \"AppHeader__projectList\",\n    onClick: handleTemplateBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_BUILDER_PROJECTLIST\"\n  })), isTutor && isAppModalOn && appModalType === \"PROJECTLIST\" && React.createElement(ProjectList, {\n    handleSelectTab: handleSelectTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"HeaderProjectItem HeaderProjectName \".concat(email && \"HeaderChangeName\"),\n    onClick: function onClick() {\n      return email && handlechangeProjectName(project.pId, project.name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, project.name ? project.name : \"WizLab\"))), React.createElement(\"div\", {\n    className: \"HeaderRight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HeaderProjectItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HeaderProjectItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"darkImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"ThemeSwitch\",\n    onClick: handleChangeTheme,\n    src: currentTheme === \"lightMode\" ? lightImg : darkImg,\n    alt: \"theme change\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))), pageType === PAGETYPE.OCP2 || React.createElement(\"div\", {\n    className: \"HeaderProjectItem\",\n    onClick: openHelp,\n    \"data-tip\": isTablet ? null : intl.formatMessage({\n      id: \"ID_HELP_RE\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"helpImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: helpImg,\n    alt: \"helpImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), email ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, pageType !== \"ocp2\" && pageType !== \"ocp\" && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"HeaderProjectItem\",\n    onClick: openSharePopup,\n    \"data-tip\": isTablet ? null : intl.formatMessage({\n      id: \"ID_SHARE_TITLE\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"shareImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: shareImg,\n    alt: \"shareImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"HeaderProjectItem\",\n    onClick: openPublishPopup,\n    \"data-tip\": isTablet ? null : intl.formatMessage({\n      id: \"ID_BUILDER_PUBLISHING\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(ButtonIndicator, {\n    buttonId: \"publishImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: publishImg,\n    alt: \"publishImg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))))) : React.createElement(\"div\", {\n    className: \"HeaderProjectItem\",\n    onClick: openLoginPopup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, intl.formatMessage({\n    id: \"ID_USERDD_LOGIN\"\n  })))));\n}","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Header/View.js"],"names":["React","isTablet","PAGETYPE","ButtonIndicator","ProjectList","props","email","openProjectPopup","openInstantRunPopup","openSharePopup","openPublishPopup","openLoginPopup","openHelp","project","currentTheme","handleChangeTheme","intl","pageType","isTutor","isAppModalOn","appModalType","handleTemplateBtn","handleSelectTab","handlechangeProjectName","formatMessage","id","loadImg","pId","name","lightImg","darkImg","OCP2","helpImg","shareImg","publishImg"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { isTablet } from \"react-device-detect\";\nimport { PAGETYPE } from \"../../../../Common/Util/Constant\";\nimport loadImg from \"../../../../Image/builder/folder.svg\";\nimport mobileImg from \"../../../../Image/builder/mobile.svg\";\nimport shareImg from \"../../../../Image/builder/share.svg\";\nimport publishImg from \"../../../../Image/builder/pulishing.svg\";\nimport helpImg from \"../../../../Image/builder/builder_header_tutorial.svg\";\nimport darkImg from \"../../../../Image/builder/dark-mode.svg\";\nimport lightImg from \"../../../../Image/builder/light-mode.svg\";\nimport \"./index.scss\";\nimport ButtonIndicator from \"../ButtonIndicator\";\nimport ProjectList from \"../ProjectListContainer\";\n\nexport default function(props) {\n  const {\n    email,\n    openProjectPopup,\n    openInstantRunPopup,\n    openSharePopup,\n    openPublishPopup,\n    openLoginPopup,\n    openHelp,\n    project,\n    currentTheme,\n    // isMenuEnabled,\n    handleChangeTheme,\n    intl,\n    // name,\n    // icon,\n    // handleLogout,\n    pageType,\n    isTutor,\n    isAppModalOn,\n    appModalType,\n    handleTemplateBtn,\n    handleSelectTab,\n    // isClickPublish,\n    // clickPublishPopup,\n    // openPublishGame,\n    handlechangeProjectName\n    // editorMode\n  } = props;\n  return (\n    <div className=\"Header\">\n      {/* left */}\n      <div className=\"HeaderLeft\">\n        <div className=\"HeaderProjectItems\">\n          {pageType !== \"ocp\" && pageType !== \"wizlive\" && (\n            <div\n              className=\"HeaderProjectItem\"\n              onClick={() => openProjectPopup()}\n              data-tip={isTablet ? null : intl.formatMessage({\n                id: \"ID_TOOLTIP_PROJECT_MANAGEMENT\"\n              })}\n            >\n              <ButtonIndicator buttonId=\"loadImg\">\n                <img src={loadImg} alt=\"load\" />\n              </ButtonIndicator>\n            </div>\n          )}\n          {isTutor && (\n            <p className=\"AppHeader__projectList\" onClick={handleTemplateBtn}>\n              {intl.formatMessage({\n                id: \"ID_BUILDER_PROJECTLIST\"\n              })}\n            </p>\n          )}\n          {isTutor && isAppModalOn && appModalType === \"PROJECTLIST\" && (\n            <ProjectList handleSelectTab={handleSelectTab} />\n          )}\n          <div\n            className={`HeaderProjectItem HeaderProjectName ${email &&\n              \"HeaderChangeName\"}`}\n            onClick={() =>\n              email && handlechangeProjectName(project.pId, project.name)\n            }\n          >\n            {project.name ? project.name : \"WizLab\"}\n          </div>\n\n          {/* <div\n              className=\"HeaderProjectItem\"\n              onClick={() => openProjectPopup(PROJECT_CATEGORY.NEW)}\n            >\n              NEW\n             </div> */}\n        </div>\n      </div>\n\n      {/* right */}\n      <div className=\"HeaderRight\">\n        <div className=\"HeaderProjectItems\">\n          {/* <div className=\"HeaderProjectItem\" onClick={openHelp}>\n            {intl.formatMessage({ id: \"ID_HELP_RE\" })}\n          </div> */}\n          <div className=\"HeaderProjectItem\">\n            <ButtonIndicator buttonId=\"darkImg\">\n              <img\n                className=\"ThemeSwitch\"\n                onClick={handleChangeTheme}\n                src={currentTheme === \"lightMode\" ? lightImg : darkImg}\n                alt=\"theme change\"\n              />\n            </ButtonIndicator>\n          </div>\n          {pageType === PAGETYPE.OCP2 || (\n            <div\n              className=\"HeaderProjectItem\"\n              onClick={openHelp}\n              data-tip={isTablet ? null : intl.formatMessage({ id: \"ID_HELP_RE\" })}\n            >\n              <ButtonIndicator buttonId=\"helpImg\">\n                <img src={helpImg} alt=\"helpImg\" />\n              </ButtonIndicator>\n            </div>\n          )}\n          {email ? (\n            <React.Fragment>\n              {pageType !== \"ocp2\" && pageType !== \"ocp\" && (\n                <React.Fragment>\n                  {/* <div\n                    className=\"HeaderProjectItem\"\n                    onClick={openInstantRunPopup}\n                    data-tip={intl.formatMessage({ id: \"ID_QRDESC\" })}\n                  >\n                    <ButtonIndicator buttonId=\"mobileImg\">\n                      <img src={mobileImg} alt=\"mobileImg\" />\n                    </ButtonIndicator>\n                  </div> */}\n                  <div\n                    className=\"HeaderProjectItem\"\n                    onClick={openSharePopup}\n                    data-tip={isTablet ? null : intl.formatMessage({ id: \"ID_SHARE_TITLE\" })}\n                  >\n                    <ButtonIndicator buttonId=\"shareImg\">\n                      <img src={shareImg} alt=\"shareImg\" />\n                    </ButtonIndicator>\n                  </div>\n                  <div\n                    className=\"HeaderProjectItem\"\n                    onClick={openPublishPopup}\n                    data-tip={isTablet ? null : intl.formatMessage({\n                      id: \"ID_BUILDER_PUBLISHING\"\n                    })}\n                  >\n                    <ButtonIndicator buttonId=\"publishImg\">\n                      <img src={publishImg} alt=\"publishImg\" />\n                    </ButtonIndicator>\n                  </div>\n                  {/* {isClickPublish && (\n                    <div className=\"PublishMenu\">\n                      <div className=\"PublishBtn\" onClick={openPublishPopup}>\n                        퍼블리싱\n                      </div>\n                      <div className=\"PublishViewBtn\" onClick={openPublishGame}>\n                        퍼블리싱한 게임 보기\n                      </div>\n                    </div>\n                  )} */}\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          ) : (\n            <div className=\"HeaderProjectItem\" onClick={openLoginPopup}>\n              {intl.formatMessage({ id: \"ID_USERDD_LOGIN\" })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}