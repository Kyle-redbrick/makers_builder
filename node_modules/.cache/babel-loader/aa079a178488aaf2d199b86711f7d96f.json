{"ast":null,"code":"import _objectWithoutProperties from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiLiveMonitor/Container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport { URL } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport RndWrapper from \"../../utils/RndWrapper\"; // import FreeTrialSurveyPopup from \"../Live/Component/FreeTrialSurveyPopup\";\n\nimport { socketUtil } from \"../Socket/Container\";\nimport View from \"./View\";\nvar Janus = window.Janus;\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _this.setup = function () {\n      Janus.init({\n        debug: \"all\",\n        callback: _this.setupJanus\n      });\n    };\n\n    _this.setupJanus = function () {\n      _this.janus = new Janus({\n        server: _this.janusServerURL,\n        success: function success() {\n          _this.janus.attach({\n            plugin: \"janus.plugin.videoroom\",\n            opaqueId: _this.opaqueId,\n            success: function success(pluginHandle) {\n              _this.sfutest = pluginHandle;\n              Janus.log(\"Plugin attached! (\" + _this.sfutest.getPlugin() + \", id=\" + _this.sfutest.getId() + \")\");\n\n              _this.checkRoom();\n            },\n            error: function error(_error) {\n              Janus.error(\"  -- Error attaching plugin...\", _error);\n              alert(\"Error attaching plugin... \" + _error);\n            },\n            consentDialog: function consentDialog(on) {\n              Janus.debug(\"Consent dialog should be \" + (on ? \"on\" : \"off\") + \" now\");\n            },\n            iceState: function iceState(state) {\n              Janus.log(\"ICE state changed to \" + state);\n            },\n            mediaState: function mediaState(medium, on) {\n              Janus.log(\"Janus \" + (on ? \"started\" : \"stopped\") + \" receiving our \" + medium);\n            },\n            webrtcState: function webrtcState(on) {\n              Janus.log(\"Janus says our WebRTC PeerConnection is \" + (on ? \"up\" : \"down\") + \" now\");\n            },\n            onmessage: function onmessage(msg, jsep) {\n              Janus.debug(\" ::: Got a message (publisher) :::\", msg);\n              var event = msg[\"videoroom\"];\n              Janus.debug(\"Event: \" + event);\n\n              if (event) {\n                if (event === \"joined\") {\n                  // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n                  _this.myid = msg[\"id\"];\n                  _this.mypvtid = msg[\"private_id\"];\n                  Janus.log(\"Successfully joined room \" + msg[\"room\"] + \" with ID \" + _this.myid);\n\n                  _this.publishOwnFeed(true);\n\n                  if (msg[\"publishers\"] && msg[\"publishers\"].length) {\n                    var _list = msg[\"publishers\"];\n                    Janus.debug(\"Got a list of available publishers/feeds:\", _list);\n\n                    for (var f in _list) {\n                      var id = _list[f][\"id\"];\n                      var display = _list[f][\"display\"];\n                      var _audio = _list[f][\"audio_codec\"];\n                      var _video = _list[f][\"video_codec\"];\n                      display = JSON.parse(display);\n                      Janus.debug(\"  >> [\" + id + \"] \" + display.email + \" (audio: \" + _audio + \", video: \" + _video + \")\"); // if (display.email !== this.props.email) {\n                      //   console.log(\n                      //     1111,\n                      //     `I joined: remote email - ${display.email}`\n                      //   );\n\n                      _this.newRemoteFeed(id, display, _audio, _video); // } else {\n                      //   this.sfutest.send({\n                      //     message: {\n                      //       request: \"kick\",\n                      //       room: this.props.roomId,\n                      //       id: id\n                      //     },\n                      //     success: data => {\n                      //       Janus.debug(data);\n                      //     }\n                      //   });\n                      // }\n\n                    }\n                  }\n\n                  if (_this.state.roomStatus === \"connecting\") {\n                    _this.setState({\n                      roomStatus: \"ready\"\n                    });\n                  }\n                } else if (event === \"destroyed\") {\n                  Janus.warn(\"The room has been destroyed!\");\n                } else if (event === \"event\") {\n                  if (msg[\"publishers\"] && msg[\"publishers\"].length) {\n                    var list = msg[\"publishers\"];\n                    Janus.debug(\"Got a list of available publishers/feeds:\", list);\n\n                    for (var _f in list) {\n                      var _id = list[_f][\"id\"];\n                      var _display = list[_f][\"display\"];\n                      var _audio2 = list[_f][\"audio_codec\"];\n                      var _video2 = list[_f][\"video_codec\"];\n                      _display = JSON.parse(_display);\n                      Janus.debug(\"  >> [\" + _id + \"] \" + _display + \" (audio: \" + _audio2 + \", video: \" + _video2 + \")\");\n\n                      if (_display.email !== _this.props.email) {\n                        console.log(1111, \"someone joined: remote email - \".concat(_display.email));\n\n                        _this.newRemoteFeed(_id, _display, _audio2, _video2);\n                      }\n                    }\n                  } else if (msg[\"leaving\"]) {\n                    var leaving = msg[\"leaving\"];\n                    Janus.log(\"Publisher left: \" + leaving);\n\n                    for (var i = 0; i < 4; i++) {\n                      if (_this.feeds[i] && _this.feeds[i].rfid === leaving) {\n                        _this.feeds[i].detach();\n\n                        _this.feeds[i] = null; // this.studentName[feed.rfindex] = null;\n\n                        console.log(1111, \"student is leaving index: \" + i);\n                        break;\n                      }\n                    }\n                  } else if (msg[\"unpublished\"]) {\n                    var unpublished = msg[\"unpublished\"];\n                    Janus.log(\"Publisher left: \" + unpublished);\n\n                    if (unpublished === \"ok\") {\n                      _this.sfutest.hangup();\n\n                      return;\n                    }\n\n                    for (var _i = 0; _i < 4; _i++) {\n                      if (_this.feeds[_i] && _this.feeds[_i].rfid === unpublished) {\n                        _this.feeds[_i].detach();\n\n                        _this.feeds[_i] = null; // this.studentName[feed.rfindex] = null;\n\n                        console.log(1111, \"student is unpublishing index: \" + _i);\n                        break;\n                      }\n                    }\n                  } else if (msg[\"error\"]) {\n                    if (msg[\"error_code\"] === 426) {// no such room error\n                    } else {// other errors\n                      }\n                  }\n                }\n              }\n\n              if (jsep) {\n                Janus.debug(\"Handling SDP as well...\", jsep);\n\n                _this.sfutest.handleRemoteJsep({\n                  jsep: jsep\n                }); // Check if any of the media we wanted to publish has\n                // been rejected (e.g., wrong or unsupported codec)\n\n\n                var audio = msg[\"audio_codec\"];\n\n                if (_this.mystream && _this.mystream.getAudioTracks() && _this.mystream.getAudioTracks().length > 0 && !audio) {// Audio has been rejected\n                }\n\n                var video = msg[\"video_codec\"];\n\n                if (_this.mystream && _this.mystream.getVideoTracks() && _this.mystream.getVideoTracks().length > 0 && !video) {// Video has been rejected\n                }\n              }\n            },\n            onlocalstream: function onlocalstream(stream) {\n              Janus.debug(\" ::: Got a local stream :::\", stream);\n              _this.mystream = stream;\n\n              if (_this.props.isTutor) {\n                Janus.attachMediaStream(_this.tutorVideo, stream); // Janus.attachMediaStream(this.localVideo, stream);\n                // console.log(\n                //   1111,\n                //   `onlocalstream - I am a tutor with email: ${this.props.email}`\n                // );\n              } else {\n                var index = _this.state.attendees.findIndex(function (_ref) {\n                  var email = _ref.email;\n                  return email === _this.props.email;\n                });\n\n                console.log(1111, \"localStream attendees index \".concat(index, \", \").concat(_this.props.email));\n                Janus.attachMediaStream(_this.studentVideos[index], stream); // Janus.attachMediaStream(this.localVideo, stream);\n                // console.log(\n                //   1111,\n                //   `onlocalstream - I am a student with email: ${this.props.email}`\n                // );\n\n                _this.setState(function (prevState) {\n                  return {\n                    students: [{\n                      email: _this.props.email,\n                      pId: _this.props.pId,\n                      name: _this.props.name\n                    }].concat(_toConsumableArray(prevState.students))\n                  };\n                });\n              }\n\n              var videoTracks = stream.getVideoTracks();\n\n              if (!videoTracks || videoTracks.length === 0) {// No webcam\n              }\n            },\n            onremotestream: function onremotestream(stream) {// The publisher stream is sendonly, we don't expect anything here\n            },\n            oncleanup: function oncleanup() {\n              Janus.log(\" ::: Got a cleanup notification: we are unpublished now :::\");\n              _this.mystream = null;\n            }\n          });\n        },\n        error: function error(_error2) {\n          Janus.error(_error2);\n        },\n        destroyed: function destroyed() {\n          window.location.reload();\n        }\n      });\n    };\n\n    _this.checkRoom = function () {\n      Janus.debug(\"is room exist...?\");\n\n      _this.sfutest.send({\n        message: {\n          request: \"exists\",\n          room: _this.props.roomId\n        },\n        success: function success(data) {\n          if (data.exists) {\n            _this.registerUsername();\n          } else {\n            Janus.debug(\"Room is creating...\");\n\n            _this.sfutest.send({\n              message: {\n                request: \"create\",\n                // bitrate: this.maximumBitrate / 2,\n                publishers: 30,\n                // bitrate_cap: true,\n                room: _this.props.roomId,\n                is_private: true\n              },\n              success: _this.registerUsername\n            });\n          }\n        }\n      });\n    };\n\n    _this.registerUsername = function () {\n      var register = {\n        request: \"join\",\n        room: _this.props.roomId,\n        ptype: \"publisher\" // display: JSON.stringify({\n        //   email: this.props.email,\n        //   pId: this.props.pId,\n        //   name: this.props.name\n        // })\n\n      };\n\n      _this.sfutest.send({\n        message: register\n      });\n    };\n\n    _this.unpublish = function () {\n      var message = {\n        request: \"unpublish\"\n      };\n\n      _this.sfutest.send({\n        message: message\n      });\n    };\n\n    _this.setTutorVideo = function (video) {\n      _this.tutorVideo = video;\n    };\n\n    _this.setStudentVideo = function (video, index) {\n      _this.studentVideos[index] = video;\n    };\n\n    _this.refreshVideos = function () {\n      _this.setState({\n        roomStatus: \"connected\"\n      });\n\n      if (_this.tutorVideo.paused) _this.tutorVideo.play();\n\n      _this.studentVideos.forEach(function (v) {\n        return v.paused && v.play();\n      });\n    };\n\n    _this.handleVoiceToggleButton = function (email) {\n      if (email !== _this.props.email) return;\n\n      _this.setState({\n        audioEnabled: !_this.state.audioEnabled\n      }, function () {\n        _this.sfutest.send({\n          message: {\n            request: \"configure\",\n            audio: _this.state.audioEnabled\n          }\n        }); // socketUtil.sendSocketEvent(\"audioChanged\", {\n        //   email,\n        //   audioEnabled: this.state.audioEnabled\n        // });\n\n      });\n    };\n\n    _this.handleExitBtn = function () {\n      _this.showExitConfirmAlert();\n    };\n\n    _this.showExitConfirmAlert = function () {\n      var callback = function callback() {\n        request.setCompleteReservation({\n          reservationId: _this.props.reservationId\n        }); // // this.sendData(this.DATA_TYPE_EXIT, null);\n        // socketUtil.sendSocketEvent(\"lectureExit\", {\n        //   roomId: this.props.roomId\n        // });\n\n        _this.unpublish();\n\n        _this.setState({\n          isEnd: true\n        });\n\n        _this.showExitAlert();\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_CONFIRM\",\n        confirmButtonNameId: \"ID_WIZLIVE_EXIT\",\n        cancelButtonNameId: \"ID_WIZLIVE_CANCEL\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }));\n    };\n\n    _this.showExitAlert = function () {\n      var callback = function callback() {\n        var _this$props = _this.props,\n            studentEmail = _this$props.studentEmail,\n            reservationId = _this$props.reservationId;\n        var url = \"\".concat(URL.WIZLIVE, \"/tutor/feedback/\").concat(studentEmail, \"/\").concat(reservationId, \"/false\");\n        window.open(url, \"_blank\");\n      };\n\n      showPopUp(React.createElement(Popup.TwoButton, {\n        confirmAction: callback,\n        intl: _this.props.intl,\n        titleId: \"ID_WIZLIVE_EXIT_COMPLETE\",\n        subtitleId: \"ID_WIZLIVE_FEEDBACK_REQUEST\",\n        confirmButtonNameId: \"ID_WIZLIVE_FEEDBACK_GO\",\n        cancelButtonNameId: \"ID_WIZLIVE_FEEDBACK_NEXTTIME\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleFreeTrialSurvey = function (isOn) {\n      _this.setState({\n        isShowSurveyPopup: isOn\n      });\n    };\n\n    _this.showFeedbackAlert = function () {\n      _this.handleFreeTrialSurvey(true);\n    };\n\n    _this.showFeedbackResultAlert = function (success) {\n      var title = success ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\" : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n      var subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n      showPopUp(React.createElement(Popup.OneButton, {\n        intl: _this.props.intl,\n        titleId: title,\n        subtitleId: subtitle,\n        buttonNameId: \"ID_WIZLIVE_COMFIRM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }));\n    };\n\n    _this.janus = null;\n    _this.sfutest = null;\n    _this.myid = null;\n    _this.mypvtid = null;\n    _this.feeds = [];\n    _this.mystream = null;\n    _this.opaqueId = \"wizlive-monitor\" + Janus.randomString(12); // this.currentUser = null;\n    // this.hasTutor = false;\n\n    _this.tutorVideo = undefined;\n    _this.localVideo = undefined;\n    _this.studentVideos = [];\n    _this.remoteVideos = [];\n    _this.email = _this.opaqueId;\n    _this.tutorName = \"\";\n    _this.janusServerURL = URL.JANUS_SERVER;\n    _this.localStreamEmail = _this.props.isTutor ? _this.props.tutorEmail : _this.props.email;\n    _this.attendees = [];\n    _this.state = {\n      attendees: [],\n      students: [],\n      tutor: [],\n      audioEnabled: true,\n      isShowSurveyPopup: false,\n      isEnd: false,\n      roomStatus: \"connecting\"\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"getReservationStudents\",\n    value: function () {\n      var _getReservationStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(callback) {\n        var attendees, tutor;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return request.getReservationStudents(this.props.roomId).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                attendees = _context.sent;\n\n                if (attendees.length) {\n                  this.setState({\n                    attendees: attendees.map(function (attendee) {\n                      return _objectSpread({}, attendee, {\n                        audioEnabled: true\n                      });\n                    })\n                  });\n                  tutor = attendees[attendees.length - 1];\n                  this.tutorName = tutor.name;\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n                callback();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getReservationStudents(_x) {\n        return _getReservationStudents.apply(this, arguments);\n      }\n\n      return getReservationStudents;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getReservationStudents(function () {\n        _this2.setup(); // 수업 퇴장\n\n\n        socketUtil.socket.on(\"lectureExit\", function (data) {\n          if (!_this2.props.isTutor) {\n            _this2.unpublish();\n\n            _this2.setState({\n              isEnd: true\n            });\n\n            _this2.showFeedbackAlert();\n          }\n        }); // 오디오 on/off\n\n        socketUtil.socket.on(\"audioChanged\", function (data) {\n          var email = data.email,\n              audioEnabled = data.audioEnabled;\n\n          _this2.setState({\n            attendees: _this2.state.attendees.map(function (attendee) {\n              if (attendee.email === email) {\n                return _objectSpread({}, attendee, {\n                  audioEnabled: audioEnabled\n                });\n              } else {\n                return attendee;\n              }\n            })\n          });\n        });\n      });\n    }\n  }, {\n    key: \"publishOwnFeed\",\n    value: function publishOwnFeed(useAudio) {} // remoteFeed\n\n  }, {\n    key: \"newRemoteFeed\",\n    value: function newRemoteFeed(id, display, audio, video) {\n      var _this3 = this;\n\n      var remoteFeed = null;\n      this.janus.attach({\n        plugin: \"janus.plugin.videoroom\",\n        opaqueId: this.opaqueId,\n        success: function success(pluginHandle) {\n          // console.log(1111, \"--------- remote feed attach janus ok ----------\");\n          remoteFeed = pluginHandle;\n          remoteFeed.simulcastStarted = false;\n          Janus.log(\"Plugin attached! (\" + remoteFeed.getPlugin() + \", id=\" + remoteFeed.getId() + \" as a subscriber)\"); // We wait for the plugin to send us an offer\n\n          var subscribe = {\n            request: \"join\",\n            room: _this3.props.roomId,\n            ptype: \"subscriber\",\n            feed: id,\n            private_id: _this3.mypvtid\n          }; // In case you don't want to receive audio, video or data, even if the\n          // publisher is sending them, set the 'offer_audio', 'offer_video' or\n          // 'offer_data' properties to false (they're true by default), e.g.:\n          // \t\tsubscribe[\"offer_video\"] = false;\n          // For example, if the publisher is VP8 and this is Safari, let's avoid video\n\n          if (Janus.webRTCAdapter.browserDetails.browser === \"safari\" && (video === \"vp9\" || video === \"vp8\" && !Janus.safariVp8)) {\n            if (video) video = video.toUpperCase();\n            subscribe[\"offer_video\"] = false;\n          }\n\n          remoteFeed.videoCodec = video;\n          remoteFeed.send({\n            message: subscribe\n          });\n        },\n        error: function error(_error3) {\n          Janus.error(\"  -- Error attaching plugin...\", _error3);\n        },\n        onmessage: function onmessage(msg, jsep) {\n          Janus.debug(\" ::: Got a message (subscriber) :::\", msg);\n          var event = msg[\"videoroom\"];\n          Janus.debug(\"Event: \" + event);\n\n          if (msg[\"error\"]) {// handle error if needed\n          } else if (event) {\n            if (event === \"attached\") {\n              // console.log(\n              //   1111,\n              //   display.email + \": --------- remote attached ----------\"\n              // );\n              // Subscriber created and attached\n              for (var i = 0; i < 4; i++) {\n                if (!_this3.feeds[i]) {\n                  _this3.feeds[i] = remoteFeed;\n                  remoteFeed.rfindex = i;\n                  console.log(1111, \"display: \" + display.email + \" tutorEmail : \" + _this3.props.tutorEmail); // add student name when we got now feed\n                  // this.students[i] = JSON.parse(display).email;\n\n                  break;\n                }\n              }\n\n              remoteFeed.rfid = msg[\"id\"]; // remoteFeed.rfdisplay = msg[\"display\"];\n\n              remoteFeed.rfdisplay = display.email;\n              remoteFeed.name = display.name; // remoteFeed.pId = display.pId;\n\n              console.log(1111, \"remote.rfdisplay : ----\" + remoteFeed.rfdisplay);\n              Janus.log(\"Successfully attached to feed \" + remoteFeed.rfid + \" (\" + remoteFeed.rfdisplay + \") in room \" + msg[\"room\"]);\n            }\n\n            if (jsep) {\n              Janus.debug(\"Handling SDP as well...\", jsep); // Answer and attach\n\n              remoteFeed.createAnswer({\n                jsep: jsep,\n                // Add data:true here if you want to subscribe to datachannels as well\n                media: {\n                  audioSend: false,\n                  videoSend: false\n                },\n                // We want recvonly audio/video\n                success: function success(jsep) {\n                  Janus.debug(\"Got SDP!\", jsep);\n                  var body = {\n                    request: \"start\",\n                    room: _this3.props.roomId\n                  };\n                  remoteFeed.send({\n                    message: body,\n                    jsep: jsep\n                  });\n                },\n                error: function error(_error4) {\n                  Janus.error(\"WebRTC error:\", _error4);\n                }\n              });\n            }\n          }\n        },\n        iceState: function iceState(state) {\n          Janus.log(\"ICE state of this WebRTC PeerConnection (feed #\" + remoteFeed.rfindex + \") changed to \" + state);\n        },\n        webrtcState: function webrtcState(on) {\n          Janus.log(\"Janus says this WebRTC PeerConnection (feed #\" + remoteFeed.rfindex + \") is \" + (on ? \"up\" : \"down\") + \" now\");\n        },\n        onlocalstream: function onlocalstream(stream) {// The subscriber stream is recvonly, we don't expect anything here\n        },\n        onremotestream: function onremotestream(stream) {\n          Janus.debug(\"Remote feed #\" + remoteFeed.rfindex + \", stream:\", stream);\n\n          if (display.email === _this3.props.tutorEmail) {\n            console.log(1111, \"someone has attached as tutor - display: \".concat(display.email, \", tutorEmail: \").concat(_this3.props.tutorEmail));\n            Janus.attachMediaStream(_this3.tutorVideo, stream);\n\n            var tutorMap = function tutorMap(data) {\n              return data.reduce(function (acc, cur) {\n                var email = cur.email,\n                    pId = cur.pId,\n                    name = cur.name;\n                return acc.set(cur.email, {\n                  email: email,\n                  pId: pId,\n                  name: name\n                });\n              }, new Map());\n            };\n\n            _this3.setState(function (prevState) {\n              return {\n                tutor: _toConsumableArray(tutorMap([].concat(_toConsumableArray(prevState.tutor), [display])).values())\n              };\n            }, function () {\n              return _this3.props.setTutor(_this3.state.tutor);\n            });\n          } else {\n            console.log(1111, \"**** someone has attached as student - display: \".concat(display.email, \" rfindex: \") // remoteFeed.rfindex\n            );\n\n            var index = _this3.state.attendees.findIndex(function (_ref2) {\n              var email = _ref2.email;\n              return email === display.email;\n            });\n\n            console.log(1111, \"onremoteStream index: \".concat(index, \", \").concat(display.email));\n            Janus.attachMediaStream(_this3.studentVideos[index], stream);\n\n            var studentsMap = function studentsMap(data) {\n              return data.reduce(function (acc, cur) {\n                var email = cur.email,\n                    pId = cur.pId,\n                    name = cur.name;\n                return acc.set(cur.email, {\n                  email: email,\n                  pId: pId,\n                  name: name\n                });\n              }, new Map());\n            };\n\n            _this3.setState(function (prevState) {\n              return {\n                students: _toConsumableArray(studentsMap([].concat(_toConsumableArray(prevState.students), [display])).values())\n              };\n            }, function () {\n              return _this3.props.setStudents(_this3.state.students);\n            });\n          }\n\n          var videoTracks = stream.getVideoTracks();\n\n          if (!videoTracks || videoTracks.length === 0) {// No remote video\n          }\n        },\n        oncleanup: function oncleanup() {\n          Janus.log(\" ::: Got a cleanup notification (remote feed \" + id + \") :::\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          isTutor = _this$props2.isTutor,\n          handleChangeZIndex = _this$props2.handleChangeZIndex,\n          zIndex = _this$props2.zIndex,\n          email = _this$props2.email,\n          tutorEmail = _this$props2.tutorEmail;\n      var _this$state = this.state,\n          students = _this$state.students,\n          audioEnabled = _this$state.audioEnabled,\n          attendees = _this$state.attendees,\n          roomStatus = _this$state.roomStatus;\n      var tutorName = this.tutorName,\n          setTutorVideo = this.setTutorVideo,\n          setStudentVideo = this.setStudentVideo,\n          feeds = this.feeds,\n          handleVoiceToggleButton = this.handleVoiceToggleButton,\n          handleExitBtn = this.handleExitBtn,\n          refreshVideos = this.refreshVideos;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }, React.createElement(RndWrapper, {\n        id: \"live\",\n        style: {\n          zIndex: zIndex\n        },\n        defaultWidth: 300,\n        defaultHeight: 300 * 9 / 16 * 2 + 35,\n        defaultX: document.body.clientWidth - 365,\n        defaultY: 0,\n        minWidth: 300,\n        minHeight: 300 * 9 / 16 * 2 + 35,\n        lockAspectRatio: 16 / 9 / 2,\n        lockAspectRatioExtraHeight: 35,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }, React.createElement(View // addStudentVideo={this.addStudentVideo}\n      // addTutorVideo={this.addTutorVideo}\n      , {\n        setTutorVideo: setTutorVideo,\n        setStudentVideo: setStudentVideo // tutorEmail={tutorEmail}\n        ,\n        tutorName: tutorName,\n        students: students,\n        isTutor: isTutor,\n        handleChangeZIndex: handleChangeZIndex,\n        feeds: feeds,\n        attendees: attendees,\n        email: email,\n        handleVoiceToggleButton: handleVoiceToggleButton,\n        audioEnabled: audioEnabled,\n        tutorEmail: tutorEmail,\n        handleExitBtn: handleExitBtn,\n        refreshVideos: refreshVideos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      })), roomStatus !== \"connected\" && React.createElement(\"div\", {\n        className: \"roomStatusPopup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, roomStatus === \"connecting\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      }, \"\\uC811\\uC18D \\uC911\\uC785\\uB2C8\\uB2E4..\"), React.createElement(\"div\", {\n        className: \"roomStatusPopupProgress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812\n        },\n        __self: this\n      })), roomStatus === \"ready\" && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"roomStatusPopupMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        },\n        __self: this\n      }, \"\\uC811\\uC18D \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"), React.createElement(\"div\", {\n        className: \"roomStatusPopupBtn\",\n        onClick: refreshVideos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791\\uD558\\uAE30\")))));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default connect(function (state) {\n  var _state$scene = state.scene,\n      history = _state$scene.history,\n      historyIndex = _state$scene.historyIndex,\n      _scene = _objectWithoutProperties(_state$scene, [\"history\", \"historyIndex\"]);\n\n  return {\n    selectedSceneId: state.interaction.selected.scene,\n    selectedObject: state.interaction.selected.objects[state.interaction.selected.scene],\n    pId: state.project.pId,\n    scene: _scene,\n    interaction: _objectSpread({}, state.interaction, {\n      jukebox: {\n        isPlaying: false\n      },\n      addSoundsTimeStamp: undefined\n    }),\n    preview: state.preview,\n    currentUser: state.tabs.currentUser\n  };\n}, {\n  setStudents: tabActions.setStudents,\n  setTutor: tabActions.setTutor,\n  setProject: projectActions.setProject\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/MultiLiveMonitor/Container.js"],"names":["React","Component","connect","Popup","showPopUp","URL","request","projectActions","tabActions","RndWrapper","socketUtil","View","Janus","window","Container","props","setup","init","debug","callback","setupJanus","janus","server","janusServerURL","success","attach","plugin","opaqueId","pluginHandle","sfutest","log","getPlugin","getId","checkRoom","error","alert","consentDialog","on","iceState","state","mediaState","medium","webrtcState","onmessage","msg","jsep","event","myid","mypvtid","publishOwnFeed","length","list","f","id","display","audio","video","JSON","parse","email","newRemoteFeed","roomStatus","setState","warn","console","leaving","i","feeds","rfid","detach","unpublished","hangup","handleRemoteJsep","mystream","getAudioTracks","getVideoTracks","onlocalstream","stream","isTutor","attachMediaStream","tutorVideo","index","attendees","findIndex","studentVideos","prevState","students","pId","name","videoTracks","onremotestream","oncleanup","destroyed","location","reload","send","message","room","roomId","data","exists","registerUsername","publishers","is_private","register","ptype","unpublish","setTutorVideo","setStudentVideo","refreshVideos","paused","play","forEach","v","handleVoiceToggleButton","audioEnabled","handleExitBtn","showExitConfirmAlert","setCompleteReservation","reservationId","isEnd","showExitAlert","intl","studentEmail","url","WIZLIVE","open","handleFreeTrialSurvey","isOn","isShowSurveyPopup","showFeedbackAlert","showFeedbackResultAlert","title","subtitle","randomString","undefined","localVideo","remoteVideos","tutorName","JANUS_SERVER","localStreamEmail","tutorEmail","tutor","getReservationStudents","then","res","json","map","attendee","socket","useAudio","remoteFeed","simulcastStarted","subscribe","feed","private_id","webRTCAdapter","browserDetails","browser","safariVp8","toUpperCase","videoCodec","rfindex","rfdisplay","createAnswer","media","audioSend","videoSend","body","tutorMap","reduce","acc","cur","set","Map","values","setTutor","studentsMap","setStudents","handleChangeZIndex","zIndex","document","clientWidth","scene","history","historyIndex","_scene","selectedSceneId","interaction","selected","selectedObject","objects","project","jukebox","isPlaying","addSoundsTimeStamp","preview","currentUser","tabs","setProject"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Popup, { showPopUp } from \"../../../../Common/Component/PopUp\";\nimport { URL } from \"../../../../Common/Util/Constant\";\nimport * as request from \"../../../../Common/Util/HTTPRequest\";\nimport * as projectActions from \"../../Store/Reducer/project\";\nimport * as tabActions from \"../../Store/Reducer/tabs\";\nimport RndWrapper from \"../../utils/RndWrapper\";\n// import FreeTrialSurveyPopup from \"../Live/Component/FreeTrialSurveyPopup\";\nimport { socketUtil } from \"../Socket/Container\";\nimport View from \"./View\";\n\nconst Janus = window.Janus;\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.janus = null;\n    this.sfutest = null;\n    this.myid = null;\n    this.mypvtid = null;\n    this.feeds = [];\n    this.mystream = null;\n    this.opaqueId = \"wizlive-monitor\" + Janus.randomString(12);\n    // this.currentUser = null;\n    // this.hasTutor = false;\n    this.tutorVideo = undefined;\n    this.localVideo = undefined;\n    this.studentVideos = [];\n    this.remoteVideos = [];\n    this.email = this.opaqueId;\n    this.tutorName = \"\";\n    this.janusServerURL = URL.JANUS_SERVER;\n    this.localStreamEmail = this.props.isTutor\n      ? this.props.tutorEmail\n      : this.props.email;\n    this.attendees = [];\n\n    this.state = {\n      attendees: [],\n      students: [],\n      tutor: [],\n      audioEnabled: true,\n      isShowSurveyPopup: false,\n      isEnd: false,\n      roomStatus: \"connecting\"\n    };\n  }\n\n  async getReservationStudents(callback) {\n    try {\n      const attendees = await request\n        .getReservationStudents(this.props.roomId)\n        .then(res => res.json());\n\n      if (attendees.length) {\n        this.setState({\n          attendees: attendees.map(attendee => ({\n            ...attendee,\n            audioEnabled: true\n          }))\n        });\n\n        const tutor = attendees[attendees.length - 1];\n        this.tutorName = tutor.name;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n    callback();\n  }\n\n  componentDidMount() {\n    this.getReservationStudents(() => {\n      this.setup();\n      // 수업 퇴장\n      socketUtil.socket.on(\"lectureExit\", data => {\n        if (!this.props.isTutor) {\n          this.unpublish();\n          this.setState({ isEnd: true });\n          this.showFeedbackAlert();\n        }\n      });\n\n      // 오디오 on/off\n      socketUtil.socket.on(\"audioChanged\", data => {\n        const { email, audioEnabled } = data;\n\n        this.setState({\n          attendees: this.state.attendees.map(attendee => {\n            if (attendee.email === email) {\n              return { ...attendee, audioEnabled };\n            } else {\n              return attendee;\n            }\n          })\n        });\n      });\n    });\n  }\n\n  setup = () => {\n    Janus.init({ debug: \"all\", callback: this.setupJanus });\n  };\n\n  setupJanus = () => {\n    this.janus = new Janus({\n      server: this.janusServerURL,\n      success: () => {\n        this.janus.attach({\n          plugin: \"janus.plugin.videoroom\",\n          opaqueId: this.opaqueId,\n          success: pluginHandle => {\n            this.sfutest = pluginHandle;\n            Janus.log(\n              \"Plugin attached! (\" +\n                this.sfutest.getPlugin() +\n                \", id=\" +\n                this.sfutest.getId() +\n                \")\"\n            );\n            this.checkRoom();\n          },\n          error: error => {\n            Janus.error(\"  -- Error attaching plugin...\", error);\n            alert(\"Error attaching plugin... \" + error);\n          },\n          consentDialog: on => {\n            Janus.debug(\n              \"Consent dialog should be \" + (on ? \"on\" : \"off\") + \" now\"\n            );\n          },\n          iceState: state => {\n            Janus.log(\"ICE state changed to \" + state);\n          },\n          mediaState: (medium, on) => {\n            Janus.log(\n              \"Janus \" +\n                (on ? \"started\" : \"stopped\") +\n                \" receiving our \" +\n                medium\n            );\n          },\n          webrtcState: on => {\n            Janus.log(\n              \"Janus says our WebRTC PeerConnection is \" +\n                (on ? \"up\" : \"down\") +\n                \" now\"\n            );\n          },\n          onmessage: (msg, jsep) => {\n            Janus.debug(\" ::: Got a message (publisher) :::\", msg);\n            var event = msg[\"videoroom\"];\n            Janus.debug(\"Event: \" + event);\n            if (event) {\n              if (event === \"joined\") {\n                // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n                this.myid = msg[\"id\"];\n                this.mypvtid = msg[\"private_id\"];\n                Janus.log(\n                  \"Successfully joined room \" +\n                    msg[\"room\"] +\n                    \" with ID \" +\n                    this.myid\n                );\n\n                this.publishOwnFeed(true);\n\n                if (msg[\"publishers\"] && msg[\"publishers\"].length) {\n                  const list = msg[\"publishers\"];\n                  Janus.debug(\n                    \"Got a list of available publishers/feeds:\",\n                    list\n                  );\n                  for (let f in list) {\n                    let id = list[f][\"id\"];\n                    let display = list[f][\"display\"];\n                    let audio = list[f][\"audio_codec\"];\n                    let video = list[f][\"video_codec\"];\n                    display = JSON.parse(display);\n                    Janus.debug(\n                      \"  >> [\" +\n                        id +\n                        \"] \" +\n                        display.email +\n                        \" (audio: \" +\n                        audio +\n                        \", video: \" +\n                        video +\n                        \")\"\n                    );\n                    // if (display.email !== this.props.email) {\n                    //   console.log(\n                    //     1111,\n                    //     `I joined: remote email - ${display.email}`\n                    //   );\n                    this.newRemoteFeed(id, display, audio, video);\n                    // } else {\n                    //   this.sfutest.send({\n                    //     message: {\n                    //       request: \"kick\",\n                    //       room: this.props.roomId,\n                    //       id: id\n                    //     },\n                    //     success: data => {\n                    //       Janus.debug(data);\n                    //     }\n                    //   });\n                    // }\n                  }\n                }\n                if (this.state.roomStatus === \"connecting\") {\n                  this.setState({ roomStatus: \"ready\" });\n                }\n              } else if (event === \"destroyed\") {\n                Janus.warn(\"The room has been destroyed!\");\n              } else if (event === \"event\") {\n                if (msg[\"publishers\"] && msg[\"publishers\"].length) {\n                  var list = msg[\"publishers\"];\n                  Janus.debug(\n                    \"Got a list of available publishers/feeds:\",\n                    list\n                  );\n                  for (let f in list) {\n                    let id = list[f][\"id\"];\n                    let display = list[f][\"display\"];\n                    let audio = list[f][\"audio_codec\"];\n                    let video = list[f][\"video_codec\"];\n                    display = JSON.parse(display);\n                    Janus.debug(\n                      \"  >> [\" +\n                        id +\n                        \"] \" +\n                        display +\n                        \" (audio: \" +\n                        audio +\n                        \", video: \" +\n                        video +\n                        \")\"\n                    );\n                    if (display.email !== this.props.email) {\n                      console.log(\n                        1111,\n                        `someone joined: remote email - ${display.email}`\n                      );\n                      this.newRemoteFeed(id, display, audio, video);\n                    }\n                  }\n                } else if (msg[\"leaving\"]) {\n                  let leaving = msg[\"leaving\"];\n                  Janus.log(\"Publisher left: \" + leaving);\n\n                  for (var i = 0; i < 4; i++) {\n                    if (this.feeds[i] && this.feeds[i].rfid === leaving) {\n                      this.feeds[i].detach();\n                      this.feeds[i] = null;\n                      // this.studentName[feed.rfindex] = null;\n                      console.log(1111, \"student is leaving index: \" + i);\n                      break;\n                    }\n                  }\n                } else if (msg[\"unpublished\"]) {\n                  var unpublished = msg[\"unpublished\"];\n                  Janus.log(\"Publisher left: \" + unpublished);\n                  if (unpublished === \"ok\") {\n                    this.sfutest.hangup();\n                    return;\n                  }\n\n                  for (let i = 0; i < 4; i++) {\n                    if (this.feeds[i] && this.feeds[i].rfid === unpublished) {\n                      this.feeds[i].detach();\n                      this.feeds[i] = null;\n                      // this.studentName[feed.rfindex] = null;\n                      console.log(1111, \"student is unpublishing index: \" + i);\n                      break;\n                    }\n                  }\n                } else if (msg[\"error\"]) {\n                  if (msg[\"error_code\"] === 426) {\n                    // no such room error\n                  } else {\n                    // other errors\n                  }\n                }\n              }\n            }\n            if (jsep) {\n              Janus.debug(\"Handling SDP as well...\", jsep);\n              this.sfutest.handleRemoteJsep({ jsep: jsep });\n              // Check if any of the media we wanted to publish has\n              // been rejected (e.g., wrong or unsupported codec)\n              var audio = msg[\"audio_codec\"];\n              if (\n                this.mystream &&\n                this.mystream.getAudioTracks() &&\n                this.mystream.getAudioTracks().length > 0 &&\n                !audio\n              ) {\n                // Audio has been rejected\n              }\n              var video = msg[\"video_codec\"];\n              if (\n                this.mystream &&\n                this.mystream.getVideoTracks() &&\n                this.mystream.getVideoTracks().length > 0 &&\n                !video\n              ) {\n                // Video has been rejected\n              }\n            }\n          },\n          onlocalstream: stream => {\n            Janus.debug(\" ::: Got a local stream :::\", stream);\n            this.mystream = stream;\n\n            if (this.props.isTutor) {\n              Janus.attachMediaStream(this.tutorVideo, stream);\n              // Janus.attachMediaStream(this.localVideo, stream);\n              // console.log(\n              //   1111,\n              //   `onlocalstream - I am a tutor with email: ${this.props.email}`\n              // );\n            } else {\n              const index = this.state.attendees.findIndex(\n                ({ email }) => email === this.props.email\n              );\n\n              console.log(\n                1111,\n                `localStream attendees index ${index}, ${this.props.email}`\n              );\n\n              Janus.attachMediaStream(this.studentVideos[index], stream);\n              // Janus.attachMediaStream(this.localVideo, stream);\n              // console.log(\n              //   1111,\n              //   `onlocalstream - I am a student with email: ${this.props.email}`\n              // );\n              this.setState(prevState => ({\n                students: [\n                  {\n                    email: this.props.email,\n                    pId: this.props.pId,\n                    name: this.props.name\n                  },\n                  ...prevState.students\n                ]\n              }));\n            }\n\n            var videoTracks = stream.getVideoTracks();\n            if (!videoTracks || videoTracks.length === 0) {\n              // No webcam\n            }\n          },\n          onremotestream: stream => {\n            // The publisher stream is sendonly, we don't expect anything here\n          },\n          oncleanup: () => {\n            Janus.log(\n              \" ::: Got a cleanup notification: we are unpublished now :::\"\n            );\n            this.mystream = null;\n          }\n        });\n      },\n      error: error => {\n        Janus.error(error);\n      },\n      destroyed: () => {\n        window.location.reload();\n      }\n    });\n  };\n\n  checkRoom = () => {\n    Janus.debug(\"is room exist...?\");\n    this.sfutest.send({\n      message: { request: \"exists\", room: this.props.roomId },\n      success: data => {\n        if (data.exists) {\n          this.registerUsername();\n        } else {\n          Janus.debug(\"Room is creating...\");\n          this.sfutest.send({\n            message: {\n              request: \"create\",\n              // bitrate: this.maximumBitrate / 2,\n              publishers: 30,\n              // bitrate_cap: true,\n              room: this.props.roomId,\n              is_private: true\n            },\n            success: this.registerUsername\n          });\n        }\n      }\n    });\n  };\n\n  registerUsername = () => {\n    const register = {\n      request: \"join\",\n      room: this.props.roomId,\n      ptype: \"publisher\"\n      // display: JSON.stringify({\n      //   email: this.props.email,\n      //   pId: this.props.pId,\n      //   name: this.props.name\n      // })\n    };\n    this.sfutest.send({ message: register });\n  };\n\n  unpublish = () => {\n    const message = {\n      request: \"unpublish\"\n    };\n    this.sfutest.send({ message: message });\n  };\n\n  publishOwnFeed(useAudio) {}\n\n  // remoteFeed\n  newRemoteFeed(id, display, audio, video) {\n    let remoteFeed = null;\n    this.janus.attach({\n      plugin: \"janus.plugin.videoroom\",\n      opaqueId: this.opaqueId,\n      success: pluginHandle => {\n        // console.log(1111, \"--------- remote feed attach janus ok ----------\");\n        remoteFeed = pluginHandle;\n        remoteFeed.simulcastStarted = false;\n        Janus.log(\n          \"Plugin attached! (\" +\n            remoteFeed.getPlugin() +\n            \", id=\" +\n            remoteFeed.getId() +\n            \" as a subscriber)\"\n        );\n        // We wait for the plugin to send us an offer\n        const subscribe = {\n          request: \"join\",\n          room: this.props.roomId,\n          ptype: \"subscriber\",\n          feed: id,\n          private_id: this.mypvtid\n        };\n        // In case you don't want to receive audio, video or data, even if the\n        // publisher is sending them, set the 'offer_audio', 'offer_video' or\n        // 'offer_data' properties to false (they're true by default), e.g.:\n        // \t\tsubscribe[\"offer_video\"] = false;\n        // For example, if the publisher is VP8 and this is Safari, let's avoid video\n        if (\n          Janus.webRTCAdapter.browserDetails.browser === \"safari\" &&\n          (video === \"vp9\" || (video === \"vp8\" && !Janus.safariVp8))\n        ) {\n          if (video) video = video.toUpperCase();\n          subscribe[\"offer_video\"] = false;\n        }\n        remoteFeed.videoCodec = video;\n        remoteFeed.send({ message: subscribe });\n      },\n      error: error => {\n        Janus.error(\"  -- Error attaching plugin...\", error);\n      },\n      onmessage: (msg, jsep) => {\n        Janus.debug(\" ::: Got a message (subscriber) :::\", msg);\n        var event = msg[\"videoroom\"];\n        Janus.debug(\"Event: \" + event);\n        if (msg[\"error\"]) {\n          // handle error if needed\n        } else if (event) {\n          if (event === \"attached\") {\n            // console.log(\n            //   1111,\n            //   display.email + \": --------- remote attached ----------\"\n            // );\n            // Subscriber created and attached\n\n            for (let i = 0; i < 4; i++) {\n              if (!this.feeds[i]) {\n                this.feeds[i] = remoteFeed;\n                remoteFeed.rfindex = i;\n                console.log(\n                  1111,\n                  \"display: \" +\n                    display.email +\n                    \" tutorEmail : \" +\n                    this.props.tutorEmail\n                );\n                // add student name when we got now feed\n                // this.students[i] = JSON.parse(display).email;\n                break;\n              }\n            }\n\n            remoteFeed.rfid = msg[\"id\"];\n            // remoteFeed.rfdisplay = msg[\"display\"];\n            remoteFeed.rfdisplay = display.email;\n            remoteFeed.name = display.name;\n            // remoteFeed.pId = display.pId;\n            console.log(1111, \"remote.rfdisplay : ----\" + remoteFeed.rfdisplay);\n\n            Janus.log(\n              \"Successfully attached to feed \" +\n                remoteFeed.rfid +\n                \" (\" +\n                remoteFeed.rfdisplay +\n                \") in room \" +\n                msg[\"room\"]\n            );\n          }\n          if (jsep) {\n            Janus.debug(\"Handling SDP as well...\", jsep);\n            // Answer and attach\n            remoteFeed.createAnswer({\n              jsep: jsep,\n              // Add data:true here if you want to subscribe to datachannels as well\n              media: { audioSend: false, videoSend: false }, // We want recvonly audio/video\n              success: jsep => {\n                Janus.debug(\"Got SDP!\", jsep);\n                var body = { request: \"start\", room: this.props.roomId };\n                remoteFeed.send({ message: body, jsep: jsep });\n              },\n              error: error => {\n                Janus.error(\"WebRTC error:\", error);\n              }\n            });\n          }\n        }\n      },\n      iceState: state => {\n        Janus.log(\n          \"ICE state of this WebRTC PeerConnection (feed #\" +\n            remoteFeed.rfindex +\n            \") changed to \" +\n            state\n        );\n      },\n      webrtcState: on => {\n        Janus.log(\n          \"Janus says this WebRTC PeerConnection (feed #\" +\n            remoteFeed.rfindex +\n            \") is \" +\n            (on ? \"up\" : \"down\") +\n            \" now\"\n        );\n      },\n      onlocalstream: stream => {\n        // The subscriber stream is recvonly, we don't expect anything here\n      },\n      onremotestream: stream => {\n        Janus.debug(\"Remote feed #\" + remoteFeed.rfindex + \", stream:\", stream);\n        if (display.email === this.props.tutorEmail) {\n          console.log(\n            1111,\n            `someone has attached as tutor - display: ${\n              display.email\n            }, tutorEmail: ${this.props.tutorEmail}`\n          );\n\n          Janus.attachMediaStream(this.tutorVideo, stream);\n\n          const tutorMap = data => {\n            return data.reduce((acc, cur) => {\n              const { email, pId, name } = cur;\n              return acc.set(cur.email, { email, pId, name });\n            }, new Map());\n          };\n\n          this.setState(\n            prevState => ({\n              tutor: [...tutorMap([...prevState.tutor, display]).values()]\n            }),\n            () => this.props.setTutor(this.state.tutor)\n          );\n        } else {\n          console.log(\n            1111,\n            `**** someone has attached as student - display: ${\n              display.email\n            } rfindex: `\n            // remoteFeed.rfindex\n          );\n\n          const index = this.state.attendees.findIndex(\n            ({ email }) => email === display.email\n          );\n\n          console.log(1111, `onremoteStream index: ${index}, ${display.email}`);\n\n          Janus.attachMediaStream(this.studentVideos[index], stream);\n\n          const studentsMap = data => {\n            return data.reduce((acc, cur) => {\n              const { email, pId, name } = cur;\n              return acc.set(cur.email, { email, pId, name });\n            }, new Map());\n          };\n\n          this.setState(\n            prevState => ({\n              students: [\n                ...studentsMap([...prevState.students, display]).values()\n              ]\n            }),\n            () => this.props.setStudents(this.state.students)\n          );\n        }\n\n        var videoTracks = stream.getVideoTracks();\n        if (!videoTracks || videoTracks.length === 0) {\n          // No remote video\n        }\n      },\n      oncleanup: () => {\n        Janus.log(\n          \" ::: Got a cleanup notification (remote feed \" + id + \") :::\"\n        );\n      }\n    });\n  }\n\n  setTutorVideo = video => {\n    this.tutorVideo = video;\n  };\n\n  setStudentVideo = (video, index) => {\n    this.studentVideos[index] = video;\n  };\n\n  refreshVideos = () => {\n    this.setState({ roomStatus: \"connected\" });\n    if (this.tutorVideo.paused) this.tutorVideo.play();\n    this.studentVideos.forEach(v => v.paused && v.play());\n  };\n\n  handleVoiceToggleButton = email => {\n    if (email !== this.props.email) return;\n\n    this.setState({ audioEnabled: !this.state.audioEnabled }, () => {\n      this.sfutest.send({\n        message: { request: \"configure\", audio: this.state.audioEnabled }\n      });\n\n      // socketUtil.sendSocketEvent(\"audioChanged\", {\n      //   email,\n      //   audioEnabled: this.state.audioEnabled\n      // });\n    });\n  };\n\n  handleExitBtn = () => {\n    this.showExitConfirmAlert();\n  };\n\n  showExitConfirmAlert = () => {\n    const callback = () => {\n      request.setCompleteReservation({\n        reservationId: this.props.reservationId\n      });\n      // // this.sendData(this.DATA_TYPE_EXIT, null);\n      // socketUtil.sendSocketEvent(\"lectureExit\", {\n      //   roomId: this.props.roomId\n      // });\n\n      this.unpublish();\n      this.setState({ isEnd: true });\n      this.showExitAlert();\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_CONFIRM\"\n        confirmButtonNameId=\"ID_WIZLIVE_EXIT\"\n        cancelButtonNameId=\"ID_WIZLIVE_CANCEL\"\n      />\n    );\n  };\n\n  showExitAlert = () => {\n    const callback = () => {\n      const { studentEmail, reservationId } = this.props;\n      const url = `${\n        URL.WIZLIVE\n      }/tutor/feedback/${studentEmail}/${reservationId}/false`;\n      window.open(url, \"_blank\");\n    };\n\n    showPopUp(\n      <Popup.TwoButton\n        confirmAction={callback}\n        intl={this.props.intl}\n        titleId=\"ID_WIZLIVE_EXIT_COMPLETE\"\n        subtitleId=\"ID_WIZLIVE_FEEDBACK_REQUEST\"\n        confirmButtonNameId=\"ID_WIZLIVE_FEEDBACK_GO\"\n        cancelButtonNameId=\"ID_WIZLIVE_FEEDBACK_NEXTTIME\"\n      />\n    );\n  };\n\n  handleFreeTrialSurvey = isOn => {\n    this.setState({ isShowSurveyPopup: isOn });\n  };\n\n  showFeedbackAlert = () => {\n    this.handleFreeTrialSurvey(true);\n  };\n\n  showFeedbackResultAlert = success => {\n    let title = success\n      ? \"ID_WIZLIVE_FEEDBACK_COMPLETE\"\n      : \"ID_WIZLIVE_FEEDBACK_FAIL\";\n    let subtitle = success ? \"\" : \"ID_WIZLIVE_FEEDBACK_FAIL_ADMIN\";\n    showPopUp(\n      <Popup.OneButton\n        intl={this.props.intl}\n        titleId={title}\n        subtitleId={subtitle}\n        buttonNameId=\"ID_WIZLIVE_COMFIRM\"\n      />\n    );\n  };\n\n  render() {\n    const {\n      // isDrawingBoardOn,\n      isTutor,\n      // lectureVideos,\n      // lectureSlides,\n      // reservationId,\n      // isFreeTrial,\n      // handleSelectTab,\n      handleChangeZIndex,\n      zIndex,\n      email,\n      tutorEmail\n      // reservationId,\n      // isFreeTrial\n    } = this.props;\n    const {\n      students,\n      audioEnabled,\n      // isShowSurveyPopup,\n      attendees,\n      roomStatus\n    } = this.state;\n    const {\n      tutorName,\n      setTutorVideo,\n      setStudentVideo,\n      feeds,\n      // attendees,\n      handleVoiceToggleButton,\n      handleExitBtn,\n      // handleFreeTrialSurvey,\n      refreshVideos\n    } = this;\n\n    return (\n      <React.Fragment>\n        <RndWrapper\n          id=\"live\"\n          style={{ zIndex }}\n          defaultWidth={300}\n          defaultHeight={((300 * 9) / 16) * 2 + 35}\n          defaultX={document.body.clientWidth - 365}\n          defaultY={0}\n          minWidth={300}\n          minHeight={((300 * 9) / 16) * 2 + 35}\n          lockAspectRatio={16 / 9 / 2}\n          lockAspectRatioExtraHeight={35}\n        >\n          <View\n            // addStudentVideo={this.addStudentVideo}\n            // addTutorVideo={this.addTutorVideo}\n            setTutorVideo={setTutorVideo}\n            setStudentVideo={setStudentVideo}\n            // tutorEmail={tutorEmail}\n            tutorName={tutorName}\n            students={students}\n            isTutor={isTutor}\n            handleChangeZIndex={handleChangeZIndex}\n            feeds={feeds}\n            attendees={attendees}\n            email={email}\n            handleVoiceToggleButton={handleVoiceToggleButton}\n            audioEnabled={audioEnabled}\n            tutorEmail={tutorEmail}\n            handleExitBtn={handleExitBtn}\n            refreshVideos={refreshVideos}\n          />\n        </RndWrapper>\n        {/* {isShowSurveyPopup && (\n          <FreeTrialSurveyPopup\n            reservationId={reservationId}\n            tutorEmail={tutorEmail}\n            handleFreeTrialSurvey={handleFreeTrialSurvey}\n            isFreeTrial={isFreeTrial}\n          />\n        )} */}\n        {roomStatus !== \"connected\" && (\n          <div className=\"roomStatusPopup\">\n            <div className=\"roomStatusPopupContent\">\n              {roomStatus === \"connecting\" && (\n                <React.Fragment>\n                  <div className=\"roomStatusPopupMessage\">접속 중입니다..</div>\n                  <div className=\"roomStatusPopupProgress\" />\n                </React.Fragment>\n              )}\n              {roomStatus === \"ready\" && (\n                <React.Fragment>\n                  <div className=\"roomStatusPopupMessage\">접속 되었습니다.</div>\n                  <div className=\"roomStatusPopupBtn\" onClick={refreshVideos}>\n                    시작하기\n                  </div>\n                </React.Fragment>\n              )}\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    const { history, historyIndex, ..._scene } = state.scene;\n\n    return {\n      selectedSceneId: state.interaction.selected.scene,\n      selectedObject:\n        state.interaction.selected.objects[state.interaction.selected.scene],\n      pId: state.project.pId,\n      scene: _scene,\n      interaction: {\n        ...state.interaction,\n        jukebox: {\n          isPlaying: false\n        },\n        addSoundsTimeStamp: undefined\n      },\n      preview: state.preview,\n      currentUser: state.tabs.currentUser\n    };\n  },\n  {\n    setStudents: tabActions.setStudents,\n    setTutor: tabActions.setTutor,\n    setProject: projectActions.setProject\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}