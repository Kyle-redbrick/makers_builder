{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/SoundList/Container.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as contextMenuActions from \"../../Store/Reducer/contextMenu\";\nimport AssetLibrary from \"../../../Builder/utils/assetLibrary\";\nimport View from \"./View\";\nimport deleteIcon from \"../../../../Image/builder3d/icon-30-right-click-delete.svg\";\n\nfunction Container(props) {\n  var container = useRef();\n  useEffect(function () {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  var onClickObjectList = function onClickObjectList() {\n    if (props.jukebox.isPlaying) {\n      props.stopSound();\n    }\n\n    props.setIsSoundBoxOn(false);\n    props.setShowSounds(false);\n  };\n\n  var onClickSound = function onClickSound(soundId) {\n    if (props.jukebox.isPlaying && props.jukebox.id === soundId) {\n      props.stopSound();\n    } else {\n      var sound = AssetLibrary.getSoundAsset(soundId);\n      props.playSound(sound.id, sound.path, sound.type);\n    }\n  };\n\n  var onClickAddSound = function onClickAddSound() {\n    var currentSceneId = props.currentSceneId,\n        setIsSoundBoxOn = props.setIsSoundBoxOn;\n\n    if (!currentSceneId) {\n      alert(\"먼저 씬을 추가해 주세요.\");\n      return;\n    }\n\n    setIsSoundBoxOn(true);\n  };\n\n  var onRightClickSound = function onRightClickSound(soundId, e) {\n    var menus = getContextMenus(soundId);\n    var position = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    props.showContextMenu(menus, position);\n  };\n\n  var getContextMenus = function getContextMenus(soundId) {\n    var menus = [{\n      img: deleteIcon,\n      name: \"삭제\",\n      onClick: function onClick() {\n        return onClickRemove(soundId);\n      }\n    }];\n    return menus;\n  };\n\n  var onClickRemove = function onClickRemove(soundId) {\n    props.removeSound(props.currentSceneId, soundId);\n  };\n\n  var handleClickOutside = function handleClickOutside(e) {\n    if (!container.current || container.current.contains(e.target)) {\n      return;\n    }\n\n    if (props.jukebox.isPlaying) {\n      props.stopSound();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(View, {\n    containerRef: container,\n    assetLibrary: AssetLibrary,\n    onClickObjectList: onClickObjectList,\n    soundIds: props.soundIds,\n    onClickSound: onClickSound,\n    onClickAdd: onClickAddSound,\n    onRightClick: onRightClickSound,\n    onClickRemove: onClickRemove,\n    jukebox: props.jukebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default connect(function (state) {\n  var isSoundsShowing = state.builder.isSoundsShowing;\n  var scenes = state.game.scenes;\n  var _state$interaction = state.interaction,\n      currentSceneId = _state$interaction.currentSceneId,\n      jukebox = _state$interaction.jukebox;\n  var currentScene = currentSceneId ? scenes[currentSceneId] : null;\n  var soundIds = currentScene ? currentScene.soundIds : [];\n  soundIds = soundIds ? soundIds : [];\n  return {\n    isSoundsShowing: isSoundsShowing,\n    scenes: scenes,\n    soundIds: soundIds,\n    currentSceneId: currentSceneId,\n    jukebox: jukebox\n  };\n}, {\n  playSound: interactionActions.playSound,\n  stopSound: interactionActions.stopSound,\n  removeSound: gameActions.removeSound,\n  setShowSounds: builderActions.setShowSounds,\n  setIsSoundBoxOn: builderActions.setIsSoundBoxOn,\n  showContextMenu: contextMenuActions.showContextMenu\n})(Container);","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder3D/Component/SoundList/Container.js"],"names":["React","useRef","useEffect","connect","gameActions","builderActions","interactionActions","contextMenuActions","AssetLibrary","View","Container","props","container","document","addEventListener","handleClickOutside","removeEventListener","onClickObjectList","jukebox","isPlaying","stopSound","setIsSoundBoxOn","setShowSounds","onClickSound","soundId","id","sound","getSoundAsset","playSound","path","type","onClickAddSound","currentSceneId","alert","onRightClickSound","e","menus","getContextMenus","position","x","clientX","y","clientY","showContextMenu","img","deleteIcon","name","onClick","onClickRemove","removeSound","current","contains","target","soundIds","state","isSoundsShowing","builder","scenes","game","interaction","currentScene"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as gameActions from \"../../Store/Reducer/game\";\nimport * as builderActions from \"../../Store/Reducer/builder\";\nimport * as interactionActions from \"../../Store/Reducer/interaction\";\nimport * as contextMenuActions from \"../../Store/Reducer/contextMenu\";\nimport AssetLibrary from \"../../../Builder/utils/assetLibrary\";\nimport View from \"./View\";\n\nimport deleteIcon from \"../../../../Image/builder3d/icon-30-right-click-delete.svg\";\n\nfunction Container(props) {\n  const container = useRef();\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const onClickObjectList = () => {\n    if (props.jukebox.isPlaying) {\n      props.stopSound();\n    }\n    props.setIsSoundBoxOn(false);\n    props.setShowSounds(false);\n  };\n\n  const onClickSound = soundId => {\n    if (props.jukebox.isPlaying && props.jukebox.id === soundId) {\n      props.stopSound();\n    } else {\n      const sound = AssetLibrary.getSoundAsset(soundId);\n      props.playSound(sound.id, sound.path, sound.type);\n    }\n  };\n\n  const onClickAddSound = () => {\n    const { currentSceneId, setIsSoundBoxOn } = props;\n\n    if (!currentSceneId) {\n      alert(\"먼저 씬을 추가해 주세요.\");\n      return;\n    }\n\n    setIsSoundBoxOn(true);\n  };\n\n  const onRightClickSound = (soundId, e) => {\n    const menus = getContextMenus(soundId);\n    const position = { x: e.clientX, y: e.clientY };\n    props.showContextMenu(menus, position);\n  };\n\n  const getContextMenus = soundId => {\n    const menus = [\n      {\n        img: deleteIcon,\n        name: \"삭제\",\n        onClick: () => onClickRemove(soundId)\n      }\n    ];\n    return menus;\n  };\n\n  const onClickRemove = soundId => {\n    props.removeSound(props.currentSceneId, soundId);\n  };\n\n  const handleClickOutside = e => {\n    if (!container.current || container.current.contains(e.target)) {\n      return;\n    }\n    if (props.jukebox.isPlaying) {\n      props.stopSound();\n    }\n  };\n\n  return (\n    <View\n      containerRef={container}\n      assetLibrary={AssetLibrary}\n      onClickObjectList={onClickObjectList}\n      soundIds={props.soundIds}\n      onClickSound={onClickSound}\n      onClickAdd={onClickAddSound}\n      onRightClick={onRightClickSound}\n      onClickRemove={onClickRemove}\n      jukebox={props.jukebox}\n    />\n  );\n}\n\nexport default connect(\n  state => {\n    const { isSoundsShowing } = state.builder;\n    const { scenes } = state.game;\n    const { currentSceneId, jukebox } = state.interaction;\n    const currentScene = currentSceneId ? scenes[currentSceneId] : null;\n    let soundIds = currentScene ? currentScene.soundIds : [];\n    soundIds = soundIds ? soundIds : [];\n    return {\n      isSoundsShowing,\n      scenes,\n      soundIds,\n      currentSceneId,\n      jukebox\n    };\n  },\n  {\n    playSound: interactionActions.playSound,\n    stopSound: interactionActions.stopSound,\n    removeSound: gameActions.removeSound,\n    setShowSounds: builderActions.setShowSounds,\n    setIsSoundBoxOn: builderActions.setIsSoundBoxOn,\n    showContextMenu: contextMenuActions.showContextMenu\n  }\n)(Container);\n"]},"metadata":{},"sourceType":"module"}