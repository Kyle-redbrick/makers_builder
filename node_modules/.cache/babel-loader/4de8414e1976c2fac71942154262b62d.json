{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Editor/Component/OOBCEditorWrapper/index.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../../../../../../Common/Component/PopUp\";\nimport OOBCEditor from \"../../../../../../Common/Component/OOBCEditor\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\";\nimport AssetLibrary from \"../../../../utils/assetLibrary\";\nimport \"./index.scss\";\n\nfunction OOBCEditorWrapper(props) {\n  var oobcEditorRef = useRef(null);\n  var locale = props.intl.locale;\n  var alert = {\n    type: \"tapioca\",\n    PopUp: PopUp,\n    showPopUp: showPopUp\n  };\n\n  var getPrototypeBlocksInfo = function getPrototypeBlocksInfo() {\n    var prototypesInfo = {\n      sceneIds: props.sceneIds || [],\n      gameObjects: getGameObjectPrototypeBlocks(),\n      variables: props.globalVariables || [],\n      strings: props.customStrings || []\n    };\n    return prototypesInfo;\n  };\n\n  var getGameObjectPrototypeBlocks = function getGameObjectPrototypeBlocks() {\n    var gameObjects = [];\n    var selectedScene = props.selectedScene,\n        soundIds = props.soundIds;\n\n    if (selectedScene) {\n      for (var spriteId in selectedScene.sprites) {\n        var sprite = selectedScene.sprites[spriteId];\n        if (!sprite.preview) continue;\n        var _sprite$preview = sprite.preview,\n            type = _sprite$preview.type,\n            name = _sprite$preview.name;\n\n        if (sprite.type === \"text\") {\n          gameObjects.push({\n            type: type,\n            name: name\n          });\n        } else {\n          var asset = AssetLibrary.getAsset(sprite.assetId);\n\n          if (asset) {\n            var thumbnailSrc = asset.thumb;\n\n            if (sprite.type === \"background\" && asset.oobcThumb) {\n              thumbnailSrc = asset.oobcThumb;\n            }\n\n            var animationIds = asset.spriteAnimations && Object.keys(asset.spriteAnimations);\n            gameObjects.push({\n              type: type,\n              name: name,\n              thumbnailSrc: thumbnailSrc,\n              animationIds: animationIds\n            });\n          } else {\n            gameObjects.push({\n              type: type,\n              name: name\n            });\n          }\n        }\n      }\n    }\n\n    var _iterator = _createForOfIteratorHelper(soundIds),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var soundId = _step.value;\n        var soundAsset = AssetLibrary.getSoundAsset(soundId);\n        var soundName = soundAsset.defaultName;\n        gameObjects.push({\n          type: \"sound\",\n          name: soundName\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return gameObjects;\n  };\n\n  var onUpdateContextJSON = function onUpdateContextJSON(contextJSON) {\n    var selectedSceneId = props.selectedSceneId,\n        selectedSpriteId = props.selectedSpriteId,\n        setSpriteCode = props.setSpriteCode;\n\n    if (selectedSceneId && selectedSpriteId) {\n      var code = JSON.stringify(contextJSON);\n      setSpriteCode(selectedSceneId, selectedSpriteId, code);\n    }\n  };\n\n  useEffect(function () {\n    var selectedSprite = props.selectedSprite;\n\n    if (selectedSprite && selectedSprite.code) {\n      var contextJSON;\n\n      try {\n        contextJSON = JSON.parse(selectedSprite.code);\n        oobcEditorRef.current.initContextWith(contextJSON);\n      } catch (_unused) {\n        oobcEditorRef.current.initEmptyContext();\n      }\n    } else {\n      oobcEditorRef.current.initEmptyContext();\n    }\n  }, [props.timeStamp, props.selectedSpriteId]);\n\n  var onAddGlobalVar = function onAddGlobalVar(variableName) {\n    if (props.addGlobalVariable) {\n      props.addGlobalVariable(variableName);\n    }\n  };\n\n  var isLocked = props.selectedSprite && props.selectedSprite.locked;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"oobcEditorWrapper\".concat(isLocked ? \" oobcEditorWrapper-locked\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OOBCEditor, {\n    ref: oobcEditorRef,\n    locale: locale,\n    alert: alert,\n    prototypesInfo: getPrototypeBlocksInfo(),\n    onUpdateContextJSON: onUpdateContextJSON,\n    onAddGlobalVar: onAddGlobalVar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"oobcEditorWrapper_lock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"oobcEditorWrapper_lock_message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, props.intl.formatMessage({\n    id: \"ID_EDIT_LOCK_SPRITE_TITLE\"\n  }))));\n}\n\nexport default connect(function (state) {\n  var timeStamp = state.project.timeStamp;\n  var _state$scene = state.scene,\n      sceneIds = _state$scene.sceneIds,\n      scenes = _state$scene.scenes,\n      soundIds = _state$scene.soundIds,\n      globalVariables = _state$scene.globalVariables;\n  var _state$interaction$se = state.interaction.selected,\n      selectedSceneId = _state$interaction$se.scene,\n      _state$interaction$se2 = _state$interaction$se.objects,\n      selectedObjectInfos = _state$interaction$se2 === void 0 ? {} : _state$interaction$se2;\n  var selectedScene = scenes[selectedSceneId];\n  var selectedObjectInfo = selectedObjectInfos[selectedSceneId];\n  var selectedSpriteId = selectedObjectInfo && selectedObjectInfo.name;\n  var selectedSprite = selectedScene && selectedScene.sprites[selectedSpriteId];\n  var customStrings = state.block.customStrings;\n  return {\n    timeStamp: timeStamp,\n    sceneIds: sceneIds,\n    selectedSceneId: selectedSceneId,\n    selectedScene: selectedScene,\n    selectedSpriteId: selectedSpriteId,\n    selectedSprite: selectedSprite,\n    soundIds: soundIds,\n    globalVariables: globalVariables,\n    customStrings: customStrings\n  };\n}, {\n  setSpriteCode: sceneActions.setSpriteCode,\n  addGlobalVariable: sceneActions.addGlobalVariable\n})(injectIntl(OOBCEditorWrapper));","map":{"version":3,"sources":["/Users/jimmy/Documents/Wizschool/wizlab_web2/src/Page/Builder/Component/Editor/Component/OOBCEditorWrapper/index.js"],"names":["React","useRef","useEffect","connect","injectIntl","PopUp","showPopUp","OOBCEditor","sceneActions","AssetLibrary","OOBCEditorWrapper","props","oobcEditorRef","locale","intl","alert","type","getPrototypeBlocksInfo","prototypesInfo","sceneIds","gameObjects","getGameObjectPrototypeBlocks","variables","globalVariables","strings","customStrings","selectedScene","soundIds","spriteId","sprites","sprite","preview","name","push","asset","getAsset","assetId","thumbnailSrc","thumb","oobcThumb","animationIds","spriteAnimations","Object","keys","soundId","soundAsset","getSoundAsset","soundName","defaultName","onUpdateContextJSON","contextJSON","selectedSceneId","selectedSpriteId","setSpriteCode","code","JSON","stringify","selectedSprite","parse","current","initContextWith","initEmptyContext","timeStamp","onAddGlobalVar","variableName","addGlobalVariable","isLocked","locked","formatMessage","id","state","project","scene","scenes","interaction","selected","objects","selectedObjectInfos","selectedObjectInfo","block"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { injectIntl } from \"react-intl\";\nimport PopUp, { showPopUp } from \"../../../../../../Common/Component/PopUp\";\nimport OOBCEditor from \"../../../../../../Common/Component/OOBCEditor\";\nimport * as sceneActions from \"../../../../Store/Reducer/scene\";\nimport AssetLibrary from \"../../../../utils/assetLibrary\";\nimport \"./index.scss\";\n\nfunction OOBCEditorWrapper(props) {\n  const oobcEditorRef = useRef(null);\n  const locale = props.intl.locale;\n  const alert = { type: \"tapioca\", PopUp, showPopUp };\n\n  const getPrototypeBlocksInfo = () => {\n    const prototypesInfo = {\n      sceneIds: props.sceneIds || [],\n      gameObjects: getGameObjectPrototypeBlocks(),\n      variables: props.globalVariables || [],\n      strings: props.customStrings || []\n    };\n    return prototypesInfo;\n  };\n  const getGameObjectPrototypeBlocks = () => {\n    const gameObjects = [];\n\n    const { selectedScene, soundIds } = props;\n    if (selectedScene) {\n      for (let spriteId in selectedScene.sprites) {\n        const sprite = selectedScene.sprites[spriteId];\n        if (!sprite.preview) continue;\n        const { type, name } = sprite.preview;\n        if (sprite.type === \"text\") {\n          gameObjects.push({ type, name });\n        } else {\n          const asset = AssetLibrary.getAsset(sprite.assetId);\n          if (asset) {\n            let thumbnailSrc = asset.thumb;\n            if (sprite.type === \"background\" && asset.oobcThumb) {\n              thumbnailSrc = asset.oobcThumb;\n            }\n            const animationIds =\n              asset.spriteAnimations && Object.keys(asset.spriteAnimations);\n            gameObjects.push({ type, name, thumbnailSrc, animationIds });\n          } else {\n            gameObjects.push({ type, name });\n          }\n        }\n      }\n    }\n\n    for (let soundId of soundIds) {\n      const soundAsset = AssetLibrary.getSoundAsset(soundId);\n      const soundName = soundAsset.defaultName;\n      gameObjects.push({ type: \"sound\", name: soundName });\n    }\n\n    return gameObjects;\n  };\n\n  const onUpdateContextJSON = contextJSON => {\n    const { selectedSceneId, selectedSpriteId, setSpriteCode } = props;\n    if (selectedSceneId && selectedSpriteId) {\n      const code = JSON.stringify(contextJSON);\n      setSpriteCode(selectedSceneId, selectedSpriteId, code);\n    }\n  };\n  useEffect(\n    () => {\n      const { selectedSprite } = props;\n      if(selectedSprite && selectedSprite.code) {\n        let contextJSON;\n        try {\n          contextJSON = JSON.parse(selectedSprite.code);\n          oobcEditorRef.current.initContextWith(contextJSON);\n        } catch {\n          oobcEditorRef.current.initEmptyContext();\n        }\n      } else {\n        oobcEditorRef.current.initEmptyContext();\n      }\n    },\n    [props.timeStamp, props.selectedSpriteId]\n  );\n\n  const onAddGlobalVar = variableName => {\n    if (props.addGlobalVariable) {\n      props.addGlobalVariable(variableName);\n    }\n  };\n\n  const isLocked = props.selectedSprite && props.selectedSprite.locked;\n\n  return (\n    <div className={`oobcEditorWrapper${isLocked ? \" oobcEditorWrapper-locked\" : \"\"}`}>\n      <OOBCEditor\n        ref={oobcEditorRef}\n        locale={locale}\n        alert={alert}\n        prototypesInfo={getPrototypeBlocksInfo()}\n        onUpdateContextJSON={onUpdateContextJSON}\n        onAddGlobalVar={onAddGlobalVar}\n      />\n      <div className=\"oobcEditorWrapper_lock\">\n        <div className=\"oobcEditorWrapper_lock_message\">\n            {props.intl.formatMessage({ id: \"ID_EDIT_LOCK_SPRITE_TITLE\" })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  state => {\n    const { timeStamp } = state.project;\n    const { sceneIds, scenes, soundIds, globalVariables } = state.scene;\n    const {\n      scene: selectedSceneId,\n      objects: selectedObjectInfos = {}\n    } = state.interaction.selected;\n    const selectedScene = scenes[selectedSceneId];\n    const selectedObjectInfo = selectedObjectInfos[selectedSceneId];\n    const selectedSpriteId = selectedObjectInfo && selectedObjectInfo.name;\n    const selectedSprite =\n      selectedScene && selectedScene.sprites[selectedSpriteId];\n\n    const { customStrings } = state.block;\n\n    return {\n      timeStamp,\n      sceneIds,\n      selectedSceneId,\n      selectedScene,\n      selectedSpriteId,\n      selectedSprite,\n      soundIds,\n      globalVariables,\n      customStrings\n    };\n  },\n  {\n    setSpriteCode: sceneActions.setSpriteCode,\n    addGlobalVariable: sceneActions.addGlobalVariable\n  }\n)(injectIntl(OOBCEditorWrapper));\n"]},"metadata":{},"sourceType":"module"}