{"map":"{\"version\":3,\"sources\":[\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qrcode.react/lib/index.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/mode.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/ErrorCorrectLevel.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/Polynomial.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/math.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/QRCode.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/8BitByte.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/RSBlock.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/BitBuffer.js\",\"/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/react-scripts/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/jimmy/Documents/Wizschool/wizlab_web2/node_modules/qr.js/lib/util.js\"],\"names\":[\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_extends\",\"Object\",\"assign\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"hasOwnProperty\",\"call\",\"apply\",\"this\",\"ownKeys\",\"object\",\"enumerableOnly\",\"keys\",\"getOwnPropertySymbols\",\"symbols\",\"filter\",\"sym\",\"getOwnPropertyDescriptor\",\"enumerable\",\"push\",\"_objectSpread\",\"forEach\",\"_defineProperty\",\"getOwnPropertyDescriptors\",\"defineProperties\",\"defineProperty\",\"_objectWithoutProperties\",\"excluded\",\"sourceKeys\",\"indexOf\",\"_objectWithoutPropertiesLoose\",\"sourceSymbolKeys\",\"propertyIsEnumerable\",\"_classCallCheck\",\"instance\",\"Constructor\",\"TypeError\",\"_defineProperties\",\"props\",\"descriptor\",\"configurable\",\"writable\",\"_createClass\",\"protoProps\",\"staticProps\",\"_possibleConstructorReturn\",\"self\",\"_assertThisInitialized\",\"_getPrototypeOf\",\"o\",\"setPrototypeOf\",\"getPrototypeOf\",\"__proto__\",\"ReferenceError\",\"_inherits\",\"subClass\",\"superClass\",\"create\",\"value\",\"_setPrototypeOf\",\"p\",\"React\",\"__webpack_require__\",\"QRCodeImpl\",\"ErrorCorrectLevel\",\"convertStr\",\"str\",\"out\",\"charcode\",\"charCodeAt\",\"String\",\"fromCharCode\",\"DEFAULT_PROPS\",\"size\",\"level\",\"bgColor\",\"fgColor\",\"includeMargin\",\"MARGIN_SIZE\",\"DEFAULT_IMG_SCALE\",\"generatePath\",\"modules\",\"margin\",\"undefined\",\"ops\",\"row\",\"y\",\"start\",\"cell\",\"x\",\"concat\",\"join\",\"excavateModules\",\"excavation\",\"slice\",\"map\",\"h\",\"w\",\"getImageSettings\",\"cells\",\"imageSettings\",\"numCells\",\"defaultSize\",\"Math\",\"floor\",\"scale\",\"width\",\"height\",\"excavate\",\"floorX\",\"floorY\",\"ceil\",\"SUPPORTS_PATH2D\",\"Path2D\",\"addPath\",\"e\",\"QRCodeCanvas\",\"_React$PureComponent\",\"_getPrototypeOf2\",\"_this\",\"_len\",\"args\",\"Array\",\"_key\",\"imgLoaded\",\"setState\",\"PureComponent\",\"_image\",\"complete\",\"handleImageLoad\",\"update\",\"nextProps\",\"_this$props$imageSett\",\"_nextProps$imageSetti\",\"src\",\"_this$props\",\"qrcode\",\"addData\",\"make\",\"_canvas\",\"canvas\",\"ctx\",\"getContext\",\"calculatedImageSettings\",\"pixelRatio\",\"window\",\"devicePixelRatio\",\"fillStyle\",\"fillRect\",\"fill\",\"rdx\",\"cdx\",\"state\",\"drawImage\",\"_this2\",\"_this$props2\",\"style\",\"otherProps\",\"canvasStyle\",\"img\",\"imgSrc\",\"createElement\",\"display\",\"onLoad\",\"ref\",\"_ref\",\"Fragment\",\"_ref2\",\"QRCodeSVG\",\"_React$PureComponent2\",\"_this$props3\",\"image\",\"xlinkHref\",\"preserveAspectRatio\",\"fgPath\",\"shapeRendering\",\"viewBox\",\"d\",\"QRCode\",\"renderAs\",\"Component\",\"defaultProps\",\"module\",\"exports\",\"MODE_NUMBER\",\"MODE_ALPHA_NUM\",\"MODE_8BIT_BYTE\",\"MODE_KANJI\",\"L\",\"M\",\"Q\",\"H\",\"math\",\"QRPolynomial\",\"num\",\"shift\",\"Error\",\"offset\",\"get\",\"index\",\"getLength\",\"multiply\",\"j\",\"gexp\",\"glog\",\"mod\",\"ratio\",\"QRMath\",\"n\",\"LOG_TABLE\",\"EXP_TABLE\",\"BitByte\",\"RSBlock\",\"BitBuffer\",\"util\",\"Polynomial\",\"typeNumber\",\"errorCorrectLevel\",\"moduleCount\",\"dataCache\",\"dataList\",\"proto\",\"data\",\"newData\",\"isDark\",\"col\",\"getModuleCount\",\"rsBlocks\",\"getRSBlocks\",\"buffer\",\"totalDataCount\",\"dataCount\",\"put\",\"mode\",\"getLengthInBits\",\"write\",\"makeImpl\",\"getBestMaskPattern\",\"test\",\"maskPattern\",\"setupPositionProbePattern\",\"setupPositionAdjustPattern\",\"setupTimingPattern\",\"setupTypeInfo\",\"setupTypeNumber\",\"createData\",\"mapData\",\"r\",\"c\",\"minLostPoint\",\"pattern\",\"lostPoint\",\"getLostPoint\",\"createMovieClip\",\"target_mc\",\"instance_name\",\"depth\",\"qr_mc\",\"createEmptyMovieClip\",\"beginFill\",\"moveTo\",\"lineTo\",\"endFill\",\"pos\",\"getPatternPosition\",\"bits\",\"getBCHTypeNumber\",\"getBCHTypeInfo\",\"inc\",\"bitIndex\",\"byteIndex\",\"dark\",\"getMask\",\"PAD0\",\"PAD1\",\"putBit\",\"createBytes\",\"maxDcCount\",\"maxEcCount\",\"dcdata\",\"ecdata\",\"dcCount\",\"ecCount\",\"totalCount\",\"max\",\"rsPoly\",\"getErrorCorrectPolynomial\",\"modPoly\",\"modIndex\",\"totalCodeCount\",\"QR8bitByte\",\"ECL\",\"QRRSBlock\",\"RS_BLOCK_TABLE\",\"rsBlock\",\"getRsBlockTable\",\"list\",\"count\",\"QRBitBuffer\",\"bufIndex\",\"bit\",\"Mode\",\"QRMaskPattern\",\"QRUtil\",\"PATTERN_POSITION_TABLE\",\"G15\",\"G18\",\"G15_MASK\",\"getBCHDigit\",\"digit\",\"errorCorrectLength\",\"a\",\"type\",\"qrCode\",\"sameCount\",\"darkCount\",\"abs\"],\"mappings\":\"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AAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,GAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,GAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,GAAA,EAAA,IAAA,IAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,GAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,GAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,GAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IACA,CAAA,GAAA,IAAA,IAAA,EAAA,IAAA,KAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IACA,CAAA,EAAA,IAAA,IAAA,G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\",\"sourcesContent\":[\"'use strict';\\n\\nfunction _typeof(obj) {\\n  if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") {\\n    _typeof = function _typeof(obj) {\\n      return typeof obj;\\n    };\\n  } else {\\n    _typeof = function _typeof(obj) {\\n      return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n    };\\n  }\\n\\n  return _typeof(obj);\\n}\\n\\nfunction _extends() {\\n  _extends = Object.assign || function (target) {\\n    for (var i = 1; i < arguments.length; i++) {\\n      var source = arguments[i];\\n\\n      for (var key in source) {\\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\\n          target[key] = source[key];\\n        }\\n      }\\n    }\\n\\n    return target;\\n  };\\n\\n  return _extends.apply(this, arguments);\\n}\\n\\nfunction ownKeys(object, enumerableOnly) {\\n  var keys = Object.keys(object);\\n\\n  if (Object.getOwnPropertySymbols) {\\n    var symbols = Object.getOwnPropertySymbols(object);\\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\\n    });\\n    keys.push.apply(keys, symbols);\\n  }\\n\\n  return keys;\\n}\\n\\nfunction _objectSpread(target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i] != null ? arguments[i] : {};\\n\\n    if (i % 2) {\\n      ownKeys(source, true).forEach(function (key) {\\n        _defineProperty(target, key, source[key]);\\n      });\\n    } else if (Object.getOwnPropertyDescriptors) {\\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\\n    } else {\\n      ownKeys(source).forEach(function (key) {\\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\\n      });\\n    }\\n  }\\n\\n  return target;\\n}\\n\\nfunction _objectWithoutProperties(source, excluded) {\\n  if (source == null) return {};\\n\\n  var target = _objectWithoutPropertiesLoose(source, excluded);\\n\\n  var key, i;\\n\\n  if (Object.getOwnPropertySymbols) {\\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\\n\\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\\n      key = sourceSymbolKeys[i];\\n      if (excluded.indexOf(key) >= 0) continue;\\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\\n      target[key] = source[key];\\n    }\\n  }\\n\\n  return target;\\n}\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) {\\n  if (source == null) return {};\\n  var target = {};\\n  var sourceKeys = Object.keys(source);\\n  var key, i;\\n\\n  for (i = 0; i < sourceKeys.length; i++) {\\n    key = sourceKeys[i];\\n    if (excluded.indexOf(key) >= 0) continue;\\n    target[key] = source[key];\\n  }\\n\\n  return target;\\n}\\n\\nfunction _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nfunction _defineProperties(target, props) {\\n  for (var i = 0; i < props.length; i++) {\\n    var descriptor = props[i];\\n    descriptor.enumerable = descriptor.enumerable || false;\\n    descriptor.configurable = true;\\n    if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n    Object.defineProperty(target, descriptor.key, descriptor);\\n  }\\n}\\n\\nfunction _createClass(Constructor, protoProps, staticProps) {\\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n  if (staticProps) _defineProperties(Constructor, staticProps);\\n  return Constructor;\\n}\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n    return call;\\n  }\\n\\n  return _assertThisInitialized(self);\\n}\\n\\nfunction _getPrototypeOf(o) {\\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n    return o.__proto__ || Object.getPrototypeOf(o);\\n  };\\n  return _getPrototypeOf(o);\\n}\\n\\nfunction _assertThisInitialized(self) {\\n  if (self === void 0) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }\\n\\n  return self;\\n}\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n  }\\n\\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\\n    constructor: {\\n      value: subClass,\\n      writable: true,\\n      configurable: true\\n    }\\n  });\\n  if (superClass) _setPrototypeOf(subClass, superClass);\\n}\\n\\nfunction _setPrototypeOf(o, p) {\\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n    o.__proto__ = p;\\n    return o;\\n  };\\n\\n  return _setPrototypeOf(o, p);\\n}\\n\\nfunction _defineProperty(obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, {\\n      value: value,\\n      enumerable: true,\\n      configurable: true,\\n      writable: true\\n    });\\n  } else {\\n    obj[key] = value;\\n  }\\n\\n  return obj;\\n}\\n\\nvar React = require('react');\\n\\nvar PropTypes = require('prop-types'); // qr.js doesn't handle error level of zero (M) so we need to do it right,\\n// thus the deep require.\\n\\n\\nvar QRCodeImpl = require('qr.js/lib/QRCode');\\n\\nvar ErrorCorrectLevel = require('qr.js/lib/ErrorCorrectLevel'); // TODO: pull this off of the QRCode class type so it matches.\\n// Convert from UTF-16, forcing the use of byte-mode encoding in our QR Code.\\n// This allows us to encode Hanji, Kanji, emoji, etc. Ideally we'd do more\\n// detection and not resort to byte-mode if possible, but we're trading off\\n// a smaller library for a smaller amount of data we can potentially encode.\\n// Based on http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\\n\\n\\nfunction convertStr(str) {\\n  var out = '';\\n\\n  for (var i = 0; i < str.length; i++) {\\n    var charcode = str.charCodeAt(i);\\n\\n    if (charcode < 0x0080) {\\n      out += String.fromCharCode(charcode);\\n    } else if (charcode < 0x0800) {\\n      out += String.fromCharCode(0xc0 | charcode >> 6);\\n      out += String.fromCharCode(0x80 | charcode & 0x3f);\\n    } else if (charcode < 0xd800 || charcode >= 0xe000) {\\n      out += String.fromCharCode(0xe0 | charcode >> 12);\\n      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);\\n      out += String.fromCharCode(0x80 | charcode & 0x3f);\\n    } else {\\n      // This is a surrogate pair, so we'll reconsitute the pieces and work\\n      // from that\\n      i++;\\n      charcode = 0x10000 + ((charcode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);\\n      out += String.fromCharCode(0xf0 | charcode >> 18);\\n      out += String.fromCharCode(0x80 | charcode >> 12 & 0x3f);\\n      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);\\n      out += String.fromCharCode(0x80 | charcode & 0x3f);\\n    }\\n  }\\n\\n  return out;\\n}\\n\\nvar DEFAULT_PROPS = {\\n  size: 128,\\n  level: 'L',\\n  bgColor: '#FFFFFF',\\n  fgColor: '#000000',\\n  includeMargin: false\\n};\\nvar PROP_TYPES = process.env.NODE_ENV !== 'production' ? {\\n  value: PropTypes.string.isRequired,\\n  size: PropTypes.number,\\n  level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),\\n  bgColor: PropTypes.string,\\n  fgColor: PropTypes.string,\\n  includeMargin: PropTypes.bool,\\n  imageSettings: PropTypes.shape({\\n    src: PropTypes.string.isRequired,\\n    height: PropTypes.number.isRequired,\\n    width: PropTypes.number.isRequired,\\n    excavate: PropTypes.bool,\\n    x: PropTypes.number,\\n    y: PropTypes.number\\n  })\\n} : {};\\nvar MARGIN_SIZE = 4; // This is *very* rough estimate of max amount of QRCode allowed to be covered.\\n// It is \\\"wrong\\\" in a lot of ways (area is a terrible way to estimate, it\\n// really should be number of modules covered), but if for some reason we don't\\n// get an explicit height or width, I'd rather default to something than throw.\\n\\nvar DEFAULT_IMG_SCALE = 0.1;\\n\\nfunction generatePath(modules) {\\n  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\\n  var ops = [];\\n  modules.forEach(function (row, y) {\\n    var start = null;\\n    row.forEach(function (cell, x) {\\n      if (!cell && start !== null) {\\n        // M0 0h7v1H0z injects the space with the move and drops the comma,\\n        // saving a char per operation\\n        ops.push(\\\"M\\\".concat(start + margin, \\\" \\\").concat(y + margin, \\\"h\\\").concat(x - start, \\\"v1H\\\").concat(start + margin, \\\"z\\\"));\\n        start = null;\\n        return;\\n      } // end of row, clean up or skip\\n\\n\\n      if (x === row.length - 1) {\\n        if (!cell) {\\n          // We would have closed the op above already so this can only mean\\n          // 2+ light modules in a row.\\n          return;\\n        }\\n\\n        if (start === null) {\\n          // Just a single dark module.\\n          ops.push(\\\"M\\\".concat(x + margin, \\\",\\\").concat(y + margin, \\\" h1v1H\\\").concat(x + margin, \\\"z\\\"));\\n        } else {\\n          // Otherwise finish the current line.\\n          ops.push(\\\"M\\\".concat(start + margin, \\\",\\\").concat(y + margin, \\\" h\\\").concat(x + 1 - start, \\\"v1H\\\").concat(start + margin, \\\"z\\\"));\\n        }\\n\\n        return;\\n      }\\n\\n      if (cell && start === null) {\\n        start = x;\\n      }\\n    });\\n  });\\n  return ops.join('');\\n} // We could just do this in generatePath, except that we want to support\\n// non-Path2D canvas, so we need to keep it an explicit step.\\n\\n\\nfunction excavateModules(modules, excavation) {\\n  return modules.slice().map(function (row, y) {\\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\\n      return row;\\n    }\\n\\n    return row.map(function (cell, x) {\\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\\n        return cell;\\n      }\\n\\n      return false;\\n    });\\n  });\\n}\\n\\nfunction getImageSettings(props, cells) {\\n  var imageSettings = props.imageSettings,\\n      size = props.size,\\n      includeMargin = props.includeMargin;\\n\\n  if (imageSettings == null) {\\n    return null;\\n  }\\n\\n  var margin = includeMargin ? MARGIN_SIZE : 0;\\n  var numCells = cells.length + margin * 2;\\n  var defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\\n  var scale = numCells / size;\\n  var w = (imageSettings.width || defaultSize) * scale;\\n  var h = (imageSettings.height || defaultSize) * scale;\\n  var x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\\n  var y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\\n  var excavation = null;\\n\\n  if (imageSettings.excavate) {\\n    var floorX = Math.floor(x);\\n    var floorY = Math.floor(y);\\n    var ceilW = Math.ceil(w + x - floorX);\\n    var ceilH = Math.ceil(h + y - floorY);\\n    excavation = {\\n      x: floorX,\\n      y: floorY,\\n      w: ceilW,\\n      h: ceilH\\n    };\\n  }\\n\\n  return {\\n    x: x,\\n    y: y,\\n    h: h,\\n    w: w,\\n    excavation: excavation\\n  };\\n} // For canvas we're going to switch our drawing mode based on whether or not\\n// the environment supports Path2D. We only need the constructor to be\\n// supported, but Edge doesn't actually support the path (string) type\\n// argument. Luckily it also doesn't support the addPath() method. We can\\n// treat that as the same thing.\\n\\n\\nvar SUPPORTS_PATH2D = function () {\\n  try {\\n    new Path2D().addPath(new Path2D());\\n  } catch (e) {\\n    return false;\\n  }\\n\\n  return true;\\n}();\\n\\nvar QRCodeCanvas = /*#__PURE__*/function (_React$PureComponent) {\\n  _inherits(QRCodeCanvas, _React$PureComponent);\\n\\n  function QRCodeCanvas() {\\n    var _getPrototypeOf2;\\n\\n    var _this;\\n\\n    _classCallCheck(this, QRCodeCanvas);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QRCodeCanvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\\n\\n    _defineProperty(_assertThisInitialized(_this), \\\"_canvas\\\", void 0);\\n\\n    _defineProperty(_assertThisInitialized(_this), \\\"_image\\\", void 0);\\n\\n    _defineProperty(_assertThisInitialized(_this), \\\"state\\\", {\\n      imgLoaded: false\\n    });\\n\\n    _defineProperty(_assertThisInitialized(_this), \\\"handleImageLoad\\\", function () {\\n      _this.setState({\\n        imgLoaded: true\\n      });\\n    });\\n\\n    return _this;\\n  }\\n\\n  _createClass(QRCodeCanvas, [{\\n    key: \\\"componentDidMount\\\",\\n    value: function componentDidMount() {\\n      if (this._image && this._image.complete) {\\n        this.handleImageLoad();\\n      }\\n\\n      this.update();\\n    }\\n  }, {\\n    key: \\\"componentWillReceiveProps\\\",\\n    value: function componentWillReceiveProps(nextProps) {\\n      var _this$props$imageSett, _nextProps$imageSetti;\\n\\n      var currentSrc = (_this$props$imageSett = this.props.imageSettings) === null || _this$props$imageSett === void 0 ? void 0 : _this$props$imageSett.src;\\n      var nextSrc = (_nextProps$imageSetti = nextProps.imageSettings) === null || _nextProps$imageSetti === void 0 ? void 0 : _nextProps$imageSetti.src;\\n\\n      if (currentSrc !== nextSrc) {\\n        this.setState({\\n          imgLoaded: false\\n        });\\n      }\\n    }\\n  }, {\\n    key: \\\"componentDidUpdate\\\",\\n    value: function componentDidUpdate() {\\n      this.update();\\n    }\\n  }, {\\n    key: \\\"update\\\",\\n    value: function update() {\\n      var _this$props = this.props,\\n          value = _this$props.value,\\n          size = _this$props.size,\\n          level = _this$props.level,\\n          bgColor = _this$props.bgColor,\\n          fgColor = _this$props.fgColor,\\n          includeMargin = _this$props.includeMargin,\\n          imageSettings = _this$props.imageSettings; // We'll use type===-1 to force QRCode to automatically pick the best type\\n\\n      var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\\n      qrcode.addData(convertStr(value));\\n      qrcode.make();\\n\\n      if (this._canvas != null) {\\n        var canvas = this._canvas;\\n        var ctx = canvas.getContext('2d');\\n\\n        if (!ctx) {\\n          return;\\n        }\\n\\n        var cells = qrcode.modules;\\n\\n        if (cells === null) {\\n          return;\\n        }\\n\\n        var margin = includeMargin ? MARGIN_SIZE : 0;\\n        var numCells = cells.length + margin * 2;\\n        var calculatedImageSettings = getImageSettings(this.props, cells);\\n\\n        if (imageSettings != null && calculatedImageSettings != null) {\\n          if (calculatedImageSettings.excavation != null) {\\n            cells = excavateModules(cells, calculatedImageSettings.excavation);\\n          }\\n        } // We're going to scale this so that the number of drawable units\\n        // matches the number of cells. This avoids rounding issues, but does\\n        // result in some potentially unwanted single pixel issues between\\n        // blocks, only in environments that don't support Path2D.\\n\\n\\n        var pixelRatio = window.devicePixelRatio || 1;\\n        canvas.height = canvas.width = size * pixelRatio;\\n        var scale = size / numCells * pixelRatio;\\n        ctx.scale(scale, scale); // Draw solid background, only paint dark modules.\\n\\n        ctx.fillStyle = bgColor;\\n        ctx.fillRect(0, 0, numCells, numCells);\\n        ctx.fillStyle = fgColor;\\n\\n        if (SUPPORTS_PATH2D) {\\n          // $FlowFixMe: Path2D c'tor doesn't support args yet.\\n          ctx.fill(new Path2D(generatePath(cells, margin)));\\n        } else {\\n          cells.forEach(function (row, rdx) {\\n            row.forEach(function (cell, cdx) {\\n              if (cell) {\\n                ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\\n              }\\n            });\\n          });\\n        }\\n\\n        if (this.state.imgLoaded && this._image && calculatedImageSettings != null) {\\n          ctx.drawImage(this._image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\\n        }\\n      }\\n    }\\n  }, {\\n    key: \\\"render\\\",\\n    value: function render() {\\n      var _this2 = this;\\n\\n      var _this$props2 = this.props,\\n          value = _this$props2.value,\\n          size = _this$props2.size,\\n          level = _this$props2.level,\\n          bgColor = _this$props2.bgColor,\\n          fgColor = _this$props2.fgColor,\\n          style = _this$props2.style,\\n          includeMargin = _this$props2.includeMargin,\\n          imageSettings = _this$props2.imageSettings,\\n          otherProps = _objectWithoutProperties(_this$props2, [\\\"value\\\", \\\"size\\\", \\\"level\\\", \\\"bgColor\\\", \\\"fgColor\\\", \\\"style\\\", \\\"includeMargin\\\", \\\"imageSettings\\\"]);\\n\\n      var canvasStyle = _objectSpread({\\n        height: size,\\n        width: size\\n      }, style);\\n\\n      var img = null;\\n      var imgSrc = imageSettings && imageSettings.src;\\n\\n      if (imageSettings != null && imgSrc != null) {\\n        img = React.createElement(\\\"img\\\", {\\n          src: imgSrc,\\n          style: {\\n            display: 'none'\\n          },\\n          onLoad: this.handleImageLoad,\\n          ref: function ref(_ref) {\\n            return _this2._image = _ref;\\n          }\\n        });\\n      }\\n\\n      return React.createElement(React.Fragment, null, React.createElement(\\\"canvas\\\", _extends({\\n        style: canvasStyle,\\n        height: size,\\n        width: size,\\n        ref: function ref(_ref2) {\\n          return _this2._canvas = _ref2;\\n        }\\n      }, otherProps)), img);\\n    }\\n  }]);\\n\\n  return QRCodeCanvas;\\n}(React.PureComponent);\\n\\n_defineProperty(QRCodeCanvas, \\\"defaultProps\\\", DEFAULT_PROPS);\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  QRCodeCanvas.propTypes = PROP_TYPES;\\n}\\n\\nvar QRCodeSVG = /*#__PURE__*/function (_React$PureComponent2) {\\n  _inherits(QRCodeSVG, _React$PureComponent2);\\n\\n  function QRCodeSVG() {\\n    _classCallCheck(this, QRCodeSVG);\\n\\n    return _possibleConstructorReturn(this, _getPrototypeOf(QRCodeSVG).apply(this, arguments));\\n  }\\n\\n  _createClass(QRCodeSVG, [{\\n    key: \\\"render\\\",\\n    value: function render() {\\n      var _this$props3 = this.props,\\n          value = _this$props3.value,\\n          size = _this$props3.size,\\n          level = _this$props3.level,\\n          bgColor = _this$props3.bgColor,\\n          fgColor = _this$props3.fgColor,\\n          includeMargin = _this$props3.includeMargin,\\n          imageSettings = _this$props3.imageSettings,\\n          otherProps = _objectWithoutProperties(_this$props3, [\\\"value\\\", \\\"size\\\", \\\"level\\\", \\\"bgColor\\\", \\\"fgColor\\\", \\\"includeMargin\\\", \\\"imageSettings\\\"]); // We'll use type===-1 to force QRCode to automatically pick the best type\\n\\n\\n      var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\\n      qrcode.addData(convertStr(value));\\n      qrcode.make();\\n      var cells = qrcode.modules;\\n\\n      if (cells === null) {\\n        return null;\\n      }\\n\\n      var margin = includeMargin ? MARGIN_SIZE : 0;\\n      var numCells = cells.length + margin * 2;\\n      var calculatedImageSettings = getImageSettings(this.props, cells);\\n      var image = null;\\n\\n      if (imageSettings != null && calculatedImageSettings != null) {\\n        if (calculatedImageSettings.excavation != null) {\\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\\n        }\\n\\n        image = React.createElement(\\\"image\\\", {\\n          xlinkHref: imageSettings.src,\\n          height: calculatedImageSettings.h,\\n          width: calculatedImageSettings.w,\\n          x: calculatedImageSettings.x + margin,\\n          y: calculatedImageSettings.y + margin,\\n          preserveAspectRatio: \\\"none\\\"\\n        });\\n      } // Drawing strategy: instead of a rect per module, we're going to create a\\n      // single path for the dark modules and layer that on top of a light rect,\\n      // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\\n      // way faster than DOM ops.\\n      // For level 1, 441 nodes -> 2\\n      // For level 40, 31329 -> 2\\n\\n\\n      var fgPath = generatePath(cells, margin);\\n      return React.createElement(\\\"svg\\\", _extends({\\n        shapeRendering: \\\"crispEdges\\\",\\n        height: size,\\n        width: size,\\n        viewBox: \\\"0 0 \\\".concat(numCells, \\\" \\\").concat(numCells)\\n      }, otherProps), React.createElement(\\\"path\\\", {\\n        fill: bgColor,\\n        d: \\\"M0,0 h\\\".concat(numCells, \\\"v\\\").concat(numCells, \\\"H0z\\\")\\n      }), React.createElement(\\\"path\\\", {\\n        fill: fgColor,\\n        d: fgPath\\n      }), image);\\n    }\\n  }]);\\n\\n  return QRCodeSVG;\\n}(React.PureComponent);\\n\\n_defineProperty(QRCodeSVG, \\\"defaultProps\\\", DEFAULT_PROPS);\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  QRCodeSVG.propTypes = PROP_TYPES;\\n}\\n\\nvar QRCode = function QRCode(props) {\\n  var renderAs = props.renderAs,\\n      otherProps = _objectWithoutProperties(props, [\\\"renderAs\\\"]);\\n\\n  var Component = renderAs === 'svg' ? QRCodeSVG : QRCodeCanvas;\\n  return React.createElement(Component, otherProps);\\n};\\n\\nQRCode.defaultProps = _objectSpread({\\n  renderAs: 'canvas'\\n}, DEFAULT_PROPS);\\nmodule.exports = QRCode;\",\"module.exports = {\\n  MODE_NUMBER: 1 << 0,\\n  MODE_ALPHA_NUM: 1 << 1,\\n  MODE_8BIT_BYTE: 1 << 2,\\n  MODE_KANJI: 1 << 3\\n};\",\"module.exports = {\\n  L: 1,\\n  M: 0,\\n  Q: 3,\\n  H: 2\\n};\",\"var math = require('./math');\\n\\nfunction QRPolynomial(num, shift) {\\n  if (num.length == undefined) {\\n    throw new Error(num.length + \\\"/\\\" + shift);\\n  }\\n\\n  var offset = 0;\\n\\n  while (offset < num.length && num[offset] == 0) {\\n    offset++;\\n  }\\n\\n  this.num = new Array(num.length - offset + shift);\\n\\n  for (var i = 0; i < num.length - offset; i++) {\\n    this.num[i] = num[i + offset];\\n  }\\n}\\n\\nQRPolynomial.prototype = {\\n  get: function get(index) {\\n    return this.num[index];\\n  },\\n  getLength: function getLength() {\\n    return this.num.length;\\n  },\\n  multiply: function multiply(e) {\\n    var num = new Array(this.getLength() + e.getLength() - 1);\\n\\n    for (var i = 0; i < this.getLength(); i++) {\\n      for (var j = 0; j < e.getLength(); j++) {\\n        num[i + j] ^= math.gexp(math.glog(this.get(i)) + math.glog(e.get(j)));\\n      }\\n    }\\n\\n    return new QRPolynomial(num, 0);\\n  },\\n  mod: function mod(e) {\\n    if (this.getLength() - e.getLength() < 0) {\\n      return this;\\n    }\\n\\n    var ratio = math.glog(this.get(0)) - math.glog(e.get(0));\\n    var num = new Array(this.getLength());\\n\\n    for (var i = 0; i < this.getLength(); i++) {\\n      num[i] = this.get(i);\\n    }\\n\\n    for (var i = 0; i < e.getLength(); i++) {\\n      num[i] ^= math.gexp(math.glog(e.get(i)) + ratio);\\n    } // recursive call\\n\\n\\n    return new QRPolynomial(num, 0).mod(e);\\n  }\\n};\\nmodule.exports = QRPolynomial;\",\"var QRMath = {\\n  glog: function glog(n) {\\n    if (n < 1) {\\n      throw new Error(\\\"glog(\\\" + n + \\\")\\\");\\n    }\\n\\n    return QRMath.LOG_TABLE[n];\\n  },\\n  gexp: function gexp(n) {\\n    while (n < 0) {\\n      n += 255;\\n    }\\n\\n    while (n >= 256) {\\n      n -= 255;\\n    }\\n\\n    return QRMath.EXP_TABLE[n];\\n  },\\n  EXP_TABLE: new Array(256),\\n  LOG_TABLE: new Array(256)\\n};\\n\\nfor (var i = 0; i < 8; i++) {\\n  QRMath.EXP_TABLE[i] = 1 << i;\\n}\\n\\nfor (var i = 8; i < 256; i++) {\\n  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\\n}\\n\\nfor (var i = 0; i < 255; i++) {\\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\\n}\\n\\nmodule.exports = QRMath;\",\"var BitByte = require('./8BitByte');\\n\\nvar RSBlock = require('./RSBlock');\\n\\nvar BitBuffer = require('./BitBuffer');\\n\\nvar util = require('./util');\\n\\nvar Polynomial = require('./Polynomial');\\n\\nfunction QRCode(typeNumber, errorCorrectLevel) {\\n  this.typeNumber = typeNumber;\\n  this.errorCorrectLevel = errorCorrectLevel;\\n  this.modules = null;\\n  this.moduleCount = 0;\\n  this.dataCache = null;\\n  this.dataList = [];\\n} // for client side minification\\n\\n\\nvar proto = QRCode.prototype;\\n\\nproto.addData = function (data) {\\n  var newData = new BitByte(data);\\n  this.dataList.push(newData);\\n  this.dataCache = null;\\n};\\n\\nproto.isDark = function (row, col) {\\n  if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\\n    throw new Error(row + \\\",\\\" + col);\\n  }\\n\\n  return this.modules[row][col];\\n};\\n\\nproto.getModuleCount = function () {\\n  return this.moduleCount;\\n};\\n\\nproto.make = function () {\\n  // Calculate automatically typeNumber if provided is < 1\\n  if (this.typeNumber < 1) {\\n    var typeNumber = 1;\\n\\n    for (typeNumber = 1; typeNumber < 40; typeNumber++) {\\n      var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\\n      var buffer = new BitBuffer();\\n      var totalDataCount = 0;\\n\\n      for (var i = 0; i < rsBlocks.length; i++) {\\n        totalDataCount += rsBlocks[i].dataCount;\\n      }\\n\\n      for (var i = 0; i < this.dataList.length; i++) {\\n        var data = this.dataList[i];\\n        buffer.put(data.mode, 4);\\n        buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\\n        data.write(buffer);\\n      }\\n\\n      if (buffer.getLengthInBits() <= totalDataCount * 8) break;\\n    }\\n\\n    this.typeNumber = typeNumber;\\n  }\\n\\n  this.makeImpl(false, this.getBestMaskPattern());\\n};\\n\\nproto.makeImpl = function (test, maskPattern) {\\n  this.moduleCount = this.typeNumber * 4 + 17;\\n  this.modules = new Array(this.moduleCount);\\n\\n  for (var row = 0; row < this.moduleCount; row++) {\\n    this.modules[row] = new Array(this.moduleCount);\\n\\n    for (var col = 0; col < this.moduleCount; col++) {\\n      this.modules[row][col] = null; //(col + row) % 3;\\n    }\\n  }\\n\\n  this.setupPositionProbePattern(0, 0);\\n  this.setupPositionProbePattern(this.moduleCount - 7, 0);\\n  this.setupPositionProbePattern(0, this.moduleCount - 7);\\n  this.setupPositionAdjustPattern();\\n  this.setupTimingPattern();\\n  this.setupTypeInfo(test, maskPattern);\\n\\n  if (this.typeNumber >= 7) {\\n    this.setupTypeNumber(test);\\n  }\\n\\n  if (this.dataCache == null) {\\n    this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\\n  }\\n\\n  this.mapData(this.dataCache, maskPattern);\\n};\\n\\nproto.setupPositionProbePattern = function (row, col) {\\n  for (var r = -1; r <= 7; r++) {\\n    if (row + r <= -1 || this.moduleCount <= row + r) continue;\\n\\n    for (var c = -1; c <= 7; c++) {\\n      if (col + c <= -1 || this.moduleCount <= col + c) continue;\\n\\n      if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\\n        this.modules[row + r][col + c] = true;\\n      } else {\\n        this.modules[row + r][col + c] = false;\\n      }\\n    }\\n  }\\n};\\n\\nproto.getBestMaskPattern = function () {\\n  var minLostPoint = 0;\\n  var pattern = 0;\\n\\n  for (var i = 0; i < 8; i++) {\\n    this.makeImpl(true, i);\\n    var lostPoint = util.getLostPoint(this);\\n\\n    if (i == 0 || minLostPoint > lostPoint) {\\n      minLostPoint = lostPoint;\\n      pattern = i;\\n    }\\n  }\\n\\n  return pattern;\\n};\\n\\nproto.createMovieClip = function (target_mc, instance_name, depth) {\\n  var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\\n  var cs = 1;\\n  this.make();\\n\\n  for (var row = 0; row < this.modules.length; row++) {\\n    var y = row * cs;\\n\\n    for (var col = 0; col < this.modules[row].length; col++) {\\n      var x = col * cs;\\n      var dark = this.modules[row][col];\\n\\n      if (dark) {\\n        qr_mc.beginFill(0, 100);\\n        qr_mc.moveTo(x, y);\\n        qr_mc.lineTo(x + cs, y);\\n        qr_mc.lineTo(x + cs, y + cs);\\n        qr_mc.lineTo(x, y + cs);\\n        qr_mc.endFill();\\n      }\\n    }\\n  }\\n\\n  return qr_mc;\\n};\\n\\nproto.setupTimingPattern = function () {\\n  for (var r = 8; r < this.moduleCount - 8; r++) {\\n    if (this.modules[r][6] != null) {\\n      continue;\\n    }\\n\\n    this.modules[r][6] = r % 2 == 0;\\n  }\\n\\n  for (var c = 8; c < this.moduleCount - 8; c++) {\\n    if (this.modules[6][c] != null) {\\n      continue;\\n    }\\n\\n    this.modules[6][c] = c % 2 == 0;\\n  }\\n};\\n\\nproto.setupPositionAdjustPattern = function () {\\n  var pos = util.getPatternPosition(this.typeNumber);\\n\\n  for (var i = 0; i < pos.length; i++) {\\n    for (var j = 0; j < pos.length; j++) {\\n      var row = pos[i];\\n      var col = pos[j];\\n\\n      if (this.modules[row][col] != null) {\\n        continue;\\n      }\\n\\n      for (var r = -2; r <= 2; r++) {\\n        for (var c = -2; c <= 2; c++) {\\n          if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\\n            this.modules[row + r][col + c] = true;\\n          } else {\\n            this.modules[row + r][col + c] = false;\\n          }\\n        }\\n      }\\n    }\\n  }\\n};\\n\\nproto.setupTypeNumber = function (test) {\\n  var bits = util.getBCHTypeNumber(this.typeNumber);\\n\\n  for (var i = 0; i < 18; i++) {\\n    var mod = !test && (bits >> i & 1) == 1;\\n    this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\\n  }\\n\\n  for (var i = 0; i < 18; i++) {\\n    var mod = !test && (bits >> i & 1) == 1;\\n    this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\\n  }\\n};\\n\\nproto.setupTypeInfo = function (test, maskPattern) {\\n  var data = this.errorCorrectLevel << 3 | maskPattern;\\n  var bits = util.getBCHTypeInfo(data); // vertical\\t\\t\\n\\n  for (var i = 0; i < 15; i++) {\\n    var mod = !test && (bits >> i & 1) == 1;\\n\\n    if (i < 6) {\\n      this.modules[i][8] = mod;\\n    } else if (i < 8) {\\n      this.modules[i + 1][8] = mod;\\n    } else {\\n      this.modules[this.moduleCount - 15 + i][8] = mod;\\n    }\\n  } // horizontal\\n\\n\\n  for (var i = 0; i < 15; i++) {\\n    var mod = !test && (bits >> i & 1) == 1;\\n\\n    if (i < 8) {\\n      this.modules[8][this.moduleCount - i - 1] = mod;\\n    } else if (i < 9) {\\n      this.modules[8][15 - i - 1 + 1] = mod;\\n    } else {\\n      this.modules[8][15 - i - 1] = mod;\\n    }\\n  } // fixed module\\n\\n\\n  this.modules[this.moduleCount - 8][8] = !test;\\n};\\n\\nproto.mapData = function (data, maskPattern) {\\n  var inc = -1;\\n  var row = this.moduleCount - 1;\\n  var bitIndex = 7;\\n  var byteIndex = 0;\\n\\n  for (var col = this.moduleCount - 1; col > 0; col -= 2) {\\n    if (col == 6) col--;\\n\\n    while (true) {\\n      for (var c = 0; c < 2; c++) {\\n        if (this.modules[row][col - c] == null) {\\n          var dark = false;\\n\\n          if (byteIndex < data.length) {\\n            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\\n          }\\n\\n          var mask = util.getMask(maskPattern, row, col - c);\\n\\n          if (mask) {\\n            dark = !dark;\\n          }\\n\\n          this.modules[row][col - c] = dark;\\n          bitIndex--;\\n\\n          if (bitIndex == -1) {\\n            byteIndex++;\\n            bitIndex = 7;\\n          }\\n        }\\n      }\\n\\n      row += inc;\\n\\n      if (row < 0 || this.moduleCount <= row) {\\n        row -= inc;\\n        inc = -inc;\\n        break;\\n      }\\n    }\\n  }\\n};\\n\\nQRCode.PAD0 = 0xEC;\\nQRCode.PAD1 = 0x11;\\n\\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\\n  var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\\n  var buffer = new BitBuffer();\\n\\n  for (var i = 0; i < dataList.length; i++) {\\n    var data = dataList[i];\\n    buffer.put(data.mode, 4);\\n    buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber));\\n    data.write(buffer);\\n  } // calc num max data.\\n\\n\\n  var totalDataCount = 0;\\n\\n  for (var i = 0; i < rsBlocks.length; i++) {\\n    totalDataCount += rsBlocks[i].dataCount;\\n  }\\n\\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\\n    throw new Error(\\\"code length overflow. (\\\" + buffer.getLengthInBits() + \\\">\\\" + totalDataCount * 8 + \\\")\\\");\\n  } // end code\\n\\n\\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\\n    buffer.put(0, 4);\\n  } // padding\\n\\n\\n  while (buffer.getLengthInBits() % 8 != 0) {\\n    buffer.putBit(false);\\n  } // padding\\n\\n\\n  while (true) {\\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\\n      break;\\n    }\\n\\n    buffer.put(QRCode.PAD0, 8);\\n\\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\\n      break;\\n    }\\n\\n    buffer.put(QRCode.PAD1, 8);\\n  }\\n\\n  return QRCode.createBytes(buffer, rsBlocks);\\n};\\n\\nQRCode.createBytes = function (buffer, rsBlocks) {\\n  var offset = 0;\\n  var maxDcCount = 0;\\n  var maxEcCount = 0;\\n  var dcdata = new Array(rsBlocks.length);\\n  var ecdata = new Array(rsBlocks.length);\\n\\n  for (var r = 0; r < rsBlocks.length; r++) {\\n    var dcCount = rsBlocks[r].dataCount;\\n    var ecCount = rsBlocks[r].totalCount - dcCount;\\n    maxDcCount = Math.max(maxDcCount, dcCount);\\n    maxEcCount = Math.max(maxEcCount, ecCount);\\n    dcdata[r] = new Array(dcCount);\\n\\n    for (var i = 0; i < dcdata[r].length; i++) {\\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\\n    }\\n\\n    offset += dcCount;\\n    var rsPoly = util.getErrorCorrectPolynomial(ecCount);\\n    var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\\n    var modPoly = rawPoly.mod(rsPoly);\\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\\n\\n    for (var i = 0; i < ecdata[r].length; i++) {\\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\\n    }\\n  }\\n\\n  var totalCodeCount = 0;\\n\\n  for (var i = 0; i < rsBlocks.length; i++) {\\n    totalCodeCount += rsBlocks[i].totalCount;\\n  }\\n\\n  var data = new Array(totalCodeCount);\\n  var index = 0;\\n\\n  for (var i = 0; i < maxDcCount; i++) {\\n    for (var r = 0; r < rsBlocks.length; r++) {\\n      if (i < dcdata[r].length) {\\n        data[index++] = dcdata[r][i];\\n      }\\n    }\\n  }\\n\\n  for (var i = 0; i < maxEcCount; i++) {\\n    for (var r = 0; r < rsBlocks.length; r++) {\\n      if (i < ecdata[r].length) {\\n        data[index++] = ecdata[r][i];\\n      }\\n    }\\n  }\\n\\n  return data;\\n};\\n\\nmodule.exports = QRCode;\",\"var mode = require('./mode');\\n\\nfunction QR8bitByte(data) {\\n  this.mode = mode.MODE_8BIT_BYTE;\\n  this.data = data;\\n}\\n\\nQR8bitByte.prototype = {\\n  getLength: function getLength(buffer) {\\n    return this.data.length;\\n  },\\n  write: function write(buffer) {\\n    for (var i = 0; i < this.data.length; i++) {\\n      // not JIS ...\\n      buffer.put(this.data.charCodeAt(i), 8);\\n    }\\n  }\\n};\\nmodule.exports = QR8bitByte;\",\"// ErrorCorrectLevel\\nvar ECL = require('./ErrorCorrectLevel');\\n\\nfunction QRRSBlock(totalCount, dataCount) {\\n  this.totalCount = totalCount;\\n  this.dataCount = dataCount;\\n}\\n\\nQRRSBlock.RS_BLOCK_TABLE = [// L\\n// M\\n// Q\\n// H\\n// 1\\n[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], // 2\\n[1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], // 3\\n[1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], // 4\\t\\t\\n[1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], // 5\\n[1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], // 6\\n[2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], // 7\\t\\t\\n[2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], // 8\\n[2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], // 9\\n[2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], // 10\\t\\t\\n[2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], // 11\\n[4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], // 12\\n[2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], // 13\\n[4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], // 14\\n[3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], // 15\\n[5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], // 16\\n[5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], // 17\\n[1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], // 18\\n[5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], // 19\\n[3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], // 20\\n[3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], // 21\\n[4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], // 22\\n[2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], // 23\\n[4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], // 24\\n[6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], // 25\\n[8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], // 26\\n[10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], // 27\\n[8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], // 28\\n[3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], // 29\\n[7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], // 30\\n[5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], // 31\\n[13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], // 32\\n[17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], // 33\\n[17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], // 34\\n[13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], // 35\\n[12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], // 36\\n[6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], // 37\\n[17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], // 38\\n[4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], // 39\\n[20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], // 40\\n[19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\\n\\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\\n  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\\n\\n  if (rsBlock == undefined) {\\n    throw new Error(\\\"bad rs block @ typeNumber:\\\" + typeNumber + \\\"/errorCorrectLevel:\\\" + errorCorrectLevel);\\n  }\\n\\n  var length = rsBlock.length / 3;\\n  var list = new Array();\\n\\n  for (var i = 0; i < length; i++) {\\n    var count = rsBlock[i * 3 + 0];\\n    var totalCount = rsBlock[i * 3 + 1];\\n    var dataCount = rsBlock[i * 3 + 2];\\n\\n    for (var j = 0; j < count; j++) {\\n      list.push(new QRRSBlock(totalCount, dataCount));\\n    }\\n  }\\n\\n  return list;\\n};\\n\\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\\n  switch (errorCorrectLevel) {\\n    case ECL.L:\\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\\n\\n    case ECL.M:\\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\\n\\n    case ECL.Q:\\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\\n\\n    case ECL.H:\\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\\n\\n    default:\\n      return undefined;\\n  }\\n};\\n\\nmodule.exports = QRRSBlock;\",\"function QRBitBuffer() {\\n  this.buffer = new Array();\\n  this.length = 0;\\n}\\n\\nQRBitBuffer.prototype = {\\n  get: function get(index) {\\n    var bufIndex = Math.floor(index / 8);\\n    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\\n  },\\n  put: function put(num, length) {\\n    for (var i = 0; i < length; i++) {\\n      this.putBit((num >>> length - i - 1 & 1) == 1);\\n    }\\n  },\\n  getLengthInBits: function getLengthInBits() {\\n    return this.length;\\n  },\\n  putBit: function putBit(bit) {\\n    var bufIndex = Math.floor(this.length / 8);\\n\\n    if (this.buffer.length <= bufIndex) {\\n      this.buffer.push(0);\\n    }\\n\\n    if (bit) {\\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\\n    }\\n\\n    this.length++;\\n  }\\n};\\nmodule.exports = QRBitBuffer;\",\"var Mode = require('./mode');\\n\\nvar Polynomial = require('./Polynomial');\\n\\nvar math = require('./math');\\n\\nvar QRMaskPattern = {\\n  PATTERN000: 0,\\n  PATTERN001: 1,\\n  PATTERN010: 2,\\n  PATTERN011: 3,\\n  PATTERN100: 4,\\n  PATTERN101: 5,\\n  PATTERN110: 6,\\n  PATTERN111: 7\\n};\\nvar QRUtil = {\\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\\n  G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\\n  G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\\n  G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\\n  getBCHTypeInfo: function getBCHTypeInfo(data) {\\n    var d = data << 10;\\n\\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\\n      d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\\n    }\\n\\n    return (data << 10 | d) ^ QRUtil.G15_MASK;\\n  },\\n  getBCHTypeNumber: function getBCHTypeNumber(data) {\\n    var d = data << 12;\\n\\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\\n      d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\\n    }\\n\\n    return data << 12 | d;\\n  },\\n  getBCHDigit: function getBCHDigit(data) {\\n    var digit = 0;\\n\\n    while (data != 0) {\\n      digit++;\\n      data >>>= 1;\\n    }\\n\\n    return digit;\\n  },\\n  getPatternPosition: function getPatternPosition(typeNumber) {\\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\\n  },\\n  getMask: function getMask(maskPattern, i, j) {\\n    switch (maskPattern) {\\n      case QRMaskPattern.PATTERN000:\\n        return (i + j) % 2 == 0;\\n\\n      case QRMaskPattern.PATTERN001:\\n        return i % 2 == 0;\\n\\n      case QRMaskPattern.PATTERN010:\\n        return j % 3 == 0;\\n\\n      case QRMaskPattern.PATTERN011:\\n        return (i + j) % 3 == 0;\\n\\n      case QRMaskPattern.PATTERN100:\\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\\n\\n      case QRMaskPattern.PATTERN101:\\n        return i * j % 2 + i * j % 3 == 0;\\n\\n      case QRMaskPattern.PATTERN110:\\n        return (i * j % 2 + i * j % 3) % 2 == 0;\\n\\n      case QRMaskPattern.PATTERN111:\\n        return (i * j % 3 + (i + j) % 2) % 2 == 0;\\n\\n      default:\\n        throw new Error(\\\"bad maskPattern:\\\" + maskPattern);\\n    }\\n  },\\n  getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {\\n    var a = new Polynomial([1], 0);\\n\\n    for (var i = 0; i < errorCorrectLength; i++) {\\n      a = a.multiply(new Polynomial([1, math.gexp(i)], 0));\\n    }\\n\\n    return a;\\n  },\\n  getLengthInBits: function getLengthInBits(mode, type) {\\n    if (1 <= type && type < 10) {\\n      // 1 - 9\\n      switch (mode) {\\n        case Mode.MODE_NUMBER:\\n          return 10;\\n\\n        case Mode.MODE_ALPHA_NUM:\\n          return 9;\\n\\n        case Mode.MODE_8BIT_BYTE:\\n          return 8;\\n\\n        case Mode.MODE_KANJI:\\n          return 8;\\n\\n        default:\\n          throw new Error(\\\"mode:\\\" + mode);\\n      }\\n    } else if (type < 27) {\\n      // 10 - 26\\n      switch (mode) {\\n        case Mode.MODE_NUMBER:\\n          return 12;\\n\\n        case Mode.MODE_ALPHA_NUM:\\n          return 11;\\n\\n        case Mode.MODE_8BIT_BYTE:\\n          return 16;\\n\\n        case Mode.MODE_KANJI:\\n          return 10;\\n\\n        default:\\n          throw new Error(\\\"mode:\\\" + mode);\\n      }\\n    } else if (type < 41) {\\n      // 27 - 40\\n      switch (mode) {\\n        case Mode.MODE_NUMBER:\\n          return 14;\\n\\n        case Mode.MODE_ALPHA_NUM:\\n          return 13;\\n\\n        case Mode.MODE_8BIT_BYTE:\\n          return 16;\\n\\n        case Mode.MODE_KANJI:\\n          return 12;\\n\\n        default:\\n          throw new Error(\\\"mode:\\\" + mode);\\n      }\\n    } else {\\n      throw new Error(\\\"type:\\\" + type);\\n    }\\n  },\\n  getLostPoint: function getLostPoint(qrCode) {\\n    var moduleCount = qrCode.getModuleCount();\\n    var lostPoint = 0; // LEVEL1\\n\\n    for (var row = 0; row < moduleCount; row++) {\\n      for (var col = 0; col < moduleCount; col++) {\\n        var sameCount = 0;\\n        var dark = qrCode.isDark(row, col);\\n\\n        for (var r = -1; r <= 1; r++) {\\n          if (row + r < 0 || moduleCount <= row + r) {\\n            continue;\\n          }\\n\\n          for (var c = -1; c <= 1; c++) {\\n            if (col + c < 0 || moduleCount <= col + c) {\\n              continue;\\n            }\\n\\n            if (r == 0 && c == 0) {\\n              continue;\\n            }\\n\\n            if (dark == qrCode.isDark(row + r, col + c)) {\\n              sameCount++;\\n            }\\n          }\\n        }\\n\\n        if (sameCount > 5) {\\n          lostPoint += 3 + sameCount - 5;\\n        }\\n      }\\n    } // LEVEL2\\n\\n\\n    for (var row = 0; row < moduleCount - 1; row++) {\\n      for (var col = 0; col < moduleCount - 1; col++) {\\n        var count = 0;\\n        if (qrCode.isDark(row, col)) count++;\\n        if (qrCode.isDark(row + 1, col)) count++;\\n        if (qrCode.isDark(row, col + 1)) count++;\\n        if (qrCode.isDark(row + 1, col + 1)) count++;\\n\\n        if (count == 0 || count == 4) {\\n          lostPoint += 3;\\n        }\\n      }\\n    } // LEVEL3\\n\\n\\n    for (var row = 0; row < moduleCount; row++) {\\n      for (var col = 0; col < moduleCount - 6; col++) {\\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\\n          lostPoint += 40;\\n        }\\n      }\\n    }\\n\\n    for (var col = 0; col < moduleCount; col++) {\\n      for (var row = 0; row < moduleCount - 6; row++) {\\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\\n          lostPoint += 40;\\n        }\\n      }\\n    } // LEVEL4\\n\\n\\n    var darkCount = 0;\\n\\n    for (var col = 0; col < moduleCount; col++) {\\n      for (var row = 0; row < moduleCount; row++) {\\n        if (qrCode.isDark(row, col)) {\\n          darkCount++;\\n        }\\n      }\\n    }\\n\\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\\n    lostPoint += ratio * 10;\\n    return lostPoint;\\n  }\\n};\\nmodule.exports = QRUtil;\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{1889:function(t,e,r){\"use strict\";function n(t){return(n=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function o(){return(o=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}).apply(this,arguments)}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(r,!0).forEach(function(e){m(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(r).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}function u(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}function s(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function h(t,e,r){return e&&l(t.prototype,e),r&&l(t,r),t}function f(t,e){return!e||\"object\"!==n(e)&&\"function\"!==typeof e?g(t):e}function c(t){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function g(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function d(t,e){if(\"function\"!==typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function m(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var v=r(0),y=(r(18),r(3158)),C=r(2239);function w(t){for(var e=\"\",r=0;r<t.length;r++){var n=t.charCodeAt(r);n<128?e+=String.fromCharCode(n):n<2048?(e+=String.fromCharCode(192|n>>6),e+=String.fromCharCode(128|63&n)):n<55296||n>=57344?(e+=String.fromCharCode(224|n>>12),e+=String.fromCharCode(128|n>>6&63),e+=String.fromCharCode(128|63&n)):(r++,n=65536+((1023&n)<<10|1023&t.charCodeAt(r)),e+=String.fromCharCode(240|n>>18),e+=String.fromCharCode(128|n>>12&63),e+=String.fromCharCode(128|n>>6&63),e+=String.fromCharCode(128|63&n))}return e}var b={size:128,level:\"L\",bgColor:\"#FFFFFF\",fgColor:\"#000000\",includeMargin:!1},E=4,L=.1;function P(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=[];return t.forEach(function(t,n){var o=null;t.forEach(function(i,a){if(!i&&null!==o)return r.push(\"M\".concat(o+e,\" \").concat(n+e,\"h\").concat(a-o,\"v1H\").concat(o+e,\"z\")),void(o=null);if(a!==t.length-1)i&&null===o&&(o=a);else{if(!i)return;null===o?r.push(\"M\".concat(a+e,\",\").concat(n+e,\" h1v1H\").concat(a+e,\"z\")):r.push(\"M\".concat(o+e,\",\").concat(n+e,\" h\").concat(a+1-o,\"v1H\").concat(o+e,\"z\"))}})}),r.join(\"\")}function B(t,e){return t.slice().map(function(t,r){return r<e.y||r>=e.y+e.h?t:t.map(function(t,r){return(r<e.x||r>=e.x+e.w)&&t})})}function _(t,e){var r=t.imageSettings,n=t.size,o=t.includeMargin;if(null==r)return null;var i=o?E:0,a=e.length+2*i,u=Math.floor(n*L),s=a/n,l=(r.width||u)*s,h=(r.height||u)*s,f=null==r.x?e.length/2-l/2:r.x*s,c=null==r.y?e.length/2-h/2:r.y*s,g=null;if(r.excavate){var d=Math.floor(f),p=Math.floor(c);g={x:d,y:p,w:Math.ceil(l+f-d),h:Math.ceil(h+c-p)}}return{x:f,y:c,h:h,w:l,excavation:g}}var D=function(){try{(new Path2D).addPath(new Path2D)}catch(t){return!1}return!0}(),O=function(t){function e(){var t,r;s(this,e);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return m(g(r=f(this,(t=c(e)).call.apply(t,[this].concat(o)))),\"_canvas\",void 0),m(g(r),\"_image\",void 0),m(g(r),\"state\",{imgLoaded:!1}),m(g(r),\"handleImageLoad\",function(){r.setState({imgLoaded:!0})}),r}return d(e,v.PureComponent),h(e,[{key:\"componentDidMount\",value:function(){this._image&&this._image.complete&&this.handleImageLoad(),this.update()}},{key:\"componentWillReceiveProps\",value:function(t){var e,r;(null===(e=this.props.imageSettings)||void 0===e?void 0:e.src)!==(null===(r=t.imageSettings)||void 0===r?void 0:r.src)&&this.setState({imgLoaded:!1})}},{key:\"componentDidUpdate\",value:function(){this.update()}},{key:\"update\",value:function(){var t=this.props,e=t.value,r=t.size,n=t.level,o=t.bgColor,i=t.fgColor,a=t.includeMargin,u=t.imageSettings,s=new y(-1,C[n]);if(s.addData(w(e)),s.make(),null!=this._canvas){var l=this._canvas,h=l.getContext(\"2d\");if(!h)return;var f=s.modules;if(null===f)return;var c=a?E:0,g=f.length+2*c,d=_(this.props,f);null!=u&&null!=d&&null!=d.excavation&&(f=B(f,d.excavation));var p=window.devicePixelRatio||1;l.height=l.width=r*p;var m=r/g*p;h.scale(m,m),h.fillStyle=o,h.fillRect(0,0,g,g),h.fillStyle=i,D?h.fill(new Path2D(P(f,c))):f.forEach(function(t,e){t.forEach(function(t,r){t&&h.fillRect(r+c,e+c,1,1)})}),this.state.imgLoaded&&this._image&&null!=d&&h.drawImage(this._image,d.x+c,d.y+c,d.w,d.h)}}},{key:\"render\",value:function(){var t=this,e=this.props,r=(e.value,e.size),n=(e.level,e.bgColor,e.fgColor,e.style),i=(e.includeMargin,e.imageSettings),s=u(e,[\"value\",\"size\",\"level\",\"bgColor\",\"fgColor\",\"style\",\"includeMargin\",\"imageSettings\"]),l=a({height:r,width:r},n),h=null,f=i&&i.src;return null!=i&&null!=f&&(h=v.createElement(\"img\",{src:f,style:{display:\"none\"},onLoad:this.handleImageLoad,ref:function(e){return t._image=e}})),v.createElement(v.Fragment,null,v.createElement(\"canvas\",o({style:l,height:r,width:r,ref:function(e){return t._canvas=e}},s)),h)}}]),e}();m(O,\"defaultProps\",b);var A=function(t){function e(){return s(this,e),f(this,c(e).apply(this,arguments))}return d(e,v.PureComponent),h(e,[{key:\"render\",value:function(){var t=this.props,e=t.value,r=t.size,n=t.level,i=t.bgColor,a=t.fgColor,s=t.includeMargin,l=t.imageSettings,h=u(t,[\"value\",\"size\",\"level\",\"bgColor\",\"fgColor\",\"includeMargin\",\"imageSettings\"]),f=new y(-1,C[n]);f.addData(w(e)),f.make();var c=f.modules;if(null===c)return null;var g=s?E:0,d=c.length+2*g,p=_(this.props,c),m=null;null!=l&&null!=p&&(null!=p.excavation&&(c=B(c,p.excavation)),m=v.createElement(\"image\",{xlinkHref:l.src,height:p.h,width:p.w,x:p.x+g,y:p.y+g,preserveAspectRatio:\"none\"}));var b=P(c,g);return v.createElement(\"svg\",o({shapeRendering:\"crispEdges\",height:r,width:r,viewBox:\"0 0 \".concat(d,\" \").concat(d)},h),v.createElement(\"path\",{fill:i,d:\"M0,0 h\".concat(d,\"v\").concat(d,\"H0z\")}),v.createElement(\"path\",{fill:a,d:b}),m)}}]),e}();m(A,\"defaultProps\",b);var M=function(t){var e=t.renderAs,r=u(t,[\"renderAs\"]),n=\"svg\"===e?A:O;return v.createElement(n,r)};M.defaultProps=a({renderAs:\"canvas\"},b),t.exports=M},2238:function(t,e){t.exports={MODE_NUMBER:1,MODE_ALPHA_NUM:2,MODE_8BIT_BYTE:4,MODE_KANJI:8}},2239:function(t,e){t.exports={L:1,M:0,Q:3,H:2}},2240:function(t,e,r){var n=r(2241);function o(t,e){if(void 0==t.length)throw new Error(t.length+\"/\"+e);for(var r=0;r<t.length&&0==t[r];)r++;this.num=new Array(t.length-r+e);for(var n=0;n<t.length-r;n++)this.num[n]=t[n+r]}o.prototype={get:function(t){return this.num[t]},getLength:function(){return this.num.length},multiply:function(t){for(var e=new Array(this.getLength()+t.getLength()-1),r=0;r<this.getLength();r++)for(var i=0;i<t.getLength();i++)e[r+i]^=n.gexp(n.glog(this.get(r))+n.glog(t.get(i)));return new o(e,0)},mod:function(t){if(this.getLength()-t.getLength()<0)return this;for(var e=n.glog(this.get(0))-n.glog(t.get(0)),r=new Array(this.getLength()),i=0;i<this.getLength();i++)r[i]=this.get(i);for(i=0;i<t.getLength();i++)r[i]^=n.gexp(n.glog(t.get(i))+e);return new o(r,0).mod(t)}},t.exports=o},2241:function(t,e){for(var r={glog:function(t){if(t<1)throw new Error(\"glog(\"+t+\")\");return r.LOG_TABLE[t]},gexp:function(t){for(;t<0;)t+=255;for(;t>=256;)t-=255;return r.EXP_TABLE[t]},EXP_TABLE:new Array(256),LOG_TABLE:new Array(256)},n=0;n<8;n++)r.EXP_TABLE[n]=1<<n;for(n=8;n<256;n++)r.EXP_TABLE[n]=r.EXP_TABLE[n-4]^r.EXP_TABLE[n-5]^r.EXP_TABLE[n-6]^r.EXP_TABLE[n-8];for(n=0;n<255;n++)r.LOG_TABLE[r.EXP_TABLE[n]]=n;t.exports=r},3158:function(t,e,r){var n=r(3159),o=r(3160),i=r(3161),a=r(3162),u=r(2240);function s(t,e){this.typeNumber=t,this.errorCorrectLevel=e,this.modules=null,this.moduleCount=0,this.dataCache=null,this.dataList=[]}var l=s.prototype;l.addData=function(t){var e=new n(t);this.dataList.push(e),this.dataCache=null},l.isDark=function(t,e){if(t<0||this.moduleCount<=t||e<0||this.moduleCount<=e)throw new Error(t+\",\"+e);return this.modules[t][e]},l.getModuleCount=function(){return this.moduleCount},l.make=function(){if(this.typeNumber<1){var t=1;for(t=1;t<40;t++){for(var e=o.getRSBlocks(t,this.errorCorrectLevel),r=new i,n=0,u=0;u<e.length;u++)n+=e[u].dataCount;for(u=0;u<this.dataList.length;u++){var s=this.dataList[u];r.put(s.mode,4),r.put(s.getLength(),a.getLengthInBits(s.mode,t)),s.write(r)}if(r.getLengthInBits()<=8*n)break}this.typeNumber=t}this.makeImpl(!1,this.getBestMaskPattern())},l.makeImpl=function(t,e){this.moduleCount=4*this.typeNumber+17,this.modules=new Array(this.moduleCount);for(var r=0;r<this.moduleCount;r++){this.modules[r]=new Array(this.moduleCount);for(var n=0;n<this.moduleCount;n++)this.modules[r][n]=null}this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(this.moduleCount-7,0),this.setupPositionProbePattern(0,this.moduleCount-7),this.setupPositionAdjustPattern(),this.setupTimingPattern(),this.setupTypeInfo(t,e),this.typeNumber>=7&&this.setupTypeNumber(t),null==this.dataCache&&(this.dataCache=s.createData(this.typeNumber,this.errorCorrectLevel,this.dataList)),this.mapData(this.dataCache,e)},l.setupPositionProbePattern=function(t,e){for(var r=-1;r<=7;r++)if(!(t+r<=-1||this.moduleCount<=t+r))for(var n=-1;n<=7;n++)e+n<=-1||this.moduleCount<=e+n||(this.modules[t+r][e+n]=0<=r&&r<=6&&(0==n||6==n)||0<=n&&n<=6&&(0==r||6==r)||2<=r&&r<=4&&2<=n&&n<=4)},l.getBestMaskPattern=function(){for(var t=0,e=0,r=0;r<8;r++){this.makeImpl(!0,r);var n=a.getLostPoint(this);(0==r||t>n)&&(t=n,e=r)}return e},l.createMovieClip=function(t,e,r){var n=t.createEmptyMovieClip(e,r);this.make();for(var o=0;o<this.modules.length;o++)for(var i=1*o,a=0;a<this.modules[o].length;a++){var u=1*a;this.modules[o][a]&&(n.beginFill(0,100),n.moveTo(u,i),n.lineTo(u+1,i),n.lineTo(u+1,i+1),n.lineTo(u,i+1),n.endFill())}return n},l.setupTimingPattern=function(){for(var t=8;t<this.moduleCount-8;t++)null==this.modules[t][6]&&(this.modules[t][6]=t%2==0);for(var e=8;e<this.moduleCount-8;e++)null==this.modules[6][e]&&(this.modules[6][e]=e%2==0)},l.setupPositionAdjustPattern=function(){for(var t=a.getPatternPosition(this.typeNumber),e=0;e<t.length;e++)for(var r=0;r<t.length;r++){var n=t[e],o=t[r];if(null==this.modules[n][o])for(var i=-2;i<=2;i++)for(var u=-2;u<=2;u++)this.modules[n+i][o+u]=-2==i||2==i||-2==u||2==u||0==i&&0==u}},l.setupTypeNumber=function(t){for(var e=a.getBCHTypeNumber(this.typeNumber),r=0;r<18;r++){var n=!t&&1==(e>>r&1);this.modules[Math.floor(r/3)][r%3+this.moduleCount-8-3]=n}for(r=0;r<18;r++){n=!t&&1==(e>>r&1);this.modules[r%3+this.moduleCount-8-3][Math.floor(r/3)]=n}},l.setupTypeInfo=function(t,e){for(var r=this.errorCorrectLevel<<3|e,n=a.getBCHTypeInfo(r),o=0;o<15;o++){var i=!t&&1==(n>>o&1);o<6?this.modules[o][8]=i:o<8?this.modules[o+1][8]=i:this.modules[this.moduleCount-15+o][8]=i}for(o=0;o<15;o++){i=!t&&1==(n>>o&1);o<8?this.modules[8][this.moduleCount-o-1]=i:o<9?this.modules[8][15-o-1+1]=i:this.modules[8][15-o-1]=i}this.modules[this.moduleCount-8][8]=!t},l.mapData=function(t,e){for(var r=-1,n=this.moduleCount-1,o=7,i=0,u=this.moduleCount-1;u>0;u-=2)for(6==u&&u--;;){for(var s=0;s<2;s++)if(null==this.modules[n][u-s]){var l=!1;i<t.length&&(l=1==(t[i]>>>o&1)),a.getMask(e,n,u-s)&&(l=!l),this.modules[n][u-s]=l,-1==--o&&(i++,o=7)}if((n+=r)<0||this.moduleCount<=n){n-=r,r=-r;break}}},s.PAD0=236,s.PAD1=17,s.createData=function(t,e,r){for(var n=o.getRSBlocks(t,e),u=new i,l=0;l<r.length;l++){var h=r[l];u.put(h.mode,4),u.put(h.getLength(),a.getLengthInBits(h.mode,t)),h.write(u)}var f=0;for(l=0;l<n.length;l++)f+=n[l].dataCount;if(u.getLengthInBits()>8*f)throw new Error(\"code length overflow. (\"+u.getLengthInBits()+\">\"+8*f+\")\");for(u.getLengthInBits()+4<=8*f&&u.put(0,4);u.getLengthInBits()%8!=0;)u.putBit(!1);for(;!(u.getLengthInBits()>=8*f)&&(u.put(s.PAD0,8),!(u.getLengthInBits()>=8*f));)u.put(s.PAD1,8);return s.createBytes(u,n)},s.createBytes=function(t,e){for(var r=0,n=0,o=0,i=new Array(e.length),s=new Array(e.length),l=0;l<e.length;l++){var h=e[l].dataCount,f=e[l].totalCount-h;n=Math.max(n,h),o=Math.max(o,f),i[l]=new Array(h);for(var c=0;c<i[l].length;c++)i[l][c]=255&t.buffer[c+r];r+=h;var g=a.getErrorCorrectPolynomial(f),d=new u(i[l],g.getLength()-1).mod(g);s[l]=new Array(g.getLength()-1);for(c=0;c<s[l].length;c++){var p=c+d.getLength()-s[l].length;s[l][c]=p>=0?d.get(p):0}}var m=0;for(c=0;c<e.length;c++)m+=e[c].totalCount;var v=new Array(m),y=0;for(c=0;c<n;c++)for(l=0;l<e.length;l++)c<i[l].length&&(v[y++]=i[l][c]);for(c=0;c<o;c++)for(l=0;l<e.length;l++)c<s[l].length&&(v[y++]=s[l][c]);return v},t.exports=s},3159:function(t,e,r){var n=r(2238);function o(t){this.mode=n.MODE_8BIT_BYTE,this.data=t}o.prototype={getLength:function(t){return this.data.length},write:function(t){for(var e=0;e<this.data.length;e++)t.put(this.data.charCodeAt(e),8)}},t.exports=o},3160:function(t,e,r){var n=r(2239);function o(t,e){this.totalCount=t,this.dataCount=e}o.RS_BLOCK_TABLE=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]],o.getRSBlocks=function(t,e){var r=o.getRsBlockTable(t,e);if(void 0==r)throw new Error(\"bad rs block @ typeNumber:\"+t+\"/errorCorrectLevel:\"+e);for(var n=r.length/3,i=new Array,a=0;a<n;a++)for(var u=r[3*a+0],s=r[3*a+1],l=r[3*a+2],h=0;h<u;h++)i.push(new o(s,l));return i},o.getRsBlockTable=function(t,e){switch(e){case n.L:return o.RS_BLOCK_TABLE[4*(t-1)+0];case n.M:return o.RS_BLOCK_TABLE[4*(t-1)+1];case n.Q:return o.RS_BLOCK_TABLE[4*(t-1)+2];case n.H:return o.RS_BLOCK_TABLE[4*(t-1)+3];default:return}},t.exports=o},3161:function(t,e){function r(){this.buffer=new Array,this.length=0}r.prototype={get:function(t){var e=Math.floor(t/8);return 1==(this.buffer[e]>>>7-t%8&1)},put:function(t,e){for(var r=0;r<e;r++)this.putBit(1==(t>>>e-r-1&1))},getLengthInBits:function(){return this.length},putBit:function(t){var e=Math.floor(this.length/8);this.buffer.length<=e&&this.buffer.push(0),t&&(this.buffer[e]|=128>>>this.length%8),this.length++}},t.exports=r},3162:function(t,e,r){var n=r(2238),o=r(2240),i=r(2241),a=0,u=1,s=2,l=3,h=4,f=5,c=6,g=7,d={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:1335,G18:7973,G15_MASK:21522,getBCHTypeInfo:function(t){for(var e=t<<10;d.getBCHDigit(e)-d.getBCHDigit(d.G15)>=0;)e^=d.G15<<d.getBCHDigit(e)-d.getBCHDigit(d.G15);return(t<<10|e)^d.G15_MASK},getBCHTypeNumber:function(t){for(var e=t<<12;d.getBCHDigit(e)-d.getBCHDigit(d.G18)>=0;)e^=d.G18<<d.getBCHDigit(e)-d.getBCHDigit(d.G18);return t<<12|e},getBCHDigit:function(t){for(var e=0;0!=t;)e++,t>>>=1;return e},getPatternPosition:function(t){return d.PATTERN_POSITION_TABLE[t-1]},getMask:function(t,e,r){switch(t){case a:return(e+r)%2==0;case u:return e%2==0;case s:return r%3==0;case l:return(e+r)%3==0;case h:return(Math.floor(e/2)+Math.floor(r/3))%2==0;case f:return e*r%2+e*r%3==0;case c:return(e*r%2+e*r%3)%2==0;case g:return(e*r%3+(e+r)%2)%2==0;default:throw new Error(\"bad maskPattern:\"+t)}},getErrorCorrectPolynomial:function(t){for(var e=new o([1],0),r=0;r<t;r++)e=e.multiply(new o([1,i.gexp(r)],0));return e},getLengthInBits:function(t,e){if(1<=e&&e<10)switch(t){case n.MODE_NUMBER:return 10;case n.MODE_ALPHA_NUM:return 9;case n.MODE_8BIT_BYTE:case n.MODE_KANJI:return 8;default:throw new Error(\"mode:\"+t)}else if(e<27)switch(t){case n.MODE_NUMBER:return 12;case n.MODE_ALPHA_NUM:return 11;case n.MODE_8BIT_BYTE:return 16;case n.MODE_KANJI:return 10;default:throw new Error(\"mode:\"+t)}else{if(!(e<41))throw new Error(\"type:\"+e);switch(t){case n.MODE_NUMBER:return 14;case n.MODE_ALPHA_NUM:return 13;case n.MODE_8BIT_BYTE:return 16;case n.MODE_KANJI:return 12;default:throw new Error(\"mode:\"+t)}}},getLostPoint:function(t){for(var e=t.getModuleCount(),r=0,n=0;n<e;n++)for(var o=0;o<e;o++){for(var i=0,a=t.isDark(n,o),u=-1;u<=1;u++)if(!(n+u<0||e<=n+u))for(var s=-1;s<=1;s++)o+s<0||e<=o+s||0==u&&0==s||a==t.isDark(n+u,o+s)&&i++;i>5&&(r+=3+i-5)}for(n=0;n<e-1;n++)for(o=0;o<e-1;o++){var l=0;t.isDark(n,o)&&l++,t.isDark(n+1,o)&&l++,t.isDark(n,o+1)&&l++,t.isDark(n+1,o+1)&&l++,0!=l&&4!=l||(r+=3)}for(n=0;n<e;n++)for(o=0;o<e-6;o++)t.isDark(n,o)&&!t.isDark(n,o+1)&&t.isDark(n,o+2)&&t.isDark(n,o+3)&&t.isDark(n,o+4)&&!t.isDark(n,o+5)&&t.isDark(n,o+6)&&(r+=40);for(o=0;o<e;o++)for(n=0;n<e-6;n++)t.isDark(n,o)&&!t.isDark(n+1,o)&&t.isDark(n+2,o)&&t.isDark(n+3,o)&&t.isDark(n+4,o)&&!t.isDark(n+5,o)&&t.isDark(n+6,o)&&(r+=40);var h=0;for(o=0;o<e;o++)for(n=0;n<e;n++)t.isDark(n,o)&&h++;return r+=10*(Math.abs(100*h/e/e-50)/5)}};t.exports=d}}]);","extractedComments":[]}