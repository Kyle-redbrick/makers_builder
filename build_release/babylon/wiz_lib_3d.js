const BabylonConstant={EDITOR_CAMERA_FOCUS_DISTANCE:30,GAMEMODE:{PLAY:"play",EDIT:"edit",PREVIEW:"preview"},GIZMO:{POSITION:"position",ROTATION:"rotation",SCALE:"scale"},GAMEOBJECT:{EMPTY:"empty",CAMERA:"camera",LIGHT:"light",SKYBOX:"skybox",MESH:"mesh",GUI:"gui",TEXTURE_GUI:"textureGui"},CAMERA:{UNIVERSAL:"universal",ARCROTATE:"arcRotate",FOLLOW:"follow"},LIGHT:{POINT:"point",DIRECTIONAL:"directional",SPOT:"spot",HEMISPHERIC:"hemispheric"},MESH:{BOX:"box",GROUND:"ground",SPHERE:"sphere",OBJ:"obj"},GUI:{BUTTON:"button",TEXT:"text"},TEXTURE_GUI:{},EMPTY:{VIRTUAL_JOYSTICK:"virtualJoystick"},PROPERTY_ID:{NAME:"name",POSITION:"position",ROTATION:"rotation",SCALE:"scale",DIRECTION:"direction",SIZE:"size",WIDTH:"width",HEIGHT:"height",TEXT:"text",INTENSITY:"intensity",RANGE:"range",CODE:"code",LOCK:"isLocked",PARENT_ID:"parentId",TARGET_ID:"targetId",IS_ACTIVE_CAMERA:"isActiveCamera"}};window.BabylonConstant=BabylonConstant;const ErrorType={TYPEERROR:"TYPERROR",PARAMETER_INVALID_TYPE:"PARAMETER_INVALID_TYPE",PARAMETER_UNDEFINED:"PARAMETER_UNDEFINED",PARAMETER_NOT_FOUND:"PARAMETER_NOT_FOUND"};function getApis(e){return{enableDefaultControl:e.enableDefaultControl,disableDefaultControl:e.disableDefaultControl,getVirtualJoystick:e.getVirtualJoystick,setSpeedX:e.setSpeedX,setSpeedY:e.setSpeedY,setSpeedZ:e.setSpeedZ,getSpeedX:e.getSpeedX,getSpeedY:e.getSpeedY,getSpeedZ:e.getSpeedZ,rotateX:e.rotateX,rotateY:e.rotateY,rotateZ:e.rotateZ,goX:e.goX,goY:e.goY,goZ:e.goZ,onFrame:e.onFrame,sendSignal:e.sendSignal,onSignal:e.onSignal,onKey:e.onKey,onKeyUp:e.onKeyUp,onCollide:e.onCollide,onCollideOnce:e.onCollideOnce,onOverlap:e.onOverlap,onOverlapOnce:e.onOverlapOnce,changeScene:e.changeScene,onClick:e.onClick,wait:e.wait,kill:e.kill,revive:e.revive,clone:e.clone,input:e.input,setScale:e.setObjectScale,getScale:e.getObjectScale,setUiText:e.setUiText,setTextColor:e.setTextColor,getTextColor:e.getTextColor,setVisibility:e.setVisibility,show:e.show,hide:e.hide,enablePhysics:e.enablePhysics,enablePhysicsParams:e.enablePhysicsParams,setMass:e.setMass,setBounce:e.setBounce,setFriction:e.setFriction,getMass:e.getMass,getBounce:e.getBounce,getFriction:e.getFriction,setVelocityX:e.setVelocityX,setVelocityY:e.setVelocityY,setVelocityZ:e.setVelocityZ,getVelocityX:e.getVelocityX,getVelocityY:e.getVelocityY,getVelocityZ:e.getVelocityZ,setAngularVelocityX:e.setAngularVelocityX,setAngularVelocityY:e.setAngularVelocityY,setAngularVelocityZ:e.setAngularVelocityZ,getAngularVelocityX:e.getAngularVelocityX,getAngularVelocityY:e.getAngularVelocityY,getAngularVelocityZ:e.getAngularVelocityZ,playSound:e.playSound,restartSound:e.restartSound,resumeSound:e.resumeSound,stopAllSounds:e.stopAllSounds,stopSound:e.stopSound,pauseSound:e.pauseSound,setGlobalSoundVolume:e.setGlobalSoundVolume,addGlobalSoundVolume:e.addGlobalSoundVolume,getGlobalSoundVolume:e.getGlobalSoundVolume,setSoundVolume:e.setSoundVolume,addSoundVolume:e.addSoundVolume,getSoundVolume:e.getSoundVolume,getDeltaTime:e.getDeltaTime,startTimer:e.startTimer,pauseTimer:e.pauseTimer,resumeTimer:e.resumeTimer,resetTimer:e.resetTimer,getTimer:e.getTimer,global:e.game.global,getObject:e.getObject,geteObjects:e.getObjects,setTarget:e.setTarget,setBillboard:e.setBillboard}}function setGameApiFunctions(e){e.global={},e.HTML_Colors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",goldenrod:"#daa520",gold:"#ffd700",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavenderblush:"#fff0f5",lavender:"#e6e6fa",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},e.isInputVisible=!1,window.onkeydown=function(t){e.isInputVisible||t.preventDefault()},window.onkeypress=function(t){e.isInputVisible||t.preventDefault()},e.showInputText=(t,o)=>{document.getElementsByClassName("InputBox--title")[0].innerHTML=t,document.getElementsByClassName("InputBoxContainer")[0].style.display="block";var n=document.getElementsByClassName("InputBox--input")[0];n.focus(),n.select(),e.inputCallback=o,e.isInputVisible=!0},onInputKeyDown=e=>{13===e.keyCode&&(e.stopPropagation(),onclickInputConfirm())},onInputCancel=()=>{document.getElementsByClassName("InputBoxContainer")[0].style.display="none",e.inputCallback(""),e.isInputVisible=!1},onInputConfirm=()=>{var t=document.getElementsByClassName("InputBox--input")[0].value;e.inputCallback(t),document.getElementsByClassName("InputBoxContainer")[0].style.display="none",document.getElementsByClassName("InputBox--input")[0].value="",e.isInputVisible=!1}}function setSceneApiFunctions(e){e.keyDownCallbacks={},e.keyUpCallbacks={},e.getVirtualJoystick=o=>o?(e.leftVirtualJoystick||(e.leftVirtualJoystick=new t(!0)),e.leftVirtualJoystick):(e.rightVirtualJoystick||(e.rightVirtualJoystick=new t(!1)),e.rightVirtualJoystick);class t{constructor(e){this.isLeft=e,this.joystick=new BABYLON.VirtualJoystick(e)}isPressed(){return this.joystick.pressed}getDeltaPositionX(){return this.joystick.deltaPosition.x}getDeltaPositionY(){return this.joystick.deltaPosition.y}}e.sendSignal=t=>{for(const o in e.gameObjects)e.gameObjects[o].signalQueue.push(t)},e.setKeyDownCallback=(t,o,n)=>{if(t in e.keyDownCallbacks||(e.keyDownCallbacks[t]={}),e.keyDownCallbacks[t][o]=n,!e.keyDownAction){const t=t=>{if(!(t.sourceEvent.key in e.keyDownCallbacks))return;const o=e.keyDownCallbacks[t.sourceEvent.key];for(const t in o)e.gameObjects[t]&&!e.gameObjects[t].killed&&o[t]()};e.keyDownAction=e.getActionManager().registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyDownTrigger,t))}},e.setKeyUpCallback=(t,o,n)=>{if(t in e.keyUpCallbacks||(e.keyUpCallbacks[t]={}),e.keyUpCallbacks[t][o]=n,!e.keyUpAction){const t=t=>{if(!(t.sourceEvent.key in e.keyUpCallbacks))return;const o=e.keyUpCallbacks[t.sourceEvent.key];for(const t in o)e.gameObjects[t]&&!e.gameObjects[t].killed&&o[t]()};e.keyUpAction=e.getActionManager().registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyUpTrigger,t))}},e.stopSounds=()=>{if(0!==e.getSoundCount())for(const t in e.sounds)e.sounds[t].stop()},e.addSoundVolume=t=>{e.setSoundVolume(e.getSoundVolume()+t)}}function setApiFunctions(e){e.game.errorPosted=!1,e.handleError=(t,o)=>{if(e.game.errorPosted)return;e.game.errorPosted=!0;const n=e.game.getErrorHandler();n&&n(t,{sceneName:e.scene.name,gameObjectName:e.name,api:o})},e.enableDefaultControl=(t,o)=>{if(e instanceof BabylonMesh){if(t&&isNaN(t))return void e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"rotationSpeed");if(o&&isNaN(o))return void e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"maxJump");t&&e.setControlOption("rotationSpeed",t),o&&e.setControlOption("maxJump",o),e.attachDefaultControl(!0)}},e.disableDefaultControl=()=>{e instanceof BabylonMesh&&e.attachDefaultControl(!1)},e.getVirtualJoystick=t=>e.scene.getVirtualJoystick(t),e.setSpeedX=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setSpeedX"):e.setSpeed(t))},e.setSpeedY=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setSpeedY"):e.setSpeed(void 0,t))},e.setSpeedZ=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setSpeedZ"):e.setSpeed(void 0,void 0,t))},e.getSpeedX=()=>{if(e instanceof BabylonMesh)return e.getSpeed("x")},e.getSpeedY=()=>{if(e instanceof BabylonMesh)return e.getSpeed("y")},e.getSpeedZ=()=>{if(e instanceof BabylonMesh)return e.getSpeed("z")},e.rotateX=t=>{isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"rotateX"):(e instanceof BabylonMesh||e instanceof BabylonTextureGui)&&e.gameObject.rotate(BABYLON.Axis.X,t)},e.rotateY=t=>{isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"rotateY"):(e instanceof BabylonMesh||e instanceof BabylonTextureGui)&&e.gameObject.rotate(BABYLON.Axis.Y,t)},e.rotateZ=t=>{isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"rotateZ"):(e instanceof BabylonMesh||e instanceof BabylonTextureGui)&&e.gameObject.rotate(BABYLON.Axis.Z,t)},e.goX=t=>{e.gameObject.position&&(void 0!==t?isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"goX"):e.gameObject.position.x+=t:e.handleError(ErrorType.PARAMETER_UNDEFINED,"goX"))},e.goY=t=>{e.gameObject.position&&(void 0!==t?isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"goY"):e.gameObject.position.y+=t:e.handleError(ErrorType.PARAMETER_UNDEFINED,"goY"))},e.goZ=t=>{e.gameObject.position&&(void 0!==t?isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"goZ"):e.gameObject.position.z+=t:e.handleError(ErrorType.PARAMETER_UNDEFINED,"goZ"))},e.onFrame=t=>{e.scene.addBeforeRenderObservable(t)},e.sendSignal=t=>{void 0!==t?e.scene.sendSignal(t):e.handleError(ErrorType.PARAMETER_UNDEFINED,"sendSignal")},e.onSignal=(t,o)=>{e.signalReceiver[t]=o},e.onKey=(t,o)=>{if(void 0===t||void 0===o)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"onKey");const n=e.getBabylonKey(t);e.scene.setKeyDownCallback(n,e.id,o)},e.onKeyUp=(t,o)=>{if(void 0===t||void 0===o)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"onKeyUp");const n=e.getBabylonKey(t);e.scene.setKeyUpCallback(n,e.id,o)},e.getBabylonKey=e=>{switch(e){case"left":return"ArrowLeft";case"right":return"ArrowRight";case"up":return"ArrowUp";case"down":return"ArrowDown";case"space":return" ";case"esc":return"Escape";default:return e}},e.onCollide=(t,o)=>{if(!(e instanceof BabylonMesh))return;if(void 0===t||void 0===o)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"onCollide");const n=e.scene.getGameObjectsWithName(t);return e.registerOnPhysicsCollide(n,o)},e.onCollideOnce=(t,o)=>{if(!(e instanceof BabylonMesh))return;if(void 0===t||void 0===o)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"onCollideOnce");const n=e.scene.getGameObjectsWithName(t),a=()=>{o(),e.unregisterOnPhysicsCollide(n,a)};return e.registerOnPhysicsCollide(n,a)},e.onOverlap=(t,o)=>{if(!(e instanceof BabylonMesh))return;if(void 0===t||void 0===o)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"onOverlap");const n=e.scene.getGameObjectsWithName(t);e.scene.addBeforeRenderObservable((()=>{n.forEach((t=>{e.gameObject.intersectsMesh(t.gameObject,!1)&&o()}))}))},e.onOverlapOnce=(t,o)=>{if(!(e instanceof BabylonMesh))return;if(void 0===t||void 0===o)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"onOverlapOnce");const n=e.scene.getGameObjectsWithName(t);e.scene.scene.onBeforeRenderObservable.addOnce((()=>{n.forEach((t=>{e.gameObject.intersectsMesh(t.gameObject,!1)&&o()}))}))},e.changeScene=t=>{if(void 0===t)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"changeScene");e.game.changeSceneWithName(t)||e.handleError(ErrorType.PARAMETER_NOT_FOUND,"changeScene")},e.onClick=t=>{void 0!==t?(e instanceof BabylonGui||e instanceof BabylonTextureGui||e instanceof BabylonMesh)&&e.addOnClickListener(t):e.handleError(ErrorType.PARAMETER_UNDEFINED,"onClick")},e.wait=t=>{if(void 0!==t){if(isNaN(t))e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"wait");else if(0!==t)return new Promise((function(e){setTimeout((function(){e()}),1e3*t)}))}else e.handleError(ErrorType.PARAMETER_UNDEFINED,"wait")},e.kill=()=>{e instanceof BabylonMesh||e instanceof BabylonTextureGui?(e.enablePhysicsParams(!1),e.disableDefaultControl(),e.gameObject.setEnabled(!1),e.killed=!0):e instanceof BabylonGui&&(e.gameObject.hide(),e.killed=!0)},e.revive=()=>{e instanceof BabylonMesh||e instanceof BabylonTextureGui?(e.gameObject.setEnabled(!0),e.enablePhysicsParams(!0),e.enableDefaultControl(),e.killed=!1):e instanceof BabylonGui&&(e.gameObject.show(),e.killed=!1)},e.clone=()=>new Promise((function(t){(e instanceof BabylonMesh||e instanceof BabylonTextureGui)&&t(e.getClone())})),e.input=t=>new Promise((function(o){e.game.showInputText(t,(function(e){o(e)}))})),e.setObjectScale=(t,o,n)=>{e.gameObject.scaling&&(void 0!==t&&void 0!==o&&void 0!==n?isNaN(t)||isNaN(o)||isNaN(n)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setScale"):(e.gameObject.scaling.x=t,e.gameObject.scaling.y=o,e.gameObject.scaling.z=n):e.handleError(ErrorType.PARAMETER_UNDEFINED,"setScale"))},e.getObjectScale=()=>{if(e.gameObject.scaling)return e.gameObject.scaling},e.setUiText=t=>{void 0!==t?(e instanceof BabylonGui||e instanceof BabylonTextureGui)&&e.setText(t.toString()):e.handleError(ErrorType.PARAMETER_UNDEFINED,"setUiText")},e.setTextColor=t=>{void 0!==t?(e instanceof BabylonGui||e instanceof BabylonTextureGui)&&(e.game.HTML_Colors[t]&&(t=e.game.HTML_Colors[t]),e.setGuiTextColor(t)):e.handleError(ErrorType.PARAMETER_UNDEFINED,"setTextColor")},e.getTextColor=()=>{if(e instanceof BabylonGui||e instanceof BabylonTextureGui)return e.getGuiTextColor()},e.setVisibility=t=>{e instanceof BabylonMesh&&(0>t||1<t||(e.gameObject.visibility=t))},e.show=()=>{e instanceof BabylonGui?e.gameObject.isEnabled=!0:e instanceof BabylonTextureGui&&(e.gui.isEnabled=!0)},e.hide=()=>{e instanceof BabylonGui?e.gameObject.isEnabled=!1:e instanceof BabylonTextureGui&&(e.gui.isEnabled=!1)},e.enablePhysics=(t,o,n)=>{if(!(e instanceof BabylonMesh))return;if(t&&isNaN(t)||o&&isNaN(o)||n&&isNaN(n))return void e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"enablePhysics");const a=void 0!==t?t:1,r=void 0!==o?o:0,i=void 0!==n?n:0;e.setPhysics(a,r,i)},e.enablePhysicsParams=t=>{e instanceof BabylonMesh&&(t?e.restorePhysicsParams():e.resetPhysicsParams())},e.setMass=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setMass"):e.setPhysicsParam("mass",t))},e.setBounce=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setBounce"):e.setPhysicsParam("restitution",t))},e.setFriction=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setFriction"):e.setPhysicsParam("friction",t))},e.getMass=()=>{if(e instanceof BabylonMesh)return e.getPhysicsParam("mass")},e.getBounce=()=>{if(e instanceof BabylonMesh)return e.getPhysicsParam("restitution")},e.getFriction=()=>{if(e instanceof BabylonMesh)return e.getPhysicsParam("friction")},e.setVelocityX=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setVelocityX"):e.setVelocity("x",t))},e.setVelocityY=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setVelocityY"):e.setVelocity("y",t))},e.setVelocityZ=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setVelocityZ"):e.setVelocity("z",t))},e.getVelocityX=()=>{if(e instanceof BabylonMesh)return e.getVelocity("x")},e.getVelocityY=()=>{if(e instanceof BabylonMesh)return e.getVelocity("y")},e.getVelocityZ=()=>{if(e instanceof BabylonMesh)return e.getVelocity("z")},e.setAngularVelocityX=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setAngularVelocityX"):e.setAngularVelocity("x",t))},e.setAngularVelocityY=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setAngularVelocityY"):e.setAngularVelocity("y",t))},e.setAngularVelocityZ=t=>{e instanceof BabylonMesh&&(isNaN(t)?e.handleError(ErrorType.PARAMETER_INVALID_TYPE,"setAngularVelocityZ"):e.setAngularVelocity("z",t))},e.getAngularVelocityX=()=>{if(e instanceof BabylonMesh)return e.getAngularVelocity("x")},e.getAngularVelocityY=()=>{if(e instanceof BabylonMesh)return e.getAngularVelocity("y")},e.getAngularVelocityZ=()=>{if(e instanceof BabylonMesh)return e.getAngularVelocity("z")},e.setTarget=t=>{if(!(e instanceof BabylonFollowCamera))return;if(void 0===t)return void e.handleError(ErrorType.PARAMETER_UNDEFINED,"setTarget");const o=e.gameObject,n=e.scene.getFirstGameObjectWithName(t);n&&n instanceof BabylonMesh&&(o.lockedTarget=n.transformNode)},e.setBillboard=(t,o)=>{if(!(e instanceof BabylonMesh||e instanceof BabylonTextureGui))return;if(!t)return void e.setBillboardMode(BABYLON.Mesh.BILLBOARDMODE_NONE);let n;switch(o){case"x":n=BABYLON.Mesh.BILLBOARDMODE_X;break;case"y":n=BABYLON.Mesh.BILLBOARDMODE_Y;break;case"z":n=BABYLON.Mesh.BILLBOARDMODE_Z;break;default:n=BABYLON.Mesh.BILLBOARDMODE_ALL}e.setBillboardMode(n)},e.playSound=(t,o)=>{const n=e.scene.getSound(t);n&&(n.setLoop(o),n.play())},e.restartSound=t=>{const o=e.scene.getSound(t);o&&o.restart()},e.resumeSound=t=>{const o=e.scene.getSound(t);o&&o.resume()},e.stopAllSounds=()=>{e.scene.stopSounds()},e.stopSound=t=>{const o=e.scene.getSound(t);o&&o.stop()},e.pauseSound=t=>{const o=e.scene.getSound(t);o&&o.pause()},e.setGlobalSoundVolume=t=>{e.scene.setSoundVolume(t)},e.addGlobalSoundVolume=t=>{e.scene.addSoundVolume(t)},e.getGlobalSoundVolume=()=>e.scene.getSoundVolume(),e.setSoundVolume=(t,o)=>{const n=e.scene.getSound(t);n&&n.setVolume(o)},e.addSoundVolume=(t,o)=>{const n=e.scene.getSound(t);n&&n.addVolume(o)},e.getSoundVolume=t=>{const o=e.scene.getSound(t);return o?o.getVolume():-1},e.getDeltaTime=()=>e.game.engine.getDeltaTime()/1e3,e.startTimer=()=>{e.scene.startTimer()},e.pauseTimer=()=>{e.scene.pauseTimer()},e.resumeTimer=()=>{e.scene.resumeTimer()},e.resetTimer=()=>{e.scene.resetTimer()},e.getTimer=()=>e.scene.getTimer(),e.getObject=t=>{if(void 0!==t)return e.scene.getFirstGameObjectWithName(t);e.handleError(ErrorType.PARAMETER_UNDEFINED,"getObject")},e.getObjects=t=>{if(void 0!==t)return e.scene.getGameObjectsWithName(t);e.handleError(ErrorType.PARAMETER_UNDEFINED,"getObjects")}}class BabylonGame{constructor(e,n){console.log("Babylon Game Init!!"),this.canvas=e,this.config={mode:BabylonConstant.GAMEMODE.PLAY,...n},this.engine=null,this.currentScene=null,this.listeners={},this.currentGizmoType=BabylonConstant.GIZMO.POSITION,this.disposeQueue=[]}static create(e,n){const t=new BabylonGame(e,n),{engineType:i}=t.config;return t.initEngine(i,e),t.setLoadingScreen(),t.isPlayMode()&&setGameApiFunctions(t),t}dispose(){this.engine&&this.engine.dispose()}getBaseUrl(){return this.config.assetBaseURL}initEngine(e,n){if(this.engine)return;let t;t=this.createDefaultEngine(n),this.engine=t,window.addEventListener("resize",t.resize.bind(t))}createDefaultEngine(e){return new BABYLON.Engine(e,!0,{preserveDrawingBuffer:!0,stencil:!0})}getErrorHandler(){return function(e,n){parent.postMessage({source:"wizlab",type:"error",error:e,payload:n})}}createScene(e){const n=this.getSceneData(e);return BabylonScene.create({game:this,data:n})}getSceneData(e){return this.config.scenes[e]}updateSceneData(e,n){this.config.scenes[e]=n}runScene(e){this.runRenderLoopIfNeed();const n=this.createScene(e);n&&this.onSceneLoaded(n)}async onSceneLoaded(e){const n=this.currentScene;n!==e&&(this.currentScene=e,this.isPlayMode()&&this.currentScene.runAllUserScript(),n&&this.disposeQueue.push(n),this.disposeQueue.length>0&&(this.currentScene.scene.isReady()||await this.currentScene.scene.whenReadyAsync(),this.disposeAllQueue()))}disposeAllQueue(){const e=this.disposeQueue.length;if(0!==e)for(let n=0;n<e;n++){this.disposeQueue.pop().dispose()}}runRenderLoopIfNeed(){this.isRenderLoopRunning||(this.isRenderLoopRunning=!0,this.engine.runRenderLoop((()=>{this.currentScene&&this.currentScene.render()})))}removeCurrentScene(){this.isRenderLoopRunning&&(this.engine.stopRenderLoop(),this.engine.clear(),this.isRenderLoopRunning=!1),this.currentScene&&(this.currentScene.dispose(),this.currentScene=null)}changeScene(e){this.runScene(e)}changeSceneWithName(e){for(let n in this.config.scenes){if(e===this.config.scenes[n].name)return this.changeScene(n),!0}return!1}getSoundAssets(){return this.config.assets?this.config.assets.sounds:null}on(e,n){this.listeners[e]=n}getListener(e){return this.listeners[e]}triggerListener(e,n){const t=this.getListener(e);t&&t(n)}getCurrentGizmoType(){return this.currentGizmoType}setCurrentGizmoType(e){this.currentGizmoType=e,this.currentScene&&this.currentScene.onChangeCurrentGizmoType(e)}isPlayMode(){return this.isModeEqualTo(BabylonConstant.GAMEMODE.PLAY)}isEditMode(){return this.isModeEqualTo(BabylonConstant.GAMEMODE.EDIT)}isPreviewMode(){return this.isModeEqualTo(BabylonConstant.GAMEMODE.PREVIEW)}isModeEqualTo(e){return this.config.mode===e}setLoadingScreen(){BABYLON.DefaultLoadingScreen.prototype.displayLoadingUI=function(){let e=document.getElementById("babylonLoadingScreen");if(!e){this._loadingDiv=document.createElement("div"),this._loadingDiv.id="babylonLoadingScreen",this._loadingDiv.innerHTML='\n          <div class="babylonLoadingScreen_content_container">\n            <div class="babylonLoadingScreen_content_aspect">\n              <div class="babylonLoadingScreen_content">\n                <div class="babylonLoadingScreen_progress"></div>\n                <div class="babylonLoadingScreen_title">\n                  에셋 로딩 중...\n                </div>\n              </div>\n            </div>\n          </div>\n        ';const n=document.createElement("style");n.innerHTML="\n          #babylonLoadingScreen{\n            position: relative;\n            display: flex;\n            transition: opacity 0.6s;\n            pointer-events: none;\n          }\n          .babylonLoadingScreen_content_container {\n            margin: auto;\n            width: 120px;\n          }\n          .babylonLoadingScreen_content_aspect {\n            position: relative;\n            padding-top: 100%;\n          }\n          .babylonLoadingScreen_content {\n            position: absolute;\n            display: flex;\n            flex-direction: column;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border-radius: 12px;\n            background-color: #141821ee;\n            box-shadow: 5px 5px 15px 0px rgba(0, 0, 0, 0.2);        \n          }\n          .babylonLoadingScreen_progress {\n            margin: auto auto 0 auto;\n            width: 36%;\n            height: 36%;\n            border: 5px solid #393e4f;\n            border-top-color: white;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n          }\n          @keyframes spin {\n            to {\n              transform: rotate(360deg);\n            }\n          }\n          .babylonLoadingScreen_title {\n            margin: 18px auto auto auto;\n            color: white;\n            font-size: 15px;\n            font-weight: bold;\n            font-family: Arial;\n          }\n        ",document.getElementsByTagName("head")[0].appendChild(n),this._resizeLoadingUI(),window.addEventListener("resize",this._resizeLoadingUI),document.body.appendChild(this._loadingDiv),e=this._loadingDiv}e.style.display="flex",e.style.opacity=1},BABYLON.DefaultLoadingScreen.prototype.hideLoadingUI=function(){const e=document.getElementById("babylonLoadingScreen");e&&(e.style.opacity=0,setTimeout((()=>{e.style.display="none"}),600))}}}window.BabylonGame=BabylonGame;class BabylonScene{constructor(e){const{id:t,name:i,game:s}=e;this.id=t,this.name=i,this.game=s,this.scene=new BABYLON.Scene(s.engine),this.keyInputMap={},this.keyCodeInputMap={},this.sounds={},this.gameObjects={},this.selectedGameObject=null,this.assetsManager=null,this.game.isPlayMode()&&(this.timer={startedTime:0,duration:0,pausedTime:0,isRunning:!1},setSceneApiFunctions(this))}render(){this.scene&&this.scene.activeCamera&&this.scene.render()}dispose(){this.scene.dispose()}static create(e){const{game:t,data:i}=e,{id:s,name:n,soundIds:a,gameObjectIds:r,gameObjects:o}=i,d=new BabylonScene({id:s,name:n,game:t}),c=d.game.isPlayMode();d.game.isEditMode()&&(d.setEditorCamera(i.editorCamera),d.setGizmoLayers(),d.setPointerPicker()),c&&(d.setPhysicsEngine(),d.setActionManager()),d.setGUI(),d.addFirstRenderObserver();const h=new BABYLON.AssetsManager(d.scene);if(d.game.isPreviewMode()&&(h.useDefaultLoadingScreen=!1),d.assetsManager=h,c&&a&&a.length>0){const e=d.game.getSoundAssets();a.forEach((t=>{BabylonSound.create({scene:d,data:e[t]})}))}else d.allSoundsAdded=!0;return r&&r.length>0?r.forEach((e=>{const t=o[e];BabylonGameObject.create({scene:d,data:t,oncreate:e=>{d.addGameObject(e),d.checkAllGameObjectAdded()}})})):d.allGameObjectsAdded=!0,d.assetsManager._tasks.length>0?d.loadAssetsManager():d.checkAllAssetsAdded(),null}addMeshTask(e,t,i,s){return this.assetsManager.addMeshTask(e,t,i,s)}addBinaryFileTask(e,t){return this.assetsManager.addBinaryFileTask(e,t)}loadAssetsManager(e){0!==this.assetsManager._tasks.length&&(this.assetsManager.onFinish=()=>{this.assetsManager.reset(),e&&e()},this.assetsManager.load())}runAllUserScript(){if(0!==this.getGameObjectCount())for(const e in this.gameObjects)this.gameObjects[e].runUserScript()}addFirstRenderObserver(){this.onAfterRenderObserver=this.scene.onAfterRenderObservable.add(this.onAfterFirstRender.bind(this))}onAfterFirstRender(){this.updateAllGUITransforms(),this.scene.onAfterRenderObservable.remove(this.onAfterRenderObserver)}addBeforeRenderObservable(e){return this.scene.onBeforeRenderObservable.add(e)}removeBeforeRenderObservable(e){return this.scene.onBeforeRenderObservable.remove(e)}updateAllGUITransforms(){for(let e in this.gameObjects){const t=this.gameObjects[e];t instanceof BabylonGui&&t.updateGUIProperties()}}addSound(e){this.checkSoundValid(e)||e.dispose(),this.sounds[e.name]=e,this.getSoundCount()===this.game.getSceneData(this.id).soundIds.length&&this.onAllSoundsAdded()}addGameObject(e){this.checkGameObjectValid(e)?(this.gameObjects[e.id]=e,e instanceof BabylonGui&&this.addGUI(e)):e.dispose()}removeGameObject(e){e in this.gameObjects&&(this.getGameObject(e).dispose(),delete this.gameObjects[e])}getSound(e){return e in this.sounds?this.sounds[e]:null}getGameObject(e){return e in this.gameObjects?this.gameObjects[e]:null}getFirstGameObjectWithName(e){if(0===this.getGameObjectCount())return null;for(const t in this.gameObjects)if(this.gameObjects[t].name===e)return this.gameObjects[t];return null}getGameObjectsWithName(e){if(0===this.getGameObjectCount())return null;let t;t=Array.isArray(e)?e:[e];const i=[];for(const e in this.gameObjects)t.includes(this.gameObjects[e].name)&&i.push(this.gameObjects[e]);return i}getSoundCount(){return Object.keys(this.sounds).length}getGameObjectCount(){return Object.keys(this.gameObjects).length}checkSoundValid(e){return!(!e.id||""===e.id)&&!this.getSound(e.name)}checkGameObjectValid(e){return!(!e.id||""===e.id)&&!this.getGameObject(e.id)}setSoundVolume(e){let t=e;t<0?t=0:t>1&&(t=1),BABYLON.Engine.audioEngine.setGlobalVolume(t)}getSoundVolume(){return BABYLON.Engine.audioEngine.getGlobalVolume()}setEditorCamera(e){const{target:t={x:0,y:0,z:0},position:i={x:10,y:5,z:-10}}=e||{},s=new BABYLON.UniversalCamera("EditorCamera",new BABYLON.Vector3(i.x,i.y,i.z),this.scene);s.speed=.6,s.setTarget(new BABYLON.Vector3(t.x,t.y,t.z)),s.attachControl(this.game.canvas,!0),this.scene.activeCamera=s,this.editorCamera=s,this.scene.onAfterRenderObservable.add(this.watchEditorCameraTransformChange.bind(this))}setEditorCameraFocus(e){if(!this.editorCamera)return void(this.editorCameraFocus=e);const t=this.getGameObject(e);if(t){const e=t.gameObject.position;if(!e)return;const i=BABYLON.Vector3.Distance(e,this.editorCamera.position);if(BabylonConstant.EDITOR_CAMERA_FOCUS_DISTANCE!==i){const t=BabylonConstant.EDITOR_CAMERA_FOCUS_DISTANCE/i,s=BABYLON.Vector3.Lerp(e,this.editorCamera.position,t);this.editorCamera.position=s}this.editorCamera.setTarget(e)}}watchEditorCameraTransformChange(){this.editorCamera&&(this.checkEditorCameraTransformChanged()&&(this.onChangeEditorCameraTransfomTimeout&&(clearTimeout(this.onChangeEditorCameraTransfomTimeout),this.onChangeEditorCameraTransfomTimeout=void 0),this.onChangeEditorCameraTransfomTimeout=setTimeout(this.onChangeEditorCameraTransform.bind(this),500)),this.prevEditorCameraPosition=this.editorCamera.position.clone(),this.prevEditorCameraTarget=this.editorCamera.target.clone())}checkEditorCameraTransformChanged(){return!(this.editorCamera.position.equals(this.prevEditorCameraPosition)&&this.editorCamera.target.equals(this.prevEditorCameraTarget))}onChangeEditorCameraTransform(){const e={sceneId:this.id,position:{x:this.trimFloat(this.editorCamera.position.x),y:this.trimFloat(this.editorCamera.position.y),z:this.trimFloat(this.editorCamera.position.z)},target:{x:this.trimFloat(this.editorCamera.target.x),y:this.trimFloat(this.editorCamera.target.y),z:this.trimFloat(this.editorCamera.target.z)}};this.game.triggerListener("editorCameraTransformChange",e)}trimFloat(e){return parseFloat(parseFloat(e).toFixed(5))}setGizmoLayers(){this.gizmoLayer=new BABYLON.UtilityLayerRenderer(this.scene)}setPointerPicker(){this.scene.onPointerDown=function(){this.pointerPickedObject=this.getPointerPickedGameObject()}.bind(this),this.scene.onPointerUp=function(){const e=this.getPointerPickedGameObject();e===this.pointerPickedObject&&this.onPointerPickGameObject(e)}.bind(this)}getPointerPickedGameObject(){const e=this.createPickingRay(),t=this.scene.pickWithRay(e);return t.pickedMesh?this.getGameObject(t.pickedMesh.id):null}createPickingRay(){return this.scene.createPickingRay(this.scene.pointerX,this.scene.pointerY,BABYLON.Matrix.Identity(),this.scene.activeCamera)}onPointerPickGameObject(e){this.game.triggerListener("gameObjectSelect",{sceneId:this.id,gameObjectId:e?e.id:null})}selectGameObjectWithId(e){const t=this.getGameObject(e);t&&this.selectGameObject(t)}selectGameObject(e){this.selectedGameObject!==e&&(this.selectedGameObject&&(this.deselectGameObject(this.selectedGameObject),this.selectedGameObject=null),e&&(this.selectedGameObject=e,e.onSelected(),e instanceof BabylonGui?this.showGUIEditor():this.hideGUIEditor()))}deselectGameObject(e){e.onDeselected()}setPhysicsEngine(){const e=new BABYLON.CannonJSPlugin,t=new BABYLON.Vector3(0,-10,0);this.scene.enablePhysics(t,e)}getPhysicsEngine(){return this.scene.getPhysicsEngine()}isPhysicsEnabled(){return!!this.getPhysicsEngine()}setActionManager(){const e=new BABYLON.ActionManager(this.scene);e.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyDownTrigger,(e=>{this.keyInputMap[e.sourceEvent.key]="keydown"==e.sourceEvent.type,this.keyCodeInputMap[e.sourceEvent.keyCode]="keydown"==e.sourceEvent.type}))),e.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnKeyUpTrigger,(e=>{this.keyInputMap[e.sourceEvent.key]="keydown"==e.sourceEvent.type,this.keyCodeInputMap[e.sourceEvent.keyCode]="keydown"==e.sourceEvent.type}))),this.scene.actionManager=e}getActionManager(){return this.scene.actionManager}setGUI(){const e=BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("FullscreenUI",!0);this.scene.advancedTexture=e,this.game.isEditMode()&&this.setGUIEditor()}addGUI(e){this.game.isEditMode()?this.guiContainer.addControl(e.gameObject):this.scene.advancedTexture.addControl(e.gameObject)}removeGUI(e){this.game.isEditMode()?this.guiContainer.removeControl(e.gameObject):this.scene.advancedTexture.removeControl(e.gameObject)}setGUIEditor(){const e=new BABYLON.GUI.Container("guiEditorContainer");e.width=1,e.height=1,this.scene.advancedTexture.addControl(e),this.guiEditorContainer=e;const t=new BABYLON.GUI.Rectangle("guiContainerVisibleRect");t.width=.6,t.fixedRatio=9/16,t.color="white",t.thickness=3,t.cornerRadius=12,t.clipContent=!1,t.shadowColor="black",e.addControl(t),this.guiContainerVisibleRect=t;const i=new BABYLON.GUI.TextBlock("guiContainerVisibleTitle");i.top="12px",i.left="12px",i.textHorizontalAlignment=BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT,i.textVerticalAlignment=BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP,i.text="GUI",i.fontSize=18,i.color="white",t.addControl(i),this.guiContainerVisibleTitle=i;const s=new BABYLON.GUI.Container("guiContainer");s.width=.6,s.fixedRatio=9/16,s.clipContent=!0,e.addControl(s),this.guiContainer=s,this.hideGUIEditor()}getGUISizeInPixels(){return{width:this.game.isEditMode()?this.guiContainer.widthInPixels:this.game.engine.getRenderWidth(),height:this.game.isEditMode()?9*this.guiContainer.widthInPixels/16:this.game.engine.getRenderHeight()}}showGUIEditor(){this.game.isEditMode()&&(this.guiContainerVisibleRect.isVisible=!0,this.guiContainerVisibleTitle.isVisible=!0)}hideGUIEditor(){this.game.isEditMode()&&(this.guiContainerVisibleRect.isVisible=!1,this.guiContainerVisibleTitle.isVisible=!1)}onChangeCurrentGizmoType(e){this.selectedGameObject&&this.selectedGameObject.onChangeCurrentGizmoType(e)}onAllSoundsAdded(){this.allSoundsAdded=!0,this.checkAllAssetsAdded()}checkAllGameObjectAdded(){this.getGameObjectCount()===this.game.getSceneData(this.id).gameObjectIds.length&&this.onAllGameObjectsAdded()}onAllGameObjectsAdded(){for(let e in this.gameObjects){this.gameObjects[e].onAllGameObjectsAdded()}this.editorCameraFocus&&(this.editorCameraFocus=null,this.setEditorCameraFocus(this.editorCameraFocus)),this.allGameObjectsAdded=!0,this.checkAllAssetsAdded()}checkAllAssetsAdded(){this.allSoundsAdded&&this.allGameObjectsAdded&&(this.assetsManager._tasks.length>0&&(this.assetsManager.onFinish(),this.assetsManager.onFinish=null),this.game.onSceneLoaded(this),this.allSoundsAdded=void 0,this.allGameObjectsAdded=void 0)}getLightObject(){for(let e in this.gameObjects){const t=this.gameObjects[e];if(t instanceof BabylonLight)return t}}startTimer(){this.timer.isRunning=!0,this.timer.startedTime=(new Date).getTime()}pauseTimer(){this.timer.pausedTime=(new Date).getTime(),this.timer.isRunning=!1}resumeTimer(){this.timer.isRunning||(this.timer.startedTime+=(new Date).getTime()-this.timer.pausedTime,this.timer.isRunning=!0)}resetTimer(){this.timer.isRunning=!1,this.timer.duration=0}getTimer(){return this.timer.isRunning&&(this.timer.duration=(new Date).getTime()-this.timer.startedTime,this.timer.duration/=1e3,this.timer.duration=this.timer.duration.toFixed(1)),parseFloat(this.timer.duration)}}window.BabylonScene=BabylonScene;class BabylonGameObject{constructor(e){const{scene:t,data:s}=e;this.id=s.id,this.name=s.name,this.parentId=s.parentId,this.game=t.game,this.scene=t,this.gameObject=null,this.gizmo=null,this.game.isPlayMode()&&(this.signalQueue=[],this.signalReceiver={},setApiFunctions(this))}static create(e){const{data:t,oncreate:s}=e,{GAMEOBJECT:i}=BabylonConstant;let a;switch(t.type){case i.CAMERA:a=BabylonCamera.create(e);break;case i.SKYBOX:a=BabylonSkybox.create(e);break;case i.LIGHT:a=BabylonLight.create(e);break;case i.MESH:a=BabylonMesh.create(e);break;case i.GUI:a=BabylonGui.create(e);break;case i.TEXTURE_GUI:a=BabylonTextureGui.create(e);break;case i.EMPTY:a=BabylonEmptyObject.create(e);break;default:a=new BabylonGameObject(e)}return s&&a&&s(a),a}static getConstructorWithType(e,t){const{GAMEOBJECT:s}=BabylonConstant;switch(e){case s.CAMERA:return BabylonCamera;case s.SKYBOX:return BabylonSkybox;case s.LIGHT:return BabylonLight;case s.MESH:return BabylonMesh;case s.GUI:return BabylonGui;case s.TEXTURE_GUI:return BabylonTextureGui;default:return null}}static getAvailableGizmoTypes(){return[]}dispose(){this.gameObject.dispose()}getCloneCount(){return this.gameObject.cloneMeshMap?this.gameObject.cloneMeshMap.length:0}onSelected(){this.showEdges(),this.showGizmo()}onDeselected(){this.hideEdges(),this.hideGizmo()}showEdges(){this.game.isEditMode()&&this.gameObject.enableEdgesRendering&&(this.gameObject.enableEdgesRendering(),this.gameObject.edgesColor=new BABYLON.Color4(0,0,0,.6))}hideEdges(){this.gameObject.disableEdgesRendering&&this.gameObject.disableEdgesRendering()}showGizmo(){if(!this.game.isEditMode())return;const e=this.getCurrentGizmoType();if(!this.checkGizmoTypeAvailable(e))return;const t=this.getGizmoConstructor(e);if(!t)return;const s=new t(this.scene.gizmoLayer);s.onDragStartObservable.add(this.onGizmoDragStart.bind(this)),s.onDragEndObservable.add(this.onGizmoDragEnd.bind(this)),s.attachedMesh=this.gameObject,this.gizmo=s}getCurrentGizmoType(){return this.game.getCurrentGizmoType()}checkGizmoTypeAvailable(e){return this.constructor.getAvailableGizmoTypes().includes(e)}getGizmoConstructor(e){switch(e){case"scale":return BABYLON.ScaleGizmo;case"rotation":return BABYLON.RotationGizmo;case"position":return BABYLON.PositionGizmo;default:return null}}hideGizmo(){this.gizmo&&(this.gizmo.dispose(),this.gizmo=void 0)}onChangeCurrentGizmoType(e){this.gizmo&&this.hideGizmo(),this.showGizmo()}onGizmoDragStart(){switch(this.getCurrentGizmoType()){case"scale":this.prevScaling=this.gameObject.scaling.clone();break;case"rotation":this.prevRotation=this.gameObject.rotation.clone();break;case"position":this.prevPosition=this.gameObject.position.clone()}}onGizmoDragEnd(){const e=this.getCurrentGizmoType();switch(e){case"scale":this.onChangeTransform(e,this.gameObject.scaling);break;case"rotation":this.onChangeTransform(e,this.gameObject.rotation);break;case"position":this.onChangeTransform(e,this.gameObject.position)}}onChangeTransform(e,t){const{x:s,y:i,z:a}=t,o="rotation"===e?this.trimRotation:this.trimFloat,n={x:o(s),y:o(i),z:o(a)},r={id:this.id,sceneId:this.scene.id,propertyId:e,value:n};this.game.triggerListener("gameObjectPropertyChange",r)}trimFloat(e){return parseFloat(parseFloat(e).toFixed(5))}trimRotation(e){return parseInt(BABYLON.Tools.ToDegrees(e))}setProperty(e,t){let s;switch(e){case BabylonConstant.PROPERTY_ID.PARENT_ID:s="setParent";break;default:s="set"+e[0].toUpperCase()+e.slice(1,e.length)}const i=this[s];i&&i.bind(this)(t)}setPosition(e){this.gameObject.position.x=e.x,this.gameObject.position.y=e.y,this.gameObject.position.z=e.z}setRotation(e){this.gameObject.rotation.x=BABYLON.Tools.ToRadians(e.x),this.gameObject.rotation.y=BABYLON.Tools.ToRadians(e.y),this.gameObject.rotation.z=BABYLON.Tools.ToRadians(e.z)}setScale(e){this.gameObject.scaling.x=e.x,this.gameObject.scaling.y=e.y,this.gameObject.scaling.z=e.z}setDirection(e){this.gameObject.direction.x=e.x,this.gameObject.direction.y=e.y,this.gameObject.direction.z=e.z}setParent(e){if(this.gameObject)if(e){const t=this.scene.getGameObject(e);t&&(this.gameObject.parent=t.gameObject,this.parentId=e)}else this.gameObject.parent=null,this.parentId=null}onAllGameObjectsAdded(){this.setParent(this.parentId)}resolveSignal(e){e in this.signalReceiver&&this.signalReceiver[e]()}runUserScript=function(){const e=userScripts[this.scene.id][this.id];"function"==typeof e&&e(getApis(this));const t=this.signalQueue.length;if(t>0)for(let e=0;e<t;e++)this.resolveSignal(this.signalQueue.pop())}}class BabylonMesh extends BabylonGameObject{static create(e){const{data:t}=e,s=BabylonConstant.MESH;let i;switch(t.subtype){case s.GROUND:i=BabylonGround.create(e);break;case s.BOX:i=BabylonBox.create(e);break;case s.SPHERE:i=BabylonSphere.create(e);break;case s.OBJ:return i=BabylonOBJ.create(e),i;default:return}return i.init(t),i}init(e){this.setPosition(e.position),this.setRotation(e.rotation),this.setScale(e.scale),this.setSpeed()}static getAvailableGizmoTypes(){return[BabylonConstant.GIZMO.POSITION,BabylonConstant.GIZMO.ROTATION,BabylonConstant.GIZMO.SCALE]}addOnClickListener(e){this.gameObject.isPickable=!0,this.gameObject.actionManager||(this.gameObject.actionManager=new BABYLON.ActionManager(this.scene.scene)),this.gameObject.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickTrigger,e))}getClone(){const e=`clone${this.getCloneCount()+1}`,t=`${this.id}_${e}`,s=`${this.name}_${e}_${(new Date).getTime()}`,i=this.parentId?this.scene.getGameObject(this.parentId):null,a=i?i.gameObject:null,o=this.gameObject.clone("name",a),n=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return n.id=t,n.name=s,n.gameObject=o,this.scene.addGameObject(n,!0),n}setBillboardMode(e){this.gameObject.billboardMode=e}setPhysics(e,t,s){this.scene.isPhysicsEnabled()&&(this.gameObject.physicsImpostor||(this.gameObject.physicsImpostor=new BABYLON.PhysicsImpostor(this.gameObject,this.constructor.getPhysicsImpostorType(),{},this.scene.scene)),void 0!==e&&this.setPhysicsParam("mass",e),void 0!==t&&this.setPhysicsParam("restitution",t),void 0!==s&&this.setPhysicsParam("friction",s))}resetPhysicsParams(){const e=this.gameObject.physicsImpostor;e&&(this.prevPhysicsParams={mass:e.mass,restitution:e.restitution,friction:e.friction},this.setPhysicsParam("mass",0),this.setPhysicsParam("restitution",0),this.setPhysicsParam("friction",0))}restorePhysicsParams(){if(!this.gameObject.physicsImpostor||!this.prevPhysicsParams)return;const{mass:e,restitution:t,friction:s}=this.prevPhysicsParams;this.setPhysicsParam("mass",e),this.setPhysicsParam("restitution",t),this.setPhysicsParam("friction",s)}static getPhysicsImpostorType(){return BABYLON.PhysicsImpostor.BoxImpostor}setPhysicsParam(e,t){const s=this.gameObject.physicsImpostor;s&&s.setParam(e,t)}getPhysicsParam(e){const t=this.gameObject.physicsImpostor;if(t)return t.getParam(e)}registerOnPhysicsCollide(e,t){if(!this.gameObject.physicsImpostor)return!1;const s=[];return e.forEach((e=>{e.gameObject.physicsImpostor&&s.push(e.gameObject.physicsImpostor)})),0!==s.length&&(this.gameObject.physicsImpostor.registerOnPhysicsCollide(s,t),!0)}unregisterOnPhysicsCollide(e,t){if(!this.gameObject.physicsImpostor)return;const s=[];e.forEach((e=>{e.gameObject.physicsImpostor&&s.push(e.gameObject.physicsImpostor)})),s.length>0&&this.gameObject.physicsImpostor.unregisterOnPhysicsCollide(s,t)}setSpeed(e,t,s){this.speed||(this.speed=new BABYLON.Vector3(100,100,100)),void 0!==e&&(this.speed.x=e),void 0!==t&&(this.speed.y=t),void 0!==s&&(this.speed.z=s)}getSpeed(e){return e?this.speed[e]:this.speed}setVelocity(e,t){this.gameObject.physicsImpostor&&(this.velocity||(this.velocity=new BABYLON.Vector3(0,0,0)),this.velocity[e]=t,this.gameObject.physicsImpostor.setLinearVelocity(this.velocity))}getVelocity(e){return this.velocity?this.velocity[e]:0}setAngularVelocity(e,t){this.gameObject.physicsImpostor&&(this.angularVelocity||(this.angularVelocity=new BABYLON.Vector3(0,0,0)),this.angularVelocity[e]=t,this.gameObject.physicsImpostor.setAngularVelocity(this.angularVelocity))}getAngularVelocity(e){return this.angularVelocity?this.angularVelocity[e]:0}setControlOption(e,t){this.controlOptions||(this.controlOptions={}),this.controlOptions[e]=t}attachDefaultControl(e){e?(this.gameObject.physicsImpostor||this.setPhysics(0,0,0),this.controlOptions&&this.controlOptions.rotationSpeed||this.setControlOption("rotationSpeed",1),this.controlOptions.maxJump||this.setControlOption("maxJump",1),this.transformNode=new BABYLON.TransformNode,this.defaultControlObserver=this.scene.addBeforeRenderObservable((()=>{this.defaultControl(),this.transformNode.position=this.gameObject.position})),this.checkAndUpdateCameraTarget(!0)):this.defaultControlObserver&&(this.scene.removeBeforeRenderObservable(this.defaultControlObserver),this.defaultControlObserver=null,this.checkAndUpdateCameraTarget(!1),this.transformNode.dispose(),this.transformNode=null)}defaultControl=()=>{const{keyCodeInputMap:e}=this.scene,t=this.scene.scene.getAnimationRatio(),s=this.transformNode.getDirection(BABYLON.Vector3.Forward());let i=0;if((e[87]||e[38])&&(i=.06*t*(this.speed.z/100)),(e[83]||e[40])&&(i=-.06*t*(this.speed.z/100)),(e[65]||e[37])&&(this.transformNode.rotate(BABYLON.Axis.Y,-.03*t*this.controlOptions.rotationSpeed),this.gameObject.rotate(BABYLON.Axis.Y,-.03*t*this.controlOptions.rotationSpeed)),(e[68]||e[39])&&(this.transformNode.rotate(BABYLON.Axis.Y,.03*t*this.controlOptions.rotationSpeed),this.gameObject.rotate(BABYLON.Axis.Y,.03*t*this.controlOptions.rotationSpeed)),this.gameObject.moveWithCollisions(s.scale(i)),this.jumpVectorY||(this.jumpVectorY=0),e[32]?(this.jumpVectorY+=.03*t,this.jumpVectorY>.12*t*this.controlOptions.maxJump&&(this.jumpVectorY=.12*t*this.controlOptions.maxJump)):(this.jumpVectorY-=.03*t,this.jumpVectorY<0&&(this.jumpVectorY=0)),0!==this.jumpVectorY){let e=new BABYLON.Vector3(0,0,0);e.y=this.jumpVectorY,this.gameObject.moveWithCollisions(e)}};checkAndUpdateCameraTarget(e){const t=this.scene.scene.activeCamera.lockedTarget;t&&(e&&t===this.gameObject?this.scene.scene.activeCamera.lockedTarget=this.transformNode:e||t!==this.transformNode||(this.scene.scene.activeCamera.lockedTarget=this.gameObject))}}class BabylonBox extends BabylonMesh{static create(e){const{scene:t,data:s}=e,i=new BabylonBox(e),a=BABYLON.MeshBuilder.CreateBox(s.id,{},t.scene);return i.gameObject=a,i}}class BabylonGround extends BabylonMesh{static create(e){const{scene:t,data:s}=e,i=new BabylonGround(e),a=BABYLON.MeshBuilder.CreateGround(s.id,{},t.scene);return i.gameObject=a,i}onAllGameObjectsAdded(){super.onAllGameObjectsAdded(),this.gameObject.receiveShadows=!0}static getPhysicsImpostorType(){return BABYLON.PhysicsImpostor.BoxImpostor}}class BabylonSphere extends BabylonMesh{static create(e){const{scene:t,data:s}=e,i=new BabylonSphere(e),a=BABYLON.MeshBuilder.CreateSphere(s.id,{},t.scene);i.gameObject=a;var o=new BABYLON.StandardMaterial("mat",t.scene);return o.diffuseColor=new BABYLON.Color3.Random,a.material=o,i}static getPhysicsImpostorType(){return BABYLON.PhysicsImpostor.SphereImpostor}}class BabylonOBJ extends BabylonMesh{static create(e){const{scene:t,data:s,oncreate:i}=e,a=new BabylonOBJ(e);a.path=a.getUrl(s.path),a.filename=s.filename;const o=t.addMeshTask("objTask","",a.path,s.filename);return s.filename.includes("Hex10")&&(s.texture=void 0),o.onSuccess=e=>{const o=a.getMeshFromTask(e),n=o.material;n&&s.texture&&(a.texture=new BABYLON.Texture(a.getUrl(s.texture),t.scene),n.diffuseTexture=a.texture,n.specularTexture=a.texture,n.emissiveTexture=a.texture,n.ambientTexture=a.texture),a.gameObject=o,a.gameObject.id=s.id,a.gameObject.name=s.name,a.gameObject.receiveShadows=!0,a.init(s),i(a)},o.onError=(e,t,s)=>{console.log(111,"meshTask error",t,s),e.loadedMeshes&&e.loadedMeshes.forEach((e=>{e.dispose()}))},null}getUrl(e){let t=e;return this.game.getBaseUrl()&&(t=`${this.game.getBaseUrl()}${e.substring(1)}`),t}getMeshFromTask(e,t=!1){const s=e.loadedMeshes;if(1===s.length){const e=s[0];if(t)e.material=this.gameObject.material;else if(!e.material){const t=new BABYLON.StandardMaterial(`${this.id}_mat`,this.scene.scene);t.diffuseColor=new BABYLON.Color3.Random,t.emissiveColor=new BABYLON.Color3.Random,e.material=t}return e}{const e=BABYLON.Mesh.MergeMeshes(s,!0,!0,void 0,!0);let i=null;if(t?i=this.gameObject.material:(i=new BABYLON.MultiMaterial(`${this.id}_mat`,this.scene.scene),s.forEach((e=>{i.subMaterials.push(e.material)}))),e.material=i,i instanceof BABYLON.MultiMaterial){const t=e.subMeshes;for(let e=0;e<t.length;e++)t[e].materialIndex=e}return e}}async getClone(){const e=`clone${this.getCloneCount()+1}`,t=`${this.id}_${e}`,s=this.name,i=await this.getClonedObj(this,t,s);if(!i)return;const a=Object.assign(Object.create(Object.getPrototypeOf(this)),this);a.id=t,a.name=s,a.gameObject=i,this.parentId&&a.setParent(this.parentId),a.setPosition(this.gameObject.position),a.setRotation(this.gameObject.rotation),a.setScale(this.gameObject.scaling);const o=this.gameObject.physicsImpostor;return o&&a.setPhysics(o.mass,o.restitution,o.friction),this.scene.addGameObject(a),a}getClonedObj(e,t,s){return new Promise((function(i){e.path&&e.filename||i(null);const a=e.scene.addMeshTask("objTask","",e.path,e.filename);a.onSuccess=a=>{const o=e.getMeshFromTask(a,!0);o.id=t,o.name=s,o.receiveShadows=e.gameObject.receiveShadows,o.material&&e.texture&&(o.material.diffuseTexture=e.texture,o.material.specularTexture=e.texture,o.material.emissiveTexture=e.texture,o.material.ambientTexture=e.texture),i(o)},a.onError=(e,t,s)=>{console.log(111,"meshTask error",t,s),i(null)},e.scene.loadAssetsManager()}))}}class BabylonGui extends BabylonGameObject{constructor(e){super(e)}static create(e){const{data:t}=e;let s;const i=BabylonConstant.GUI;switch(t.subtype){case i.BUTTON:s=BabylonGuiButton.create(e);break;case i.TEXT:s=BabylonGuiText.create(e)}return s.commontInit(t),s}commontInit(e){this.gameObject.color="white",this.gameObject.background="black",this.gameObject.horizontalAlignment=BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT,this.gameObject.verticalAlignment=BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP,this.setWidth(e.width),this.setHeight(e.height),this.setFontSize(e.fontSize),this.setPosition(e.position),this.setRotation(e.rotation),this.setCornerRadius(e.cornerRadius),this.game.isEditMode()&&(this.setPointerPicker(),this.setEngineResizeObservable(),this.setDraggable())}dispose(){this.scene.removeGUI(this),super.dispose()}addOnClickListener(e){this.gameObject.isPointerBlocker=!0,this.gameObject.onPointerClickObservable.add(e)}setPointerPicker(){this.gameObject.isPointerBlocker=!0,this.gameObject.onPointerDownObservable.add((()=>{this.scene.onPointerPickGameObject(this)}))}setEngineResizeObservable(){this.game.engine.onResizeObservable.add((()=>{this.engineResizeTimeout&&(clearTimeout(this.engineResizeTimeout),this.engineResizeTimeout=void 0),this.engineResizeTimeout=setTimeout(this.updateGUIProperties.bind(this),100)}))}setDraggable(){this.gameObject.onPointerDownObservable.add((e=>{this.dragStartPointerPoint=new BABYLON.Vector2(e.x,e.y),this.dragStartPoint=new BABYLON.Vector2(parseFloat(this.gameObject.left),parseFloat(this.gameObject.top)),this.isDragging=!0})),this.gameObject.onPointerUpObservable.add((()=>{const e={x:parseFloat(this.gameObject.left),y:parseFloat(this.gameObject.top)},t=this.convertToGUIPosition(e),s={id:this.id,sceneId:this.scene.id,propertyId:"position",value:t};this.game.triggerListener("gameObjectPropertyChange",s),this.dragStartPointerPoint=null,this.dragStartPoint=null,this.isDragging=!1})),this.gameObject.onPointerMoveObservable.add((e=>{if(this.isDragging){const t=this.dragStartPointerPoint.subtract(new BABYLON.Vector2(e.x,e.y));this.gameObject.left=this.dragStartPoint.x-t.x,this.gameObject.top=this.dragStartPoint.y-t.y}})),this.scene.guiEditorContainer.onPointerMoveObservable.add((e=>{if(this.isDragging){const t=this.dragStartPointerPoint.subtract(new BABYLON.Vector2(e.x,e.y));this.gameObject.left=this.dragStartPoint.x-t.x,this.gameObject.top=this.dragStartPoint.y-t.y}}))}setPosition(e){const t=this.convertToTexturePosition(e);this.gameObject.left=t.x,this.gameObject.top=t.y,this.guiPosition=e}setRotation(e){this.gameObject.rotation=BABYLON.Tools.ToRadians(e.x)}setWidth(e){this.gameObject.width=this.converToTextureWidth(e)+"px",this.guiWidth=e}setHeight(e){this.gameObject.height=this.converToTextureHeight(e)+"px",this.guiHeight=e}setFontSize(e){this.gameObject.fontSize=this.converToTextureFontSize(e),this.guiFontSize=e}setCornerRadius(e){this.gameObject.cornerRadius=this.converToTextureCornerRadius(e),this.guiCornerRadius=e}setText(e){this.gameObject.text=e}setGuiTextColor(e){this.gameObject.color=e}getGuiTextColor(){return this.gameObject.color}setGuiBackgroundColor(e){this.gameObject.background=e}updateGUIProperties(){this.updatePosition(),this.updateWidth(),this.updateHeight(),this.updateFontSize(),this.updateCornerRadius()}updatePosition(){this.setPosition(this.guiPosition)}updateWidth(){this.setWidth(this.guiWidth)}updateHeight(){this.setHeight(this.guiHeight)}updateFontSize(){this.setFontSize(this.guiFontSize)}updateCornerRadius(){this.setCornerRadius(this.guiCornerRadius)}converToTextureWidth(e){return e/1280*this.scene.getGUISizeInPixels().width}converToTextureHeight(e){return e/720*this.scene.getGUISizeInPixels().height}converToTextureFontSize(e){return e/720*this.scene.getGUISizeInPixels().height}converToTextureCornerRadius(e){return e/720*this.scene.getGUISizeInPixels().height}convertToTexturePosition(e){const{width:t,height:s}=this.scene.getGUISizeInPixels();return{x:e.x/1280*t,y:e.y/720*s}}convertToGUIPosition(e){const{width:t,height:s}=this.scene.getGUISizeInPixels(),i=e.x/t*1280,a=e.y/s*720;return{x:parseFloat(parseFloat(i).toFixed(1)),y:parseFloat(parseFloat(a).toFixed(1))}}}class BabylonGuiButton extends BabylonGui{static create(e){const{data:t}=e,s=new BabylonGuiButton(e),i=BABYLON.GUI.Button.CreateSimpleButton(t.id,t.text);return s.gameObject=i,s}setText(e){this.gameObject.textBlock.text=e}}class BabylonGuiText extends BabylonGui{static create(e){const{data:t}=e,s=new BabylonGuiText(e),i=new BABYLON.GUI.TextBlock;return i.text=t.text,s.gameObject=i,s}}class BabylonTextureGui extends BabylonGameObject{constructor(e){super(e),this.gui=null}static create(e){const{scene:t,data:s}=e,i=new BabylonTextureGui(e);let a;const o=BabylonConstant.GUI;switch(s.subtype){case o.BUTTON:a=BABYLON.GUI.Button.CreateSimpleButton(s.id,s.text);break;case o.TEXT:a=new BABYLON.GUI.TextBlock(s.id,s.text),a.fontSize=s.fontSize}return a.width=s.width,a.height=s.height,a.color="white",a.cornerRadius=s.cornerRadius,a.background=s.background,a.resizeToFit=!0,a.thickness=0,i.getAdvancedTexture(t).addControl(a),i.gui=a,i.setPosition(s.position),i.setRotation(s.rotation),i.setScale(s.scale),i}getAdvancedTexture(e){return this.gameObject||(this.gameObject=BABYLON.Mesh.CreatePlane(this.id,4,e.scene),this.gameObject.isPickable=this.game.isEditMode()),BABYLON.GUI.AdvancedDynamicTexture.CreateForMesh(this.gameObject)}setText(e){"TextBlock"!==this.gui.typeName?this.gui.textBlock.text=e:this.gui.text=e}setGuiTextColor(e){"TextBlock"!==this.gui.typeName?this.gui.textBlock.color=e:this.gui.color=e}getGuiTextColor(){return"TextBlock"===this.gui.typeName?this.gui.color:this.gui.textBlock.color}setGuiBackgroundColor(e){"TextBlock"!==this.gui.typeName?this.gui.textBlock.background=e:this.gui.background=e}setBillboardMode(e){this.gameObject.billboardMode=e}addOnClickListener(e){this.gameObject.isPickable=!0,this.gui.isPointerBlocker=!0,this.gui.onPointerClickObservable.add(e)}getClone(){const e=`clone${this.getCloneCount()+1}`,t=`${this.id}_${e}`,s=`${this.name}_${e}_${(new Date).getTime()}`,i=this.parentId?this.scene.getGameObject(this.parentId):null,a=i?i.gameObject:null,o=this.gameObject.clone("name",a),n=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return n.id=t,n.name=s,n.gameObject=o,this.scene.addGameObject(n,!0),n}static getAvailableGizmoTypes(){return[BabylonConstant.GIZMO.POSITION,BabylonConstant.GIZMO.ROTATION,BabylonConstant.GIZMO.SCALE]}}class BabylonCamera extends BabylonGameObject{constructor(e){super(e),this.isActiveCamera=!1}static create(e){const{data:t}=e;let s;const i=BabylonConstant.CAMERA;switch(t.subtype){case i.UNIVERSAL:s=BabylonUniversalCamera.create(e);break;case i.ARCROTATE:s=BabylonArcRotateCamera.create(e);break;case i.FOLLOW:s=BabylonFollowCamera.create(e);break;default:return}return s.setIsActiveCamera(t.isActiveCamera),s}setIsActiveCamera(e){this.isActiveCamera=e,this.game.isPlayMode()&&e&&(this.gameObject.attachControl(this.game.canvas,!0),this.scene.scene.activeCamera=this.gameObject)}static getAvailableGizmoTypes(){return[BabylonConstant.GIZMO.POSITION,BabylonConstant.GIZMO.ROTATION]}}class BabylonUniversalCamera extends BabylonCamera{static create(e){const{scene:t,data:s}=e,i=new BabylonUniversalCamera(e);return i.gameObject=new BABYLON.UniversalCamera(s.id,new BABYLON.Vector3(s.position.x,s.position.y,s.position.z),t.scene),i.setRotation(s.rotation),i}}class BabylonArcRotateCamera extends BabylonCamera{static create(e){const{scene:t,data:s}=e,i=new BabylonArcRotateCamera(e);return i.gameObject=new BABYLON.ArcRotateCamera(s.id,0,0,10,new BABYLON.Vector3(0,0,0),t.scene),i.setPosition(s.position),i}setPosition(e){this.gameObject.setPosition(new BABYLON.Vector3(e.x,e.y,e.z))}}class BabylonFollowCamera extends BabylonCamera{static create(e){const{scene:t,data:s}=e,i=new BabylonFollowCamera(e),a=new BABYLON.FollowCamera(s.id,new BABYLON.Vector3(s.position.x,s.position.y,s.position.z),t.scene);return a.lowerHeightOffsetLimit=6,a.heightOffset=6,a.upperHeightOffsetLimit=6,a.lowerRadiusLimit=12,a.radius=12,a.upperRadiusLimit=12,a.lowerRotationOffsetLimit=165,a.rotationOffset=180,a.upperRotationOffsetLimit=195,i.targetId=s.targetId,i.gameObject=a,i.setRotation(s.rotation),i}onAllGameObjectsAdded(){super.onAllGameObjectsAdded(),this.game.isPlayMode()&&this.updateTarget()}updateTarget(){const e=this.gameObject,t=this.scene.getGameObject(this.targetId);t&&(e.lockedTarget=t.gameObject)}}class BabylonLight extends BabylonGameObject{static create(e){const{data:t}=e;let s;const i=BabylonConstant.LIGHT;switch(t.subtype){case i.POINT:s=BabylonPointLight.create(e);break;case i.SPOT:s=BabylonSpotLight.create(e);break;case i.HEMISPHERIC:s=BabylonHemisphericLight.create(e);break;case i.DIRECTIONAL:default:s=BabylonDirectionalLight.create(e)}return s}setIntensity(e){this.gameObject.intensity=e}setRange(e){this.gameObject.range=e}}class BabylonPointLight extends BabylonLight{static create(e){const{scene:t,data:s}=e,{position:i,intensity:a,range:o}=s,n=new BABYLON.PointLight(s.id,new BABYLON.Vector3(i.x,i.y,i.z),t.scene);n.intensity=a,n.range=o;const r=new BabylonPointLight(e);return r.gameObject=n,r}static getAvailableGizmoTypes(){return[BabylonConstant.GIZMO.POSITION]}}class BabylonSpotLight extends BabylonLight{static create(e){const{scene:t,data:s}=e,{position:i,direction:a,intensity:o,range:n}=s,r=new BABYLON.SpotLight(s.id,new BABYLON.Vector3(i.x,i.y,i.z),new BABYLON.Vector3(a.x,a.y,a.z),Math.PI/2,10,t.scene);r.intensity=o,r.range=n;const c=new BabylonSpotLight(e);return c.gameObject=r,c}static getAvailableGizmoTypes(){return[BabylonConstant.GIZMO.POSITION]}}class BabylonDirectionalLight extends BabylonLight{static create(e){const{scene:t,data:s}=e,{x:i,y:a,z:o}=s.direction,n=new BABYLON.Vector3(i,a,o),r=new BABYLON.DirectionalLight(s.id,n,t.scene),c=new BabylonDirectionalLight(e);return c.gameObject=r,c}}class BabylonHemisphericLight extends BabylonLight{static create(e){const{scene:t,data:s}=e,{x:i,y:a,z:o}=s.direction,n=new BABYLON.Vector3(i,a,o),r=new BABYLON.HemisphericLight(s.id,n,t.scene),c=new BabylonHemisphericLight(e);return c.gameObject=r,c}}class BabylonSkybox extends BabylonGameObject{constructor(e){super(e),this.defaultSkyboxSize=1e3}static create(e){const{scene:t,data:s}=e,i=new BabylonSkybox(e),a=BABYLON.MeshBuilder.CreateBox(s.id,{size:s.size},i.scene.scene);a.infiniteDistance=!0;const o=new BABYLON.StandardMaterial(i.id,i.scene.scene);return o.backFaceCulling=!1,o.reflectionTexture=new BABYLON.CubeTexture(i.getUrl(s.texture),i.scene.scene),o.reflectionTexture.coordinatesMode=BABYLON.Texture.SKYBOX_MODE,o.diffuseColor=new BABYLON.Color3(0,0,0),o.specularColor=new BABYLON.Color3(0,0,0),a.material=o,i.gameObject=a,i}getUrl(e){let t=e;return this.game.getBaseUrl()&&(t=`${this.game.getBaseUrl()}${e.substring(1)}`),t}setSize(e){const t=parseFloat(e)/this.defaultSkyboxSize;this.gameObject.scaling.x=t,this.gameObject.scaling.y=t,this.gameObject.scaling.z=t}}class BabylonEmptyObject extends BabylonGameObject{static create(e){const{data:t}=e,s=new BabylonEmptyObject(e),i=new BABYLON.TransformNode(t.id,s.scene.scene);return s.gameObject=i,s.init(t),s}init(e){this.setPosition(e.position),this.setRotation(e.rotation),this.setScale(e.scale)}static getAvailableGizmoTypes(){return[BabylonConstant.GIZMO.POSITION,BabylonConstant.GIZMO.ROTATION,BabylonConstant.GIZMO.SCALE]}}window.BabylonGameObject=BabylonGameObject;class BabylonSound{constructor(e){const{scene:s,data:t}=e;this.id=t.id,this.name=t.defaultName,this.scene=s,this.sound=null,this.execQueue=[],this.isReady=!1}static create(e){const s=new BabylonSound(e),{scene:t,data:o}=e,n=t.addBinaryFileTask("soundTask",o.path);n.onSuccess=e=>{const n=new BABYLON.Sound(o.defaultName,e.data,t.scene,(()=>{s.sound=n,s.onReadyToPlay(),t.addSound(s)}))},n.onError=(e,o,n)=>{console.error(111,"soundTask error",o,n),t.addSound(s)}}dispose(){this.sound&&this.sound.dispose()}onReadyToPlay(){this.isReady=!0;const e=this.execQueue.length;if(e>0)for(let s=0;s<e;s++)this.execQueue.pop()()}isReady(){return this.isReady}execOnReady(e){this.isReady?e():this.execQueue.push(e)}isPlaying(){return!!this.sound&&this.sound.isPlaying}play(){this.execOnReady((()=>this.sound.play()))}restart(){this.execOnReady((()=>{this.stop(),this.play()}))}resume(){this.execOnReady((()=>{this.isPlaying()||this.sound.play()}))}setLoop(e){this.execOnReady((()=>{this.sound.loop=e}))}stop(){this.execOnReady((()=>{this.sound.stop()}))}pause(){this.execOnReady((()=>{this.sound.pause()}))}setVolume(e){this.execOnReady((()=>{let s=e;s<0?s=0:s>1&&(s=1),this.sound.setVolume(s)}))}getVolume(){return this.sound?this.sound.getVolume():0}addVolume(e){this.setVolume(this.getVolume()+e)}}window.BabylonSound=BabylonSound;